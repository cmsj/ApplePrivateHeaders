/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:50 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WebKit/WebKit-Structs.h>
#import <libobjc.A.dylib/WKUIDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegate.h>
#import <libobjc.A.dylib/WKInspectorWKWebViewDelegate.h>

@class _WKInspectorConfiguration, WKWebView, NSString;

@interface WKInspectorViewController : NSObject <WKUIDelegate, WKNavigationDelegate, WKInspectorWKWebViewDelegate> {

	NakedPtr<WebKit::WebPageProxy>* _inspectedPage;
	RetainPtr<WKInspectorWKWebView>* _webView;
	WeakObjCPtr<id<WKInspectorViewControllerDelegate>> _delegate;
	_WKInspectorConfiguration* _configuration;

}

@property (nonatomic,readonly) WKWebView * webView; 
@property (assign,nonatomic,__weak) id<WKInspectorViewControllerDelegate> delegate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)viewIsInspectorWebView:(id)arg1 ;
-(void)dealloc;
-(id<WKInspectorViewControllerDelegate>)delegate;
-(void)setDelegate:(id<WKInspectorViewControllerDelegate>)arg1 ;
-(WKWebView *)webView;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webViewWebContentProcessDidTerminate:(id)arg1 ;
-(void)webView:(id)arg1 runOpenPanelWithParameters:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_webView:(id)arg1 getWindowFrameWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)_webView:(id)arg1 setWindowFrame:(CGRect)arg2 ;
-(void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(/*^block*/id)arg7 ;
-(id)_webView:(id)arg1 contextMenu:(id)arg2 forElement:(id)arg3 ;
-(void)inspectorWKWebViewDidBecomeActive:(id)arg1 ;
-(id)initWithConfiguration:(id)arg1 inspectedPage:(NakedPtr<WebKit::WebPageProxy>*)arg2 ;
-(id)webViewConfiguration;
-(void)inspectorWKWebViewReload:(id)arg1 ;
-(void)inspectorWKWebViewReloadFromOrigin:(id)arg1 ;
-(void)inspectorWKWebView:(id)arg1 willMoveToWindow:(id)arg2 ;
-(void)inspectorWKWebViewDidMoveToWindow:(id)arg1 ;
@end

