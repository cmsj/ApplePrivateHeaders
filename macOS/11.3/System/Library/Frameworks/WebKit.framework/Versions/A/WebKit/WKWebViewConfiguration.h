/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:50 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WebKit/WebKit-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@class WKWebView, NSString, _WKVisitedLinkStore, _WKApplicationManifest, WKWebsiteDataStore, NSArray, _WKWebsiteDataStore, WKProcessPool, WKPreferences, WKUserContentController, WKWebpagePreferences;

@interface WKWebViewConfiguration : NSObject <NSSecureCoding, NSCopying> {

	RefPtr<API::PageConfiguration, WTF::RawPtrTraits<API::PageConfiguration>, WTF::DefaultRefDerefTraits<API::PageConfiguration>>* _pageConfiguration;
	LazyInitialized<WTF::RetainPtr<WKProcessPool>>* _processPool;
	LazyInitialized<WTF::RetainPtr<WKPreferences>>* _preferences;
	LazyInitialized<WTF::RetainPtr<WKUserContentController>>* _userContentController;
	LazyInitialized<WTF::RetainPtr<_WKVisitedLinkStore>>* _visitedLinkStore;
	LazyInitialized<WTF::RetainPtr<WKWebsiteDataStore>>* _websiteDataStore;
	LazyInitialized<WTF::RetainPtr<WKWebpagePreferences>>* _defaultWebpagePreferences;
	WeakObjCPtr<WKWebView> _relatedWebView;
	WeakObjCPtr<WKWebView> _alternateWebViewForNavigationGestures;
	RetainPtr<NSString>* _groupIdentifier;
	Optional<WTF::RetainPtr<NSString>>* _applicationNameForUserAgent;
	double _incrementalRenderingSuppressionTimeout;
	char _respectsImageOrientation;
	char _printsBackgrounds;
	char _allowsJavaScriptMarkup;
	char _convertsPositionStyleOnCopy;
	char _allowsMetaRefresh;
	char _allowUniversalAccessFromFileURLs;
	char _allowTopNavigationToDataURLs;
	char _invisibleAutoplayNotPermitted;
	char _mediaDataLoadsAutomatically;
	char _attachmentElementEnabled;
	Class _attachmentFileWrapperClass;
	char _mainContentUserGestureOverrideEnabled;
	WKRetainPtr<const OpaqueWKPageGroup *>* _pageGroup;
	char _showsURLsInToolTips;
	char _serviceControlsEnabled;
	char _imageControlsEnabled;
	char _requiresUserActionForEditingControlsManager;
	char _waitsForPaintAfterViewDidMoveToWindow;
	char _controlledByAutomation;
	char _applePayEnabled;
	char _needsStorageAccessFromFileURLsQuirk;
	char _legacyEncryptedMediaAPIEnabled;
	char _allowMediaContentTypesRequiringHardwareSupportAsFallback;
	char _colorFilterEnabled;
	char _incompleteImageBorderEnabled;
	char _shouldDeferAsynchronousScriptsUntilAfterDocumentLoad;
	char _drawsBackground;
	char _undoManagerAPIEnabled;
	RetainPtr<NSString>* _mediaContentTypesRequiringHardwareSupport;
	RetainPtr<NSArray<NSString *>>* _additionalSupportedImageTypes;
	char _suppressesIncrementalRendering;
	char _allowsAirPlayForMediaPlayback;
	char _limitsNavigationsToAppBoundDomains;
	unsigned long long _mediaTypesRequiringUserActionForPlayback;
	long long _userInterfaceDirectionPolicy;

}

@property (assign,setter=_setRelatedWebView:,nonatomic,__weak) WKWebView * _relatedWebView; 
@property (setter=_setGroupIdentifier:,nonatomic,copy) NSString * _groupIdentifier; 
@property (setter=_setVisitedLinkStore:,nonatomic,retain) _WKVisitedLinkStore * _visitedLinkStore; 
@property (assign,setter=_setAlternateWebViewForNavigationGestures:,nonatomic,__weak) WKWebView * _alternateWebViewForNavigationGestures; 
@property (assign,setter=_setRespectsImageOrientation:,nonatomic) char _respectsImageOrientation; 
@property (assign,setter=_setPrintsBackgrounds:,nonatomic) char _printsBackgrounds; 
@property (assign,setter=_setIncrementalRenderingSuppressionTimeout:,nonatomic) double _incrementalRenderingSuppressionTimeout; 
@property (assign,setter=_setAllowsJavaScriptMarkup:,nonatomic) char _allowsJavaScriptMarkup; 
@property (assign,setter=_setConvertsPositionStyleOnCopy:,nonatomic) char _convertsPositionStyleOnCopy; 
@property (assign,setter=_setAllowsMetaRefresh:,nonatomic) char _allowsMetaRefresh; 
@property (assign,setter=_setAllowUniversalAccessFromFileURLs:,nonatomic) char _allowUniversalAccessFromFileURLs; 
@property (assign,setter=_setAllowTopNavigationToDataURLs:,nonatomic) char _allowTopNavigationToDataURLs; 
@property (assign,setter=_setNeedsStorageAccessFromFileURLsQuirk:,nonatomic) char _needsStorageAccessFromFileURLsQuirk; 
@property (assign,setter=_setMainContentUserGestureOverrideEnabled:,nonatomic) char _mainContentUserGestureOverrideEnabled; 
@property (assign,setter=_setInvisibleAutoplayNotPermitted:,nonatomic) char _invisibleAutoplayNotPermitted; 
@property (assign,setter=_setMediaDataLoadsAutomatically:,nonatomic) char _mediaDataLoadsAutomatically; 
@property (assign,setter=_setAttachmentElementEnabled:,nonatomic) char _attachmentElementEnabled; 
@property (assign,setter=_setAttachmentFileWrapperClass:,nonatomic) Class _attachmentFileWrapperClass; 
@property (assign,setter=_setInitialCapitalizationEnabled:,nonatomic) char _initialCapitalizationEnabled; 
@property (assign,setter=_setApplePayEnabled:,nonatomic) char _applePayEnabled; 
@property (assign,setter=_setWaitsForPaintAfterViewDidMoveToWindow:,nonatomic) char _waitsForPaintAfterViewDidMoveToWindow; 
@property (assign,setter=_setControlledByAutomation:,getter=_isControlledByAutomation,nonatomic) char _controlledByAutomation; 
@property (assign,setter=_setApplicationManifest:,nonatomic) _WKApplicationManifest * _applicationManifest; 
@property (assign,setter=_setColorFilterEnabled:,nonatomic) char _colorFilterEnabled; 
@property (assign,setter=_setIncompleteImageBorderEnabled:,nonatomic) char _incompleteImageBorderEnabled; 
@property (assign,setter=_setDrawsBackground:,nonatomic) char _drawsBackground; 
@property (assign,setter=_setShouldDeferAsynchronousScriptsUntilAfterDocumentLoad:,nonatomic) char _shouldDeferAsynchronousScriptsUntilAfterDocumentLoad; 
@property (nonatomic,readonly) WKWebsiteDataStore * _websiteDataStoreIfExists; 
@property (setter=_setCORSDisablingPatterns:,nonatomic,copy) NSArray * _corsDisablingPatterns; 
@property (assign,setter=_setDeferrableUserScriptsShouldWaitUntilNotification:,nonatomic) char _deferrableUserScriptsShouldWaitUntilNotification; 
@property (assign,setter=_setCrossOriginAccessControlCheckEnabled:,nonatomic) char _crossOriginAccessControlCheckEnabled; 
@property (assign,setter=_setLoadsFromNetwork:,nonatomic) char _loadsFromNetwork; 
@property (assign,setter=_setLoadsSubresources:,nonatomic) char _loadsSubresources; 
@property (assign,setter=_setIgnoresAppBoundDomains:,nonatomic) char _ignoresAppBoundDomains; 
@property (assign,setter=_setShowsURLsInToolTips:,nonatomic) char _showsURLsInToolTips; 
@property (assign,setter=_setServiceControlsEnabled:,nonatomic) char _serviceControlsEnabled; 
@property (assign,setter=_setImageControlsEnabled:,nonatomic) char _imageControlsEnabled; 
@property (assign,setter=_setRequiresUserActionForEditingControlsManager:,nonatomic) char _requiresUserActionForEditingControlsManager; 
@property (assign,setter=_setCPULimit:,nonatomic) double _cpuLimit; 
@property (assign,setter=_setPageGroup:,nonatomic) OpaqueWKPageGroupRef _pageGroup; 
@property (setter=_setWebsiteDataStore:,nonatomic,retain) _WKWebsiteDataStore * _websiteDataStore; 
@property (assign,setter=_setRequiresUserActionForAudioPlayback:,nonatomic) char _requiresUserActionForAudioPlayback; 
@property (assign,setter=_setRequiresUserActionForVideoPlayback:,nonatomic) char _requiresUserActionForVideoPlayback; 
@property (assign,setter=_setOverrideContentSecurityPolicy:,nonatomic) NSString * _overrideContentSecurityPolicy; 
@property (assign,setter=_setMediaContentTypesRequiringHardwareSupport:,nonatomic) NSString * _mediaContentTypesRequiringHardwareSupport; 
@property (assign,setter=_setLegacyEncryptedMediaAPIEnabled:,nonatomic) char _legacyEncryptedMediaAPIEnabled; 
@property (assign,setter=_setAllowMediaContentTypesRequiringHardwareSupportAsFallback:,nonatomic) char _allowMediaContentTypesRequiringHardwareSupportAsFallback; 
@property (assign,setter=_setMediaCaptureEnabled:,nonatomic) char _mediaCaptureEnabled; 
@property (setter=_setAdditionalSupportedImageTypes:,nonatomic,copy) NSArray * _additionalSupportedImageTypes; 
@property (assign,setter=_setUndoManagerAPIEnabled:,nonatomic) char _undoManagerAPIEnabled; 
@property (assign,setter=_setShouldRelaxThirdPartyCookieBlocking:,nonatomic) char _shouldRelaxThirdPartyCookieBlocking; 
@property (assign,setter=_setProcessDisplayName:,nonatomic) NSString * _processDisplayName; 
@property (nonatomic,readonly) NSString * _applicationNameForDesktopUserAgent; 
@property (nonatomic,retain) WKProcessPool * processPool; 
@property (nonatomic,retain) WKPreferences * preferences; 
@property (nonatomic,retain) WKUserContentController * userContentController; 
@property (nonatomic,retain) WKWebsiteDataStore * websiteDataStore; 
@property (assign,nonatomic) char suppressesIncrementalRendering;                                                                                                              //@synthesize suppressesIncrementalRendering=_suppressesIncrementalRendering - In the implementation block
@property (nonatomic,copy) NSString * applicationNameForUserAgent; 
@property (assign,nonatomic) char allowsAirPlayForMediaPlayback;                                                                                                               //@synthesize allowsAirPlayForMediaPlayback=_allowsAirPlayForMediaPlayback - In the implementation block
@property (assign,nonatomic) unsigned long long mediaTypesRequiringUserActionForPlayback;                                                                                      //@synthesize mediaTypesRequiringUserActionForPlayback=_mediaTypesRequiringUserActionForPlayback - In the implementation block
@property (nonatomic,copy) WKWebpagePreferences * defaultWebpagePreferences; 
@property (assign,nonatomic) char limitsNavigationsToAppBoundDomains;                                                                                                          //@synthesize limitsNavigationsToAppBoundDomains=_limitsNavigationsToAppBoundDomains - In the implementation block
@property (assign,nonatomic) long long userInterfaceDirectionPolicy;                                                                                                           //@synthesize userInterfaceDirectionPolicy=_userInterfaceDirectionPolicy - In the implementation block
+(id)sharedMessagesConfiguration;
+(char)supportsSecureCoding;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)description;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(WKPreferences *)preferences;
-(void)_setGroupIdentifier:(id)arg1 ;
-(NSString *)_groupIdentifier;
-(char)_drawsBackground;
-(void)setPreferences:(WKPreferences *)arg1 ;
-(void)setSuppressesIncrementalRendering:(char)arg1 ;
-(void)setProcessPool:(WKProcessPool *)arg1 ;
-(void)setUserContentController:(WKUserContentController *)arg1 ;
-(void)_setDrawsBackground:(char)arg1 ;
-(void)setWebsiteDataStore:(WKWebsiteDataStore *)arg1 ;
-(void)setMediaTypesRequiringUserActionForPlayback:(unsigned long long)arg1 ;
-(NSString *)applicationNameForUserAgent;
-(void)setApplicationNameForUserAgent:(NSString *)arg1 ;
-(char)suppressesIncrementalRendering;
-(char)allowsAirPlayForMediaPlayback;
-(void)setAllowsAirPlayForMediaPlayback:(char)arg1 ;
-(void)setDefaultWebpagePreferences:(WKWebpagePreferences *)arg1 ;
-(void)_setApplePayEnabled:(char)arg1 ;
-(void)_setAllowsJavaScriptMarkup:(char)arg1 ;
-(void)_setLegacyEncryptedMediaAPIEnabled:(char)arg1 ;
-(void)_setAllowUniversalAccessFromFileURLs:(char)arg1 ;
-(void)_setAllowsMetaRefresh:(char)arg1 ;
-(void)_setAttachmentElementEnabled:(char)arg1 ;
-(void)_setInvisibleAutoplayNotPermitted:(char)arg1 ;
-(void)_setMediaDataLoadsAutomatically:(char)arg1 ;
-(void)_setNeedsStorageAccessFromFileURLsQuirk:(char)arg1 ;
-(OpaqueWKPageGroupRef)_pageGroup;
-(void)_setColorFilterEnabled:(char)arg1 ;
-(char)_colorFilterEnabled;
-(char)_applePayEnabled;
-(char)_legacyEncryptedMediaAPIEnabled;
-(void)_setMainContentUserGestureOverrideEnabled:(char)arg1 ;
-(char)_mainContentUserGestureOverrideEnabled;
-(char)_needsStorageAccessFromFileURLsQuirk;
-(void)_setServiceControlsEnabled:(char)arg1 ;
-(char)_serviceControlsEnabled;
-(WKWebView *)_relatedWebView;
-(WKProcessPool *)processPool;
-(WKWebsiteDataStore *)websiteDataStore;
-(Ref<API::PageConfiguration, WTF::RawPtrTraits<API::PageConfiguration>>*)copyPageConfiguration;
-(char)_requiresUserActionForEditingControlsManager;
-(NSString *)_applicationNameForDesktopUserAgent;
-(WKUserContentController *)userContentController;
-(_WKVisitedLinkStore *)_visitedLinkStore;
-(WKWebpagePreferences *)defaultWebpagePreferences;
-(NSArray *)_additionalSupportedImageTypes;
-(char)_respectsImageOrientation;
-(double)_incrementalRenderingSuppressionTimeout;
-(char)_allowsJavaScriptMarkup;
-(char)_convertsPositionStyleOnCopy;
-(char)_allowsMetaRefresh;
-(char)_allowUniversalAccessFromFileURLs;
-(char)_allowTopNavigationToDataURLs;
-(char)_waitsForPaintAfterViewDidMoveToWindow;
-(char)_isControlledByAutomation;
-(char)_incompleteImageBorderEnabled;
-(char)_shouldDeferAsynchronousScriptsUntilAfterDocumentLoad;
-(char)_showsURLsInToolTips;
-(char)_imageControlsEnabled;
-(long long)userInterfaceDirectionPolicy;
-(unsigned long long)mediaTypesRequiringUserActionForPlayback;
-(char)_invisibleAutoplayNotPermitted;
-(char)_mediaDataLoadsAutomatically;
-(char)_attachmentElementEnabled;
-(NSString *)_mediaContentTypesRequiringHardwareSupport;
-(char)_allowMediaContentTypesRequiringHardwareSupportAsFallback;
-(char)_mediaCaptureEnabled;
-(char)_undoManagerAPIEnabled;
-(id)urlSchemeHandlerForURLScheme:(id)arg1 ;
-(_WKWebsiteDataStore *)_websiteDataStore;
-(NSArray *)_corsDisablingPatterns;
-(void)_setCORSDisablingPatterns:(id)arg1 ;
-(void)_setMediaCaptureEnabled:(char)arg1 ;
-(void)setUserInterfaceDirectionPolicy:(long long)arg1 ;
-(void)_setVisitedLinkStore:(id)arg1 ;
-(void)_setRelatedWebView:(id)arg1 ;
-(void)_setAlternateWebViewForNavigationGestures:(id)arg1 ;
-(void)setURLSchemeHandler:(id)arg1 forURLScheme:(id)arg2 ;
-(void)_setWebsiteDataStore:(id)arg1 ;
-(char)limitsNavigationsToAppBoundDomains;
-(void)setLimitsNavigationsToAppBoundDomains:(char)arg1 ;
-(WKWebView *)_alternateWebViewForNavigationGestures;
-(char)_printsBackgrounds;
-(Class)_attachmentFileWrapperClass;
-(void)_setRespectsImageOrientation:(char)arg1 ;
-(void)_setPrintsBackgrounds:(char)arg1 ;
-(void)_setIncrementalRenderingSuppressionTimeout:(double)arg1 ;
-(void)_setAllowTopNavigationToDataURLs:(char)arg1 ;
-(void)_setConvertsPositionStyleOnCopy:(char)arg1 ;
-(char)_ignoresAppBoundDomains;
-(void)_setIgnoresAppBoundDomains:(char)arg1 ;
-(void)_setAttachmentFileWrapperClass:(Class)arg1 ;
-(void)_setIncompleteImageBorderEnabled:(char)arg1 ;
-(void)_setShouldDeferAsynchronousScriptsUntilAfterDocumentLoad:(char)arg1 ;
-(WKWebsiteDataStore *)_websiteDataStoreIfExists;
-(void)_setLoadsFromNetwork:(char)arg1 ;
-(char)_loadsFromNetwork;
-(void)_setLoadsSubresources:(char)arg1 ;
-(char)_loadsSubresources;
-(char)_deferrableUserScriptsShouldWaitUntilNotification;
-(void)_setDeferrableUserScriptsShouldWaitUntilNotification:(char)arg1 ;
-(void)_setCrossOriginAccessControlCheckEnabled:(char)arg1 ;
-(char)_crossOriginAccessControlCheckEnabled;
-(char)_requiresUserActionForVideoPlayback;
-(void)_setRequiresUserActionForVideoPlayback:(char)arg1 ;
-(char)_requiresUserActionForAudioPlayback;
-(void)_setRequiresUserActionForAudioPlayback:(char)arg1 ;
-(char)_initialCapitalizationEnabled;
-(void)_setInitialCapitalizationEnabled:(char)arg1 ;
-(void)_setWaitsForPaintAfterViewDidMoveToWindow:(char)arg1 ;
-(void)_setControlledByAutomation:(char)arg1 ;
-(_WKApplicationManifest *)_applicationManifest;
-(void)_setApplicationManifest:(id)arg1 ;
-(void)_setShowsURLsInToolTips:(char)arg1 ;
-(void)_setImageControlsEnabled:(char)arg1 ;
-(void)_setRequiresUserActionForEditingControlsManager:(char)arg1 ;
-(void)_setPageGroup:(OpaqueWKPageGroupRef)arg1 ;
-(void)_setCPULimit:(double)arg1 ;
-(double)_cpuLimit;
-(NSString *)_overrideContentSecurityPolicy;
-(void)_setOverrideContentSecurityPolicy:(id)arg1 ;
-(void)_setMediaContentTypesRequiringHardwareSupport:(id)arg1 ;
-(void)_setAdditionalSupportedImageTypes:(id)arg1 ;
-(void)_setAllowMediaContentTypesRequiringHardwareSupportAsFallback:(char)arg1 ;
-(void)_setUndoManagerAPIEnabled:(char)arg1 ;
-(char)_shouldRelaxThirdPartyCookieBlocking;
-(void)_setShouldRelaxThirdPartyCookieBlocking:(char)arg1 ;
-(NSString *)_processDisplayName;
-(void)_setProcessDisplayName:(id)arg1 ;
-(id)_visitedLinkProvider;
-(void)_setVisitedLinkProvider:(id)arg1 ;
@end

