/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:50 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WebKit/WebKit-Structs.h>
#import <libobjc.A.dylib/_WKInspectorExtensionHost.h>

@protocol _WKRemoteWebInspectorViewControllerDelegate;
@class _WKInspectorConfiguration, NSWindow, WKWebView, NSString;

@interface _WKRemoteWebInspectorViewController : NSObject <_WKInspectorExtensionHost> {

	RefPtr<WebKit::RemoteWebInspectorProxy, WTF::RawPtrTraits<WebKit::RemoteWebInspectorProxy>, WTF::DefaultRefDerefTraits<WebKit::RemoteWebInspectorProxy>>* m_remoteInspectorProxy;
	unique_ptr<WebKit::_WKRemoteWebInspectorProxyClient, std::__1::default_delete<WebKit::_WKRemoteWebInspectorProxyClient>>* m_remoteInspectorClient;
	_WKInspectorConfiguration* _configuration;
	id<_WKRemoteWebInspectorViewControllerDelegate> _delegate;

}

@property (assign,nonatomic) id<_WKRemoteWebInspectorViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain,readonly) NSWindow * window; 
@property (nonatomic,retain,readonly) WKWebView * webView; 
@property (nonatomic,copy,readonly) _WKInspectorConfiguration * configuration;                      //@synthesize configuration=_configuration - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<_WKRemoteWebInspectorViewControllerDelegate>)delegate;
-(void)close;
-(void)setDelegate:(id<_WKRemoteWebInspectorViewControllerDelegate>)arg1 ;
-(NSWindow *)window;
-(id)initWithConfiguration:(id)arg1 ;
-(void)show;
-(_WKInspectorConfiguration *)configuration;
-(WKWebView *)webView;
-(void)_setDiagnosticLoggingDelegate:(id)arg1 ;
-(void)registerExtensionWithID:(id)arg1 displayName:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)unregisterExtension:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)loadForDebuggable:(id)arg1 backendCommandsURL:(id)arg2 ;
-(void)sendMessageToFrontend:(id)arg1 ;
-(void)sendMessageToBackend:(id)arg1 ;
-(void)closeFromFrontend;
@end

