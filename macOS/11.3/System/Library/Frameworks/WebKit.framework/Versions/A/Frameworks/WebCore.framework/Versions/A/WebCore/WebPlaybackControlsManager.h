/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:49 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WebCore/WebCore-Structs.h>
#import <libobjc.A.dylib/AVTouchBarPlaybackControlsControlling.h>

@class AVValueTiming, NSArray, AVTouchBarMediaSelectionOption, NSURL, NSString;

@interface WebPlaybackControlsManager : NSObject <AVTouchBarPlaybackControlsControlling> {

	double _contentDuration;
	RetainPtr<AVValueTiming>* _timing;
	double _seekToTime;
	RetainPtr<NSArray>* _seekableTimeRanges;
	char _hasEnabledAudio;
	char _hasEnabledVideo;
	RetainPtr<NSArray<AVTouchBarMediaSelectionOption *>>* _audioTouchBarMediaSelectionOptions;
	RetainPtr<AVTouchBarMediaSelectionOption>* _currentAudioTouchBarMediaSelectionOption;
	RetainPtr<NSArray<AVTouchBarMediaSelectionOption *>>* _legibleTouchBarMediaSelectionOptions;
	RetainPtr<AVTouchBarMediaSelectionOption>* _currentLegibleTouchBarMediaSelectionOption;
	char _playing;
	float _rate;
	char _canTogglePlayback;
	RefPtr<WebCore::PlaybackSessionInterfaceMac, WTF::RawPtrTraits<WebCore::PlaybackSessionInterfaceMac>, WTF::DefaultRefDerefTraits<WebCore::PlaybackSessionInterfaceMac>>* _playbackSessionInterfaceMac;
	char allowsPictureInPicturePlayback;
	char pictureInPictureActive;
	char canTogglePictureInPicture;

}

@property (assign) PlaybackSessionInterfaceMac* playbackSessionInterfaceMac; 
@property (assign) double contentDuration; 
@property (nonatomic,retain) AVValueTiming * timing; 
@property (assign,nonatomic) double seekToTime;                                                              //@synthesize seekToTime=_seekToTime - In the implementation block
@property (nonatomic,retain) NSArray * seekableTimeRanges; 
@property (assign,nonatomic) char hasEnabledAudio;                                                           //@synthesize hasEnabledAudio=_hasEnabledAudio - In the implementation block
@property (assign,nonatomic) char hasEnabledVideo;                                                           //@synthesize hasEnabledVideo=_hasEnabledVideo - In the implementation block
@property (getter=isPlaying) char playing; 
@property (assign) char canTogglePlayback;                                                                   //@synthesize canTogglePlayback=_canTogglePlayback - In the implementation block
@property (assign,nonatomic) float rate;                                                                     //@synthesize rate=_rate - In the implementation block
@property (assign) char allowsPictureInPicturePlayback; 
@property (getter=isPictureInPictureActive) char pictureInPictureActive; 
@property (assign) char canTogglePictureInPicture; 
@property (getter=isSeeking,readonly) char seeking; 
@property (assign) double defaultPlaybackRate; 
@property (readonly) NSArray * audioTouchBarMediaSelectionOptions; 
@property (retain) AVTouchBarMediaSelectionOption * currentAudioTouchBarMediaSelectionOption; 
@property (readonly) NSArray * legibleTouchBarMediaSelectionOptions; 
@property (retain) AVTouchBarMediaSelectionOption * currentLegibleTouchBarMediaSelectionOption; 
@property (readonly) char canBeginTouchBarScrubbing; 
@property (readonly) NSURL * assetURL; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(char)isPlaying;
-(void)setRate:(float)arg1 ;
-(float)rate;
-(AVValueTiming *)timing;
-(void)seekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3 ;
-(char)hasEnabledVideo;
-(char)hasEnabledAudio;
-(NSArray *)seekableTimeRanges;
-(void)setTiming:(AVValueTiming *)arg1 ;
-(void)setContentDuration:(double)arg1 ;
-(void)setCanTogglePlayback:(char)arg1 ;
-(void)setHasEnabledAudio:(char)arg1 ;
-(double)contentDuration;
-(void)setSeekableTimeRanges:(NSArray *)arg1 ;
-(void)setHasEnabledVideo:(char)arg1 ;
-(void)setPlaying:(char)arg1 ;
-(void)setAudioMediaSelectionOptions:(const Vector<WebCore::MediaSelectionOption, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>*)arg1 withSelectedIndex:(unsigned long long)arg2 ;
-(void)setLegibleMediaSelectionOptions:(const Vector<WebCore::MediaSelectionOption, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>*)arg1 withSelectedIndex:(unsigned long long)arg2 ;
-(void)setAudioMediaSelectionIndex:(unsigned long long)arg1 ;
-(void)setLegibleMediaSelectionIndex:(unsigned long long)arg1 ;
-(void)setCanTogglePictureInPicture:(char)arg1 ;
-(char)canTogglePlayback;
-(void)setPictureInPictureActive:(char)arg1 ;
-(void)setAudioTouchBarMediaSelectionOptions:(NSArray *)arg1 ;
-(void)setCurrentAudioTouchBarMediaSelectionOption:(AVTouchBarMediaSelectionOption *)arg1 ;
-(void)setLegibleTouchBarMediaSelectionOptions:(NSArray *)arg1 ;
-(void)setCurrentLegibleTouchBarMediaSelectionOption:(AVTouchBarMediaSelectionOption *)arg1 ;
-(char)isSeeking;
-(double)seekToTime;
-(void)togglePlayback;
-(void)togglePictureInPicture;
-(void)beginTouchBarScrubbing;
-(void)endTouchBarScrubbing;
-(void)generateTouchBarThumbnailsForTimes:(id)arg1 tolerance:(double)arg2 size:(CGSize)arg3 thumbnailHandler:(/*^block*/id)arg4 ;
-(char)allowsPictureInPicturePlayback;
-(char)isPictureInPictureActive;
-(char)canTogglePictureInPicture;
-(NSArray *)audioTouchBarMediaSelectionOptions;
-(AVTouchBarMediaSelectionOption *)currentAudioTouchBarMediaSelectionOption;
-(NSArray *)legibleTouchBarMediaSelectionOptions;
-(AVTouchBarMediaSelectionOption *)currentLegibleTouchBarMediaSelectionOption;
-(char)canBeginTouchBarScrubbing;
-(void)cancelThumbnailAndAudioAmplitudeSampleGeneration;
-(void)generateTouchBarAudioAmplitudeSamples:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(PlaybackSessionInterfaceMac*)playbackSessionInterfaceMac;
-(void)setPlaybackSessionInterfaceMac:(PlaybackSessionInterfaceMac*)arg1 ;
-(void)setSeekToTime:(double)arg1 ;
-(void)setAllowsPictureInPicturePlayback:(char)arg1 ;
@end

