/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:16 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/NotificationCenter.framework/Versions/A/NotificationCenter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NotificationCenter/NotificationCenter-Structs.h>
#import <libobjc.A.dylib/PKModularService.h>
#import <libobjc.A.dylib/NCRemoteViewServiceProtocol.h>

@protocol OS_dispatch_source;
@class NSObject, NCRemoteViewServiceViewController, NSDictionary, NSExtensionContext, NCRemoteViewService, NSString;

@interface NCRemoteViewServiceSubsystem : NSObject <PKModularService, NCRemoteViewServiceProtocol> {

	NSObject*<OS_dispatch_source> _inactive_timer;
	BOOL _exitOnIdle;
	BOOL _activeForSnapshotOnly;
	/*^block*/id _deferredReadyBlock;
	unsigned _deferredDisplayID;
	BOOL _active;
	NCRemoteViewServiceViewController* _viewController;
	NSDictionary* _configuration;
	unsigned long long _appearance;
	NSExtensionContext* _currentExtensionContext;
	NCRemoteViewService* _viewService;
	CGSize _maxSize;
	NSEdgeInsets _marginInsets;

}

@property (assign) BOOL active;                                                                 //@synthesize active=_active - In the implementation block
@property (readonly) CGSize maxSize;                                                            //@synthesize maxSize=_maxSize - In the implementation block
@property (readonly) NSEdgeInsets marginInsets;                                                 //@synthesize marginInsets=_marginInsets - In the implementation block
@property (readonly) NSDictionary * configuration;                                              //@synthesize configuration=_configuration - In the implementation block
@property (readonly) unsigned long long appearance;                                             //@synthesize appearance=_appearance - In the implementation block
@property (nonatomic,readonly) NCRemoteViewServiceViewController * viewController;              //@synthesize viewController=_viewController - In the implementation block
@property (__weak) NSExtensionContext * currentExtensionContext;                                //@synthesize currentExtensionContext=_currentExtensionContext - In the implementation block
@property (__weak) NCRemoteViewService * viewService;                                           //@synthesize viewService=_viewService - In the implementation block
@property (readonly) id<NCRemoteViewServiceHostProtocol> host; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)initForPlugInKit;
+(void)unregisterService:(id)arg1 ;
+(id)anyService;
+(id)serviceForContext:(id)arg1 ;
-(id<NCRemoteViewServiceHostProtocol>)host;
-(BOOL)active;
-(NCRemoteViewService *)viewService;
-(void)setViewService:(NCRemoteViewService *)arg1 ;
-(CGSize)maxSize;
-(void)setActive:(BOOL)arg1 ;
-(unsigned long long)appearance;
-(NSDictionary *)configuration;
-(NCRemoteViewServiceViewController *)viewController;
-(Class)viewControllerClass;
-(void)setCurrentExtensionContext:(NSExtensionContext *)arg1 ;
-(void)_exitOnTimeout;
-(void)remoteViewServiceChangedActiveState:(BOOL)arg1 ;
-(void)installViewControllerInWindow:(id)arg1 ;
-(void)_getSnapshotResult:(unsigned long long)arg1 ;
-(void)_sendSnapshotResult:(id)arg1 scale:(double)arg2 result:(unsigned long long)arg3 ;
-(void)remoteViewServiceConfigure:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)remoteViewServiceReadyForDisplay:(unsigned)arg1 block:(/*^block*/id)arg2 ;
-(void)remoteViewServiceChangedDisplay:(unsigned)arg1 ;
-(void)remoteViewServiceDeactivateNow;
-(void)remoteViewServiceRequestSnapshot:(double)arg1 ;
-(void)remoteViewServiceSimulateCrash;
-(void)remoteViewServiceExitOnIdle;
-(void)remoteViewServiceDestorySnippet;
-(void)remoteViewServiceRequestDebugSnapshot:(/*^block*/id)arg1 ;
-(NSEdgeInsets)marginInsets;
-(NSExtensionContext *)currentExtensionContext;
@end

