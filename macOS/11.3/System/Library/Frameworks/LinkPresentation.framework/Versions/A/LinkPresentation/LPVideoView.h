/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:19 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/LinkPresentation.framework/Versions/A/LinkPresentation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <LinkPresentation/LinkPresentation-Structs.h>
#import <LinkPresentation/LPComponentView.h>
#import <libobjc.A.dylib/NSGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/LPMediaPlayer.h>

@class LPVideo, LPVideoViewStyle, LPImage, LPImageViewStyle, LPVideoViewConfiguration, NSView, NSImageView, CATextLayer, NSGestureRecognizer, NSString;

@interface LPVideoView : LPComponentView <NSGestureRecognizerDelegate, LPMediaPlayer> {

	LPVideo* _video;
	LPVideoViewStyle* _style;
	LPImage* _posterFrame;
	LPImageViewStyle* _posterFrameStyle;
	LPVideoViewConfiguration* _configuration;
	NSView* _playButtonContainerView;
	NSView* _playButtonView;
	NSView* _muteButtonContainerView;
	NSImageView* _muteButtonView;
	NSImageView* _unmuteButtonView;
	NSView* _videoPlaceholderView;
	NSView* _visualEffectView;
	NSView* _pulsingLoadView;
	NSView* _containerView;
	NSView* _playbackView;
	CATextLayer* _debugIndicator;
	NSGestureRecognizer* _tapRecognizer;
	NSGestureRecognizer* _playButtonTapRecognizer;
	char _playing;
	char _hasBuilt;
	char _wasPlayingOrWaitingToPlayWhenUnparented;
	char _wasPlayingWhenSuspended;
	char _showingPlayButton;
	char _waitingForPlaybackDueToAutoPlay;
	char _hasEverPlayed;
	unsigned long long _lastInteractionTimestamp;
	unsigned long long _playbackWatchdogTimerID;
	unsigned _loggingID;
	char _usesSharedAudioSession;
	char _allowsUserInteractionWithVideoPlayer;
	char _waitingForPlayback;
	char _fullScreen;
	double _volume;

}

@property (nonatomic,copy,readonly) LPVideoViewConfiguration * configuration; 
@property (nonatomic,readonly) char shouldAutoPlay; 
@property (nonatomic,readonly) char shouldShowMuteButton; 
@property (nonatomic,readonly) char usesSharedAudioSession;                                    //@synthesize usesSharedAudioSession=_usesSharedAudioSession - In the implementation block
@property (assign,nonatomic) char allowsUserInteractionWithVideoPlayer;                        //@synthesize allowsUserInteractionWithVideoPlayer=_allowsUserInteractionWithVideoPlayer - In the implementation block
@property (assign,getter=isMuted,nonatomic) char muted; 
@property (assign,getter=isPlaying,nonatomic) char playing; 
@property (assign,getter=isWaitingForPlayback,nonatomic) char waitingForPlayback;              //@synthesize waitingForPlayback=_waitingForPlayback - In the implementation block
@property (assign,getter=isFullScreen,nonatomic) char fullScreen;                              //@synthesize fullScreen=_fullScreen - In the implementation block
@property (assign,nonatomic) char hasEverPlayed;                                               //@synthesize hasEverPlayed=_hasEverPlayed - In the implementation block
@property (assign,nonatomic) double volume;                                                    //@synthesize volume=_volume - In the implementation block
@property (nonatomic,readonly) LPVideo * video;                                                //@synthesize video=_video - In the implementation block
@property (nonatomic,readonly) NSView * playbackView;                                          //@synthesize playbackView=_playbackView - In the implementation block
@property (nonatomic,readonly) unsigned loggingID;                                             //@synthesize loggingID=_loggingID - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isActive,nonatomic) char active; 
@property (nonatomic,readonly) char shouldUnmuteWhenUserAdjustsVolume; 
@property (nonatomic,readonly) unsigned long long lastInteractionTimestamp; 
@property (nonatomic,readonly) double unobscuredAreaFraction; 
-(void)dealloc;
-(id)init;
-(char)isActive;
-(double)volume;
-(void)setActive:(char)arg1 ;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(LPVideoViewConfiguration *)configuration;
-(char)isPlaying;
-(void)setVolume:(double)arg1 ;
-(void)setMuted:(char)arg1 ;
-(char)isMuted;
-(char)isFullScreen;
-(LPVideo *)video;
-(void)setPlaying:(char)arg1 ;
-(unsigned)loggingID;
-(void)updateMuteButton;
-(char)isParented;
-(void)setFullScreen:(char)arg1 ;
-(id)initWithVideo:(id)arg1 style:(id)arg2 posterFrame:(id)arg3 posterFrameStyle:(id)arg4 configuration:(id)arg5 ;
-(char)shouldAutoPlay;
-(NSView *)playbackView;
-(void)didChangePlayingState:(char)arg1 ;
-(void)resetToPlaceholderView;
-(char)hasEverPlayed;
-(void)setHasEverPlayed:(char)arg1 ;
-(void)setWaitingForPlayback:(char)arg1 ;
-(void)_swapVideoPlaceholderForVideoForAutoPlay:(char)arg1 ;
-(void)removePlaceholderViews;
-(void)didChangeMutedState:(char)arg1 ;
-(void)layoutComponentView;
-(void)beginLoadingMediaForPreroll;
-(char)usesSharedAudioSession;
-(char)shouldShowMuteButton;
-(id)createVideoPlayerView;
-(void)prepareForDisplayWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setAllowsUserInteractionWithVideoPlayer:(char)arg1 ;
-(void)didEncounterPossiblyTransientPlaybackError;
-(void)didEncounterPlaybackError;
-(char)isWaitingForPlayback;
-(void)_buildVideoPlaceholderView;
-(void)tapRecognized:(id)arg1 ;
-(void)updatePlayButtonVisibility;
-(id)_createPulsingLoadIndicator;
-(void)_startPlaybackWatchdogTimer;
-(void)showMuteButton;
-(id)_createPosterFrameView;
-(void)showPlayButtonAnimated:(char)arg1 ;
-(void)hidePlayButtonAnimated:(char)arg1 ;
-(void)_muteButtonHighlightLongPressRecognized:(id)arg1 ;
-(void)_muteButtonTapRecognized:(id)arg1 ;
-(void)userInteractedWithVideoView;
-(char)shouldUnmuteWhenUserAdjustsVolume;
-(unsigned long long)lastInteractionTimestamp;
-(double)unobscuredAreaFraction;
-(void)componentViewDidMoveToWindow;
-(void)hideMuteButton;
-(void)fadeInMuteButton;
-(char)shouldAllowHighlightToRecognizeSimultaneouslyWithGesture:(id)arg1 ;
-(char)allowsUserInteractionWithVideoPlayer;
@end

