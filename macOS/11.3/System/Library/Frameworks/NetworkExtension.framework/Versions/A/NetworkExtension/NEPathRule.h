/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:10 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/NetworkExtension.framework/Versions/A/NetworkExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NetworkExtension/NetworkExtension-Structs.h>
#import <NetworkExtension/NEAppRule.h>
#import <libobjc.A.dylib/NEConfigurationValidating.h>
#import <libobjc.A.dylib/NEPrettyDescription.h>

@class NSNumber;

@interface NEPathRule : NEAppRule <NEConfigurationValidating, NEPrettyDescription> {

	char _denyCellularFallback;
	char _denyMulticast;
	char _multicastPreferenceSet;
	char _isIdentifierExternal;
	NSNumber* _aggregatePersonalCellular;
	NSNumber* _aggregateEnterpriseCellular;
	long long _internalCellularBehavior;
	NSNumber* _aggregatePersonalWiFi;
	NSNumber* _aggregateEnterpriseWiFi;
	long long _internalWiFiBehavior;

}

@property (retain) NSNumber * aggregatePersonalCellular;                         //@synthesize aggregatePersonalCellular=_aggregatePersonalCellular - In the implementation block
@property (retain) NSNumber * aggregateEnterpriseCellular;                       //@synthesize aggregateEnterpriseCellular=_aggregateEnterpriseCellular - In the implementation block
@property (assign) long long internalCellularBehavior;                           //@synthesize internalCellularBehavior=_internalCellularBehavior - In the implementation block
@property (retain) NSNumber * aggregatePersonalWiFi;                             //@synthesize aggregatePersonalWiFi=_aggregatePersonalWiFi - In the implementation block
@property (retain) NSNumber * aggregateEnterpriseWiFi;                           //@synthesize aggregateEnterpriseWiFi=_aggregateEnterpriseWiFi - In the implementation block
@property (assign) long long internalWiFiBehavior;                               //@synthesize internalWiFiBehavior=_internalWiFiBehavior - In the implementation block
@property (getter=isDefaultPathRule,readonly) char defaultPathRule; 
@property (assign) long long cellularBehavior; 
@property (assign) long long wifiBehavior; 
@property (assign) char denyCellularFallback;                                    //@synthesize denyCellularFallback=_denyCellularFallback - In the implementation block
@property (assign) char denyMulticast;                                           //@synthesize denyMulticast=_denyMulticast - In the implementation block
@property (assign) char multicastPreferenceSet;                                  //@synthesize multicastPreferenceSet=_multicastPreferenceSet - In the implementation block
@property (assign) char isIdentifierExternal;                                    //@synthesize isIdentifierExternal=_isIdentifierExternal - In the implementation block
+(long long)aggregateNetworkBehavior:(long long)arg1 other:(long long)arg2 ;
+(char)supportsSecureCoding;
-(char)signingIdentifierAllowed:(id)arg1 domainsOrAccountsRequired:(out char*)arg2 ;
-(long long)internalCellularBehavior;
-(NSNumber *)aggregateEnterpriseCellular;
-(NSNumber *)aggregatePersonalCellular;
-(long long)internalWiFiBehavior;
-(NSNumber *)aggregateEnterpriseWiFi;
-(NSNumber *)aggregatePersonalWiFi;
-(void)setInternalCellularBehavior:(long long)arg1 ;
-(void)setIsIdentifierExternal:(char)arg1 ;
-(void)setAggregateEnterpriseCellular:(NSNumber *)arg1 ;
-(void)setAggregatePersonalCellular:(NSNumber *)arg1 ;
-(void)setInternalWiFiBehavior:(long long)arg1 ;
-(void)setAggregateEnterpriseWiFi:(NSNumber *)arg1 ;
-(void)setAggregatePersonalWiFi:(NSNumber *)arg1 ;
-(char)isAggregateRule;
-(char)supportsCellularBehavior:(long long)arg1 ;
-(id)initDefaultPathRule;
-(void)setCellularBehavior:(long long)arg1 ;
-(void)setWifiBehavior:(long long)arg1 ;
-(char)supportsWiFiBehavior:(long long)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(id)description;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)descriptionWithIndent:(int)arg1 options:(unsigned long long)arg2 ;
-(char)isIdentifierExternal;
-(char)denyMulticast;
-(long long)cellularBehavior;
-(long long)wifiBehavior;
-(char)denyCellularFallback;
-(char)multicastPreferenceSet;
-(void)setDenyMulticast:(char)arg1 ;
-(void)setMulticastPreferenceSet:(char)arg1 ;
-(char)isDefaultPathRule;
-(void)addCellularBehavior:(long long)arg1 grade:(long long)arg2 ;
-(void)addWiFiBehavior:(long long)arg1 grade:(long long)arg2 ;
-(void)setDenyCellularFallback:(char)arg1 ;
@end

