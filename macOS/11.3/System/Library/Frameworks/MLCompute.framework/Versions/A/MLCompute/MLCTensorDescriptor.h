/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MLCompute/MLCompute-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSArray;

@interface MLCTensorDescriptor : NSObject <NSCopying> {

	char _sortedSequences;
	char _variableLengthSequences;
	int _dataType;
	NSArray* _shape;
	NSArray* _stride;
	unsigned long long _tensorAllocationSizeInBytes;
	NSArray* _sequenceLengths;
	NSArray* _batchSizePerSequenceStep;
	unsigned long long _fanIn;
	unsigned long long _fanOut;

}

@property (nonatomic,copy) NSArray * stride;                                              //@synthesize stride=_stride - In the implementation block
@property (assign,nonatomic) unsigned long long tensorAllocationSizeInBytes;              //@synthesize tensorAllocationSizeInBytes=_tensorAllocationSizeInBytes - In the implementation block
@property (nonatomic,readonly) unsigned long long fanIn;                                  //@synthesize fanIn=_fanIn - In the implementation block
@property (nonatomic,readonly) unsigned long long fanOut;                                 //@synthesize fanOut=_fanOut - In the implementation block
@property (nonatomic,readonly) char variableLengthSequences;                              //@synthesize variableLengthSequences=_variableLengthSequences - In the implementation block
@property (nonatomic,readonly) char isFloatingPoint; 
@property (nonatomic,readonly) int dataType;                                              //@synthesize dataType=_dataType - In the implementation block
@property (nonatomic,readonly) unsigned long long dimensionCount; 
@property (nonatomic,copy,readonly) NSArray * shape;                                      //@synthesize shape=_shape - In the implementation block
@property (nonatomic,copy,readonly) NSArray * sequenceLengths;                            //@synthesize sequenceLengths=_sequenceLengths - In the implementation block
@property (nonatomic,readonly) char sortedSequences;                                      //@synthesize sortedSequences=_sortedSequences - In the implementation block
@property (nonatomic,copy,readonly) NSArray * batchSizePerSequenceStep;                   //@synthesize batchSizePerSequenceStep=_batchSizePerSequenceStep - In the implementation block
+(id)descriptorWithShape:(id)arg1 dataType:(int)arg2 ;
+(id)descriptorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 dataType:(int)arg5 ;
+(id)descriptorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannels:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 strideForWidth:(unsigned long long)arg5 strideForHeight:(unsigned long long)arg6 strideForBatch:(unsigned long long)arg7 dataType:(int)arg8 ;
+(id)descriptorWithShape:(id)arg1 stride:(id)arg2 dataType:(int)arg3 ;
+(unsigned long long)elementByteCount:(int)arg1 ;
+(unsigned long long)maxTensorDimensions;
+(id)descriptorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannelCount:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 ;
+(id)descriptorWithShape:(id)arg1 sequenceLengths:(id)arg2 sortedSequences:(char)arg3 dataType:(int)arg4 ;
+(id)convolutionWeightsDescriptorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 inputFeatureChannelCount:(unsigned long long)arg3 outputFeatureChannelCount:(unsigned long long)arg4 dataType:(int)arg5 ;
+(id)convolutionWeightsDescriptorWithInputFeatureChannelCount:(unsigned long long)arg1 outputFeatureChannelCount:(unsigned long long)arg2 dataType:(int)arg3 ;
+(id)convolutionBiasesDescriptorWithFeatureChannelCount:(unsigned long long)arg1 dataType:(int)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(int)dataType;
-(NSArray *)stride;
-(unsigned long long)elementCount;
-(void)setStride:(NSArray *)arg1 ;
-(NSArray *)shape;
-(unsigned long long)tensorAllocationSizeInBytes;
-(NSArray *)batchSizePerSequenceStep;
-(unsigned long long)dimensionCount;
-(id)newShapeWithCount:(unsigned long long)arg1 ;
-(id)initNCHWTensorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 featureChannels:(unsigned long long)arg3 batchSize:(unsigned long long)arg4 strideForWidth:(unsigned long long)arg5 strideForHeight:(unsigned long long)arg6 strideForChannel:(unsigned long long)arg7 strideForBatch:(unsigned long long)arg8 fanIn:(unsigned long long)arg9 fanOut:(unsigned long long)arg10 dataType:(int)arg11 ;
-(id)initTensorWithShape:(id)arg1 stride:(id)arg2 sequenceLengths:(id)arg3 sortedSequences:(char)arg4 fanIn:(unsigned long long)arg5 fanOut:(unsigned long long)arg6 dataType:(int)arg7 ;
-(id)initTensorWithShape:(id)arg1 stride:(id)arg2 fanIn:(unsigned long long)arg3 fanOut:(unsigned long long)arg4 dataType:(int)arg5 ;
-(id)initConvolutionWeightsDescriptorWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 inputFeatureChannels:(unsigned long long)arg3 outputFeatureChannels:(unsigned long long)arg4 dataType:(int)arg5 ;
-(void)setTensorAllocationSizeInBytes:(unsigned long long)arg1 ;
-(char)sortedSequences;
-(NSArray *)sequenceLengths;
-(unsigned long long)fanIn;
-(unsigned long long)fanOut;
-(void)updateStride:(id)arg1 tensorAllocationSize:(unsigned long long)arg2 ;
-(char)isFloatingPoint;
-(char)variableLengthSequences;
@end

