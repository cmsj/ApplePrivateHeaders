/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MLCompute/MLCompute-Structs.h>
#import <libobjc.A.dylib/MPSImageAllocator.h>

@protocol MTLHeap;
@class NSString;

@interface MLCDeviceGPUHeapAllocator : NSObject <MPSImageAllocator> {

	char _isDebuggingEnabled;
	id<MTLHeap> _heap;
	unsigned long long _heapSize;
	unsigned long long _resourceSize;
	unsigned long long _resourceOffset;
	unsigned long long _numResources;

}

@property (assign,nonatomic) char isDebuggingEnabled;                        //@synthesize isDebuggingEnabled=_isDebuggingEnabled - In the implementation block
@property (assign,nonatomic) unsigned long long resourceOffset;              //@synthesize resourceOffset=_resourceOffset - In the implementation block
@property (nonatomic,readonly) id<MTLHeap> heap;                             //@synthesize heap=_heap - In the implementation block
@property (nonatomic,readonly) unsigned long long heapSize;                  //@synthesize heapSize=_heapSize - In the implementation block
@property (nonatomic,readonly) unsigned long long resourceSize;              //@synthesize resourceSize=_resourceSize - In the implementation block
@property (nonatomic,readonly) unsigned long long numResources;              //@synthesize numResources=_numResources - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)supportsSecureCoding;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id<MTLHeap>)heap;
-(unsigned long long)resourceSize;
-(id)imageForCommandBuffer:(id)arg1 imageDescriptor:(id)arg2 kernel:(id)arg3 ;
-(id)imageBatchForCommandBuffer:(id)arg1 imageDescriptor:(id)arg2 kernel:(id)arg3 count:(unsigned long long)arg4 ;
-(void)setIsDebuggingEnabled:(char)arg1 ;
-(char)isDebuggingEnabled;
-(unsigned long long)heapSize;
-(id)initWithDevice:(id)arg1 heapSize:(unsigned long long)arg2 resourceSize:(unsigned long long)arg3 numResources:(unsigned long long)arg4 ;
-(id)allocateBuffer:(unsigned long long)arg1 ;
-(unsigned long long)resourceOffset;
-(unsigned long long)numResources;
-(void)setResourceOffset:(unsigned long long)arg1 ;
@end

