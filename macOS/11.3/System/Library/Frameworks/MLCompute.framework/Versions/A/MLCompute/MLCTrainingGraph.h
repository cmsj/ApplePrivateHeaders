/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MLCompute/MLCGraph.h>

@protocol MLCLayerCompiling;
@class MLCOptimizer, NSMutableArray, MLCLayer;

@interface MLCTrainingGraph : MLCGraph {

	char _gradientTensorsAreTemporary;
	char _allocateResultGradientTensors;
	char _allocateOptimizerData;
	char _updateOptimizerTimeStep;
	MLCOptimizer* _optimizer;
	NSMutableArray* _optimizerUpdateLayerList;
	NSMutableArray* _optimizerParameterList;
	NSMutableArray* _rootSourceGradientTensor;
	NSMutableArray* _lossLayersInTrainingGraph;
	NSMutableArray* _stopGradientTensorList;
	MLCLayer*<MLCLayerCompiling> _lossLayer;
	MLCLayer* _dummyLayer;
	unsigned long long _firstTrainableLayerIndex;

}

@property (nonatomic,retain) MLCOptimizer * optimizer;                                 //@synthesize optimizer=_optimizer - In the implementation block
@property (nonatomic,retain) NSMutableArray * optimizerUpdateLayerList;                //@synthesize optimizerUpdateLayerList=_optimizerUpdateLayerList - In the implementation block
@property (nonatomic,retain) NSMutableArray * optimizerParameterList;                  //@synthesize optimizerParameterList=_optimizerParameterList - In the implementation block
@property (nonatomic,retain) NSMutableArray * rootSourceGradientTensor;                //@synthesize rootSourceGradientTensor=_rootSourceGradientTensor - In the implementation block
@property (nonatomic,retain) NSMutableArray * lossLayersInTrainingGraph;               //@synthesize lossLayersInTrainingGraph=_lossLayersInTrainingGraph - In the implementation block
@property (nonatomic,retain) NSMutableArray * stopGradientTensorList;                  //@synthesize stopGradientTensorList=_stopGradientTensorList - In the implementation block
@property (nonatomic,retain) MLCLayer*<MLCLayerCompiling> lossLayer;                   //@synthesize lossLayer=_lossLayer - In the implementation block
@property (assign,nonatomic) char gradientTensorsAreTemporary;                         //@synthesize gradientTensorsAreTemporary=_gradientTensorsAreTemporary - In the implementation block
@property (nonatomic,readonly) MLCLayer * dummyLayer;                                  //@synthesize dummyLayer=_dummyLayer - In the implementation block
@property (assign,nonatomic) unsigned long long firstTrainableLayerIndex;              //@synthesize firstTrainableLayerIndex=_firstTrainableLayerIndex - In the implementation block
@property (assign,nonatomic) char allocateResultGradientTensors;                       //@synthesize allocateResultGradientTensors=_allocateResultGradientTensors - In the implementation block
@property (assign,nonatomic) char allocateOptimizerData;                               //@synthesize allocateOptimizerData=_allocateOptimizerData - In the implementation block
@property (assign,nonatomic) char updateOptimizerTimeStep;                             //@synthesize updateOptimizerTimeStep=_updateOptimizerTimeStep - In the implementation block
@property (nonatomic,readonly) unsigned long long deviceMemorySize; 
+(id)graphWithGraphObjects:(id)arg1 lossLayer:(id)arg2 optimizer:(id)arg3 ;
-(void)dealloc;
-(id)description;
-(id)init;
-(char)addOutputs:(id)arg1 ;
-(MLCOptimizer *)optimizer;
-(void)setOptimizer:(MLCOptimizer *)arg1 ;
-(id)initWithGraphObjects:(id)arg1 lossLayer:(id)arg2 optimizer:(id)arg3 ;
-(char)isSourceTensorSharableWithResultGradientTensor:(id)arg1 layer:(id)arg2 ;
-(void)setRootSourceGradientTensor:(NSMutableArray *)arg1 ;
-(NSMutableArray *)rootSourceGradientTensor;
-(char)gradientTensorsAreTemporary;
-(void)sumRootSourceGradientTensor:(id)arg1 device:(id)arg2 ;
-(NSMutableArray *)optimizerParameterList;
-(void)setOptimizerParameterList:(NSMutableArray *)arg1 ;
-(void)updateIsTrainableForLayerWithStopGradientTensor:(id)arg1 checkChildLayers:(char)arg2 ;
-(void)markLayersAsTrainable;
-(NSMutableArray *)stopGradientTensorList;
-(void)setFirstTrainableLayerIndex:(unsigned long long)arg1 ;
-(unsigned long long)firstTrainableLayerIndex;
-(char)allocateGradientTensorsForMultipleChildrenOfLayer:(id)arg1 gradientTensorsAreTemporary:(char)arg2 device:(id)arg3 ;
-(id)resultGradientTensorToUseByExecuteGradientForLayer:(id)arg1 sourceIndex:(unsigned long long)arg2 incrementIntermediateIndex:(char)arg3 ;
-(void)linkRelatedGradientTensorsForConcatLayer:(id)arg1 device:(id)arg2 ;
-(char)allocateResultGradientTensors;
-(void)updateTrainableLayerList:(char)arg1 ;
-(char)allocateRootSourceGradientTensors:(id)arg1 ;
-(void)allocateGradientTensorsForLayersInGraph:(char)arg1 ;
-(void)setAllocateResultGradientTensors:(char)arg1 ;
-(char)allocateOptimizerData;
-(void)setOptimizerUpdateLayerList:(NSMutableArray *)arg1 ;
-(NSMutableArray *)optimizerUpdateLayerList;
-(void)setAllocateOptimizerData:(char)arg1 ;
-(char)compileWithOptions:(unsigned long long)arg1 device:(id)arg2 inputTensors:(id)arg3 inputTensorsData:(id)arg4 ;
-(void)setLossLayersInTrainingGraph:(NSMutableArray *)arg1 ;
-(NSMutableArray *)lossLayersInTrainingGraph;
-(char)compileOptimizer:(id)arg1 ;
-(void)setGradientTensorsAreTemporary:(char)arg1 ;
-(char)addInputs:(id)arg1 lossLabels:(id)arg2 lossLabelWeights:(id)arg3 ;
-(void)sumIntermediateGradientTensorsForLayer:(id)arg1 ;
-(char)shareSourceAndResultGradientTensorDeviceMemoryForLayer:(id)arg1 sourceTensor:(id)arg2 resultGradientTensor:(id)arg3 ;
-(void)sumAllRootSourceGradientTensors:(id)arg1 ;
-(unsigned long long)layerIndexToStoreSummedGradientsForTensor:(id)arg1 ;
-(char)allocateOptimizerDataForGraph;
-(char)checkAndSumIfSharedParameterUpdateForNormalizationLayerTensor:(id)arg1 layer:(id)arg2 device:(id)arg3 isBetaTensor:(char)arg4 ;
-(char)updateOptimizerTimeStep;
-(char)recompile;
-(void)executeForwardToLayerIndex:(unsigned long long)arg1 resultTensor:(id)arg2 resultStateIsTemporary:(char)arg3 batchSize:(unsigned long long)arg4 forTraining:(char)arg5 enableProfiling:(char)arg6 ;
-(char)executeForwardWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 outputsData:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(char)compileAndAllocateGradientTensorsForGraph:(char)arg1 ;
-(void)executeGradientFromLayerIndex:(unsigned long long)arg1 resultStateIsTemporary:(char)arg2 batchSize:(unsigned long long)arg3 enableProfiling:(char)arg4 ;
-(char)executeGradientWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 outputsData:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)executeOptimizerUpdateWithEnableProfiling:(char)arg1 ;
-(char)executeWithInputsData:(id)arg1 lossLabelsData:(id)arg2 lossLabelWeightsData:(id)arg3 outputsData:(id)arg4 batchSize:(unsigned long long)arg5 options:(unsigned long long)arg6 completionHandler:(/*^block*/id)arg7 ;
-(id)resultGradientTensorsForLayer:(id)arg1 summedGradientForInputTensors:(char)arg2 ;
-(MLCLayer *)dummyLayer;
-(char)allocateGradientTensorsForMultipleChildrenOfSplitLayer:(id)arg1 tensor:(id)arg2 gradientTensorsAreTemporary:(char)arg3 device:(id)arg4 ;
-(void)setUpdateOptimizerTimeStep:(char)arg1 ;
-(char)setTrainingTensorParameters:(id)arg1 ;
-(char)bindOptimizerData:(id)arg1 deviceData:(id)arg2 withTensor:(id)arg3 ;
-(char)compileWithOptions:(unsigned long long)arg1 device:(id)arg2 ;
-(char)stopGradientForTensors:(id)arg1 ;
-(unsigned long long)deviceMemorySize;
-(unsigned long long)deviceMemorySizeWithDevice:(id)arg1 ;
-(char)addInputs:(id)arg1 lossLabels:(id)arg2 ;
-(char)executeForwardWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)executeGradientWithBatchSize:(unsigned long long)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)executeOptimizerUpdateWithOptions:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)executeWithInputsData:(id)arg1 lossLabelsData:(id)arg2 lossLabelWeightsData:(id)arg3 batchSize:(unsigned long long)arg4 options:(unsigned long long)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)gradientTensorForInput:(id)arg1 ;
-(id)resultGradientTensorsForLayer:(id)arg1 ;
-(id)sourceGradientTensorsForLayer:(id)arg1 ;
-(id)resultTensorsForLayer:(id)arg1 ;
-(id)sourceTensorsForLayer:(id)arg1 ;
-(id)allocateUserGradientForTensor:(id)arg1 ;
-(char)linkWithGraphs:(id)arg1 ;
-(void)synchronizeUpdates;
-(id)gradientDataForParameter:(id)arg1 layer:(id)arg2 ;
-(void)setStopGradientTensorList:(NSMutableArray *)arg1 ;
-(MLCLayer*<MLCLayerCompiling>)lossLayer;
-(void)setLossLayer:(MLCLayer*<MLCLayerCompiling>)arg1 ;
@end

