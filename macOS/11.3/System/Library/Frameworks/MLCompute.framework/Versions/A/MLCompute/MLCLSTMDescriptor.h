/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MLCompute/MLCompute-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface MLCLSTMDescriptor : NSObject <NSCopying> {

	char _usesBiases;
	char _batchFirst;
	char _isBidirectional;
	char _returnsSequences;
	float _dropout;
	unsigned long long _inputSize;
	unsigned long long _hiddenSize;
	unsigned long long _layerCount;
	unsigned long long _resultMode;

}

@property (nonatomic,readonly) unsigned long long inputSize;               //@synthesize inputSize=_inputSize - In the implementation block
@property (nonatomic,readonly) unsigned long long hiddenSize;              //@synthesize hiddenSize=_hiddenSize - In the implementation block
@property (nonatomic,readonly) unsigned long long layerCount;              //@synthesize layerCount=_layerCount - In the implementation block
@property (nonatomic,readonly) char usesBiases;                            //@synthesize usesBiases=_usesBiases - In the implementation block
@property (nonatomic,readonly) char batchFirst;                            //@synthesize batchFirst=_batchFirst - In the implementation block
@property (nonatomic,readonly) char isBidirectional;                       //@synthesize isBidirectional=_isBidirectional - In the implementation block
@property (nonatomic,readonly) char returnsSequences;                      //@synthesize returnsSequences=_returnsSequences - In the implementation block
@property (nonatomic,readonly) float dropout;                              //@synthesize dropout=_dropout - In the implementation block
@property (nonatomic,readonly) unsigned long long resultMode;              //@synthesize resultMode=_resultMode - In the implementation block
+(id)descriptorWithInputSize:(unsigned long long)arg1 hiddenSize:(unsigned long long)arg2 layerCount:(unsigned long long)arg3 usesBiases:(char)arg4 isBidirectional:(char)arg5 dropout:(float)arg6 ;
+(id)descriptorWithInputSize:(unsigned long long)arg1 hiddenSize:(unsigned long long)arg2 layerCount:(unsigned long long)arg3 usesBiases:(char)arg4 batchFirst:(char)arg5 isBidirectional:(char)arg6 dropout:(float)arg7 ;
+(id)descriptorWithInputSize:(unsigned long long)arg1 hiddenSize:(unsigned long long)arg2 layerCount:(unsigned long long)arg3 usesBiases:(char)arg4 batchFirst:(char)arg5 isBidirectional:(char)arg6 returnsSequences:(char)arg7 dropout:(float)arg8 ;
+(id)descriptorWithInputSize:(unsigned long long)arg1 hiddenSize:(unsigned long long)arg2 layerCount:(unsigned long long)arg3 usesBiases:(char)arg4 batchFirst:(char)arg5 isBidirectional:(char)arg6 returnsSequences:(char)arg7 dropout:(float)arg8 resultMode:(unsigned long long)arg9 ;
+(id)descriptorWithInputSize:(unsigned long long)arg1 hiddenSize:(unsigned long long)arg2 layerCount:(unsigned long long)arg3 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(unsigned long long)layerCount;
-(unsigned long long)inputSize;
-(char)bias;
-(unsigned long long)numberOfLayers;
-(char)batchFirst;
-(float)dropout;
-(char)isBidirectional;
-(char)returnsSequences;
-(id)initWithInputSize:(unsigned long long)arg1 hiddenSize:(unsigned long long)arg2 layerCount:(unsigned long long)arg3 usesBiases:(char)arg4 batchFirst:(char)arg5 isBidirectional:(char)arg6 returnsSequences:(char)arg7 dropout:(float)arg8 resultMode:(unsigned long long)arg9 ;
-(unsigned long long)hiddenSize;
-(char)usesBiases;
-(unsigned long long)resultMode;
@end

