/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MLCEngineDispatch <NSObject>
@optional
-(void)dispatchForwardLayer:(id)arg1;
-(id)partitionInferenceGraph:(id)arg1 startAtLayerIndex:(unsigned long long)arg2 aneDevice:(id)arg3 secondaryDevice:(id)arg4;

@required
-(void)dispatchForwardReshapeLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultStateIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6 forTraining:(char)arg7;
-(char)isDeviceMemorySharableBetweenSourceAndGradientTensor:(id)arg1 sourceTensor:(id)arg2;
-(void)dispatchForwardCompareLayer:(id)arg1 sourceTensor:(id)arg2 secondaryTensor:(id)arg3 resultTensor:(id)arg4 compareOp:(int)arg5 resultTensorIsTemporary:(char)arg6 resultTensorAllocate:(char)arg7 forTraining:(char)arg8;
-(void)dispatchForwardSplitLayer:(id)arg1 sourceTensor:(id)arg2 resultTensors:(id)arg3;
-(void)dispatchGradientSplitLayer:(id)arg1 sourceGradientTensors:(id)arg2 resultGradientTensor:(id)arg3;
-(void)dispatchForwardConcatLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3;
-(void)dispatchGradientConcatLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensors:(id)arg3;
-(void)dispatchForwardReduceLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 reductionType:(int)arg4 reduceDimensions:(id)arg5 resultTensorIsTemporary:(char)arg6 resultTensorAllocate:(char)arg7 forTraining:(char)arg8;
-(void)dispatchGradientReduceLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 reductionType:(int)arg4 reduceDimensions:(id)arg5 resultTensorIsTemporary:(char)arg6 resultTensorAllocate:(char)arg7;
-(void)dispatchForwardSelectLayer:(id)arg1 conditionTensor:(id)arg2 sourceTensors:(id)arg3 resultTensor:(id)arg4 resultTensorIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6 forTraining:(char)arg7;
-(void)dispatchGradientSelectLayer:(id)arg1 conditionTensor:(id)arg2 sourceGradientTensor:(id)arg3 resultGradientTensors:(id)arg4 resultTensorIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6;
-(void)dispatchForwardScatterLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5 forTraining:(char)arg6;
-(void)dispatchForwardGatherLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5 forTraining:(char)arg6;
-(void)dispatchForwardEmbeddingLayer:(id)arg1 weight:(id)arg2 sourceTensor:(id)arg3 resultTensor:(id)arg4;
-(void)dispatchGradientEmbeddingLayer:(id)arg1 sourceGradientTensor:(id)arg2;
-(void)dispatchForwardSliceLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 resultTensorAllocate:(char)arg4 forTraining:(char)arg5;
-(void)dispatchForwardFullyConnectedLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5 forTraining:(char)arg6;
-(void)dispatchGradientFullyConnectedLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultStateIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6;
-(void)dispatchForwardLayer:(id)arg1 sourceTensor:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultStateIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6 forTraining:(char)arg7;
-(void)dispatchForwardLayer:(id)arg1 sourceTensor:(id)arg2 secondaryTensor:(id)arg3 tertiaryTensor:(id)arg4 resultTensor:(id)arg5 resultTensorIsTemporary:(char)arg6 resultStateIsTemporary:(char)arg7 resultTensorAllocate:(char)arg8 forTraining:(char)arg9;
-(void)dispatchForwardFusedArithmeticLayerNormalizationLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5 forTraining:(char)arg6;
-(void)dispatchForwardMatMulLayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5;
-(void)dispatchGradientMatMulLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensors:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5;
-(void)dispatchForwardMHALayer:(id)arg1 sourceTensors:(id)arg2 resultTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultStateIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6 forTraining:(char)arg7;
-(void)dispatchGradientMHALayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensors:(id)arg3 resultTensorIsTemporary:(char)arg4 resultStateIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6;
-(void)dispatchForwardLossLayer:(id)arg1 sourceTensor:(id)arg2 labelsTensor:(id)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(id)arg5 resultTensor:(id)arg6 resultTensorIsTemporary:(char)arg7 resultStateIsTemporary:(char)arg8 resultTensorAllocate:(char)arg9 forTraining:(char)arg10;
-(void)dispatchGradientLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5;
-(void)dispatchGradientLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 secondaryResultGradientTensor:(id)arg4 resultTensorIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6;
-(void)dispatchGradientReshapeLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5;
-(void)dispatchGradientSliceLayer:(id)arg1 sourceGradientTensor:(id)arg2 resultGradientTensor:(id)arg3 resultTensorAllocate:(char)arg4;
-(void)dispatchGradientLossLayer:(id)arg1 sourceGradientTensor:(id)arg2 labelsTensor:(id)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(id)arg5 resultGradientTensor:(id)arg6 resultTensorIsTemporary:(char)arg7 resultTensorAllocate:(char)arg8;
-(void)dispatchForwardAndGradientLossLayer:(id)arg1 sourceTensor:(id)arg2 labelsTensor:(id)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(id)arg5 resultTensor:(id)arg6 resultGradientTensor:(id)arg7 resultTensorIsTemporary:(char)arg8 resultTensorAllocate:(char)arg9;
-(char)shareSourceAndResultGradientTensorDeviceMemory:(id)arg1 sourceTensor:(id)arg2 resultGradientTensor:(id)arg3;
-(void)optimizeComputationForTrainingGraph:(id)arg1;
-(void)dispatchRNNForwardLayer:(id)arg1 sourceTensors:(id)arg2 resultTensors:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5;
-(void)dispatchRNNForwardLayer:(id)arg1 sourceTensors:(id)arg2 resultTensors:(id)arg3 resultTensorIsTemporary:(char)arg4 resultStateIsTemporary:(char)arg5 resultTensorAllocate:(char)arg6 forTraining:(char)arg7;
-(void)dispatchRNNGradientLayer:(id)arg1 sourceGradientTensors:(id)arg2 resultGradientTensors:(id)arg3 resultTensorIsTemporary:(char)arg4 resultTensorAllocate:(char)arg5;
-(void)incrementReadCountForTensorDeviceMemory:(id)arg1 increment:(long long)arg2;
-(void)incrementReadCountForGradientState:(id)arg1 increment:(long long)arg2;

@end

