/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/PencilKit.framework/Versions/A/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <PencilKit/PencilKit-Structs.h>
@interface PKPathUtility : NSObject
+(void)convexHull:(vector<CGPoint, std::__1::allocator<CGPoint>>*)arg1 forPoints:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg2 ;
+(void)openConvexHullToConcave:(vector<CGPoint, std::__1::allocator<CGPoint>>*)arg1 points:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg2 minAngleFactor:(double)arg3 maxLengthThreshold:(double)arg4 edgeRemovalConstant:(double)arg5 ;
+(vector<CGPoint, std::__1::allocator<CGPoint>>*)centripetalCatmullRomPointsFromConvexHull:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg1 alpha:(double)arg2 granularity:(double)arg3 ;
+(char)vector:(const vector<(anonymous namespace)::Edge, std::__1::allocator<(anonymous namespace)::Edge>>*)arg1 containsEdge:(Edge)arg2 ;
+(Edge)longestEdgeInHull:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg1 atIndex:(int*)arg2 visitedEdges:(const vector<(anonymous namespace)::Edge, std::__1::allocator<(anonymous namespace)::Edge>>*)arg3 ;
+(double)averageDistanceForEdge:(Edge)arg1 withPoints:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg2 ;
+(CGPoint)pointWithMinAngleForEdge:(Edge)arg1 fromPoints:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg2 minAngle:(double*)arg3 ;
+(char)vector:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg1 containsPoint:(CGPoint)arg2 ;
+(char)newEdgeWithPoint:(CGPoint)arg1 betweenEdge:(Edge)arg2 intersectsOtherEdgesInHull:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg3 ;
+(char)edge:(Edge)arg1 intersectsEdge:(Edge)arg2 ;
+(vector<CGPoint, std::__1::allocator<CGPoint>>*)smoothedHullForPoints:(const vector<CGPoint, std::__1::allocator<CGPoint>>*)arg1 alpha:(double)arg2 granularity:(double)arg3 minAngleFactor:(double)arg4 maxLengthThreshold:(double)arg5 edgeRemovalConstant:(double)arg6 ;
@end

