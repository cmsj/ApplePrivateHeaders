/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/PencilKit.framework/Versions/A/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <PencilKit/PKTool.h>

@class NSString, NSColor, PKInk;

@interface PKInkingTool : PKTool

@property (nonatomic,readonly) NSString * inkType; 
@property (nonatomic,readonly) NSColor * color; 
@property (nonatomic,readonly) double width; 
@property (nonatomic,readonly) PKInk * ink; 
+(double)_weightForWidth:(double)arg1 type:(id)arg2 ;
+(double)defaultWidthForInkType:(id)arg1 ;
+(double)_widthForWeight:(double)arg1 type:(id)arg2 ;
+(unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PKFunctionPiecewiseSimpleLinear, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PKFunctionPiecewiseSimpleLinear>>>*)_weightToWidthMap;
+(SCD_Struct_PK4)_contextForStroke:(id)arg1 weight:(double)arg2 type:(id)arg3 ;
+(double)_calculateWidthForWeight:(double)arg1 type:(id)arg2 ;
+(void)_computeWeightToWidthMapFor:(id)arg1 in:(unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PKFunctionPiecewiseSimpleLinear, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PKFunctionPiecewiseSimpleLinear>>>*)arg2 ;
+(double)minimumWidthForInkType:(id)arg1 ;
+(double)maximumWidthForInkType:(id)arg1 ;
+(double)_calculateEdgeWidthForWeight:(double)arg1 type:(id)arg2 ;
-(double)width;
-(NSColor *)color;
-(id)initWithInkType:(id)arg1 color:(id)arg2 width:(double)arg3 ;
-(NSString *)inkType;
-(id)initWithInkType:(id)arg1 color:(id)arg2 ;
-(id)initWithInk:(id)arg1 width:(double)arg2 ;
@end

