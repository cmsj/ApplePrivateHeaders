/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/PencilKit.framework/Versions/A/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <PencilKit/PKQuery.h>
#import <libobjc.A.dylib/CHQueryDelegate.h>

@protocol OS_dispatch_queue;
@class NSObject, NSArray, CHStrokeGroupQuery, PKDrawing, NSString;

@interface PKGroupQuery : PKQuery <CHQueryDelegate> {

	NSObject*<OS_dispatch_queue> _intersectionQueue;
	NSObject*<OS_dispatch_queue> _strokeGroupComputationQueue;
	NSArray* _strokeGroups;
	CHStrokeGroupQuery* _strokeGroupQuery;
	PKDrawing* _drawing;

}

@property (nonatomic,retain) CHStrokeGroupQuery * strokeGroupQuery;              //@synthesize strokeGroupQuery=_strokeGroupQuery - In the implementation block
@property (nonatomic,retain) PKDrawing * drawing;                                //@synthesize drawing=_drawing - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_strokesInLine:(id)arg1 inDrawing:(id)arg2 ;
-(void)dealloc;
-(void)pause;
-(void)start;
-(void)teardown;
-(PKDrawing *)drawing;
-(id)strokeGroups;
-(void)setDrawing:(PKDrawing *)arg1 ;
-(void)queryDidUpdateResult:(id)arg1 ;
-(id)initWithRecognitionSessionManager:(id)arg1 ;
-(CHStrokeGroupQuery *)strokeGroupQuery;
-(void)_precalculateStrokeGroupProperties:(id)arg1 ;
-(void)setStrokeGroups:(id)arg1 ;
-(char)_strokes:(id)arg1 containsAnyStrokes:(id)arg2 ;
-(long long)_tokenizationLevelForSelectionType:(long long)arg1 ;
-(id)_strokesForIdentifiers:(id)arg1 inDrawing:(id)arg2 ;
-(long long)contentTypeForIntersectedStrokes:(id)arg1 ;
-(id)_closestLineToPoint:(CGPoint)arg1 isTop:(char)arg2 ;
-(id)_strokesInLine:(id)arg1 leftOf:(char)arg2 point:(CGPoint)arg3 ;
-(id)_lines:(id)arg1 containingStrokes:(id)arg2 ;
-(long long)_firstLineIndexFromInitialStrokes:(id)arg1 ;
-(id)_strokesAtLineIndex:(long long)arg1 containingStrokes:(id)arg2 ;
-(long long)_lastLineIndexFromInitialStrokes:(id)arg1 ;
-(void)q_fetchStrokesForPoint:(CGPoint)arg1 selectionType:(long long)arg2 inputType:(long long)arg3 visibleOnscreenStrokes:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)q_fetchStrokesBetweenTopPoint:(CGPoint)arg1 bottomPoint:(CGPoint)arg2 isRTL:(char)arg3 completion:(/*^block*/id)arg4 ;
-(id)firstStrokesInStrokes:(id)arg1 isRTL:(char)arg2 ;
-(id)lastStrokesInStrokes:(id)arg1 isRTL:(char)arg2 ;
-(void)q_fetchStrokesAmbiguouslyBelowAndAboveInsertSpaceHandleWithStrokes:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setStrokeGroupQuery:(CHStrokeGroupQuery *)arg1 ;
@end

