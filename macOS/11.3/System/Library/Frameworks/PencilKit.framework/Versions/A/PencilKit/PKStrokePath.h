/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/PencilKit.framework/Versions/A/PencilKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PencilKit/PencilKit-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSUUID, NSDate;

@interface PKStrokePath : NSObject <NSCopying> {

	PKStrokePathPointsPrivate* _strokeDataPointsPrivate;
	shared_ptr<PKProtobufUnknownFields>* _unknownFields;
	char _didValidateTimestamps;
	char _hasValidTimestampData;
	unsigned long long _immutablePointsCount;
	unsigned long long _startIndex;
	long long _inputType;
	NSUUID* _strokeDataUUID;

}

@property (nonatomic,readonly) unsigned long long _pointsCount; 
@property (nonatomic,readonly) unsigned long long _startIndex;                        //@synthesize startIndex=_startIndex - In the implementation block
@property (nonatomic,readonly) unsigned long long _immutablePointsCount;              //@synthesize immutablePointsCount=_immutablePointsCount - In the implementation block
@property (nonatomic,readonly) long long _inputType;                                  //@synthesize inputType=_inputType - In the implementation block
@property (nonatomic,readonly) double _timestamp; 
@property (nonatomic,readonly) NSUUID * _strokeDataUUID;                              //@synthesize strokeDataUUID=_strokeDataUUID - In the implementation block
@property (nonatomic,readonly) char hasValidPointTimestampData; 
@property (nonatomic,readonly) unsigned long long count; 
@property (nonatomic,readonly) NSDate * creationDate; 
+(void)calculateOffsets;
+(id)strokeDataFromDataArchive:(const StrokeData*)arg1 ;
+(void)_calculateOffsets:(unsigned long long*)arg1 sizes:(unsigned long long*)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)init;
-(unsigned long long)count;
-(id)objectAtIndexedSubscript:(unsigned long long)arg1 ;
-(double)_timestamp;
-(NSDate *)creationDate;
-(double)timestampAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)_startIndex;
-(unsigned long long)_pointsCount;
-(CGPoint)locationAtIndex:(unsigned long long)arg1 ;
-(id)pointAtIndex:(unsigned long long)arg1 ;
-(long long)_inputType;
-(NSUUID *)_strokeDataUUID;
-(PKStrokePoint)decompressedPointAt:(unsigned long long)arg1 ;
-(char)saveToDataArchive:(StrokeData*)arg1 ;
-(id)initWithPoints:(PKCompressedStrokePoint*)arg1 count:(unsigned long long)arg2 immutableCount:(unsigned long long)arg3 inputType:(long long)arg4 timestamp:(double)arg5 UUID:(id)arg6 ;
-(PKCompressedStrokePoint)_compressedPointAt:(unsigned long long)arg1 ;
-(void)setPoints:(PKCompressedStrokePoint*)arg1 pointsCount:(unsigned long long)arg2 timestamp:(double)arg3 ;
-(unsigned long long)_immutablePointsCount;
-(void)setPointsFrom:(id)arg1 range:(NSRange)arg2 ;
-(CGPoint)locationOnSegment:(unsigned long long)arg1 t:(double)arg2 ;
-(id)interpolatedPointAt:(double)arg1 ;
-(double)parametricValue:(double)arg1 offsetByDistance:(double)arg2 ;
-(void)_enumerateInterpolatedPointsInRange:(id)arg1 incrementBlock:(/*^block*/id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(double)parametricValue:(double)arg1 offsetByTime:(double)arg2 ;
-(id)initWithControlPoints:(id)arg1 creationDate:(id)arg2 ;
-(id)initWithData:(id)arg1 range:(NSRange)arg2 UUID:(id)arg3 ;
-(char)hasValidPointTimestampData;
-(char)inflight;
-(void)setLocation:(CGPoint)arg1 atIndex:(unsigned long long)arg2 ;
-(double)radiusAtIndex:(unsigned long long)arg1 ;
-(const CGPathRef)_newPathRepresentation;
-(CGPoint)interpolatedLocationAt:(double)arg1 ;
-(double)interpolatedTimeoffsetAt:(double)arg1 ;
-(void)enumerateInterpolatedPointsInRange:(id)arg1 strideByDistance:(double)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)enumerateInterpolatedPointsInRange:(id)arg1 strideByTime:(double)arg2 usingBlock:(/*^block*/id)arg3 ;
-(void)enumerateInterpolatedPointsInRange:(id)arg1 strideByParametricStep:(double)arg2 usingBlock:(/*^block*/id)arg3 ;
-(id)deltaTo:(id)arg1 ;
-(id)dataApplying:(id)arg1 ;
-(void)readStrokeDataFromArchive:(const StrokeData*)arg1 ;
@end

