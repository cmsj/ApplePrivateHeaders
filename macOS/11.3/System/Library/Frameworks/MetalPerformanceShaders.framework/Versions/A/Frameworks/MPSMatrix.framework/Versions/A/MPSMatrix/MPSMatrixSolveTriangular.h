/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MPSMatrix/MPSMatrix-Structs.h>
#import <MPSMatrix/MPSMatrixBinaryKernel.h>

@class MPSMatrix;

@interface MPSMatrixSolveTriangular : MPSMatrixBinaryKernel {

	MPSMatrix* _workspace;
	char _right;
	char _upper;
	char _transpose;
	char _unit;
	unsigned long long _order;
	unsigned long long _numberOfRightHandSides;
	double _alpha;

}

@property (nonatomic,readonly) char right;                                           //@synthesize right=_right - In the implementation block
@property (nonatomic,readonly) char upper;                                           //@synthesize upper=_upper - In the implementation block
@property (nonatomic,readonly) char transpose;                                       //@synthesize transpose=_transpose - In the implementation block
@property (nonatomic,readonly) char unit;                                            //@synthesize unit=_unit - In the implementation block
@property (assign,nonatomic) unsigned long long order;                               //@synthesize order=_order - In the implementation block
@property (assign,nonatomic) unsigned long long numberOfRightHandSides;              //@synthesize numberOfRightHandSides=_numberOfRightHandSides - In the implementation block
@property (nonatomic,readonly) double alpha;                                         //@synthesize alpha=_alpha - In the implementation block
+(const MPSLibraryInfo*)libraryInfo:(MPSDevice*)arg1 ;
-(void)dealloc;
-(char)unit;
-(unsigned long long)order;
-(double)alpha;
-(char)right;
-(id)copyWithZone:(NSZone*)arg1 device:(id)arg2 ;
-(char)transpose;
-(id)initWithDevice:(id)arg1 right:(char)arg2 upper:(char)arg3 transpose:(char)arg4 unit:(char)arg5 order:(unsigned long long)arg6 numberOfRightHandSides:(unsigned long long)arg7 alpha:(double)arg8 ;
-(void)encodeToCommandBuffer:(id)arg1 sourceMatrix:(id)arg2 rightHandSideMatrix:(id)arg3 solutionMatrix:(id)arg4 ;
-(char)upper;
-(void)setOrder:(unsigned long long)arg1 ;
-(unsigned long long)numberOfRightHandSides;
-(void)setNumberOfRightHandSides:(unsigned long long)arg1 ;
@end

