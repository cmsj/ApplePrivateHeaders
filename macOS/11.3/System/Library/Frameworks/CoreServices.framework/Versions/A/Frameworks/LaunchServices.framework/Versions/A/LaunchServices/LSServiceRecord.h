/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <LaunchServices/LaunchServices-Structs.h>
#import <LaunchServices/LSRecord.h>

@class LSBundleRecord, NSString, NSOrderedSet;

@interface LSServiceRecord : LSRecord {

	LSBundleRecord* _weakDeclaringBundleRecord;

}

@property (readonly) unsigned char _rawFlags; 
@property (readonly) LSBundleRecord * _declaringBundleRecord; 
@property (nonatomic,readonly) id compatibilityObject; 
@property (readonly) NSString * message; 
@property (readonly) NSString * portName; 
@property (readonly) NSString * localizedMenuItemTitle; 
@property (readonly) NSOrderedSet * sendTypeIdentifiers; 
@property (readonly) NSOrderedSet * returnTypeIdentifiers; 
@property (readonly) NSString * keyEquivalent; 
@property (readonly) unsigned long long keyEquivalentModifierMask; 
@property (readonly) NSString * userData; 
@property (readonly) double timeout; 
@property (getter=isRestricted,readonly) char restricted; 
@property (readonly) LSBundleRecord * declaringBundleRecord; 
+(char)supportsSecureCoding;
+(id)_propertyClasses;
+(id)enumerator;
+(id)enumeratorForContentsOfPasteboard:(id)arg1 ;
-(id)_propertyClassesForCoding;
-(const vector<std::__1::pair<SEL *, void (*)(id, SEL *)>, std::__1::allocator<std::__1::pair<SEL *, void (*)(id, SEL *)>>>*)_resolvingMethods;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)_detachFromContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const void*)arg4 ;
-(LSBundleRecord *)declaringBundleRecord;
-(unsigned char)_rawFlagsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(unsigned char)_rawFlags;
-(id)_declaringBundleRecordWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(LSBundleRecord *)_declaringBundleRecord;
-(void)_LSRecord_resolve__rawFlags;
-(void)_LSRecord_resolve__declaringBundleRecord;
-(char)isRestricted;
-(id)messageWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(NSString *)message;
-(id)portNameWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(NSString *)portName;
-(id)localizedMenuItemTitleWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(NSString *)localizedMenuItemTitle;
-(id)sendTypeIdentifiersWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(NSOrderedSet *)sendTypeIdentifiers;
-(id)returnTypeIdentifiersWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(NSOrderedSet *)returnTypeIdentifiers;
-(void)_getKeyEquivalent:(unsigned short*)arg1 andModifierFlags:(unsigned long long*)arg2 fromString:(id)arg3 ;
-(id)keyEquivalentWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(NSString *)keyEquivalent;
-(unsigned long long)keyEquivalentModifierMaskWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(unsigned long long)keyEquivalentModifierMask;
-(id)userDataWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(NSString *)userData;
-(double)timeoutWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const Service*)arg4 ;
-(double)timeout;
-(void)_invokeWithPasteboardNamed:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_LSRecord_resolve_message;
-(void)_LSRecord_resolve_portName;
-(void)_LSRecord_resolve_localizedMenuItemTitle;
-(id)localizedMenuItemTitleWithPreferredLocalizations:(id)arg1 ;
-(void)_LSRecord_resolve_sendTypeIdentifiers;
-(void)_LSRecord_resolve_returnTypeIdentifiers;
-(void)_LSRecord_resolve_keyEquivalent;
-(void)_LSRecord_resolve_keyEquivalentModifierMask;
-(void)_LSRecord_resolve_userData;
-(void)_LSRecord_resolve_timeout;
-(void)invokeWithContentsOfPasteboard:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
@end

