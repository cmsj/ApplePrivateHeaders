/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <LaunchServices/LaunchServices-Structs.h>
#import <LaunchServices/LSBundleRecord.h>

@class NSURL, NSDictionary, LSiTunesMetadata, NSUUID, NSArray, _LSLazyPropertyList, NSString, NSData, LSApplicationProxy, _LSApplicationState, NSSet, _LSDiskUsage, LSAppClipMetadata;

@interface LSApplicationRecord : LSBundleRecord

@property (readonly) NSURL * bundleContainerURL; 
@property (readonly) NSDictionary * additionalEnvironmentVariables; 
@property (readonly) LSiTunesMetadata * iTunesMetadata; 
@property (nonatomic,readonly) NSUUID * deviceIdentifierForVendor; 
@property (nonatomic,readonly) NSUUID * deviceIdentifierForAdvertising; 
@property (readonly) NSArray * directionsModes; 
@property (readonly) NSArray * audioComponents; 
@property (readonly) NSArray * externalAccessoryProtocols; 
@property (readonly) NSArray * staticShortcutItems; 
@property (readonly) NSArray * VPNPlugins; 
@property (readonly) NSArray * appTags; 
@property (readonly) NSDictionary * requiredDeviceCapabilities; 
@property (readonly) NSArray * deviceFamilies; 
@property (readonly) char supportsExternallyPlayableContent; 
@property (readonly) char supportsOpenInPlace; 
@property (getter=isFileSharingEnabled,readonly) char fileSharingEnabled; 
@property (readonly) char supportsPurgeableLocalStorage; 
@property (getter=wasRenamed,readonly) char renamed; 
@property (readonly) _LSLazyPropertyList * _rawIconDictionary; 
@property (readonly) char supportsAlternateIconNames; 
@property (readonly) NSString * alternateIconName; 
@property (readonly) NSDictionary * iconDictionary; 
@property (readonly) char supportsControllerUserInteraction; 
@property (readonly) NSArray * supportedGameControllers; 
@property (getter=isWrapper,readonly) char wrapper; 
@property (getter=isWrapped,readonly) char wrapped; 
@property (readonly) unsigned long long applicationDSID; 
@property (readonly) unsigned long long applicationDownloaderDSID; 
@property (readonly) unsigned long long applicationFamilyID; 
@property (readonly) unsigned long long installType; 
@property (getter=isAdHocCodeSigned,readonly) char adHocCodeSigned; 
@property (readonly) char hasSettingsBundle; 
@property (readonly) char applicationHasMIDBasedSINF; 
@property (readonly) char applicationMissingRequiredSINF; 
@property (readonly) char hasCustomNotification; 
@property (readonly) unsigned long long placeholderFailureReason; 
@property (getter=isRemovableByInstallMachinery,readonly) char removableByInstallMachinery; 
@property (readonly) NSData * uniqueInstallIdentifier; 
@property (readonly) NSData * installSessionIdentifier; 
@property (readonly) unsigned codeSignatureVersion; 
@property (readonly) NSString * companionBundleIdentifier; 
@property (readonly) unsigned char watchKitApplicationType; 
@property (readonly) NSString * watchKitVersion; 
@property (readonly) NSString * complicationPrincipalClassName; 
@property (readonly) NSArray * supportedComplicationFamilies; 
@property (readonly) char hasComplication; 
@property (readonly) char hasGlance; 
@property (readonly) char shouldSkipWatchAppInstall; 
@property (getter=isWatchOnly,readonly) char watchOnly; 
@property (readonly) char runsIndependentlyOfCompanionApp; 
@property (readonly) NSString * watchKitApplicationTintColorName; 
@property (readonly) NSString * typeForInstallMachinery; 
@property (readonly) NSDictionary * _localizedNamesWithContext; 
@property (readonly) _LSLazyPropertyList * _rawEnvironmentVariables; 
@property (readonly) unsigned long long _rawBundleFlags; 
@property (readonly) unsigned _rawPlistFlags; 
@property (readonly) unsigned char _rawIconFlags; 
@property (readonly) LSBundleMoreFlags _rawMoreFlags; 
@property (readonly) int _bundleModTime; 
@property (readonly) NSArray * _iconFileNames; 
@property (readonly) NSString * _preferredLaunchArchitecture; 
@property (nonatomic,readonly) LSApplicationProxy * compatibilityObject; 
@property (readonly) NSString * teamIdentifier; 
@property (readonly) NSArray * counterpartIdentifiers; 
@property (readonly) NSString * minimumSystemVersion; 
@property (readonly) NSString * maximumSystemVersion; 
@property (readonly) NSString * exactBundleVersion; 
@property (readonly) NSString * shortVersionString; 
@property (getter=isBeta,readonly) char beta; 
@property (getter=isUpdate,readonly) char update; 
@property (readonly) unsigned long long updateAvailability; 
@property (getter=isPlaceholder,readonly) char placeholder; 
@property (getter=isSystemPlaceholder,readonly) char systemPlaceholder; 
@property (readonly) char hasParallelPlaceholder; 
@property (readonly) _LSApplicationState * applicationState; 
@property (getter=isDeletable,readonly) char deletable; 
@property (getter=isDeletableSystemApplication,readonly) char deletableSystemApplication; 
@property (getter=isAppStoreVendable,nonatomic,readonly) char appStoreVendable; 
@property (getter=isLaunchProhibited,readonly) char launchProhibited; 
@property (readonly) NSString * appStoreToolsBuildVersion; 
@property (readonly) NSSet * userActivityTypes; 
@property (readonly) char canHandleWebAuthentication; 
@property (readonly) NSSet * applicationExtensionRecords; 
@property (readonly) char supportsMultiwindow; 
@property (getter=isArcadeApp,readonly) char arcadeApp; 
@property (readonly) _LSDiskUsage * diskUsage; 
@property (readonly) char supportsOnDemandResources; 
@property (readonly) char supportsAudiobooks; 
@property (readonly) NSArray * backgroundTaskSchedulerPermittedIdentifiers; 
@property (readonly) NSArray * carPlayInstrumentClusterURLSchemes; 
@property (readonly) char supportsCarPlayDashboardScene; 
@property (readonly) char supportsCarPlayInstrumentClusterScene; 
@property (readonly) LSAppClipMetadata * appClipMetadata; 
@property (readonly) char shouldShowSecurityPromptsOnSignIn; 
@property (getter=isWebBrowser,readonly) char webBrowser; 
@property (getter=isMailClient,readonly) char mailClient; 
@property (readonly) char supportsSpotlightQueryContinuation; 
@property (readonly) char requiresNativeExecution; 
+(char)supportsSecureCoding;
+(id)_propertyClasses;
+(id)applicationRecordsForUserActivityType:(id)arg1 limit:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)applicationRecordsForUserActivityDomainName:(id)arg1 limit:(unsigned long long)arg2 error:(id*)arg3 ;
+(void)setUpdateAvailabilityForApplicationsWithBundleIdentifiers:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(id)_alternateIconQueue;
+(id)enumeratorWithOptions:(unsigned long long)arg1 ;
+(id)enumeratorOnVolumeAtURL:(id)arg1 options:(unsigned long long)arg2 ;
+(id)systemPlaceholderEnumerator;
-(id)_propertyClassesForCoding;
-(const vector<std::__1::pair<SEL *, void (*)(id, SEL *)>, std::__1::allocator<std::__1::pair<SEL *, void (*)(id, SEL *)>>>*)_resolvingMethods;
-(id)initWithCoder:(id)arg1 ;
-(id)_initWithNode:(id)arg1 bundleIdentifier:(id)arg2 context:(LSContext*)arg3 tableID:(unsigned)arg4 unitID:(unsigned)arg5 bundleBaseData:(const LSBundleBaseData*)arg6 error:(id*)arg7 ;
-(id)_initWithContext:(LSContext*)arg1 bundleID:(unsigned)arg2 bundleData:(const LSBundleData*)arg3 error:(id*)arg4 ;
-(id)managedPersonas;
-(id)managedPersonasWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(char)_usesSystemPersona;
-(id)_initWithContext:(LSContext*)arg1 persistentIdentifierData:(const LSPersistentIdentifierData*)arg2 length:(unsigned long long)arg3 ;
-(void)_detachFromContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const void*)arg4 ;
-(void)_LSRecord_resolve_managedPersonas;
-(char)_containerized;
-(unsigned long long)_containerClass;
-(id)_compatibilityObjectWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const void*)arg4 ;
-(id)iconDictionaryWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(NSDictionary *)iconDictionary;
-(void)_LSRecord_resolve_iconDictionary;
-(id)supportedIntents;
-(id)intentsRestrictedWhileLocked;
-(id)intentsRestrictedWhileProtectedDataUnavailable;
-(id)supportedIntentMediaCategories;
-(NSString *)shortVersionString;
-(unsigned long long)installType;
-(NSURL *)bundleContainerURL;
-(NSString *)watchKitVersion;
-(NSArray *)supportedComplicationFamilies;
-(NSArray *)_iconFileNames;
-(id)_persistentIdentifierWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const void*)arg4 ;
-(char)isPlaceholder;
-(NSString *)exactBundleVersion;
-(NSString *)_preferredLaunchArchitecture;
-(void)clearAdvertisingIdentifier;
-(_LSApplicationState *)applicationState;
-(unsigned long long)_rawBundleFlags;
-(NSSet *)applicationExtensionRecords;
-(unsigned long long)applicationDSID;
-(unsigned long long)applicationDownloaderDSID;
-(unsigned long long)applicationFamilyID;
-(NSSet *)userActivityTypes;
-(NSString *)teamIdentifier;
-(char)isUpdate;
-(NSDictionary *)additionalEnvironmentVariables;
-(unsigned long long)placeholderFailureReason;
-(void)setAlternateIconName:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(NSString *)alternateIconName;
-(void)getDeviceManagementPolicyWithCompletionHandler:(/*^block*/id)arg1 ;
-(char)getGenericTranslocationTargetURL:(id*)arg1 error:(id*)arg2 ;
-(int)_bundleModTime;
-(NSString *)typeForInstallMachinery;
-(NSDictionary *)requiredDeviceCapabilities;
-(char)supportsAlternateIconNames;
-(NSArray *)counterpartIdentifiers;
-(NSArray *)staticShortcutItems;
-(NSString *)minimumSystemVersion;
-(NSString *)maximumSystemVersion;
-(NSArray *)directionsModes;
-(NSArray *)audioComponents;
-(NSUUID *)deviceIdentifierForVendor;
-(NSUUID *)deviceIdentifierForAdvertising;
-(_LSDiskUsage *)diskUsage;
-(NSArray *)VPNPlugins;
-(NSArray *)appTags;
-(NSArray *)externalAccessoryProtocols;
-(char)hasParallelPlaceholder;
-(char)supportsAudiobooks;
-(char)hasSettingsBundle;
-(char)supportsExternallyPlayableContent;
-(char)supportsOpenInPlace;
-(char)supportsPurgeableLocalStorage;
-(char)hasCustomNotification;
-(char)hasComplication;
-(char)hasGlance;
-(char)shouldSkipWatchAppInstall;
-(NSString *)appStoreToolsBuildVersion;
-(char)canHandleWebAuthentication;
-(char)supportsMultiwindow;
-(NSArray *)backgroundTaskSchedulerPermittedIdentifiers;
-(char)runsIndependentlyOfCompanionApp;
-(NSArray *)carPlayInstrumentClusterURLSchemes;
-(id)initWithBundleIdentifier:(id)arg1 allowPlaceholder:(char)arg2 error:(id*)arg3 ;
-(id)_initWithNode:(id)arg1 bundleIdentifier:(id)arg2 placeholderBehavior:(long long)arg3 systemPlaceholder:(char)arg4 itemID:(unsigned long long)arg5 forceInBundleContainer:(char)arg6 context:(LSContext*)arg7 error:(id*)arg8 ;
-(id)initWithURL:(id)arg1 allowPlaceholder:(char)arg2 error:(id*)arg3 ;
-(char)isWebBrowser;
-(char)isMailClient;
-(char)isLaunchProhibited;
-(id)teamIdentifierWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)counterpartIdentifiersWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)minimumSystemVersionWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)maximumSystemVersionWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)exactBundleVersionWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)shortVersionStringWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(char)isSystemPlaceholderWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(char)isSystemPlaceholder;
-(id)applicationStateWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)userActivityTypesWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)applicationExtensionRecordsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)diskUsageWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)backgroundTaskSchedulerPermittedIdentifiersWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(LSBundleMoreFlags)_rawMoreFlags;
-(unsigned long long)_rawBundleFlagsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(unsigned)_rawPlistFlagsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(unsigned)_rawPlistFlags;
-(unsigned char)_rawIconFlagsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(unsigned char)_rawIconFlags;
-(LSBundleMoreFlags)_rawMoreFlagsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(int)_bundleModTimeWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)_iconFileNamesWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)_localizedNamesWithContextWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(NSDictionary *)_localizedNamesWithContext;
-(id)_preferredLaunchArchitectureWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)_rawEnvironmentVariablesWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(_LSLazyPropertyList *)_rawEnvironmentVariables;
-(id)initWithBundleIdentifierOfSystemPlaceholder:(id)arg1 error:(id*)arg2 ;
-(id)initWithStoreItemIdentifier:(unsigned long long)arg1 error:(id*)arg2 ;
-(void)_LSRecord_resolve_teamIdentifier;
-(void)_LSRecord_resolve_counterpartIdentifiers;
-(void)_LSRecord_resolve_minimumSystemVersion;
-(void)_LSRecord_resolve_maximumSystemVersion;
-(void)_LSRecord_resolve_exactBundleVersion;
-(void)_LSRecord_resolve_shortVersionString;
-(char)isBeta;
-(unsigned long long)updateAvailability;
-(void)setUpdateAvailability:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_LSRecord_resolve_isSystemPlaceholder;
-(void)_LSRecord_resolve_applicationState;
-(char)isDeletable;
-(char)isDeletableSystemApplication;
-(char)isAppStoreVendable;
-(void)_LSRecord_resolve_userActivityTypes;
-(void)_LSRecord_resolve_applicationExtensionRecords;
-(char)isArcadeApp;
-(void)_LSRecord_resolve_diskUsage;
-(char)supportsOnDemandResources;
-(void)_LSRecord_resolve_backgroundTaskSchedulerPermittedIdentifiers;
-(char)supportsCarPlayDashboardScene;
-(char)supportsCarPlayInstrumentClusterScene;
-(LSAppClipMetadata *)appClipMetadata;
-(char)shouldShowSecurityPromptsOnSignIn;
-(char)supportsSpotlightQueryContinuation;
-(char)requiresNativeExecution;
-(id)bundleVersionWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(void)_LSRecord_resolve__rawBundleFlags;
-(void)_LSRecord_resolve__rawPlistFlags;
-(void)_LSRecord_resolve__rawIconFlags;
-(void)_LSRecord_resolve__rawMoreFlags;
-(void)_LSRecord_resolve__bundleModTime;
-(void)_LSRecord_resolve__iconFileNames;
-(void)_LSRecord_resolve__localizedNamesWithContext;
-(void)_LSRecord_resolve__preferredLaunchArchitecture;
-(void)_LSRecord_resolve__rawEnvironmentVariables;
-(id)bundleContainerURLWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(void)_LSRecord_resolve_bundleContainerURL;
-(id)iTunesMetadataWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(LSiTunesMetadata *)iTunesMetadata;
-(void)_LSRecord_resolve_iTunesMetadata;
-(id)directionsModesWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)audioComponentsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)externalAccessoryProtocolsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)staticShortcutItemsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)VPNPluginsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)appTagsWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(id)deviceFamiliesWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(NSArray *)deviceFamilies;
-(void)_LSRecord_resolve_directionsModes;
-(void)_LSRecord_resolve_audioComponents;
-(void)_LSRecord_resolve_externalAccessoryProtocols;
-(void)_LSRecord_resolve_staticShortcutItems;
-(void)_LSRecord_resolve_VPNPlugins;
-(void)_LSRecord_resolve_appTags;
-(void)_LSRecord_resolve_deviceFamilies;
-(char)isFileSharingEnabled;
-(id)localizedNameWithContext:(id)arg1 preferredLocalizations:(id)arg2 ;
-(char)wasRenamedWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(char)wasRenamed;
-(id)localizedNameWithContext:(id)arg1 ;
-(void)_LSRecord_resolve_wasRenamed;
-(id)_rawIconDictionaryWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(_LSLazyPropertyList *)_rawIconDictionary;
-(void)_LSRecord_resolve__rawIconDictionary;
-(char)supportsControllerUserInteraction;
-(NSArray *)supportedGameControllers;
-(char)isWrapper;
-(char)isWrapped;
-(unsigned long long)applicationDSIDWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(unsigned long long)applicationDownloaderDSIDWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(unsigned long long)applicationFamilyIDWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(unsigned long long)installTypeWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(unsigned long long)placeholderFailureReasonWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(char)isRemovableByInstallMachineryWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(char)isRemovableByInstallMachinery;
-(id)uniqueInstallIdentifierWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(NSData *)uniqueInstallIdentifier;
-(id)installSessionIdentifierWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(NSData *)installSessionIdentifier;
-(id)bundleMetadataReturningError:(id*)arg1 ;
-(void)_LSRecord_resolve_applicationDSID;
-(void)_LSRecord_resolve_applicationDownloaderDSID;
-(void)_LSRecord_resolve_applicationFamilyID;
-(void)_LSRecord_resolve_installType;
-(char)isAdHocCodeSigned;
-(char)applicationHasMIDBasedSINF;
-(char)applicationMissingRequiredSINF;
-(void)_LSRecord_resolve_placeholderFailureReason;
-(void)_LSRecord_resolve_isRemovableByInstallMachinery;
-(void)_LSRecord_resolve_uniqueInstallIdentifier;
-(void)_LSRecord_resolve_installSessionIdentifier;
-(id)companionBundleIdentifierWithContext:(LSContext*)arg1 tableID:(unsigned)arg2 unitID:(unsigned)arg3 unitBytes:(const LSBundleData*)arg4 ;
-(NSString *)companionBundleIdentifier;
-(id)initWithBundleIdentifierOfCompanionApplication:(id)arg1 error:(id*)arg2 ;
-(void)_LSRecord_resolve_companionBundleIdentifier;
-(unsigned char)watchKitApplicationType;
-(NSString *)complicationPrincipalClassName;
-(char)isWatchOnly;
-(NSString *)watchKitApplicationTintColorName;
-(id)initForInstallMachineryWithBundleIdentifier:(id)arg1 error:(id*)arg2 ;
-(id)initForInstallMachineryWithBundleIdentifier:(id)arg1 placeholder:(char)arg2 error:(id*)arg3 ;
@end

