/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:45 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/ParavirtualizedGraphics.framework/Versions/A/ParavirtualizedGraphics
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ParavirtualizedGraphics/ParavirtualizedGraphics-Structs.h>
#import <libobjc.A.dylib/PGDevice.h>

@protocol MTLCommandQueue, MTLDevice;
@class _PGDisplayNub, _PGDisplay, PGRootFIFO, PGChildFIFO, NSMutableDictionary, PGEFIDisplay, PGIOSurfaceHostDevice, NSString;

@interface _PGDevice : NSObject <PGDevice> {

	mutex _signalMutex;
	condition_variable _signalCond;
	mutex _taskMutex;
	AI _interruptDisplay;
	_PGDisplayNub* _displayNub[8];
	_PGDisplay* _displayClient[8];
	mutex _displayMutex;
	AI _interruptStamp;
	BOOL _interruptFault;
	void* _stampMemory;
	mutex _rootTaskMutex;
	unsigned _rootPageNumber;
	PGTask_sRef _rootTask;
	void* _rootTaskBase;
	void* _readPage;
	SCD_Struct_PG16* _rootNode;
	SCD_Struct_PG17 _fifo;
	PGRootFIFO* _rootFIFO;
	PGChildFIFO* _childFIFOs[64];
	unsigned long long _waitingStamps;
	id<MTLCommandQueue> _blitUpQueue;
	id<MTLCommandQueue> _blitDownQueue;
	NSMutableDictionary* _tasks;
	/*^block*/id _raiseInterrupt;
	/*^block*/id _createTask;
	/*^block*/id _destroyTask;
	/*^block*/id _mapMemory;
	/*^block*/id _unmapMemory;
	/*^block*/id _readMemory;
	/*^block*/id _addTraceRange;
	/*^block*/id _removeTraceRange;
	MTLRangeAllocator* _rootTaskAllocator;
	int _binaryVersion;
	APVFeatures _features;
	int _runState;
	SCD_Struct_PG20 _efi;
	PGEFIDisplay* _efiDisplay;
	id<MTLDevice> _mtlDevice;
	id<MTLCommandQueue> _execQueue;
	unsigned long long deviceTraceId;

}

@property (readonly) id<MTLDevice> mtlDevice;                            //@synthesize mtlDevice=_mtlDevice - In the implementation block
@property (readonly) id<MTLCommandQueue> blitDownQueue;                  //@synthesize blitDownQueue=_blitDownQueue - In the implementation block
@property (readonly) id<MTLCommandQueue> blitUpQueue;                    //@synthesize blitUpQueue=_blitUpQueue - In the implementation block
@property (readonly) id<MTLCommandQueue> execQueue;                      //@synthesize execQueue=_execQueue - In the implementation block
@property (readonly) int binaryVersion;                                  //@synthesize binaryVersion=_binaryVersion - In the implementation block
@property (readonly) const APVFeatures* features; 
@property (readonly) int runState;                                       //@synthesize runState=_runState - In the implementation block
@property (readonly) unsigned long long deviceTraceId; 
@property (readonly) PGIOSurfaceHostDevice * mapperService; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)interrupt;
-(id)initWithDescriptor:(id)arg1 ;
-(const APVFeatures*)features;
-(int)binaryVersion;
-(void)didResume;
-(int)runState;
-(id<MTLDevice>)mtlDevice;
-(id<MTLCommandQueue>)blitDownQueue;
-(void*)mapWiredGuestPage:(unsigned)arg1 ;
-(BOOL)readFromPhysicalAddress:(unsigned long long)arg1 length:(unsigned)arg2 dst:(void*)arg3 ;
-(void)unmapWiredGuestPage:(void*)arg1 ;
-(void)destroyPGTask:(PGTask_sRef)arg1 ;
-(BOOL)mapMemoryInTask:(PGTask_sRef)arg1 segmentCount:(unsigned)arg2 offset:(unsigned long long)arg3 readonly:(BOOL)arg4 ranges:(PGPhysicalMemoryRange_s*)arg5 ;
-(BOOL)unmapMemoryInTask:(PGTask_sRef)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 ;
-(id)getTaskID:(unsigned)arg1 ;
-(id<MTLCommandQueue>)blitUpQueue;
-(void)setSharedDisplayStatePage:(unsigned)arg1 forPort:(unsigned long long)arg2 restoring:(BOOL)arg3 ;
-(unsigned)interruptReason:(BOOL*)arg1 ;
-(unsigned)fifoFaultOffset;
-(unsigned)getEFIModeCount;
-(unsigned)getEFIModeValue;
-(void)createRootFifo;
-(id)fifoForStampIndex:(unsigned)arg1 ;
-(void)addWait:(unsigned)arg1 waitingFor:(unsigned)arg2 value:(unsigned)arg3 ;
-(void)finishWait:(unsigned)arg1 ;
-(BOOL)waitStamp:(SCD_Struct_PG21*)arg1 waitingIndex:(unsigned)arg2 ;
-(BOOL)deleteFIFO:(unsigned)arg1 ;
-(void)teardownFifos;
-(void)teardownTasks;
-(void)teardownDisplays;
-(void)teardownRoot;
-(void)enableFifo;
-(void)disableFifo;
-(void)fifoWritten;
-(void)setFifoLength:(unsigned)arg1 ;
-(void)setFifoStart:(unsigned)arg1 ;
-(void)setRootPage:(unsigned)arg1 ;
-(void)wakeFifo:(unsigned)arg1 ;
-(void)resumeFifo;
-(void)resumeChildFifo:(unsigned)arg1 ;
-(void)setFifoBasePage:(unsigned)arg1 ;
-(void)setBinaryVersion:(int)arg1 ;
-(void)setEFIDisplay:(unsigned)arg1 ;
-(void)setEFIModeSelect:(unsigned)arg1 ;
-(void)setEFIFramebufferStart:(unsigned)arg1 ;
-(void)setEFIFramebufferLength:(unsigned)arg1 ;
-(void)setEFIFramebufferDepth:(unsigned)arg1 ;
-(void)setEFIFramebufferMode:(unsigned)arg1 ;
-(void)ringDisplayDoorbellAtPort:(unsigned)arg1 ;
-(BOOL)createFIFOInternal:(unsigned)arg1 restoring:(BOOL)arg2 ;
-(id)getDisplayNubAtPort:(unsigned long long)arg1 ;
-(void)signalFault;
-(BOOL)createTaskID:(unsigned)arg1 taskRoot:(unsigned)arg2 length:(unsigned long long)arg3 restoring:(BOOL)arg4 ;
-(unsigned)mmioReadAtOffset:(unsigned long long)arg1 ;
-(void)mmioWriteAtOffset:(unsigned long long)arg1 value:(unsigned)arg2 ;
-(id)newDisplayWithDescriptor:(id)arg1 port:(unsigned long long)arg2 serialNum:(unsigned)arg3 ;
-(void)willSuspend;
-(id)finishSuspend;
-(BOOL)willResumeWithSuspendState:(id)arg1 error:(id*)arg2 ;
-(void)signalStamp:(unsigned)arg1 value:(unsigned)arg2 ;
-(void)waitStamps:(unsigned)arg1 barriers:(SCD_Struct_PG21*)arg2 waitingIndex:(unsigned)arg3 ;
-(BOOL)deleteTaskID:(unsigned)arg1 ;
-(PGTask_sRef)createTask:(unsigned)arg1 baseAddress:(void*)arg2 ;
-(BOOL)createFIFO:(unsigned)arg1 ;
-(id)getDisplayAtPort:(unsigned long long)arg1 ;
-(BOOL)attachDisplay:(id)arg1 port:(unsigned long long)arg2 ;
-(void)detachDisplay:(id)arg1 port:(unsigned long long)arg2 ;
-(void)displayPokePort:(unsigned long long)arg1 ;
-(void)getDeviceInfo:(unsigned)arg1 length:(unsigned)arg2 dst:(unsigned)arg3 ;
-(PGTraceRange_sRef)addTraceRange:(PGPhysicalMemoryRange_s*)arg1 handler:(/*^block*/id)arg2 ;
-(void)removeTraceRange:(PGTraceRange_sRef)arg1 ;
-(unsigned long long)nextTraceID;
-(PGIOSurfaceHostDevice *)mapperService;
-(id<MTLCommandQueue>)execQueue;
-(unsigned long long)deviceTraceId;
@end

