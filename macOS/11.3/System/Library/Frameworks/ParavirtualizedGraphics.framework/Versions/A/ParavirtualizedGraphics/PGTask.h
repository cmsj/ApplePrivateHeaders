/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:45 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/ParavirtualizedGraphics.framework/Versions/A/ParavirtualizedGraphics
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ParavirtualizedGraphics/ParavirtualizedGraphics-Structs.h>
#import <libobjc.A.dylib/MTLDeserializerObjectDelegate.h>

@protocol MTLDevice, MTLDeserializer, MTLCommandQueue, MTLEvent;
@class _PGDevice, PGDeserializerAllocator, NSMutableDictionary, PGPageTableIterator, NSString;

@interface PGTask : NSObject <MTLDeserializerObjectDelegate> {

	_PGDevice* _device;
	id<MTLDevice> _mtlDevice;
	PGTask_sRef _task;
	void* _baseAddress;
	unsigned long long _length;
	id<MTLDeserializer> _deserializer;
	SCD_Struct_PG1* _objectList;
	BOOL _objectListMapped;
	unsigned long long _objectListOffset;
	unsigned long long _objectListLength;
	unsigned _maxObjectCount;
	PGDeserializerAllocator* _allocator;
	id<MTLCommandQueue> _pagingQueue;
	id<MTLEvent> _pagingEvent;
	unsigned long long _pagingCounter;
	NSMutableDictionary* _functions;
	NSMutableDictionary* _computePipelines;
	NSMutableDictionary* _renderPipelines;
	NSMutableDictionary* _samplers;
	NSMutableDictionary* _depthStencils;
	NSMutableDictionary* _fences;
	NSMutableDictionary* _resources;
	SCD_Struct_PG2* _taskRoot;
	PGPageTableIterator* _pageTableIterator;
	PGMappedRangeTracker* _mappedRange;
	shared_mutex _mutex;
	mutex _objectListMutex;
	recursive_mutex _objectDatabaseMutex;
	BOOL _backingsFromMapperAllowed;

}

@property (copy,readonly) id<MTLDeserializer> deserializer;              //@synthesize deserializer=_deserializer - In the implementation block
@property (readonly) PGTask_sRef task;                                   //@synthesize task=_task - In the implementation block
@property (readonly) id<MTLDevice> mtlDevice;                            //@synthesize mtlDevice=_mtlDevice - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)device;
-(id<MTLDeserializer>)deserializer;
-(PGTask_sRef)task;
-(void)teardown;
-(void)runBlock:(/*^block*/id)arg1 ;
-(id<MTLDevice>)mtlDevice;
-(char)setupTaskRoot:(unsigned)arg1 ;
-(void)setObjectListOffset:(unsigned long long)arg1 length:(unsigned)arg2 ;
-(void)mapMemoryInternalAtOffset:(unsigned long long)arg1 length:(unsigned long long)arg2 ;
-(void*)mappedAddressForOffset:(unsigned long long)arg1 length:(unsigned long long)arg2 ;
-(void*)addressForOffset:(unsigned long long)arg1 length:(unsigned long long)arg2 ;
-(void)mapObjectList;
-(void*)mappedAddressForPageNumber:(unsigned)arg1 length:(unsigned long long)arg2 ;
-(void)getObject:(unsigned)arg1 entry:(SCD_Struct_PG1*)arg2 ;
-(void)makeObject:(unsigned)arg1 dictionary:(id)arg2 ;
-(void)makeFunction:(unsigned)arg1 ;
-(id)getExistingHostResource:(unsigned)arg1 ;
-(void)deleteResource:(unsigned)arg1 ;
-(void)makeResource:(unsigned)arg1 ;
-(id)getHostResource:(unsigned)arg1 ;
-(void*)getObjectDescLocked:(unsigned)arg1 descLength:(unsigned*)arg2 objectType:(unsigned*)arg3 expectedDescLength:(unsigned long long)arg4 ;
-(id)backingForID:(unsigned)arg1 ;
-(void)registerHostResource:(id)arg1 forReference:(unsigned)arg2 ;
-(void)makeNormalTexture:(SCD_Struct_PG1*)arg1 ;
-(void)makeRefTexture:(SCD_Struct_PG1*)arg1 ;
-(void)makeSerializerTexture:(SCD_Struct_PG1*)arg1 ;
-(void)makeMemorylessTexture:(SCD_Struct_PG1*)arg1 ;
-(void)makeMapperRefTexture:(SCD_Struct_PG1*)arg1 ;
-(void)makeBuffer:(unsigned)arg1 ;
-(void)makeTexture:(unsigned)arg1 ;
-(void)makeBacking:(unsigned)arg1 ;
-(id)getComputePipelineStateForReference:(unsigned)arg1 ;
-(void)replacePhysical:(unsigned)arg1 ;
-(unsigned)registerCommandQueueForReference:(unsigned)arg1 commandQueue:(id)arg2 ;
-(id)getCommandQueueForReference:(unsigned)arg1 ;
-(void)deleteCommandQueueForReference:(unsigned)arg1 ;
-(unsigned)registerFunctionForReference:(unsigned)arg1 function:(id)arg2 ;
-(id)getFunctionForReference:(unsigned)arg1 ;
-(void)deleteFunctionForReference:(unsigned)arg1 ;
-(unsigned)registerComputePipelineStateForReference:(unsigned)arg1 computePipeline:(id)arg2 ;
-(void)deleteComputePipelineStateForReference:(unsigned)arg1 ;
-(unsigned)registerRenderPipelineStateForReference:(unsigned)arg1 renderPipeline:(id)arg2 ;
-(id)getRenderPipelineStateForReference:(unsigned)arg1 ;
-(void)deleteRenderPipelineStateForReference:(unsigned)arg1 ;
-(unsigned)registerBufferForReference:(unsigned)arg1 buffer:(id)arg2 ;
-(id)getBufferForReference:(unsigned)arg1 ;
-(void)deleteBufferForReference:(unsigned)arg1 ;
-(unsigned)registerTextureForReference:(unsigned)arg1 texture:(id)arg2 ;
-(id)getTextureForReference:(unsigned)arg1 ;
-(void)deleteTextureForReference:(unsigned)arg1 ;
-(unsigned)registerSamplerStateForReference:(unsigned)arg1 sampler:(id)arg2 ;
-(id)getSamplerStateForReference:(unsigned)arg1 ;
-(void)deleteSamplerStateForReference:(unsigned)arg1 ;
-(unsigned)registerDepthStencilStateForReference:(unsigned)arg1 depthStencil:(id)arg2 ;
-(id)getDepthStencilStateForReference:(unsigned)arg1 ;
-(void)deleteDepthStencilStateForReference:(unsigned)arg1 ;
-(unsigned)registerFenceForReference:(unsigned)arg1 fence:(id)arg2 ;
-(id)getFenceForReference:(unsigned)arg1 ;
-(void)deleteFenceForReference:(unsigned)arg1 ;
-(unsigned)registerArgumentBufferLayoutForReference:(unsigned)arg1 argumentBufferLayout:(id)arg2 ;
-(id)getArgumentBufferLayoutForReference:(unsigned)arg1 ;
-(void)deleteArgumentBufferLayoutForReference:(unsigned)arg1 ;
-(unsigned)registerArgumentEncoderForReference:(unsigned)arg1 argumentEncoder:(id)arg2 ;
-(id)getArgumentEncoderForReference:(unsigned)arg1 ;
-(void)deleteArgumentEncoderForReference:(unsigned)arg1 ;
-(unsigned)registerHeapForReference:(unsigned)arg1 heap:(id)arg2 ;
-(id)getHeapForReference:(unsigned)arg1 ;
-(void)deleteHeapForReference:(unsigned)arg1 ;
-(unsigned)registerEventForReference:(unsigned)arg1 event:(id)arg2 ;
-(id)getEventForReference:(unsigned)arg1 ;
-(void)deleteEventForReference:(unsigned)arg1 ;
-(id)getResourceForReference:(unsigned)arg1 ;
-(void)deleteResourceForReference:(unsigned)arg1 ;
-(id)initWithDevice:(id)arg1 task:(PGTask_sRef)arg2 taskRoot:(unsigned)arg3 baseAddress:(void*)arg4 length:(unsigned long long)arg5 ;
-(void)evict;
-(void)mapMemoryAtOffset:(unsigned long long)arg1 length:(unsigned long long)arg2 ;
-(void)unmapMemoryAtOffset:(unsigned long long)arg1 length:(unsigned long long)arg2 ;
-(BOOL)validateRangeMapped:(unsigned)arg1 length:(unsigned long long)arg2 ;
-(id)newBufferForVirtualPage:(unsigned)arg1 length:(unsigned long long)arg2 ;
-(void)invalidateResources:(SCD_Struct_PG11*)arg1 count:(unsigned)arg2 ;
-(void)synchronizeResources:(SCD_Struct_PG12*)arg1 count:(unsigned)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)synchronizeAndInvalidateResources:(SCD_Struct_PG12*)arg1 count:(unsigned)arg2 completionHandler:(/*^block*/id)arg3 ;
-(PGTaskPrepareSync_s)prepareResources:(SCD_Struct_PG13*)arg1 count:(unsigned)arg2 ;
-(BOOL)completeResources:(SCD_Struct_PG13*)arg1 count:(unsigned)arg2 sync:(PGTaskCompleteSync_s)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)preparedBackingForID:(unsigned)arg1 ;
-(void)deleteBacking:(unsigned)arg1 ;
-(void)getComputeInfo:(unsigned)arg1 maxKey:(unsigned)arg2 count:(unsigned)arg3 offset:(unsigned long long)arg4 ;
-(void)prepareBacking:(id)arg1 inEncoder:(id)arg2 ;
-(void)synchronizeBacking:(id)arg1 inEncoder:(id)arg2 ;
@end

