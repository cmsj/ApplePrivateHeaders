/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:43 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Automator.framework/Versions/A/Automator
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Automator/Automator-Structs.h>
#import <libobjc.A.dylib/NSXPCConnectionDelegate.h>

@protocol OS_dispatch_queue;
@class NSMutableDictionary, NSMapTable, NSObject, NSString;

@interface AMRemoteActionController : NSObject <NSXPCConnectionDelegate> {

	os_unfair_lock_s __connectionsLock;
	NSMutableDictionary* __connectionsByBundleIdentifier;
	NSMapTable* __storageByRemoteAction;
	NSObject*<OS_dispatch_queue> __xpcConnectionQueue;

}

@property (nonatomic,retain) NSMutableDictionary * _connectionsByBundleIdentifier;              //@synthesize _connectionsByBundleIdentifier=__connectionsByBundleIdentifier - In the implementation block
@property (nonatomic,retain) NSMapTable * _storageByRemoteAction;                               //@synthesize _storageByRemoteAction=__storageByRemoteAction - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> _xpcConnectionQueue;                  //@synthesize _xpcConnectionQueue=__xpcConnectionQueue - In the implementation block
@property (assign,nonatomic) os_unfair_lock_s _connectionsLock;                                 //@synthesize _connectionsLock=__connectionsLock - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedRemoteActionController;
-(id)init;
-(id)replacementObjectForXPCConnection:(id)arg1 encoder:(id)arg2 object:(id)arg3 ;
-(NSObject*<OS_dispatch_queue>)_xpcConnectionQueue;
-(os_unfair_lock_s)_connectionsLock;
-(void)invalidateRemoteAction:(id)arg1 ;
-(id)variableDelegateForRemoteAction:(id)arg1 ;
-(id)actionProxyForRemoteAction:(id)arg1 workflowUUID:(id)arg2 synchronous:(char)arg3 proxyCreationError:(id*)arg4 errorHandler:(/*^block*/id)arg5 ;
-(char)remoteActionIsRegistered:(id)arg1 ;
-(void)configureDummyViewControllerForRemoteAction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)variableControllerProxyForRemoteAction:(id)arg1 synchronous:(char)arg2 errorHandler:(/*^block*/id)arg3 ;
-(void)hostViewControllerForRemoteAction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_storageForRemoteActionWithLock:(id)arg1 creatingIfNeeded:(char)arg2 ;
-(NSMutableDictionary *)_connectionsByBundleIdentifier;
-(id)_remoteActionsForConnection:(id)arg1 ;
-(void)_invalidateRemoteActionWithLock:(id)arg1 fromXPCError:(char)arg2 ;
-(void)_setNameForConnection:(id)arg1 remoteAction:(id)arg2 ;
-(NSMapTable *)_storageByRemoteAction;
-(id)_xpcConnectionForRemoteActionWithLock:(id)arg1 ;
-(id)_xpcProxyFromProxyCreatingObject:(id)arg1 synchronous:(char)arg2 errorHandler:(/*^block*/id)arg3 ;
-(id)_xpcServiceProxyForRemoteActionWithLock:(id)arg1 errorHandler:(/*^block*/id)arg2 ;
-(id)_xpcProxyForRemoteAction:(id)arg1 workflowUUID:(id)arg2 synchronous:(char)arg3 proxyCreationError:(id*)arg4 errorHandler:(/*^block*/id)arg5 ;
-(void)_dummyHostViewControllerForRemoteAction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)asynchronousXPCProxyForRemoteAction:(id)arg1 workflowUUID:(id)arg2 proxyCreationError:(id*)arg3 errorHandler:(/*^block*/id)arg4 ;
-(void)set_connectionsByBundleIdentifier:(NSMutableDictionary *)arg1 ;
-(void)set_storageByRemoteAction:(NSMapTable *)arg1 ;
-(void)set_xpcConnectionQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)set_connectionsLock:(os_unfair_lock_s)arg1 ;
@end

