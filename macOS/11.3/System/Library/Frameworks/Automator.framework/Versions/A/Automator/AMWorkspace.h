/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:43 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Automator.framework/Versions/A/Automator
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AMRunnerControllerDelegate.h>

@class NSError, AMRemoteRunnerController, NSRunLoop, NSString;

@interface AMWorkspace : NSObject <AMRunnerControllerDelegate> {

	id _reserved;
	id _reserved2;
	id _reserved3;
	NSError* _error;
	char _didStart;
	char _finishedRunning;

}

@property (retain) AMRemoteRunnerController * runnerController;              //@synthesize reserved=_reserved - In the implementation block
@property (retain) id output;                                                //@synthesize reserved2=_reserved2 - In the implementation block
@property (nonatomic,retain) NSError * error;                                //@synthesize error=_error - In the implementation block
@property (assign) char didStart;                                            //@synthesize didStart=_didStart - In the implementation block
@property (assign) char finishedRunning;                                     //@synthesize finishedRunning=_finishedRunning - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> dispatchQueue;               //@synthesize reserved3=_reserved3 - In the implementation block
@property (nonatomic,retain) NSRunLoop * runLoop; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedWorkspace;
-(id)init;
-(NSError *)error;
-(NSObject*<OS_dispatch_queue>)dispatchQueue;
-(void)setError:(NSError *)arg1 ;
-(NSRunLoop *)runLoop;
-(void)setDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)output;
-(void)setOutput:(id)arg1 ;
-(void)setRunLoop:(NSRunLoop *)arg1 ;
-(char)didStart;
-(void)setDidStart:(char)arg1 ;
-(id)runWorkflowAtPath:(id)arg1 withInput:(id)arg2 error:(id*)arg3 ;
-(AMRemoteRunnerController *)runnerController;
-(void)setRunnerController:(AMRemoteRunnerController *)arg1 ;
-(void)runnerControllerDidStop:(id)arg1 ;
-(void)runnerControllerWillRun:(id)arg1 ;
-(void)runnerControllerDidRun:(id)arg1 ;
-(void)runnerController:(id)arg1 didError:(id)arg2 ;
-(void)setFinishedRunning:(char)arg1 ;
-(void)_finishRunningOnBackgroundThreadWithOutput:(id)arg1 error:(id)arg2 ;
-(void)_performOnExcecutionRunLoop:(/*^block*/id)arg1 ;
-(void)_runOnDispatchQueueWithInput:(id)arg1 ;
-(void)_runOnBackgroundThreadWithWorkflow:(id)arg1 input:(id)arg2 ;
-(void)_runWorkflowOnMainThreadWithURL:(id)arg1 input:(id)arg2 ;
-(char)finishedRunning;
@end

