/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:30 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SyncServices.framework/Versions/A/SyncServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SyncServices/SyncServices-Structs.h>
#import <SyncServices/ISDDatabase.h>

@class NSString, ISDQuickDirtyCoder, NSMutableData;

@interface ISDSqliteChangeStoreDatabase : ISDDatabase {

	NSString* _clientId;
	ISDQuickDirtyCoder* _coder;
	NSMutableData* _coderWriteData;
	int _cachedIdReferencesCount;
	sqlite3_stmtRef _insertChangeStatement;
	sqlite3_stmtRef _updateChangeStatement;
	sqlite3_stmtRef _insertReferencesToChangesStatement;
	sqlite3_stmtRef _removeReferencesToChangesStatement;
	sqlite3_stmtRef _getChangesForEntityNames;
	sqlite3_stmtRef _getChangesForAllEntities;
	sqlite3_stmtRef _getProcessedChangesForEntityNames;
	sqlite3_stmtRef _getProcessedChanges;
	sqlite3_stmtRef _getChangesWithReferencesToRecordId;
	sqlite3_stmtRef _getEntityNamesOfAddedRecords;
	sqlite3_stmtRef _getEarliestGenerationOfRecordsForEntityName;
	sqlite3_stmtRef _getLatestGenerationOfRecordsForEntityName;
	sqlite3_stmtRef _getUnprocessedDeletedRecordIds;
	sqlite3_stmtRef _getUnprocessedDeletedRecordIdsWithEntityNames;
	sqlite3_stmtRef _markChangesAsEnumerated;
	sqlite3_stmtRef _deleteChangesWithRowIds;
	sqlite3_stmtRef _deleteReferencedIdsForChangesWithRowIds;
	sqlite3_stmtRef _getRowIdsForEnumeratedChangesLessThanGeneration;
	sqlite3_stmtRef _getRowIdsForChangesWithEntityNames;
	sqlite3_stmtRef _getRowIdsForChanges;
	sqlite3_stmtRef _removeAllChangesForEntityNames;
	sqlite3_stmtRef _updateReferencedId;
	sqlite3_stmtRef _updateReferencedIdAndChangeId;
	sqlite3_stmtRef _numberOfChanges;
	sqlite3_stmtRef _numberOfDeletes;
	sqlite3_stmtRef _numberOfChangesForEntities;

}
+(char)createDatabaseAtPath:(id)arg1 ;
-(void)finalize;
-(void)dealloc;
-(id)clientId;
-(void)closeDatabase;
-(void)finalizeStatements;
-(void)dropIndexes;
-(void)recreateIndexes;
-(unsigned long long)_numberOfDeletes;
-(id)_newSetOfDeletedRecordIds;
-(id)_createDataWithPropertiesEncodedForSqlite:(id)arg1 ;
-(void)_setupDeleteStatements;
-(void)_updateChange:(id)arg1 atRowId:(long long)arg2 ;
-(unsigned long long)_numberOfChanges:(char)arg1 ;
-(id)initDatabaseAtPath:(id)arg1 forClientWithIdentifier:(id)arg2 delegate:(id)arg3 ;
-(id)_entityNamesOfAddedRecords:(char)arg1 ;
-(unsigned)_earliestFromGenerationOfRecordsForEntityName:(id)arg1 processed:(char)arg2 changeType:(int)arg3 ;
-(unsigned)_latestFromGenerationOfRecordsForEntityName:(id)arg1 processed:(char)arg2 changeType:(int)arg3 ;
-(id)_newPropertiesFromDataInColumn:(int)arg1 statement:(sqlite3_stmtRef)arg2 forRecordWithIdentifier:(id)arg3 identityHash:(id*)arg4 ;
-(id)_newSetOfDeletedRecordIdsForEntityNames:(id)arg1 ;
-(char)_enumerateChangesForEntityNames:(id)arg1 changeType:(int)arg2 processed:(char)arg3 changeStore:(id)arg4 asArgumentToFunction:(/*function pointer*/void*)arg5 context:(void*)arg6 ;
-(void)_enumerateProcessedChangesForEntityNames:(id)arg1 asArgumentToFunction:(/*function pointer*/void*)arg2 context:(void*)arg3 ;
-(void)_enumerateChangesWithReferencesToId:(id)arg1 function:(/*function pointer*/void*)arg2 context:(void*)arg3 ;
-(void)_flushIdReferences;
-(void)_insertChange:(id)arg1 ;
-(void)_markChangesAsEnumerated:(id)arg1 ;
-(unsigned long long)_purgeEnumeratedChangesLessThanToGeneration:(unsigned)arg1 ;
-(void)_deleteEnumeratedChanges:(id)arg1 ;
-(void)_removeAllChangesForEntityNames:(id)arg1 processed:(char)arg2 ;
-(void)_updateChanges:(id)arg1 andReferences:(id)arg2 withNewId:(id)arg3 ;
-(unsigned long long)_numberOfPendingChangesForEntities:(id)arg1 ;
-(int)_cachedIdReferencesCount;
-(char)_shouldFlushIdReferences;
@end

