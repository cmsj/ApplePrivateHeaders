/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:30 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SyncServices.framework/Versions/A/SyncServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, NSObject;

@interface ISyncFileLocker : NSObject {

	NSString* _path;
	NSString* _hostname;
	NSString* _hostuuid;
	NSObject* _delegate;
	double _secondsToTimeout;
	int _lockResult;

}
+(void)cleanupStaleLockDirectories;
+(id)stringFromISyncLockPotentialAction:(int)arg1 ;
+(id)stringFromISyncLockResult:(int)arg1 ;
+(void)_cleanupStaleLockDirectoriesAtPath:(id)arg1 ;
-(void)dealloc;
-(int)lock;
-(void)unlock;
-(id)UUIDString;
-(id)path;
-(unsigned long long)refCount;
-(void)refresh;
-(id)lockFilePath;
-(id)initWithPath:(id)arg1 delegate:(id)arg2 timeout:(double)arg3 ;
-(void)removeLockDirectory;
-(void)cleanupStaleLockDirectories;
-(id)computeHostname;
-(int)lockFileResultByAnalyzingLockFile:(id)arg1 reasonIfStealable:(out id*)arg2 ;
-(char)incrementCountAndReturnError:(id*)arg1 ;
-(id)lockDirectoryPath;
-(char)createLockDirectory:(id*)arg1 ;
-(char)removeLockDirectoryAndReturnError:(id*)arg1 ;
-(id)lockFileContentsDictionary;
-(id)lockInfoForDelegate:(id)arg1 ;
-(int)actionOnVerifyLockInfoFileAgainstCurrentProcess:(id)arg1 reason:(out id*)arg2 ;
-(char)decrementCountAndReturnError:(id*)arg1 ;
-(char)updateLockFileAndReturnError:(id*)arg1 ;
-(char)changeRetainCountIncrementing:(char)arg1 error:(id*)arg2 ;
-(int)actionTestingDirectoryExistance:(id)arg1 ;
-(int)actionOnVerifyIfLockInfoFileProcessIsRunning:(id)arg1 reason:(out id*)arg2 ;
-(int)actionOnVerifyFileAgeAndReturnReason:(out id*)arg1 ;
-(id)processProfile;
-(char)writeLockInfoFile:(id)arg1 error:(id*)arg2 ;
-(id)staleLockDirectoryPath;
-(char)matchesHostUUIDFromLockDictionary:(id)arg1 ;
-(char)matchesHostNameFromLockDictionary:(id)arg1 ;
-(char)_checkPIDisRunning:(long long)arg1 ;
-(char)isOnLocalHost;
-(char)isLockStaleOnNFS;
-(int)actionForApparentlyAbandonedLock:(id)arg1 onAttempt:(int)arg2 ;
@end

