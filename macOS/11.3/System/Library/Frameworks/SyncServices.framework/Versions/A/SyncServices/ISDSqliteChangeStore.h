/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:30 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SyncServices.framework/Versions/A/SyncServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, NSMutableIndexSet, NSMapTable, ISDSqliteChangeStoreDatabase;

@interface ISDSqliteChangeStore : NSObject {

	unsigned _greatestEnumeratedToGeneration;
	long long _numberEnumerated;
	unsigned long long _maxToEnumerate;
	unsigned long long _fromRow;
	long long _lastRowEnumerated;
	int _numGenerationsToRetain;
	NSString* _path;
	NSMutableIndexSet* _enumeratedChanges;
	unsigned long long _flushCount;
	NSMapTable* _changesMap;
	NSMapTable* _referencesRowsMap;
	ISDSqliteChangeStoreDatabase* _db;

}
+(id)defaultFileName;
-(void)dealloc;
-(void)compact;
-(void)resetState;
-(void)closeDatabase;
-(void)enableSqliteTracing:(id)arg1 ;
-(void)disableSqliteTracing;
-(void)setSqliteCacheSize:(long long)arg1 ;
-(void)disableFlush;
-(void)enableFlush;
-(void)setDirtyCoderDelegate:(id)arg1 ;
-(void)replaceRecordId:(id)arg1 withRecordId:(id)arg2 ;
-(void)clearSpuriousUnresolvedReferencesToPhantomsInIdMapper:(id)arg1 ;
-(char)changeExistsWhichReferencesRecordWithId:(id)arg1 referringChanges:(id)arg2 ;
-(void)deleteChanges:(id)arg1 ;
-(void)removeAllChangesForEntityNames:(id)arg1 ;
-(void)dropIndexes;
-(void)appendChange:(id)arg1 ;
-(void)flushTempChanges;
-(void)recreateIndexes;
-(unsigned long long)numberOfPendingChangesForEntities:(id)arg1 ;
-(id)initWithDataDirectory:(id)arg1 forClientWithIdentifier:(id)arg2 delegate:(id)arg3 ;
-(void)replaceRelationshipTupleId:(id)arg1 withRelationshipTupleId:(id)arg2 ;
-(id)dirtyCoderDelegate;
-(void)enumerateAddsForEntityNames:(id)arg1 asArgumentToFunction:(/*function pointer*/void*)arg2 context:(void*)arg3 ;
-(char)enumerateAddsForEntityNames:(id)arg1 state:(long long*)arg2 maxToEnumerate:(long long)arg3 asArgumentToFunction:(/*function pointer*/void*)arg4 context:(void*)arg5 ;
-(void)enumerateChangesForEntityNames:(id)arg1 asArgumentToFunction:(/*function pointer*/void*)arg2 context:(void*)arg3 ;
-(unsigned long long)removeEnumeratedChanges;
-(id)entityNamesOfAddedRecords;
-(unsigned)earliestFromGenerationOfAddedRecordsForEntityName:(id)arg1 ;
-(char)enumerateChangesForEntityNames:(id)arg1 changeType:(int*)arg2 state:(long long*)arg3 maxToEnumerate:(long long)arg4 asArgumentToFunction:(/*function pointer*/void*)arg5 context:(void*)arg6 ;
-(void)updateChangePropertiesForChange:(id)arg1 ;
-(id)newSetOfDeletedRecordIdsForEntityNames:(id)arg1 ;
-(void)recycleDatabaseConnection;
-(id)initWithPath:(id)arg1 forClientWithIdentifier:(id)arg2 delegate:(id)arg3 ;
-(unsigned long long)enumerateChangesFromRow;
-(void)_insertChange:(id)arg1 ;
-(char)_enumerateChangesOfType:(int)arg1 forEntityNames:(id)arg2 state:(long long*)arg3 maxToEnumerate:(long long)arg4 asArgumentToFunction:(/*function pointer*/void*)arg5 context:(void*)arg6 ;
-(int)numGenerationsToRetain;
-(unsigned long long)purgeProcessedChangesLessThanToGeneration:(unsigned)arg1 ;
-(unsigned long long)removeEnumeratedChanges:(int)arg1 ;
-(id)initWithDataDirectory:(id)arg1 forClientWithIdentifier:(id)arg2 ;
-(char)changeExistsWhichReferencesRecordWithId:(id)arg1 ;
-(unsigned long long)numberOfUnprocessedChanges;
-(unsigned long long)numberOfProcessedChanges;
-(unsigned)greatestEnumeratedToGeneration;
-(void)setGreatestEnumeratedToGeneration:(unsigned)arg1 ;
-(char)rowWasEnumerated;
-(unsigned long long)enumeratedChangesCount;
-(void)enumerateProcessedChangesForEntityNames:(id)arg1 asArgumentToFunction:(/*function pointer*/void*)arg2 context:(void*)arg3 ;
-(void)removeAllProcessedChangesForEntityNames:(id)arg1 ;
-(unsigned)earliestFromGenerationOfProcessedRecordsForEntityName:(id)arg1 ;
-(unsigned)latestFromGenerationOfProcessedRecordsForEntityName:(id)arg1 ;
-(void)addIndexToIndexSetOfEnumeratedChanges:(long long)arg1 ;
-(id)indexSetOfEnumeratedChanges;
-(void)setNumGenerationsToRetain:(int)arg1 ;
@end

