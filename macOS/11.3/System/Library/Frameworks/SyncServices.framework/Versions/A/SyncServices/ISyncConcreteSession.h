/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:30 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SyncServices.framework/Versions/A/SyncServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SyncServices/ISyncSession.h>
#import <libobjc.A.dylib/ISyncSessionCallback.h>

@class ISyncClient, NSString, NSArray, NSDictionary, ISDClientState, ISDStructuredDelta, ISDRecordStore, ISyncRecordSnapshot, NSRunLoop, NSMutableSet, NSCountedSet, NSMutableDictionary, NSDate, NSSet, NSMutableArray, ISDRecord;

@interface ISyncConcreteSession : ISyncSession <ISyncSessionCallback> {

	ISyncClient* _client;
	NSString* _clientId;
	NSString* _planId;
	NSArray* _entityNames;
	NSArray* _entities;
	NSArray* _syncStates;
	int _anchorPhase;
	NSArray* _anchorRefreshSyncEntities;
	NSArray* _anchorSlowSyncEntities;
	NSDictionary* _pendingNextAnchors;
	NSDictionary* _truthPullers;
	ISDClientState* _clientState;
	ISDStructuredDelta* _structuredDelta;
	ISDRecordStore* _truth;
	ISyncRecordSnapshot* _snapshot;
	NSString* _cancelReason;
	NSDictionary* _cancelUserInfo;
	NSRunLoop* _waitingRunLoop;
	id _callbackTarget;
	SEL _callbackSelector;
	id _callbackSessionArgument;
	char _shouldInvokeCallback;
	char _pendingCancel;
	char _running;
	char _applyPushedChanges;
	char _vacuumClientStateAfterSync;
	id _pushedChangesObserver;
	NSMutableSet* _modifiedRecordIdentifiers;
	NSMutableSet* _addedRecordIdentifiers;
	NSMutableSet* _deletedRecordIdentifiers;
	NSMutableSet* _deletedGlobalIds;
	NSCountedSet* _accumulatedPushedAdds;
	NSCountedSet* _accumulatedPushedModifies;
	NSCountedSet* _accumulatedPushedDeletes;
	NSCountedSet* _accumulatedPulledAdds;
	NSCountedSet* _accumulatedPulledModifies;
	NSCountedSet* _accumulatedPulledDeletes;
	int _sessionResponse;
	unsigned _currentGeneration;
	int _phase;
	int _newPhase;
	NSMutableSet* _lostRecordIds;
	NSMutableSet* _lostRecordIdsForReplacement;
	NSMutableDictionary* _relationshipInfoMap;
	NSMutableDictionary* _knownRecordEntityNumbers;
	NSDate* _lastServerPingDate;
	NSMutableSet* _recordIdsToDeleteAfterPushing;
	NSMutableDictionary* _pushedChangesCache;
	NSMutableDictionary* _pushedRecordsCache;
	NSMutableSet* _pushedDeletesCache;
	NSMutableSet* _pushedAddedRecordIds;
	unsigned long long _pushedCacheSize;
	int _rebuildIndicesAfterPushing;
	char _modifiesDuringPushing;
	NSSet* _refreshSyncingEntityNames;
	char _changeStoreHasChanges;
	NSSet* _slowSyncingEntityNames;
	NSMutableDictionary* _unacceptedClientRecords;
	NSMutableDictionary* _acceptedClientRecords;
	NSMutableDictionary* _rejectedClientRecords;
	NSMutableDictionary* _acceptedUnknowns;
	NSMutableSet* _rejectedUnknowns;
	NSMutableSet* _unchangedRecordIds;
	unsigned long long _addCount;
	unsigned long long _modifyCount;
	unsigned long long _deleteCount;
	unsigned long long _pushCount;
	NSMutableDictionary* _dataReferencesToSave;
	NSMutableArray* _recordIdsWithDataReferencesToDelete;
	ISDRecord* _recordBeingPushed;
	char _ignoreDecodedDataWrapper;
	NSMutableSet* _acceptedFormattedRecordsWithDataReferences;
	NSArray* _clientRecordCache;
	NSMutableDictionary* _recordIdsNotToPropagate;
	NSDate* enterSessionCreateTime;
	NSDate* enterPushingTime;
	NSDate* enterMinglingTime;
	NSDate* enterPullingTime;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
-(void)finalize;
-(void)dealloc;
-(id)_client;
-(char)isCancelled;
-(char)isRunning;
-(void)ping;
-(id)entityNames;
-(void)finishSyncing;
-(char)prepareToPullChangesForEntityNames:(id)arg1 beforeDate:(id)arg2 ;
-(void)cancelSyncing;
-(void)_setRunning:(char)arg1 ;
-(void)_releaseSnapshot;
-(void)setSyncStates:(id)arg1 ;
-(oneway void)sessionWasCancelledForClientWithIdentifier:(bycopy id)arg1 reason:(bycopy id)arg2 userInfo:(bycopy id)arg3 ;
-(oneway void)sessionWasCancelledForClientWithIdentifier:(bycopy id)arg1 reason:(bycopy id)arg2 ;
-(void)cancelSyncing:(id)arg1 ;
-(oneway void)clientWithId:(bycopy id)arg1 canBeginSyncingPlanWithId:(bycopy id)arg2 currentGeneration:(unsigned)arg3 syncModes:(bycopy id)arg4 entities:(bycopy id)arg5 truthPullers:(bycopy id)arg6 ;
-(oneway void)clientWithIdCanStartPullingChanges:(bycopy id)arg1 ;
-(void)_setSyncPlanIdentifier:(id)arg1 ;
-(id)_syncPlanIdentifier;
-(void)cancelSyncing:(id)arg1 notifyServer:(char)arg2 pendingCancel:(char)arg3 ;
-(id)knownRecordTypes;
-(void)setApplyPushedChanges:(char)arg1 ;
-(void)_setIgnoreDataWrapperDecode:(char)arg1 ;
-(void)_setClientRecordCache:(id)arg1 ;
-(void)_doPeriodicPingToServer;
-(id)_changeForChangeEnumerator:(id)arg1 betweenTruthRecord:(id)arg2 clientRecord:(id)arg3 ;
-(void)_transitionStateMachine:(int)arg1 ;
-(void)_doFinalCleanupIfNeeded:(char)arg1 ;
-(id)_entityDescriptionWithName:(id)arg1 ;
-(void)_replaceRecordIdentifier:(id)arg1 withRecordIdentifier:(id)arg2 inSet:(id)arg3 ;
-(id)_entityDescriptionForChange:(id)arg1 ;
-(void)_updateGlobalRecordIdentifiers:(id)arg1 inRecordDictionaries:(id)arg2 ;
-(void)_updateGlobalRecordIdentifiers:(id)arg1 inChanges:(id)arg2 ;
-(void)_updateGlobalRecordIdentifiers:(id)arg1 inRecords:(id)arg2 ;
-(void)_updateRecordStoresWithNewGlobalIdentifiers:(id)arg1 ;
-(id)unresolvedReferencesAreForUnknownTypes:(char*)arg1 ;
-(void)notifyUserOfUnresolvedReferences:(id)arg1 onlyUnknownTypeReferences:(char)arg2 ;
-(void)_updateRecordStoresWithNewLocalIdentifiers:(id)arg1 ;
-(void)_updateRecordIdMapperWithNewLocalIdentifiers:(id)arg1 ;
-(void)_createClientState;
-(id)_applicableFilters;
-(id)_newEntitiesMapping;
-(void)_negotiateSyncMode:(int)arg1 forEntityNames:(id)arg2 ;
-(void)_setAnchorSlowSyncEntities:(id)arg1 ;
-(void)_clientDidResetEntityNames:(id)arg1 ;
-(void)_setAnchorRefreshSyncEntities:(id)arg1 ;
-(void)_forceCompleteRefreshSyncs;
-(void)_applyAnchorSyncModes;
-(id)_syncStateForEntityName:(id)arg1 ;
-(char)shouldPullChangesForEntityName:(id)arg1 ;
-(char)shouldPushChangesForEntityName:(id)arg1 ;
-(char)_clientIsKnownToSyncAllSupportedEntities:(id)arg1 ;
-(char)_supportedEntityNamesIsEqualToEntityNames:(id)arg1 forClient:(id)arg2 ;
-(void)_prepareRecordStoreForSlowSyncingEntityNames:(id)arg1 ;
-(void)_prepareRecordStoreForRefreshSyncingEntityNames:(id)arg1 ;
-(void)_prepareRecordStoreForTruthPushingEntityNames:(id)arg1 ;
-(void)_prepareRecordStoreForTruthPullingEntityNames:(id)arg1 ;
-(void)_prepareRecordStoreForSyncing;
-(void)_noteDataWrapper:(id)arg1 forRecordWithIdentifier:(id)arg2 withPropertyName:(id)arg3 onlyForUpdate:(char)arg4 ;
-(void)_noteDataWrapper:(id)arg1 forRecordWithIdentifier:(id)arg2 withPropertyName:(id)arg3 ;
-(char)_recordWithDataReferenceWasFormatted:(id)arg1 ;
-(id)_findRecordInCacheWithId:(id)arg1 ;
-(void)_raiseAndResetEntities:(id)arg1 reason:(id)arg2 ;
-(void)_updateDataReferencesForRecordsWithIdentifiers:(id)arg1 ;
-(id)_newDictionaryWithRecordsPushedByClient;
-(void)_appendChangeToChangeStore:(id)arg1 ;
-(void)_processDeletedRecords:(id)arg1 ;
-(void)_processModifiedRecords;
-(void)_processRemainingChangesAsAdds;
-(void)_processRemainingRecordsAsAdds;
-(void)_processPushedStuff;
-(void)_processPushedStuffIfNowIsAGoodTime;
-(void)notePushingOfUnknownPropertyNamed:(id)arg1 forEntityNamed:(id)arg2 inChange:(id)arg3 ;
-(void)_notePushingOfKnownPropertyNotRegisteredToSyncByClient:(id)arg1 forPropertyName:(id)arg2 forEntityName:(id)arg3 ;
-(void)_validateSubType:(id)arg1 forProperty:(id)arg2 onEntityName:(id)arg3 ;
-(void)_resolveRecordIdTypes:(id)arg1 ;
-(id)getInfoForRelationship:(id)arg1 ofEntity:(id)arg2 ;
-(void)_processLostRecords;
-(void)_deleteUnreferencedRecords;
-(void)_validateRelationshipTargets;
-(void)_updateDataReferencesForRecordsWithIdentifiers:(id)arg1 resetOnError:(char)arg2 ;
-(void)_logPushSummary;
-(void)_rollbackPushingPhase;
-(char)_convertUnresolvedReferencesToGlobalIds;
-(void)_completePushingPhase;
-(void)_logUnresolvedReferencesInconsistency;
-(void)setPendingNextAnchors:(id)arg1 ;
-(void)_releaseClientState;
-(void)notePushingOfUnknownEntityNamed:(id)arg1 forRecordWithIdentifier:(id)arg2 ;
-(void)_validatePushedChange:(id)arg1 againstEntity:(id)arg2 ;
-(void)_pushDeleteForRecordWithGlobalId:(id)arg1 ;
-(void)_pushChange:(id)arg1 ;
-(void)_validatePushedRecord:(id)arg1 againstEntity:(id)arg2 ;
-(void)_pushChangesFromRecord:(id)arg1 withGlobalId:(id)arg2 ;
-(void)pushChangesFromRecord:(id)arg1 withIdentifier:(id)arg2 ;
-(void)_setTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)_validateCanPullChangesForEntityNames:(id)arg1 ;
-(void)_prepareToPullChangesForEntityNames:(id)arg1 inBackground:(char)arg2 target:(id)arg3 selector:(SEL)arg4 ;
-(void)_waitForTransitionFromPhase:(int)arg1 untilDate:(id)arg2 ;
-(void)_filterRecords;
-(void)_commitAcceptedChangesAndStartAnotherTransaction:(char)arg1 ;
-(void)_finishTransactionAndStartAnother:(char)arg1 ;
-(void)_vacuumClientState;
-(void)_logPullSummary;
-(char)_hasAlreadyReturnedOrAcceptedChangeForRecordWithIdentifier:(id)arg1 ;
-(void)_updateClientRecord:(id)arg1 withChangesFromTruth:(id)arg2 formattedRecordDictionary:(id)arg3 saveUnformattedValues:(char)arg4 ;
-(void)clientAcceptedChangesForRecordWithIdentifier:(id)arg1 formattedRecord:(id)arg2 newRecordIdentifier:(id)arg3 keepAwayFromServer:(char)arg4 ;
-(void)_setKeepAwayFromServerForRecordWithId:(id)arg1 ofType:(id)arg2 ;
-(void)clientChangedRecordIdentifiers:(id)arg1 ;
-(void)_noteRecordWithDataReferenceWasFormatted:(id)arg1 ;
-(void)_processAcceptedClientRecord:(id)arg1 acceptedRecordIds:(id)arg2 deletedRecordIds:(id)arg3 filteredRecordIds:(id)arg4 ;
-(void)_processRejectedClientRecord:(id)arg1 rejectedRecordIds:(id)arg2 acceptedRecordIds:(id)arg3 ;
-(void)_commitUnknownAccepts:(id)arg1 deletedRecordIds:(id)arg2 filteredRecordIds:(id)arg3 ;
-(void)_processAllAcceptedClientRecords:(id)arg1 deletedRecordIds:(id)arg2 filteredRecordIds:(id)arg3 ;
-(void)_commitUnknownRejects:(id)arg1 acceptedRecordIds:(id)arg2 ;
-(void)_clientCommittedAcceptedChanges;
-(void)_notifyTheGuyWaitingToTransitionPhases;
-(void)_setPendingCancel;
-(void)_leavePending;
-(void)_leaveNegotiating;
-(void)_leavePushing;
-(void)_leaveMingling;
-(void)_leaveReadyToPull;
-(void)_leavePulling;
-(void)_enterNegotiating;
-(void)_enterPushing;
-(void)_enterMingling;
-(void)_enterReadyToPull;
-(void)_enterPulling;
-(void)_enterFinished;
-(void)_enterCancelled;
-(void)attentionClassDumpUser:(id)arg1 reverseEngineeringThisClassAndCallingPrivateMethodsIsFunButMayLeadToCompleteAndIrrevocableDataLoss:(id)arg2 atTheVeryLeastItWillCauseUnexpectedBehaviourForOtherApplications:(id)arg3 youHaveBeenWarnedAgainstDoingSo:(id)arg4 ;
-(id)initWithClient:(id)arg1 entityNames:(id)arg2 ;
-(void)_cleanupClientAfterFailedAttemptToBeginSession;
-(long long)_syncPhase;
-(id)_truthPullingClients;
-(int)anchorPhase;
-(void)setAnchorPhase:(int)arg1 ;
-(id)_recordIdMapper;
-(void)_updateGlobalRecordIdentifiers:(id)arg1 inKnownTargetsMap:(id)arg2 ;
-(id)clientInfoForRecordWithIdentifier:(id)arg1 ;
-(void)setClientInfo:(id)arg1 forRecordWithIdentifier:(id)arg2 ;
-(id)snapshotOfRecordsInTruth;
-(void)clientLostRecordWithIdentifier:(id)arg1 shouldReplaceOnNextSync:(char)arg2 ;
-(id)_enterPullingDirectly;
-(void)clientDidResetEntityNames:(id)arg1 ;
-(void)clientWantsToPushAllRecordsForEntityNames:(id)arg1 ;
-(char)shouldPushAllRecordsForEntityName:(id)arg1 ;
-(char)shouldReplaceAllRecordsOnClientForEntityName:(id)arg1 ;
-(id)isd_willEncodeDataWrapper:(id)arg1 forRecordWithIdentifier:(id)arg2 withPropertyName:(id)arg3 ;
-(void)isd_didDecodeDataWrapper:(id)arg1 forRecordWithIdentifier:(id)arg2 withPropertyName:(id)arg3 ;
-(void)setEntityName:(id)arg1 forRecordId:(id)arg2 ;
-(void)setRelationshipPropChanges:(id)arg1 forEntity:(id)arg2 relationshipName:(id)arg3 forRecordId:(id)arg4 ;
-(void)setPushCacheSize:(unsigned long long)arg1 ;
-(void)_resetClientAfterException:(id)arg1 ;
-(void)pushChange:(id)arg1 ;
-(void)pushChangesFromRecord:(id)arg1 withIdentifier:(id)arg2 withDefaultedPropertyValues:(id)arg3 ;
-(void)deleteRecordWithIdentifier:(id)arg1 ;
-(void)clientFinishedPushingChangesWithNextAnchors:(id)arg1 ;
-(void)prepareToPullChangesInBackgroundForEntityNames:(id)arg1 target:(id)arg2 selector:(SEL)arg3 ;
-(id)changeEnumeratorForEntityNames:(id)arg1 ;
-(void)clientAcceptedChangesForRecordWithIdentifier:(id)arg1 formattedRecord:(id)arg2 newRecordIdentifier:(id)arg3 ;
-(void)clientRefusedChangesForRecordWithIdentifier:(id)arg1 ;
-(void)_snapshot:(id)arg1 willReturnRecordToClient:(id)arg2 ;
-(void)clientCommittedAcceptedChanges;
-(void)clientCommittedAcceptedChangesWithNextAnchors:(id)arg1 ;
-(int)_stateMachinePhase;
-(void)setPushedChangesObserver:(id)arg1 ;
@end

