/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:06 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <SecurityFoundation/SecurityFoundation-Structs.h>
@interface SFCertificateAuthority : NSObject {

	id _reserved_SFCertificateAuthority;

}
+(void)_setPrintNameWithName:(id)arg1 item:(SecKeychainItemRef)arg2 ;
+(id)_invitationFromContentsOfFile:(id)arg1 ;
+(int)_createUserKeyPair:(_SecKey*)arg1 privKey:(_SecKey*)arg2 keychain:(SecKeychainRef)arg3 algorithm:(unsigned)arg4 size:(int)arg5 userName:(id)arg6 accessRef:(SecAccessRef)arg7 inputParms:(id)arg8 ;
+(id)certificateAuthorityWithName:(id)arg1 ;
+(id)certificateAuthorityWithFullPath:(id)arg1 ;
-(void)_setAuthenticator:(id)arg1 ;
-(id)_crlDistributionPoints;
-(SecCertificateRef)_copyCertificateFromPublicKeyHash;
-(void)_setCACertificate:(SecCertificateRef)arg1 ;
-(void)setFullPath:(id)arg1 ;
-(void)_setupCRLDistPoints:(id)arg1 inCEGeneralNames:(_CE_GeneralNames*)arg2 ;
-(void)_setupCertExtensions:(_CE_DataAndType*)arg1 numExtens:(unsigned*)arg2 ;
-(void)_setResultingCertificateData:(cssm_data)arg1 ;
-(int)_createCertExportFileForCAWithFormat:(unsigned)arg1 pathToExportFile:(id*)arg2 exportedData:(id*)arg3 ;
-(void)_presetToCreateCA;
-(int)_createCert:(_SecKey*)arg1 privKey:(_SecKey*)arg2 keychain:(SecKeychainRef)arg3 ;
-(_SecKey*)_copyPrivateKeyFromPublicKeyHash:(id)arg1 inKeychainOrArray:(void*)arg2 ;
-(void)dealloc;
-(id)init;
-(id)name;
-(id)initWithName:(id)arg1 ;
-(SecCertificateRef)certificate;
-(void)setEmailAddress:(id)arg1 ;
-(id)emailAddress;
-(id)invitation;
-(id)_publicKeyHash;
-(id)fullPath;
-(void)_setInvitation:(id)arg1 ;
-(void)setWebURL:(id)arg1 ;
-(id)_authenticator;
-(void)setCertificateInformation:(id)arg1 ;
-(void)setKeyUsageExtension:(id)arg1 ;
-(void)setExtendedKeyUsageExtension:(id)arg1 ;
-(void)setIdentityNameInfo:(id)arg1 ;
-(void)setDestinationKeychain:(SecKeychainRef)arg1 ;
-(id)createSelfSignedCertificateWithPublicKey:(_SecKey*)arg1 privateKey:(_SecKey*)arg2 inputParms:(id)arg3 error:(id*)arg4 ;
-(void)setAdditionalCertificateInformation:(id)arg1 ;
-(SecCertificateRef)_resultingCertificate;
-(int)_createCA;
-(void)_setCSR:(id)arg1 ;
-(void)_setChosenIssuer:(SecIdentityRef)arg1 ;
-(id)initWithFullPath:(id)arg1 ;
-(void)setSubjectAltNameExtension:(id)arg1 ;
-(void)setBasicConstraintsExtension:(id)arg1 ;
-(void)_setResultingCertificate:(SecCertificateRef)arg1 ;
-(id)_initWithNameBackCompat:(id)arg1 ;
-(void)setKeyPairAttributes:(id)arg1 ;
-(char)_createWithPublicKey:(_SecKey*)arg1 privateKey:(_SecKey*)arg2 keychain:(SecKeychainRef)arg3 authenticator:(id)arg4 signer:(SecIdentityRef)arg5 ca:(id)arg6 inputParms:(id)arg7 error:(id*)arg8 ;
-(char)createWithPublicKey:(_SecKey*)arg1 privateKey:(_SecKey*)arg2 keychain:(SecKeychainRef)arg3 authenticator:(id)arg4 signer:(SecIdentityRef)arg5 inputParms:(id)arg6 error:(id*)arg7 ;
-(void)_chooseIssuer;
-(int)_selectIssuerBasedOnPublicKeyHash;
-(void)_setIssuerHashOfPublicKey:(id)arg1 ;
-(long long)_tpHand;
-(id)signedCertificateFromCSR:(id)arg1 inputParms:(id)arg2 error:(id*)arg3 ;
-(void)_setSerialNumberToIssuerMappedToCAConfigFile;
-(id)_lastUsedSerialNumber;
-(void)_setCRLDistributionPoints:(id)arg1 ;
@end

