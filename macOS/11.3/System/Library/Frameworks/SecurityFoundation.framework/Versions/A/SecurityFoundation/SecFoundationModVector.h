/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:06 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <SecurityFoundation/SecurityFoundation-Structs.h>
@class NSXPCConnection, NSString;

@interface SecFoundationModVector : NSObject {

	NSXPCConnection* _proxyConnection;
	AuthorizationOpaqueRefRef _authRef;
	SecKeychainRef _kcRef;
	SecKeychainRef _tmpRef;
	long long _err;
	long long _lock;
	unsigned _uid;
	NSString* _path;
	NSString* _tmpPath;

}
+(id)sharedInstance;
+(char)isAccessError:(int)arg1 ;
+(id)pathForKeychain:(SecKeychainRef)arg1 ;
-(id)proxyWithSemaphore:(id)arg1 ;
-(id)privateKeyPersistentRef;
-(id)publicKeyPersistentRef;
-(void)_connectionDidDie:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(int)removeItem:(SecKeychainItemRef)arg1 ;
-(char)authorizationValid;
-(long long)obtainAuthorization:(id)arg1 ;
-(long long)releaseAuthorization;
-(int)addCertificate:(SecCertificateRef)arg1 toKeychain:(SecKeychainRef)arg2 ;
-(void)stopProxy;
-(void)startProxy;
-(void)doWithProxy:(/*^block*/id)arg1 onError:(/*^block*/id)arg2 ;
-(int)addCertificate:(SecCertificateRef)arg1 toKeychain:(SecKeychainRef)arg2 domain:(unsigned)arg3 settings:(CFArrayRef)arg4 ;
-(int)createKeyPair:(SecKeychainRef)arg1 algorithm:(unsigned)arg2 keySizeInBits:(unsigned)arg3 contextHandle:(unsigned long long)arg4 publicKeyUsage:(unsigned)arg5 publicKeyAttr:(unsigned)arg6 privateKeyUsage:(unsigned)arg7 privateKeyAttr:(unsigned)arg8 initialAccess:(id)arg9 publicKey:(_SecKey*)arg10 privateKey:(_SecKey*)arg11 commonName:(id)arg12 ;
-(void)setKeyPrintNamesWithCommonName:(id)arg1 forKey:(SecKeyRef)arg2 ;
@end

