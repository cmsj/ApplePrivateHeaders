/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:20 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CryptoTokenKit.framework/Versions/A/CryptoTokenKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CryptoTokenKit/CryptoTokenKit-Structs.h>
#import <CryptoTokenKit/TKTokenKeychainItem.h>

@class NSString, NSData;

@interface TKTokenKeychainKey : TKTokenKeychainItem {

	char _canDecrypt;
	char _canSign;
	char _canPerformKeyExchange;
	char _suitableForLogin;
	NSString* _keyType;
	NSData* _applicationTag;
	long long _keySizeInBits;
	NSData* _publicKeyData;
	NSData* _publicKeyHash;

}

@property (readonly) unsigned long long keyUsage; 
@property (copy) NSString * keyType;                                      //@synthesize keyType=_keyType - In the implementation block
@property (copy) NSData * applicationTag;                                 //@synthesize applicationTag=_applicationTag - In the implementation block
@property (assign) long long keySizeInBits;                               //@synthesize keySizeInBits=_keySizeInBits - In the implementation block
@property (copy) NSData * publicKeyData;                                  //@synthesize publicKeyData=_publicKeyData - In the implementation block
@property (copy) NSData * publicKeyHash;                                  //@synthesize publicKeyHash=_publicKeyHash - In the implementation block
@property (assign) char canDecrypt;                                       //@synthesize canDecrypt=_canDecrypt - In the implementation block
@property (assign) char canSign;                                          //@synthesize canSign=_canSign - In the implementation block
@property (assign) char canPerformKeyExchange;                            //@synthesize canPerformKeyExchange=_canPerformKeyExchange - In the implementation block
@property (getter=isSuitableForLogin) char suitableForLogin;              //@synthesize suitableForLogin=_suitableForLogin - In the implementation block
-(id)encodedObjectID;
-(id)initWithItemInfo:(id)arg1 ;
-(void)createConstraints:(unsigned char)arg1 ;
-(char)isSuitableForLogin;
-(char)satisfiesKeyUsage:(unsigned long long)arg1 ;
-(NSString *)keyType;
-(id)keychainAttributes;
-(unsigned long long)keyUsage;
-(NSData *)publicKeyData;
-(NSData *)publicKeyHash;
-(void)setPublicKeyHash:(NSData *)arg1 ;
-(long long)keySizeInBits;
-(void)setKeySizeInBits:(long long)arg1 ;
-(void)setApplicationTag:(NSData *)arg1 ;
-(NSData *)applicationTag;
-(void)setKeyType:(NSString *)arg1 ;
-(char)canSign;
-(void)setCanSign:(char)arg1 ;
-(char)canDecrypt;
-(char)canPerformKeyExchange;
-(id)initWithCertificate:(SecCertificateRef)arg1 objectID:(id)arg2 ;
-(void)setSuitableForLogin:(char)arg1 ;
-(void)setCanDecrypt:(char)arg1 ;
-(void)setCanPerformKeyExchange:(char)arg1 ;
-(void)setPublicKeyData:(NSData *)arg1 ;
@end

