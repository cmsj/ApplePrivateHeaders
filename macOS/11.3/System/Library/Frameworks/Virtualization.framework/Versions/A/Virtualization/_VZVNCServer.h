/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:45 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Virtualization.framework/Versions/A/Virtualization
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Virtualization/Virtualization-Structs.h>
#import <libobjc.A.dylib/_VZFramebufferObserver.h>

@protocol _VZVNCServerDelegate;
@class _VZFramebuffer, VZVirtualMachine, NSString;

@interface _VZVNCServer : NSObject <_VZFramebufferObserver> {

	unsigned short _port;
	_VZFramebuffer* _framebuffer;
	VZVirtualMachine* _virtualMachine;
	DispatchQueue _network_listener_queue;
	unique_ptr<Networking::NetworkListener, std::__1::default_delete<Networking::NetworkListener>>* _network_listener;
	unique_ptr<(anonymous namespace)::BackendDelegate, std::__1::default_delete<(anonymous namespace)::BackendDelegate>>* _vnc_backend_delegate;
	vector<std::__1::unique_ptr<Vnc::VncBackend, std::__1::default_delete<Vnc::VncBackend>>, std::__1::allocator<std::__1::unique_ptr<Vnc::VncBackend, std::__1::default_delete<Vnc::VncBackend>>>>* _vnc_backends;
	id<_VZVNCServerDelegate> _delegate;

}

@property (__weak) id<_VZVNCServerDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned short port; 
@property (retain) _VZFramebuffer * framebuffer; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<_VZVNCServerDelegate>)delegate;
-(void)setDelegate:(id<_VZVNCServerDelegate>)arg1 ;
-(unsigned short)port;
-(id)initWithPort:(unsigned short)arg1 ;
-(_VZFramebuffer *)framebuffer;
-(void)framebuffer:(id)arg1 didUpdateFrame:(shared_ptr<const VzCore::Hardware::FrameUpdate>*)arg2 ;
-(void)framebuffer:(id)arg1 didUpdateCursor:(shared_ptr<const VzCore::Hardware::CursorUpdate>*)arg2 ;
-(void)setFramebuffer:(_VZFramebuffer *)arg1 ;
@end

