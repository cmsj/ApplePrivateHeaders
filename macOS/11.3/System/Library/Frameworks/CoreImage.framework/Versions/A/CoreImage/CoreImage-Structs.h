/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:06 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, CIImage;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct BGHashMapContext* BGHashMapContextRef;

typedef struct {
	/*function pointer*/void* field1;
	= field2;
	unsigned long long field3;
	unsigned char field4[8];
	unsigned field5;
	unsigned field6;
	unsigned field7;
	unsigned field8;
} SCD_Struct_CI2;

typedef struct __IOSurface* IOSurfaceRef;

typedef struct __CVBuffer* CVBufferRef;

typedef struct {
	unsigned long long width;
	unsigned long long height;
	unsigned long long depth;
} SCD_Struct_CI5;

typedef struct {
	SCD_Struct_CI5 dispatchThreadgroups;
	SCD_Struct_CI5 threadsPerThreadgroup;
} SCD_Struct_CI6;

typedef struct {
	float lambda;
	unsigned N;
	unsigned short dims;
	float sigma_s;
	float sigma_r_luma;
} SCD_Struct_CI7;

typedef struct {
	 reference;
	 confidence;
	 disparity;
	 output;
} SCD_Struct_CI8;

typedef struct _NSZone* NSZoneRef;

typedef struct CICGContextPrivate* CICGContextPrivateRef;

typedef struct CGContext* CGContextRef;

typedef struct CGColorSpace* CGColorSpaceRef;

typedef struct CGColor* CGColorRef;

typedef struct float3x3 {
	[3 columns];
} float3x3;

typedef struct _CGLContextObject* CGLContextObjectRef;

typedef struct _CGLPixelFormatObject* CGLPixelFormatObjectRef;

typedef struct CGLayer* CGLayerRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct CGImage* CGImageRef;

typedef struct CIPredictionModelImageFeatures {
	NSString* name;
	long long width;
	long long height;
	unsigned format;
} CIPredictionModelImageFeatures;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct {
	CGPoint field1;
	CGPoint field2;
	CGPoint field3;
	CGPoint field4;
	CGRect field5;
	id field6;
} SCD_Struct_CI23;

typedef const struct CGImageMetadata* CGImageMetadataRef;

typedef struct __CFData* CFDataRef;

typedef struct _compressed_pair<CI::Perspective::Line *, std::__1::allocator<CI::Perspective::Line>> {
	/*function pointer*/void* __value_;
} compressed_pair<CI::Perspective::Line *, std::__1::allocator<CI::Perspective::Line>>;

typedef struct vector<CI::Perspective::Line, std::__1::allocator<CI::Perspective::Line>> {
	/*function pointer*/void* __begin_;
	/*function pointer*/void* __end_;
	compressed_pair<CI::Perspective::Line *, std::__1::allocator<CI::Perspective::Line>> __end_cap_;
} vector<CI::Perspective::Line, std::__1::allocator<CI::Perspective::Line>>;

typedef struct _compressed_pair<LineCostProxy *, std::__1::allocator<LineCostProxy>> {
	LineCostProxy __value_;
} compressed_pair<LineCostProxy *, std::__1::allocator<LineCostProxy>>;

typedef struct vector<LineCostProxy, std::__1::allocator<LineCostProxy>> {
	LineCostProxy __begin_;
	LineCostProxy __end_;
	compressed_pair<LineCostProxy *, std::__1::allocator<LineCostProxy>> __end_cap_;
} vector<LineCostProxy, std::__1::allocator<LineCostProxy>>;

typedef struct Solution {
	float rX;
	float rY;
	float rZ;
	float cost;
} Solution;

typedef struct {
	double field1;
	double field2;
	double field3;
	double field4;
	double field5;
	double field6;
	id field7;
} SCD_Struct_CI31;

typedef struct CGSRegionObject* CGSRegionObjectRef;

typedef struct __CFString* CFStringRef;

typedef struct __CFArray* CFArrayRef;

typedef struct CGDataConsumer* CGDataConsumerRef;

typedef struct __CFURL* CFURLRef;

typedef struct {
	double focalLength;
	double lineSearchRangeV;
	double lineSearchRangeH;
	double pitchLimit;
	double yawLimit;
	double rollLimit;
	CIImage* saliencyHeatmap;
} SCD_Struct_CI37;

typedef struct CGImageSource* CGImageSourceRef;

typedef struct {
	void plan;
	int network_index;
} SCD_Struct_In39;

typedef struct {
	float field1;
	float field2;
	float field3;
	float field4;
	BOOL field5;
} SCD_Struct_In40;

typedef struct {
	void field1;
	void field2;
	unsigned long long field3[4];
	unsigned long long field4[4];
	unsigned long long field5;
	unsigned long long field6;
	unsigned long long field7;
	unsigned long long field8;
	unsigned long long field9;
	unsigned long long field10;
	unsigned long long field11;
	unsigned long long field12;
	unsigned long long field13;
	unsigned long long field14;
	int field15;
} SCD_Struct_In41;

typedef struct CIOpenGLContextPrivate* CIOpenGLContextPrivateRef;

typedef struct {
	/*function pointer*/void* field1;
	/*function pointer*/void* field2;
	/*function pointer*/void* field3;
	/*function pointer*/void* field4;
	/*function pointer*/void* field5;
} SCD_Struct_CI43;

typedef struct {
	char* baseAddress;
	int width;
	int height;
	int rowSamples;
	int rowBytes;
	int size;
	int samplesPerPixel;
	int bytesPerSample;
	float resolution;
} SCD_Struct_CI44;

typedef struct {
	int minrow;
	int maxrow;
	int mincol;
	int maxcol;
} SCD_Struct_CI45;

typedef struct {
	SCD_Struct_CI45 FR;
	CGPoint leftEye;
	CGPoint rightEye;
	SCD_Struct_CI45 LR;
	SCD_Struct_CI45 RR;
	float leftDistMatrix[4];
	float rightDistMatrix[4];
	CGPoint LPoly[8];
	CGPoint RPoly[8];
	float IOD;
} SCD_Struct_CI46;

typedef struct CGAffineTransform {
	double a;
	double b;
	double c;
	double d;
	double tx;
	double ty;
} CGAffineTransform;

typedef struct {
	float xf;
	float yf;
	float xfi;
	float yfi;
	float ify;
	int ioffx;
	int ioffy;
	int downsampleType;
	float downsampleOversizeX;
	float downsampleOversizeY;
	int gradientChannel;
	int edgeFindingChannel;
	float minMagnitude;
	float regressionRadius;
	float capture;
	float alignmentTolerance;
	float connectThreshold;
	char forceFail;
	CGRect inputImageExtent;
	int orientation;
	int cameraType;
	int faceIndex;
	int side;
	float scale;
	float IOD;
	CGAffineTransform transform;
	int height;
} SCD_Struct_CI48;

typedef struct {
	int width;
	int height;
	CGAffineTransform T;
	CGAffineTransform Tp;
	SCD_Struct_CI44 O;
	SCD_Struct_CI44 OO;
	char computeEyePolygon;
	SCD_Struct_CI44 EP;
	char maskRender;
	SCD_Struct_CI44 D;
	char computeGradient;
	SCD_Struct_CI44 G;
	SCD_Struct_CI44 M;
	char computeShine;
	SCD_Struct_CI44 S;
	SCD_Struct_CI44 P;
} SCD_Struct_CI49;

typedef struct {
	int width;
	int height;
	float scaleFactor;
	/*function pointer*/void* grid;
	int nPoints;
	int maxPoints;
	/*function pointer*/void* points;
	int nextNetNumber;
	int nThreads;
	int maxThreads;
	/*function pointer*/void* threads;
	int nShapes;
	int maxShapes;
	/*function pointer*/void* shapes;
} SCD_Struct_CI50;

typedef struct {
	float skinval;
	float avgLuminance;
	float minLuminance;
	float maxLuminance;
	float darkPercent;
	float clipPercent;
} SCD_Struct_CI51;

typedef struct {
	double variance;
	int nNonZero;
} SCD_Struct_CI52;

typedef struct {
	float field1;
	float field2;
	float field3;
	float field4;
	float field5;
	int field6;
	int field7;
	int field8;
	float field9;
	float field10;
	int field11;
	int field12;
	float field13;
	float field14;
	float field15;
	float field16;
	float field17;
	char field18;
	CGRect field19;
	int field20;
	int field21;
	int field22;
	int field23;
	float field24;
	float field25;
	CGAffineTransform field26;
	int field27;
} SCD_Struct_CI53;

typedef struct {
	CGPoint field1;
	CGPoint field2;
	CGPoint field3;
	CGPoint field4;
	SCD_Struct_CI45 field5;
	float field6[4];
	float field7[4];
	SCD_Struct_CI45 field8[8];
	SCD_Struct_CI45 field9[8];
	float field10;
} SCD_Struct_CI54;

typedef struct {
	int field1;
	float field2;
	float field3;
	float field4;
	float field5;
	float field6;
	float field7;
} SCD_Struct_CI55;

typedef struct {
	int field1;
	SCD_Struct_CI55 field2[20];
} SCD_Struct_CI56;

typedef struct {
	int field1;
	int field2;
	int field3;
	int field4;
	float field5;
} SCD_Struct_CI57;

typedef struct {
	int field1;
	SCD_Struct_CI57 field2[20];
} SCD_Struct_CI58;

typedef struct {
	char field1;
	int field2;
	int field3;
	CGPoint field4;
} SCD_Struct_CI59;

typedef struct {
	Solution field1;
	float field2;
	float field3;
	float field4;
	float field5;
	float field6;
	float field7;
	float field8;
	float field9;
	float field10;
} SCD_Struct_CI60;

typedef struct {
	int field1;
	int field2;
	/*function pointer*/void* field3;
	int field4;
	int field5;
	int field6;
} SCD_Struct_CI61;

typedef struct {
	int field1;
	int field2;
	int field3;
	float field4;
	float field5;
	int field6;
	char field7;
	char field8;
	char field9;
	int field10;
	int field11;
	float field12;
	float field13;
	float field14;
	float field15;
	Solution field16;
	Solution field17;
	float field18;
	int field19;
	int field20;
} SCD_Struct_CI62;

typedef struct {
	float field1;
	float field2;
	float field3;
} SCD_Struct_CI63;

typedef struct {
	CGPoint field1;
	int field2;
	float field3;
} SCD_Struct_CI64;

typedef struct {
	float field1[4];
	float field2[4];
	float field3[4];
	int field4[4];
} SCD_Struct_CI65;

typedef struct {
	int field1;
	int field2;
	float field3;
	/*function pointer*/void* field4;
	int field5;
	int field6;
	/*function pointer*/void* field7;
	int field8;
	int field9;
	int field10;
	/*function pointer*/void* field11;
	int field12;
	int field13;
	/*function pointer*/void* field14;
} SCD_Struct_CI66;

typedef struct {
	BOOL field1;
	float field2;
	float field3;
	float field4;
	float field5;
	float field6[3];
} SCD_Struct_CI67;

typedef union {
	double vec[4];
	double ptr;
} SCD_Union_CI68;

typedef struct {
	float left;
	float top;
	float width;
	float height;
	float zeroShiftPercentile;
} SCD_Struct_XF69;

typedef struct {
	float field1;
	float field2;
	float field3;
	float field4;
	float field5;
	float field6;
	float field7;
	float field8;
	float field9;
	float field10;
	unsigned field11;
} SCD_Struct_XF70;

typedef struct {
	unsigned field1;
	unsigned field2;
} SCD_Struct_XM71;

typedef struct {
	unsigned field1;
	unsigned field2;
	unsigned field3;
	unsigned field4;
	unsigned field5;
	float field6;
	char field7;
} SCD_Struct_XM72;

typedef struct {
	unsigned internalWidth;
	unsigned internalHeight;
	unsigned spatialRadius;
	unsigned temporalRadius;
	unsigned arrayLength;
	float epsilon;
	char disableForSameResolution;
} SCD_Struct_XM73;

typedef struct {
	unsigned internalWidth;
	unsigned internalHeight;
	unsigned radius;
	unsigned subsampling;
	float epsilon;
	unsigned iterations;
	char useDepthFilter;
	float fgThresholdValue;
	float bgThresholdValue;
	unsigned erosionKernelSize;
	unsigned resolutionMode;
} SCD_Struct_XM74;

typedef struct {
	char field1[256];
	char field2[32];
	CGColorSpace field3;
	int field4;
	int field5;
	SCD_Struct_CI44 field6;
	SCD_Struct_CI45 field7;
	unsigned field8;
	int field9;
	int field10;
	char field11;
	float field12;
} SCD_Struct_CI75;

typedef struct CGImageBlockSet* CGImageBlockSetRef;

typedef struct {
	void bitmapproc_context;
	/*function pointer*/void* bproc;
	int orientation;
	float SNR;
	BOOL N90;
	int redBitmaskArea;
	float imageCenterX;
	float imageCenterY;
	float halfDiagonalSize;
} SCD_Struct_CI77;

typedef struct {
	CGPoint centroid;
	int area;
	float ovalness;
	float contrast;
	float mincontrast;
	int nborder;
	SCD_Struct_CI45 IR;
	float aspectRatio;
	BOOL touchingEdge;
	int localmax;
	int localmaxrow;
	int localmaxcol;
	int localfloor;
	float rgmean;
	float rgstd;
	float ymean;
	float ystd;
} SCD_Struct_CI78;

typedef struct {
	int origHitX;
	int origHitY;
	int snapHitX;
	int snapHitY;
	int bitmaskSeedX;
	int bitmaskSeedY;
	int bitmaskThreshold;
	int cornealReflectionSeedX;
	int cornealReflectionSeedY;
	int cornealReflectionThreshold;
	char align;
	SCD_Struct_CI45 mTemplate;
	SCD_Struct_CI45 existingTemplate;
	int averageSkinMapY;
	int characterizeCase;
	int finalEyeCase;
	float IOD;
	SCD_Struct_CI77 O;
	SCD_Struct_CI45 CR;
} SCD_Struct_CI79;

typedef struct {
	int tag;
	CGPoint pt2;
	int eyeCase;
	int forceCase;
	int npixels;
	int bignpixels;
	SCD_Struct_CI44 fullNew;
	SCD_Struct_CI45 YR;
	SCD_Struct_CI45 psTemplate;
	BOOL pupilShadeAlignment;
	SCD_Struct_CI45 matchingTemplate;
	int faceIndex;
	char left;
	float IOD;
	SCD_Struct_CI79 data;
	SCD_Struct_CI78 BI;
} SCD_Struct_CI80;

typedef struct {
	float a;
	float b;
	float c;
} SCD_Struct_CI81;

typedef struct {
	int field1;
	SCD_Struct_CI7 field2;
	int field3;
	int field4;
	int field5;
	int field6;
	SCD_Struct_CI7 field7;
	CGPoint field8;
	SCD_Struct_CI44 field9;
	BOOL field10;
	SCD_Struct_CI45 field11;
	int field12;
	char field13;
	float field14;
	SCD_Struct_CI45 field15;
	9 field16;
	SCD_Struct_CI45 field17;
	8 field18;
} SCD_Struct_CI82;

typedef struct {
	float field1;
	int field2;
	int field3;
	float field4;
	float field5;
	float field6;
	int field7;
	int field8;
	float field9;
} SCD_Struct_CI83;

typedef struct {
	int field1;
	SCD_Struct_CI83 field2[4];
} SCD_Struct_CI84;

typedef struct {
	char field1;
	int field2;
	int field3;
	float field4;
	float field5;
	int field6;
	int field7;
	int field8;
	int field9;
	float field10;
	float field11;
	int field12;
	int field13;
	int field14;
	int field15;
} SCD_Struct_CI85;

typedef struct {
	int field1;
	int field2;
	char field3;
	char field4;
	float field5;
	int field6;
	int field7;
	int field8;
	int field9;
} SCD_Struct_CI86;

typedef struct {
	int field1;
	int field2;
	int field3;
	int field4;
	int field5;
	int field6;
	int field7;
	int field8;
	int field9;
	int field10;
	char field11;
	SCD_Struct_CI7 field12;
	SCD_Struct_CI45 field13;
	int field14;
	int field15;
	int field16;
	float field17;
	SCD_Struct_CI45 field18;
	7 field19;
	SCD_Struct_CI45 field20;
} SCD_Struct_CI87;

typedef struct PseudoRand {
	unsigned u;
	unsigned v;
} PseudoRand;

