/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:42 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AVFAudio.framework/Versions/A/AVFAudio
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol AVSpeechSynthesizerDelegate;
#import <AVFAudio/AVFAudio-Structs.h>
@class NSArray, AVSpeechUtterance;

@interface AVSpeechSynthesizer : NSObject {

	char _speaking;
	char _paused;
	char _usesApplicationAudioSession;
	char _mixToTelephonyUplink;
	id<AVSpeechSynthesizerDelegate> _delegate;
	NSArray* _outputChannels;

}

@property (nonatomic,retain) AVSpeechUtterance * inflightUtterance; 
@property (assign,nonatomic,__weak) id<AVSpeechSynthesizerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (getter=isSpeaking,nonatomic,readonly) char speaking;                            //@synthesize speaking=_speaking - In the implementation block
@property (getter=isPaused,nonatomic,readonly) char paused;                                //@synthesize paused=_paused - In the implementation block
@property (nonatomic,retain) NSArray * outputChannels;                                     //@synthesize outputChannels=_outputChannels - In the implementation block
@property (assign,nonatomic) char usesApplicationAudioSession;                             //@synthesize usesApplicationAudioSession=_usesApplicationAudioSession - In the implementation block
@property (assign,nonatomic) char mixToTelephonyUplink;                                    //@synthesize mixToTelephonyUplink=_mixToTelephonyUplink - In the implementation block
+(id)defaultPort;
+(AudioStreamBasicDescription)audioStreamBasicDescription;
+(void)setAssetFlushedCallback:(/*^block*/id)arg1 ;
+(/*^block*/id)assetFlushedCallback;
+(void)initialize;
-(id)macSpeechData;
-(void)setMacSpeechData:(id)arg1 ;
-(NSArray *)outputChannels;
-(void)setOutputChannels:(NSArray *)arg1 ;
-(id)init;
-(void)dealloc;
-(char)isInAudioInterruption;
-(char)isSpeaking;
-(char)isPaused;
-(void)_handleSpeechDone:(SpeechChannelRecord*)arg1 ;
-(void)_handleSpeechWordCallback:(id)arg1 wordRange:(SCD_Struct_AV9)arg2 channel:(SpeechChannelRecord*)arg3 ;
-(void)_resetSpeechProperties;
-(void)_makeNewChannelForVoice:(id)arg1 ;
-(float)_maxWordPerMinute:(id)arg1 ;
-(void)_speakUtterance:(id)arg1 ;
-(char)stopSpeakingAtBoundary:(long long)arg1 ;
-(char)pauseSpeakingAtBoundary:(long long)arg1 ;
-(char)continueSpeaking;
-(void)writeUtterance:(id)arg1 toBufferCallback:(/*^block*/id)arg2 ;
-(void)speakUtterance:(id)arg1 ;
-(void)processSpeechJobFinished:(id)arg1 successful:(char)arg2 ;
-(void)_enqueueNextJob;
-(void)setInflightUtterance:(AVSpeechUtterance *)arg1 ;
-(AVSpeechUtterance *)inflightUtterance;
-(id)speechQueue;
-(id<AVSpeechSynthesizerDelegate>)delegate;
-(void)setDelegate:(id<AVSpeechSynthesizerDelegate>)arg1 ;
-(char)isPaused;
-(char)isSpeaking;
-(char)stopSpeakingAtBoundary:(long long)arg1 ;
-(char)pauseSpeakingAtBoundary:(long long)arg1 ;
-(char)continueSpeaking;
-(NSArray *)outputChannels;
-(void)setOutputChannels:(NSArray *)arg1 ;
-(char)usesApplicationAudioSession;
-(void)setUsesApplicationAudioSession:(char)arg1 ;
-(void)speakUtterance:(id)arg1 ;
-(void)writeUtterance:(id)arg1 toBufferCallback:(/*^block*/id)arg2 ;
-(void)writeUtterance:(id)arg1 toBufferCallback:(/*^block*/id)arg2 toMarkerCallback:(/*^block*/id)arg3 ;
-(char)mixToTelephonyUplink;
-(void)setMixToTelephonyUplink:(char)arg1 ;
@end

