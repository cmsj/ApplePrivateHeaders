/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CoreLocation/CoreLocation-Structs.h>
@class NSXPCConnection;

@interface CLLocationInternalClient : NSObject {

	NSXPCConnection* _connection;

}
+(id)sharedServiceClient;
-(id)connection;
-(unsigned char)performMigration;
-(void)setGestureServiceEnabled:(unsigned char)arg1 ;
-(void)notifyPassKitPayment:(id)arg1 transaction:(id)arg2 info:(id)arg3 ;
-(void)notifyWeatherForecast:(id)arg1 airQualityConditions:(id)arg2 hourlyForecasts:(id)arg3 dailyForecasts:(id)arg4 latitude:(double)arg5 longitude:(double)arg6 ;
-(id)synchronousRemoteObject;
-(unsigned char)setAuthorizationStatus:(unsigned char)arg1 withCorrectiveCompensation:(int)arg2 forBundleID:(const CFStringRef)arg3 orBundlePath:(const CFStringRef)arg4 ;
-(unsigned char)getIncidentalUseMode:(int*)arg1 forBundleID:(const CFStringRef)arg2 orBundlePath:(const CFStringRef)arg3 ;
-(unsigned char)clearLocationAuthorizations;
-(id)getArchivedAuthorizationDecisionsWithError:(id*)arg1 ;
-(id)applyArchivedAuthorizationDecisions:(id)arg1 ;
-(const CFDictionaryRef)copyAppsUsingLocation;
-(const CFArrayRef)copyTechnologiesInUse;
-(const CFDictionaryRef)copyZaxisStats;
-(const CFArrayRef)copyGnssBandsInUse;
-(void)setLocationDefaultForKey:(const CFStringRef)arg1 value:(const void*)arg2 ;
-(const void*)getLocationDefaultForKey:(const CFStringRef)arg1 ;
-(id)timeZoneAtLocation:(id)arg1 ;
-(void)setPrivateMode:(unsigned char)arg1 ;
-(unsigned char)getPrivateMode;
-(unsigned char)pingDaemon;
-(void)setLocationServicesEnabled:(unsigned char)arg1 ;
-(unsigned char)getLocationServicesEnabled:(char*)arg1 ;
-(id)setAuthorizationPromptMapDisplayEnabled:(unsigned char)arg1 ;
-(unsigned char)getAuthorizationPromptMapDisplayEnabled:(char*)arg1 ;
-(id)setTemporaryAuthorizationStatusForBundleId:(id)arg1 orBundlePath:(id)arg2 statusData:(id)arg3 ;
-(id)getTemporaryAuthorizationStatusForBundleId:(id)arg1 orBundlePath:(id)arg2 error:(id*)arg3 ;
-(double)modifyOrSetAuthorizationTime:(double)arg1 forBundleID:(id)arg2 orBundlePath:(id)arg3 ;
-(id)triggerExpiredAuthorizationPurgeOnClientManager;
-(unsigned char)getGestureServiceEnabled:(char*)arg1 ;
-(unsigned char)getAuthorizationStatus:(int*)arg1 forBundleID:(const CFStringRef)arg2 orBundlePath:(const CFStringRef)arg3 ;
-(unsigned char)getPrecisionPermission:(char*)arg1 forBundleID:(const CFStringRef)arg2 orBundlePath:(const CFStringRef)arg3 ;
-(unsigned char)shutdownDaemon;
-(unsigned char)displayStatistics;
-(unsigned char)dumpLogs:(const CFStringRef)arg1 ;
-(const CFDictionaryRef)copyMonitoredRegionsForBundleIdentifier:(const CFStringRef)arg1 orBundlePath:(const CFStringRef)arg2 ;
-(char)checkAndExerciseAuthorizationForBundleID:(id)arg1 orBundlePath:(id)arg2 services:(unsigned long long)arg3 error:(id*)arg4 ;
-(unsigned char)getLocationForBundleID:(const CFStringRef)arg1 orBundlePath:(const CFStringRef)arg2 dynamicAccuracyReductionEnabled:(unsigned char)arg3 allowsAlteredAccessoryLocations:(unsigned char)arg4 location:(SCD_Struct_CL18*)arg5 ;
-(unsigned char)getGroundAltitudeForBundleID:(const CFStringRef)arg1 orBundlePath:(const CFStringRef)arg2 location:(id)arg3 groundAltitude:(SCD_Struct_CL19*)arg4 ;
-(unsigned char)isLocationServicesCapable;
-(void)setMapMatchingRouteHint:(SCD_Struct_CL20*)arg1 count:(int)arg2 routingType:(int)arg3 stepType:(int)arg4 ;
-(int)getAccessoryTypeBitSet;
-(unsigned char)copyLastLog;
-(unsigned char)setStatusBarIconEnabled:(char)arg1 forEntityClass:(int)arg2 ;
-(unsigned char)getStatusBarIconEnabled:(char*)arg1 forEntityClass:(int)arg2 ;
-(int)getStatusBarIconState;
-(id)getPipelinedCache;
@end

