/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MediaPlayer.framework/Versions/A/MediaPlayer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <MediaPlayer/MediaPlayer-Structs.h>
@class NSMutableArray, ITLibrary, NSArray;

@interface ITMediaLibrary : NSObject {

	NSMutableArray* _mediaItems;
	unordered_map<unsigned long long, ITMediaItem *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaItem *>>>* _mediaItemsMap;
	NSMutableArray* _mediaItemCollections;
	unordered_map<unsigned long long, ITMediaCollection *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaCollection *>>>* _mediaItemCollectionsMap;
	NSMutableArray* _playlists;
	unordered_map<unsigned long long, ITMediaPlaylist *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaPlaylist *>>>* _playlistsMap;
	NSMutableArray* _artists;
	unordered_map<unsigned long long, ITMediaArtist *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaArtist *>>>* _artistsMap;
	NSMutableArray* _albums;
	unordered_map<unsigned long long, ITMediaAlbum *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaAlbum *>>>* _albumsMap;
	NSMutableArray* _albumArtists;
	unordered_map<unsigned long long, ITMediaAlbumArtist *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaAlbumArtist *>>>* _albumArtistsMap;
	NSMutableArray* _genres;
	unordered_map<unsigned long long, ITMediaGenre *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaGenre *>>>* _genresMap;
	NSMutableArray* _composers;
	unordered_map<unsigned long long, ITMediaComposer *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, ITMediaComposer *>>>* _composersMap;
	char _needsReload;
	ITLibrary* _itLibrary;
	unsigned long long _currentRevision;
	unsigned long long _mediaTypes;
	unsigned long long _playlistAttributes;

}

@property (nonatomic,readonly) unsigned long long mediaTypes;                      //@synthesize mediaTypes=_mediaTypes - In the implementation block
@property (nonatomic,readonly) unsigned long long playlistAttributes;              //@synthesize playlistAttributes=_playlistAttributes - In the implementation block
@property (assign,nonatomic) char needsReload;                                     //@synthesize needsReload=_needsReload - In the implementation block
@property (nonatomic,readonly) ITLibrary * itLibrary;                              //@synthesize itLibrary=_itLibrary - In the implementation block
@property (nonatomic,readonly) NSArray * mediaItems; 
@property (nonatomic,readonly) NSArray * playlists; 
@property (nonatomic,readonly) NSArray * artists; 
@property (nonatomic,readonly) NSArray * albums; 
@property (nonatomic,readonly) NSArray * genres; 
@property (nonatomic,readonly) NSArray * composers; 
@property (nonatomic,readonly) NSArray * albumArtists;                             //@synthesize albumArtists=_albumArtists - In the implementation block
@property (nonatomic,readonly) unsigned long long currentRevision;                 //@synthesize currentRevision=_currentRevision - In the implementation block
@property (nonatomic,readonly) NSArray * localizedSectionIndexTitles; 
-(unsigned long long)mediaTypes;
-(unsigned long long)currentRevision;
-(NSArray *)mediaItems;
-(NSArray *)genres;
-(id)initWithLibrary:(id)arg1 ;
-(NSArray *)albums;
-(unsigned long long)playlistAttributes;
-(id)localizedSectionHeaderForSectionIndex:(unsigned long long)arg1 ;
-(NSArray *)localizedSectionIndexTitles;
-(id)mediaItemForIdentifier:(unsigned long long)arg1 ;
-(NSArray *)playlists;
-(NSArray *)artists;
-(NSArray *)composers;
-(char)shouldIncludePlaylist:(id)arg1 ;
-(void)setNeedsReload:(char)arg1 ;
-(void)reloadLibraryIfNeeded;
-(void)reloadLibrary;
-(char)playlistContainsMediaItem:(unsigned long long)arg1 forMediaItemIdentifier:(unsigned long long)arg2 ;
-(unsigned long long)countPlaylistItems:(unsigned long long)arg1 ;
-(unsigned long long)countAlbumItems:(unsigned long long)arg1 ;
-(unsigned long long)countArtistItems:(unsigned long long)arg1 ;
-(unsigned long long)countComposerItems:(unsigned long long)arg1 ;
-(id)mediaItemCollectionForIdentifier:(unsigned long long)arg1 ;
-(id)playlistForIdentifier:(unsigned long long)arg1 ;
-(id)artistForIdentifier:(unsigned long long)arg1 ;
-(id)albumForIdentifier:(unsigned long long)arg1 ;
-(id)genreForIdentifier:(unsigned long long)arg1 ;
-(id)albumArtistForIdentifier:(unsigned long long)arg1 ;
-(id)composerForIdentifier:(unsigned long long)arg1 ;
-(id)collectionForIdentifier:(unsigned long long)arg1 groupingType:(long long)arg2 ;
-(unsigned long long)sectionIndexForString:(id)arg1 ;
-(ITLibrary *)itLibrary;
-(NSArray *)albumArtists;
-(char)needsReload;
@end

