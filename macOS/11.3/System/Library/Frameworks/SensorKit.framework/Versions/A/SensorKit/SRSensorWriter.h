/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:45 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SensorKit.framework/Versions/A/SensorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/SRAuthorizationStoreReaderAuthorizationDelegate.h>
#import <libobjc.A.dylib/SRDaemonNotificationDelegate.h>
#import <libobjc.A.dylib/SRAuthorizationClientDelegate.h>

@protocol SRSensorWriterDelegate, SRTCCStore, OS_dispatch_queue;
@class SRDaemonNotification, SRDefaults, SRDatastore, NSString, NSDictionary, NSXPCConnection, NSObject, NSArray;

@interface SRSensorWriter : NSObject <SRAuthorizationStoreReaderAuthorizationDelegate, SRDaemonNotificationDelegate, SRAuthorizationClientDelegate> {

	id<SRSensorWriterDelegate> _delegate;
	SRDaemonNotification* _daemonNotification;
	SRDefaults* _defaults;
	SRDatastore* _datastore;
	AB _monitoring;
	int _notifyToken;
	char _requestNewSegmentInFlight;
	char _authorized;
	char _connectionDidInterrupt;
	char _connectionDidInvalidate;
	char _retryGetMonitoring;
	NSString* _sensorIdentifier;
	NSDictionary* _nextDatastoreFiles;
	NSXPCConnection* _connection;
	long long __writerAuthorizationStatus;
	NSString* _writerAuthorizationService;
	id<SRTCCStore> _tccStore;
	NSObject*<OS_dispatch_queue> _writerAuthorizationUpdateQueue;
	NSArray* __requestedConfigurations;

}

@property (copy) NSString * sensorIdentifier;                                                          //@synthesize sensorIdentifier=_sensorIdentifier - In the implementation block
@property (retain,readonly) SRDatastore * datastore; 
@property (retain) NSDictionary * nextDatastoreFiles;                                                  //@synthesize nextDatastoreFiles=_nextDatastoreFiles - In the implementation block
@property (assign) char requestNewSegmentInFlight;                                                     //@synthesize requestNewSegmentInFlight=_requestNewSegmentInFlight - In the implementation block
@property (assign) char authorized;                                                                    //@synthesize authorized=_authorized - In the implementation block
@property (assign) char connectionDidInterrupt;                                                        //@synthesize connectionDidInterrupt=_connectionDidInterrupt - In the implementation block
@property (assign) char connectionDidInvalidate;                                                       //@synthesize connectionDidInvalidate=_connectionDidInvalidate - In the implementation block
@property (retain) NSXPCConnection * connection;                                                       //@synthesize connection=_connection - In the implementation block
@property (assign) char retryGetMonitoring;                                                            //@synthesize retryGetMonitoring=_retryGetMonitoring - In the implementation block
@property (assign) long long _writerAuthorizationStatus;                                               //@synthesize _writerAuthorizationStatus=__writerAuthorizationStatus - In the implementation block
@property (nonatomic,retain,readonly) NSString * writerAuthorizationService;                           //@synthesize writerAuthorizationService=_writerAuthorizationService - In the implementation block
@property (retain,readonly) id<SRTCCStore> tccStore;                                                   //@synthesize tccStore=_tccStore - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> writerAuthorizationUpdateQueue;              //@synthesize writerAuthorizationUpdateQueue=_writerAuthorizationUpdateQueue - In the implementation block
@property (nonatomic,copy) NSArray * _requestedConfigurations;                                         //@synthesize _requestedConfigurations=__requestedConfigurations - In the implementation block
@property (getter=isMonitoring) char monitoring; 
@property (__weak) id<SRSensorWriterDelegate> delegate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)clientInterface;
+(id)remoteInterface;
+(id)connectionToDaemon;
-(void)dealloc;
-(id)init;
-(id<SRSensorWriterDelegate>)delegate;
-(void)setDelegate:(id<SRSensorWriterDelegate>)arg1 ;
-(NSXPCConnection *)connection;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(id)initWithIdentifier:(id)arg1 ;
-(void)setMetadata:(id)arg1 ;
-(char)isMonitoring;
-(char)authorized;
-(void)setupConnection;
-(void)setMonitoring:(char)arg1 ;
-(SRDatastore *)datastore;
-(void)daemonNotificationDaemonDidStart:(id)arg1 ;
-(void)daemonNotificationDaemonDidChangeTimeSignificantly:(id)arg1 ;
-(void)daemonNotificationDaemonDidResetDatastore:(id)arg1 ;
-(void)authorizationStore:(id)arg1 didDetermineInitialAuthorizationValues:(id)arg2 ;
-(void)authorizationStore:(id)arg1 grantedAuthorizations:(id)arg2 forBundleId:(id)arg3 ;
-(void)authorizationStore:(id)arg1 revokedAuthorizations:(id)arg2 forBundleId:(id)arg3 ;
-(void)authorizationStore:(id)arg1 resetAuthorizations:(id)arg2 forBundleId:(id)arg3 ;
-(void)resetDatastoreFiles:(id)arg1 ;
-(void)setConnectionDidInterrupt:(char)arg1 ;
-(void)setNextDatastoreFiles:(NSDictionary *)arg1 ;
-(void)setConnectionDidInvalidate:(char)arg1 ;
-(char)connectionDidInterrupt;
-(char)connectionDidInvalidate;
-(NSDictionary *)nextDatastoreFiles;
-(void)daemonForcedResetDatastoreFiles:(id)arg1 ;
-(void)set_requestedConfigurations:(NSArray *)arg1 ;
-(id)initWithIdentifier:(id)arg1 xpcConnection:(id)arg2 daemonNotification:(id)arg3 tccStore:(id)arg4 ;
-(void)setSensorIdentifier:(NSString *)arg1 ;
-(void)startUpdatingAuthorizations;
-(void)set_writerAuthorizationStatus:(long long)arg1 ;
-(void)setWriterAuthorizationUpdateQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(char)retryGetMonitoring;
-(void)registerWithDaemonForWritingIfNeededWithReply:(/*^block*/id)arg1 ;
-(void)requestNewSegment;
-(void)setRetryGetMonitoring:(char)arg1 ;
-(NSArray *)_requestedConfigurations;
-(void)didReceiveUpdateToConfigurationRequests;
-(char)provideSample:(id)arg1 error:(id*)arg2 ;
-(char)provideSample:(id)arg1 timestamp:(double)arg2 error:(id*)arg3 ;
-(char)provideSampleData:(id)arg1 timestamp:(double)arg2 error:(id*)arg3 ;
-(char)provideSampleData:(id)arg1 error:(id*)arg2 ;
-(char)provideSampleData:(id)arg1 continuousTimestamp:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)provideSampleBytes:(const void*)arg1 length:(unsigned long long)arg2 timestamp:(double)arg3 error:(id*)arg4 ;
-(char)provideSampleBytes:(const void*)arg1 length:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)provideSampleBytes:(const void*)arg1 length:(unsigned long long)arg2 continuousTimestamp:(unsigned long long)arg3 error:(id*)arg4 ;
-(long long)_writerAuthorizationStatus;
-(char)requestNewSegmentInFlight;
-(void)setRequestNewSegmentInFlight:(char)arg1 ;
-(void)setMetadata:(id)arg1 continuousTimestamp:(unsigned long long)arg2 ;
-(char)_setSensorConfiguration:(id)arg1 continuousTimestamp:(unsigned long long)arg2 error:(id*)arg3 ;
-(NSString *)sensorIdentifier;
-(NSString *)writerAuthorizationService;
-(NSObject*<OS_dispatch_queue>)writerAuthorizationUpdateQueue;
-(void)updateWriterAuthorizationStatus;
-(void)evaluateAuthorizationState;
-(void)evaluateAuthorizationStateWithNewValue:(char)arg1 ;
-(void)setAuthorized:(char)arg1 ;
-(void)checkForMonitoring;
-(void)authorizedServicesDidChange:(id)arg1 deniedServices:(id)arg2 dataCollectionEnabled:(char)arg3 onboardingCompleted:(char)arg4 forBundleIdentifier:(id)arg5 ;
-(void)provideSample:(id)arg1 ;
-(void)provideSample:(id)arg1 timestamp:(double)arg2 ;
-(char)provideSample:(id)arg1 continuousTimestamp:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)provideSampleData:(id)arg1 ;
-(void)provideSampleData:(id)arg1 continuousTimestamp:(unsigned long long)arg2 ;
-(void)provideSampleData:(id)arg1 timestamp:(double)arg2 ;
-(void)provideSampleBytes:(const void*)arg1 length:(unsigned long long)arg2 ;
-(void)provideSampleBytes:(const void*)arg1 length:(unsigned long long)arg2 continuousTimestamp:(unsigned long long)arg3 ;
-(void)provideSampleBytes:(const void*)arg1 length:(unsigned long long)arg2 timestamp:(double)arg3 ;
-(char)_setSensorConfiguration:(id)arg1 error:(id*)arg2 ;
-(void)_requestWriterAuthorizationWithCompletion:(/*^block*/id)arg1 ;
-(void)flushDatabase;
-(id<SRTCCStore>)tccStore;
@end

