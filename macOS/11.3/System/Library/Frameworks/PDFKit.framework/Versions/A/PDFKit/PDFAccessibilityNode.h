/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:59 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/PDFKit.framework/Versions/A/PDFKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PDFKit/PDFKit-Structs.h>
#import <AppKit/NSAccessibilityElement.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <PDFKit/PDFAccessibilityNodeParent.h>

@class PDFAccessibilityNodePrivate, PDFPage, NSString, NSArray;

@interface PDFAccessibilityNode : NSAccessibilityElement <NSCopying, PDFAccessibilityNodeParent> {

	PDFAccessibilityNodePrivate* _private2;

}

@property (assign,nonatomic,__weak) PDFPage * page; 
@property (nonatomic,readonly) int type; 
@property (nonatomic,readonly) CGPDFTaggedNodeRef nodeRef; 
@property (assign,nonatomic) CGRect bounds; 
@property (nonatomic,retain) NSString * altText; 
@property (nonatomic,__weak,readonly) id<PDFAccessibilityNodeParent> parent; 
@property (nonatomic,readonly) NSArray * children; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)createPDFAccessibilityRootNode:(id)arg1 ;
+(void)_buildPDFAnnotationNodes:(id)arg1 ;
+(char)_containsOnlyTextDescendant:(CGPDFTaggedNodeRef)arg1 ;
+(char)_containsSomeTextContainerChilden:(CGPDFTaggedNodeRef)arg1 ;
+(char)_containsSomeTextWordNodes:(CGPDFTaggedNodeRef)arg1 ;
+(Class)_nodeClassForNode:(CGPDFTaggedNodeRef)arg1 ;
+(unsigned long long)_addPDFAnnotation:(id)arg1 toPDFAccessibilityNode:(id)arg2 ;
+(unsigned long long)_insertPDFAnnotation:(id)arg1 inPage:(id)arg2 withAssociationInfo:(id)arg3 ;
+(char)shouldCheckAllSidesForAssociationOnAnnotation:(id)arg1 ;
+(char)_containsSomeTextDescendant:(CGPDFTaggedNodeRef)arg1 ;
+(id)_accessibilityElementForNode:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(int)type;
-(id<PDFAccessibilityNodeParent>)parent;
-(void)addChild:(id)arg1 ;
-(NSArray *)children;
-(id)document;
-(CGRect)bounds;
-(id)accessibilityParent;
-(id)accessibilityChildren;
-(id)accessibilityRole;
-(id)accessibilityLabel;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(CGRect)accessibilityFrame;
-(char)accessibilityIsIgnored;
-(id)accessibilityChildrenInNavigationOrder;
-(char)accessibilityShouldUseUniqueId;
-(id)accessibilityActionNames;
-(id)accessibilityActionDescription:(id)arg1 ;
-(void)accessibilityPerformAction:(id)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(id)accessibilityCustomRotors;
-(id)accessibilitySelectedText;
-(PDFPage *)page;
-(void)setPage:(PDFPage *)arg1 ;
-(NSRange)textRange;
-(CGPDFTaggedNodeRef)nodeRef;
-(void)setParent:(id<PDFAccessibilityNodeParent>)arg1 ;
-(void)print;
-(NSString *)altText;
-(void)setAltText:(NSString *)arg1 ;
-(id)initWithParent:(id)arg1 nodeRef:(CGPDFTaggedNodeRef)arg2 ;
-(char)hasEquivalentTextNodeRepresentation;
-(id)pageContainerNode;
-(id)descendantNodeWithNodeRef:(CGPDFTaggedNodeRef)arg1 ;
-(char)supportsAppKitControls;
-(id)spokenDescription;
-(id)layerController;
-(char)isValidAccessibilityElement;
-(void)scrollToVisible;
-(id)descendantNodeWithHash:(unsigned long long)arg1 ;
-(id)previousNodeWithAnnotationType:(id)arg1 fromRange:(NSRange)arg2 ;
-(id)previousNodeWithClass:(Class)arg1 fromRange:(NSRange)arg2 ;
-(id)nextNodeWithAnnotationType:(id)arg1 fromRange:(NSRange)arg2 ;
-(id)nextNodeWithClass:(Class)arg1 fromRange:(NSRange)arg2 ;
-(void)buildAccessibilityHierarchy;
-(id)accessibilityLanguage;
-(CGRect)convertRectToAccessibilitySpace:(CGRect)arg1 ;
-(id)pageView;
-(id)_documentContainer;
-(id)_nodeLanguage;
-(id)associationInfoForAnnotation:(id)arg1 nodesToCheck:(id)arg2 ;
-(id)associationInfoForBounds:(CGRect)arg1 allSides:(char)arg2 currentInfo:(id)arg3 nodesToCheck:(id)arg4 ;
-(char)_isPotentialAssociationNode:(id)arg1 ;
-(id)_descendantNodeWithClass:(Class)arg1 fromRange:(NSRange)arg2 reverseSearch:(char)arg3 ;
-(id)_previousNodeWithClass:(Class)arg1 fromRange:(NSRange)arg2 ;
-(id)_nextNodeWithClass:(Class)arg1 fromRange:(NSRange)arg2 ;
-(id)_sortedAnnotationNodesByTextRange;
-(void)_print:(id)arg1 isTail:(char)arg2 ;
-(void)_annotate:(id)arg1 ;
-(char)_isSubFigure;
@end

