/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:11 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <QuickLook/QuickLook-Structs.h>
#import <QuickLook/QLClient.h>

@protocol QLThumbnailGeneratorInfo;
@class QLThumbnailMetadata, QLThumbnailGenerationRequest, FPItem;

@interface QLThumbnail : QLClient {

	QLThumbnailRef _thumbnailRef;
	CGImageRef _image;
	QLThumbnailMetadata* _properties;
	id<QLThumbnailGeneratorInfo> _generatorInfo;
	char _imageComputed;
	char _isLowQuality;
	char _forcedContentTypeUTI;
	int _flavor;
	QLThumbnailGenerationRequest* _generationRequest;
	id _queueContext;
	FPItem* _fpitem;
	/*^block*/id _completionHandler;
	CGSize _maxSize;
	CGSize _minimumUsefulSize;
	CGRect _contentRect;

}

@property (readonly) QLThumbnailRef thumbnailRef; 
@property (retain) QLThumbnailGenerationRequest * generationRequest;              //@synthesize generationRequest=_generationRequest - In the implementation block
@property (retain) QLThumbnailMetadata * properties;                              //@synthesize properties=_properties - In the implementation block
@property (retain) id<QLThumbnailGeneratorInfo> generatorInfo;                    //@synthesize generatorInfo=_generatorInfo - In the implementation block
@property (retain) id queueContext;                                               //@synthesize queueContext=_queueContext - In the implementation block
@property (retain) FPItem * fpitem;                                               //@synthesize fpitem=_fpitem - In the implementation block
@property (assign) CGImageRef image; 
@property (assign) char imageComputed;                                            //@synthesize imageComputed=_imageComputed - In the implementation block
@property (assign) char isLowQuality;                                             //@synthesize isLowQuality=_isLowQuality - In the implementation block
@property (assign) CGRect contentRect;                                            //@synthesize contentRect=_contentRect - In the implementation block
@property (assign) CGSize maxSize;                                                //@synthesize maxSize=_maxSize - In the implementation block
@property (assign) int flavor;                                                    //@synthesize flavor=_flavor - In the implementation block
@property (nonatomic,copy) id completionHandler;                                  //@synthesize completionHandler=_completionHandler - In the implementation block
@property (assign) char forcedContentTypeUTI;                                     //@synthesize forcedContentTypeUTI=_forcedContentTypeUTI - In the implementation block
@property (assign) CGSize minimumUsefulSize;                                      //@synthesize minimumUsefulSize=_minimumUsefulSize - In the implementation block
+(char)supportsContentType:(id)arg1 atSize:(CGSize)arg2 ;
+(CGImageRef)createThumbnailImage:(id)arg1 maxSize:(CGSize)arg2 options:(id)arg3 allocator:(CFAllocatorRef)arg4 ;
+(id)cacheIDForURL:(id)arg1 ;
+(id)newLockQueue;
+(id)getGeneratorInfo:(id)arg1 isDatabaseUpdating:(char*)arg2 ;
+(id)dummyForcedGeneratorInfo;
+(char)isItemAtURLUbiquitous:(id)arg1 ;
+(CGImageRef)createThumbnailImageWithImageIO:(id)arg1 maxSize:(CGSize)arg2 options:(id)arg3 properties:(id)arg4 typeHint:(id)arg5 flavor:(int)arg6 ;
-(void)dealloc;
-(void)setImage:(CGImageRef)arg1 ;
-(void)cancel;
-(CGSize)maxSize;
-(CGImageRef)image;
-(void)setMaxSize:(CGSize)arg1 ;
-(void)setCompletionHandler:(id)arg1 ;
-(id)completionHandler;
-(CGRect)contentRect;
-(QLThumbnailMetadata *)properties;
-(void)setProperties:(QLThumbnailMetadata *)arg1 ;
-(void)teardown;
-(int)flavor;
-(void)setFlavor:(int)arg1 ;
-(void)setContentRect:(CGRect)arg1 ;
-(id)queueContext;
-(CGImageRef)retrieveImageCopy;
-(CGImageRef)copyImageMask;
-(void)setForcedContentType:(id)arg1 ;
-(id)initWithThumbnailRef:(QLThumbnailRef)arg1 url:(id)arg2 fpItem:(id)arg3 maxSize:(CGSize)arg4 options:(id)arg5 ;
-(id)retrieveProperties;
-(char)retrieveIsLowQuality;
-(CGRect)retrieveContentRect;
-(id)retrieveClientProperties;
-(void)setQueueContext:(id)arg1 ;
-(void)sendQueryFromThumbnailQueue:(/*^block*/id)arg1 ;
-(void)setImageComputed:(char)arg1 ;
-(char)imageComputed;
-(void)syncGetImageIfNecessary;
-(FPItem *)fpitem;
-(QLThumbnailRef)thumbnailRef;
-(QLThumbnailGenerationRequest *)generationRequest;
-(char)isLowQuality;
-(int)retrieveInlinePreviewMode;
-(void)setForcedContentTypeUTI:(char)arg1 ;
-(void)_syncGetImageIfNecessary;
-(char)_postProcessAndShouldRetry;
-(char)sendQuerySynchronous:(char)arg1 completion:(/*^block*/id)arg2 ;
-(char)isGenericFolder;
-(void)_endProcess;
-(char)_shouldContinueAfterMiniCache;
-(char)_setupForSendToServer;
-(void)failedFromServer:(int)arg1 ;
-(void)setIsLowQuality:(char)arg1 ;
-(char)_shouldGenerateLocallyForDebug;
-(void)startedOnServerWithContentType:(id)arg1 ;
-(void)setGenerationRequest:(QLThumbnailGenerationRequest *)arg1 ;
-(void)setGeneratorInfo:(id<QLThumbnailGeneratorInfo>)arg1 ;
-(char)forcedContentTypeUTI;
-(id<QLThumbnailGeneratorInfo>)generatorInfo;
-(CGImageRef)copySpecialGenericImageAllowFolder:(char)arg1 ;
-(void)generateLocallyWithQueue:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setFpitem:(FPItem *)arg1 ;
-(CGSize)minimumUsefulSize;
-(void)setMinimumUsefulSize:(CGSize)arg1 ;
@end

