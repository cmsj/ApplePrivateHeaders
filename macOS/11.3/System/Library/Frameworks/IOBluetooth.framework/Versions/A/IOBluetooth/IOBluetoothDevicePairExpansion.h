/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:11 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class IOBluetoothHostController, IOBluetoothL2CAPChannel, BluetoothHIDDeviceController, NSXPCConnection;

@interface IOBluetoothDevicePairExpansion : NSObject {

	unsigned short pageTimeout;
	IOBluetoothHostController* hostController;
	char supportsAuthentication;
	char isNonSSPKeypressNotificationCapable;
	IOBluetoothL2CAPChannel* channel;
	char Q6BDAddrRange;
	char isWiiRemote;
	char isNeuroSwitch;
	char _isWiiUProController;
	BluetoothHIDDeviceController* bluetoothHIDDeviceController;
	char isPolyVision;
	NSXPCConnection* xpcConnection;

}

@property (assign) unsigned short pageTimeout; 
@property (retain) IOBluetoothHostController * hostController; 
@property (assign) char supportsAuthentication; 
@property (assign) char isNonSSPKeypressNotificationCapable; 
@property (retain) IOBluetoothL2CAPChannel * channel; 
@property (assign) char Q6BDAddrRange; 
@property (assign) char isWiiRemote; 
@property (assign) char isNeuroSwitch; 
@property (assign) char isWiiUProController;                                                 //@synthesize isWiiUProController=_isWiiUProController - In the implementation block
@property (retain) BluetoothHIDDeviceController * bluetoothHIDDeviceController; 
@property (assign) char isPolyVision; 
@property (retain) NSXPCConnection * xpcConnection; 
-(unsigned short)pageTimeout;
-(void)setPageTimeout:(unsigned short)arg1 ;
-(char)isNonSSPKeypressNotificationCapable;
-(void)setIsNonSSPKeypressNotificationCapable:(char)arg1 ;
-(char)Q6BDAddrRange;
-(void)setQ6BDAddrRange:(char)arg1 ;
-(char)isWiiRemote;
-(void)setIsWiiRemote:(char)arg1 ;
-(char)isNeuroSwitch;
-(void)setIsNeuroSwitch:(char)arg1 ;
-(BluetoothHIDDeviceController *)bluetoothHIDDeviceController;
-(void)setBluetoothHIDDeviceController:(BluetoothHIDDeviceController *)arg1 ;
-(char)isWiiUProController;
-(void)setIsWiiUProController:(char)arg1 ;
-(char)isPolyVision;
-(void)setIsPolyVision:(char)arg1 ;
-(NSXPCConnection *)xpcConnection;
-(void)setXpcConnection:(NSXPCConnection *)arg1 ;
-(IOBluetoothL2CAPChannel *)channel;
-(void)setChannel:(IOBluetoothL2CAPChannel *)arg1 ;
-(void)setSupportsAuthentication:(char)arg1 ;
-(char)supportsAuthentication;
-(void)setHostController:(IOBluetoothHostController *)arg1 ;
-(IOBluetoothHostController *)hostController;
@end

