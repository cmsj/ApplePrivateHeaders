/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreAudio/CoreAudio-Structs.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <CoreAudio/Core_Audio_Driver_Service_Client_Protocol.h>

@protocol Core_Audio_Driver_Service_Client_Callback_Delegate;
@class NSXPCConnection, NSXPCListener, NSXPCListenerEndpoint, NSString;

@interface Core_Audio_Driver_Service_Client : NSObject <NSXPCListenerDelegate, Core_Audio_Driver_Service_Client_Protocol> {

	NSXPCConnection* _connection_to_driver_service;
	queue _queue;
	id<Core_Audio_Driver_Service_Client_Callback_Delegate> _delegate;
	NSXPCListener* _listener;
	NSXPCListenerEndpoint* _endpoint;
	NSXPCConnection* _connection_from_driver_service;
	shared_ptr<std::__1::function<void (std::__1::shared_ptr<Driver_File>)>>* _driver_service_undertaker;
	shared_ptr<Driver_File>* _driver_file;

}

@property (nonatomic,retain) NSXPCConnection * connection_to_driver_service;                                                                   //@synthesize connection_to_driver_service=_connection_to_driver_service - In the implementation block
@property (nonatomic,retain) NSXPCConnection * connection_from_driver_service;                                                                 //@synthesize connection_from_driver_service=_connection_from_driver_service - In the implementation block
@property (nonatomic,retain) NSXPCListener * listener;                                                                                         //@synthesize listener=_listener - In the implementation block
@property (nonatomic,retain) NSXPCListenerEndpoint * endpoint;                                                                                 //@synthesize endpoint=_endpoint - In the implementation block
@property (assign,nonatomic) queue queue;                                                                                                      //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) id<Core_Audio_Driver_Service_Client_Callback_Delegate> delegate;                                                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) shared_ptr<std::__1::function<void (std::__1::shared_ptr<Driver_File>)>>* driver_service_undertaker;              //@synthesize driver_service_undertaker=_driver_service_undertaker - In the implementation block
@property (assign,nonatomic) shared_ptr<Driver_File>* driver_file;                                                                             //@synthesize driver_file=_driver_file - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)get_driver_name_list:(int)arg1 ;
-(void)dealloc;
-(id)init;
-(id<Core_Audio_Driver_Service_Client_Callback_Delegate>)delegate;
-(void)setDelegate:(id<Core_Audio_Driver_Service_Client_Callback_Delegate>)arg1 ;
-(char)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(NSXPCListener *)listener;
-(void)setListener:(NSXPCListener *)arg1 ;
-(queue)queue;
-(NSXPCListenerEndpoint *)endpoint;
-(void)teardown_connection;
-(void)setEndpoint:(NSXPCListenerEndpoint *)arg1 ;
-(void)deferred_driver_loaded:(id)arg1 reply:(/*^block*/id)arg2 ;
-(id)init_with_driver_service_undertaker:(shared_ptr<std::__1::function<void (std::__1::shared_ptr<Driver_File>)>>*)arg1 ;
-(void)send_endpoint_to_driver_service;
-(void)connect_to_driver_service:(shared_ptr<Driver_File>*)arg1 ;
-(id)get_lazy_connection:(shared_ptr<Driver_File>*)arg1 ;
-(int)load_driver:(shared_ptr<Driver_File>*)arg1 driver_endpoint:(id*)arg2 ;
-(void)tell_driver_service_to_exit;
-(NSXPCConnection *)connection_to_driver_service;
-(void)setConnection_to_driver_service:(NSXPCConnection *)arg1 ;
-(void)setQueue:(queue)arg1 ;
-(shared_ptr<std::__1::function<void (std::__1::shared_ptr<Driver_File>)>>*)driver_service_undertaker;
-(void)setDriver_service_undertaker:(shared_ptr<std::__1::function<void (std::__1::shared_ptr<Driver_File>)>>*)arg1 ;
-(shared_ptr<Driver_File>*)driver_file;
-(void)setDriver_file:(shared_ptr<Driver_File>*)arg1 ;
-(NSXPCConnection *)connection_from_driver_service;
-(void)setConnection_from_driver_service:(NSXPCConnection *)arg1 ;
@end

