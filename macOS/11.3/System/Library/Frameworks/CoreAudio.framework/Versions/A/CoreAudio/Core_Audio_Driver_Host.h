/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreAudio/CoreAudio-Structs.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <CoreAudio/Core_Audio_Driver_Host_Protocol.h>

@protocol Core_Audio_Driver_Host_Callback_Delegate;
@class NSXPCConnection, NSXPCListener, NSXPCListenerEndpoint, Protocol, NSString;

@interface Core_Audio_Driver_Host : NSObject <NSXPCListenerDelegate, Core_Audio_Driver_Host_Protocol> {

	NSXPCConnection* _connection_to_driver;
	NSXPCConnection* _connection_from_driver;
	NSXPCListener* _listener;
	NSXPCListenerEndpoint* _endpoint;
	id<Core_Audio_Driver_Host_Callback_Delegate> _delegate;
	unsigned long long _current_config_change_token;
	Protocol* _driver_protocol;
	Protocol* _driver_host_protocol;
	NSXPCListenerEndpoint* _driver_endpoint;
	shared_ptr<Property_Type_Info>* _m_custom_property_type_cache;
	shared_ptr<caulk::mach::unfair_lock>* _config_change_lock;

}

@property (nonatomic,retain) NSXPCConnection * connection_to_driver;                                  //@synthesize connection_to_driver=_connection_to_driver - In the implementation block
@property (nonatomic,retain) NSXPCConnection * connection_from_driver;                                //@synthesize connection_from_driver=_connection_from_driver - In the implementation block
@property (nonatomic,retain) NSXPCListener * listener;                                                //@synthesize listener=_listener - In the implementation block
@property (nonatomic,retain) NSXPCListenerEndpoint * endpoint;                                        //@synthesize endpoint=_endpoint - In the implementation block
@property (nonatomic,retain) NSXPCListenerEndpoint * driver_endpoint;                                 //@synthesize driver_endpoint=_driver_endpoint - In the implementation block
@property (nonatomic,retain) id<Core_Audio_Driver_Host_Callback_Delegate> delegate;                   //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) shared_ptr<caulk::mach::unfair_lock>* config_change_lock;              //@synthesize config_change_lock=_config_change_lock - In the implementation block
@property (assign,nonatomic) unsigned long long current_config_change_token;                          //@synthesize current_config_change_token=_current_config_change_token - In the implementation block
@property (nonatomic,retain) Protocol * driver_host_protocol;                                         //@synthesize driver_host_protocol=_driver_host_protocol - In the implementation block
@property (nonatomic,retain) Protocol * driver_protocol;                                              //@synthesize driver_protocol=_driver_protocol - In the implementation block
@property (assign,nonatomic) shared_ptr<Property_Type_Info>* m_property_type_info;                    //@synthesize m_custom_property_type_cache=_m_custom_property_type_cache - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(id<Core_Audio_Driver_Host_Callback_Delegate>)delegate;
-(void)setDelegate:(id<Core_Audio_Driver_Host_Callback_Delegate>)arg1 ;
-(char)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(NSXPCListener *)listener;
-(void)setListener:(NSXPCListener *)arg1 ;
-(NSXPCListenerEndpoint *)endpoint;
-(void)object_properties_changed:(unsigned)arg1 properties_data:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)request_config_change:(unsigned)arg1 change_action:(unsigned long long)arg2 reply:(/*^block*/id)arg3 ;
-(void)write_storage_settings:(id)arg1 storage_data:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)copy_storage_settings:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)delete_storage_settings:(id)arg1 reply:(/*^block*/id)arg2 ;
-(id)init_with_delegate:(id)arg1 ;
-(void)teardown_connection;
-(int)initialize_driver:(id)arg1 ;
-(int)perform_device_configuration_change:(unsigned)arg1 action:(unsigned long long)arg2 change:(unsigned long long)arg3 ;
-(int)abort_device_configuration_change:(unsigned)arg1 action:(unsigned long long)arg2 change:(unsigned long long)arg3 ;
-(int)add_device_client:(unsigned)arg1 client_info:(const AudioServerPlugInClientInfo*)arg2 io_messenger:(id)arg3 work_group_port:(unsigned)arg4 ;
-(int)remove_device_client:(unsigned)arg1 client_info:(const AudioServerPlugInClientInfo*)arg2 ;
-(int)create_device:(id)arg1 client_info:(const AudioServerPlugInClientInfo*)arg2 out_object_id:(unsigned*)arg3 ;
-(int)destroy_device:(unsigned)arg1 ;
-(int)start_io:(unsigned)arg1 client_info:(unsigned)arg2 ;
-(int)stop_io:(unsigned)arg1 client_info:(unsigned)arg2 ;
-(int)start_synchronous_messenger:(unsigned)arg1 client_id:(unsigned)arg2 nominal_sample_rate:(double)arg3 io_buffer_frame_size:(unsigned)arg4 ;
-(int)stop_synchronous_messenger:(unsigned)arg1 client_id:(unsigned)arg2 ;
-(void)retain_reply_for_process_boost;
-(int)register_buffer:(id)arg1 ;
-(int)unregister_buffer:(id)arg1 ;
-(int)has_property:(Driver_Property_Identity)arg1 out_has_property:(char*)arg2 ;
-(int)is_property_settable:(Driver_Property_Identity)arg1 out_settable:(char*)arg2 ;
-(int)get_property_data_size:(Driver_Property_Identity)arg1 qualifier_data_size:(unsigned)arg2 qualifier_data:(const void*)arg3 out_size:(unsigned*)arg4 ;
-(int)get_property_data:(Driver_Property_Identity)arg1 qualifier_data_size:(unsigned)arg2 qualifier_data:(const void*)arg3 data_size:(unsigned)arg4 out_data_size:(unsigned*)arg5 out_data:(void*)arg6 ;
-(int)set_property_data:(Driver_Property_Identity)arg1 qualifier_data_size:(unsigned)arg2 qualifier_data:(const void*)arg3 data_size:(unsigned)arg4 data:(const void*)arg5 ;
-(NSXPCConnection *)connection_to_driver;
-(void)setConnection_to_driver:(NSXPCConnection *)arg1 ;
-(NSXPCConnection *)connection_from_driver;
-(void)setConnection_from_driver:(NSXPCConnection *)arg1 ;
-(void)setEndpoint:(NSXPCListenerEndpoint *)arg1 ;
-(unsigned long long)current_config_change_token;
-(void)setCurrent_config_change_token:(unsigned long long)arg1 ;
-(Protocol *)driver_protocol;
-(void)setDriver_protocol:(Protocol *)arg1 ;
-(Protocol *)driver_host_protocol;
-(void)setDriver_host_protocol:(Protocol *)arg1 ;
-(shared_ptr<Property_Type_Info>*)m_property_type_info;
-(void)setM_property_type_info:(shared_ptr<Property_Type_Info>*)arg1 ;
-(NSXPCListenerEndpoint *)driver_endpoint;
-(void)setDriver_endpoint:(NSXPCListenerEndpoint *)arg1 ;
-(shared_ptr<caulk::mach::unfair_lock>*)config_change_lock;
@end

