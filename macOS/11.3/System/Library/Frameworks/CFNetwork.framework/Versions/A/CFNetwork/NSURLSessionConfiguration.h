/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:02 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CFNetwork/CFNetwork-Structs.h>
#import <libobjc.A.dylib/NSMutableCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol NSURLSessionAppleIDContext;
@class NSString, NSDictionary, NSArray, NSURL, NSData, NSNumber, NSURLCredentialStorage, NSURLCache, NSHTTPCookieStorage, _NSHSTSStorage, NSSet, _NSHTTPAlternativeServicesStorage;

@interface NSURLSessionConfiguration : NSObject <NSMutableCopying, NSSecureCoding, NSCopying> {

	char _allowsCellularAccess;
	char _allowsExpensiveNetworkAccess;
	char _allowsConstrainedNetworkAccessAPI;
	char _waitsForConnectivity;
	char _discretionary;
	char _sessionSendsLaunchEvents;
	char _HTTPShouldUsePipelining;
	char _HTTPShouldSetCookies;
	char _shouldUseExtendedBackgroundIdleMode;
	char _requiresPowerPluggedIn;
	char _reportsDataStalls;
	char _allowsExpensiveAccess;
	char _allowsConstrainedNetworkAccessSPI;
	char _allowsPowerNapScheduling;
	char _preventsIdleSleepOnceConnected;
	char _sessionSendsLaunchOnDemandEvents;
	char _shouldSkipPreferredClientCertificateLookup;
	char _allowsRetryForBackgroundDataTasks;
	char _onBehalfOfPairedDevice;
	char _clientIsNotExplicitlyDiscretionary;
	char _respectsAllowsCellularAccessForDiscretionaryTasks;
	char _overridesBackgroundSessionAutoRedirect;
	char _performsEVCertCheck;
	char _infersDiscretionaryFromOriginatingClient;
	char _prefersInfraWiFi;
	char _allowsMultipathTCP;
	char _allowsResponseMonitoringDuringBodyTranmission;
	char _allowsIndefiniteConnections;
	char _allowsTCPFastOpen;
	char _allowsTLSSessionTickets;
	char _allowsTLSSessionResumption;
	char _allowsTLSFalseStart;
	char _allowsTLSFallback;
	char _preventsDirectWiFiAccess;
	char _allowTCPIOConnectionStreamTask;
	char _preventsSystemHTTPProxyAuthentication;
	char _requiresSecureHTTPSProxyConnection;
	char _preventsAppSSO;
	char _allowsReachabilityCheck;
	char _duetPreauthorized;
	char _requiresSustainedDataDelivery;
	char _ignoreDidReceiveResponseDisposition;
	char _alwaysPerformDefaultTrustEvaluation;
	char _backgroundSession;
	char _phskip_credStorageSet;
	char _phskip_urlCacheSet;
	char _phskip_cookieStorageSet;
	char _phskip_hstsStorageSet;
	char _skip_download_unlink;
	char _requiresClientToOpenFiles;
	char _forcesNewConnections;
	char _supportsAVAssetDownloads;
	char _proxySession;
	char _preventsIdleSleep;
	char _usePipeliningHeuristics;
	char _shouldPreserveBackgroundSessionDisposition;
	char _disablesOutOfProcessDirectWiFiUsage;
	char _disablesUseOfProxySession;
	char _allowsHTTP3;
	char _phskip_alternativeServicesStorageSet;
	char __allowsWCA;
	int _TLSMinimumSupportedProtocol;
	int _TLSMaximumSupportedProtocol;
	int _loggingPrivacyLevel;
	NSString* _identifier;
	unsigned long long _requestCachePolicy;
	double _timeoutIntervalForRequest;
	double _timeoutIntervalForResource;
	unsigned long long _networkServiceType;
	NSString* _sharedContainerIdentifier;
	NSDictionary* _connectionProxyDictionary;
	unsigned long long _HTTPCookieAcceptPolicy;
	NSDictionary* _HTTPAdditionalHeaders;
	long long _HTTPMaximumConnectionsPerHost;
	NSArray* _protocolClasses;
	NSURL* _directoryForDownloadedFiles;
	NSString* _sourceApplicationBundleIdentifier;
	NSString* _sourceApplicationSecondaryIdentifier;
	NSData* _sourceApplicationAuditTokenData;
	unsigned long long _TCPAdaptiveReadTimeout;
	unsigned long long _TCPAdaptiveWriteTimeout;
	long long _timingDataOptions;
	id<NSURLSessionAppleIDContext> _appleIDContext;
	NSData* _atsContext;
	double _connectionCachePurgeTimeout;
	double _connectionCacheCellPurgeTimeout;
	double _longLivedConnectionCachePurgeTimeout;
	double _longLivedConnectionCacheCellPurgeTimeout;
	NSString* _connectionPoolName;
	NSString* _CTDataConnectionServiceType;
	NSString* _tlsTrustPinningPolicyName;
	unsigned long long _customReadBufferSize;
	double _customReadBufferTimeout;
	long long _duetPreClearedMode;
	long long _IDSMessageTimeout;
	NSNumber* _maximumWatchCellularTransferSize;
	unsigned long long _multipathAlternatePort;
	NSString* _disposition;
	NSURLCredentialStorage* _phskip_credStorage;
	NSURLCache* _phskip_urlCache;
	NSHTTPCookieStorage* _phskip_cookieStorage;
	_NSHSTSStorage* _phskip_hstsStorage;
	long long _pipeliningHighWatermark;
	long long _pipeliningLowWatermark;
	long long _numPriorityLevels;
	long long _numFastLanes;
	long long _minimumFastLanePriority;
	NSString* _tcpConnectionPoolName;
	NSDictionary* _socketStreamProperties;
	NSSet* _authenticatorStatusCodes;
	NSArray* _contentDispHeadEncFallback;
	NSString* _companionAppBundleIdentifier;
	NSString* _watchAppBundleIdentifier;
	NSString* _watchExtensionBundleIdentifier;
	unsigned long long _forcedNetworkServiceType;
	NSDictionary* _overriddenDelegateOptions;
	NSSet* _suppressedAutoAddedHTTPHeaders;
	long long _expiredDNSBehavior;
	_NSHTTPAlternativeServicesStorage* _phskip_alternativeServicesStorage;
	long long _multipathServiceType;
	long long __companionProxyPreference;

}

@property (copy) NSString * identifier;                                                                 //@synthesize identifier=_identifier - In the implementation block
@property (getter=isBackgroundSession) char backgroundSession;                                          //@synthesize backgroundSession=_backgroundSession - In the implementation block
@property (assign) NSString * disposition;                                                              //@synthesize disposition=_disposition - In the implementation block
@property (retain) NSURLCredentialStorage * _phskip_credStorage;                                        //@synthesize phskip_credStorage=_phskip_credStorage - In the implementation block
@property (assign) char _phskip_credStorageSet;                                                         //@synthesize phskip_credStorageSet=_phskip_credStorageSet - In the implementation block
@property (retain) NSURLCache * _phskip_urlCache;                                                       //@synthesize phskip_urlCache=_phskip_urlCache - In the implementation block
@property (assign) char _phskip_urlCacheSet;                                                            //@synthesize phskip_urlCacheSet=_phskip_urlCacheSet - In the implementation block
@property (retain) NSHTTPCookieStorage * _phskip_cookieStorage;                                         //@synthesize phskip_cookieStorage=_phskip_cookieStorage - In the implementation block
@property (assign) char _phskip_cookieStorageSet;                                                       //@synthesize phskip_cookieStorageSet=_phskip_cookieStorageSet - In the implementation block
@property (retain) _NSHSTSStorage * _phskip_hstsStorage;                                                //@synthesize phskip_hstsStorage=_phskip_hstsStorage - In the implementation block
@property (assign) char _phskip_hstsStorageSet;                                                         //@synthesize phskip_hstsStorageSet=_phskip_hstsStorageSet - In the implementation block
@property (assign) long long pipeliningHighWatermark;                                                   //@synthesize pipeliningHighWatermark=_pipeliningHighWatermark - In the implementation block
@property (assign) long long pipeliningLowWatermark;                                                    //@synthesize pipeliningLowWatermark=_pipeliningLowWatermark - In the implementation block
@property (assign) long long numPriorityLevels;                                                         //@synthesize numPriorityLevels=_numPriorityLevels - In the implementation block
@property (assign) long long numFastLanes;                                                              //@synthesize numFastLanes=_numFastLanes - In the implementation block
@property (assign) long long minimumFastLanePriority;                                                   //@synthesize minimumFastLanePriority=_minimumFastLanePriority - In the implementation block
@property (assign) char skip_download_unlink;                                                           //@synthesize skip_download_unlink=_skip_download_unlink - In the implementation block
@property (assign) char _requiresClientToOpenFiles;                                                     //@synthesize requiresClientToOpenFiles=_requiresClientToOpenFiles - In the implementation block
@property (copy) NSString * _tcpConnectionPoolName;                                                     //@synthesize tcpConnectionPoolName=_tcpConnectionPoolName - In the implementation block
@property (assign) char _forcesNewConnections;                                                          //@synthesize forcesNewConnections=_forcesNewConnections - In the implementation block
@property (copy) NSDictionary * _socketStreamProperties;                                                //@synthesize socketStreamProperties=_socketStreamProperties - In the implementation block
@property (assign) char _supportsAVAssetDownloads;                                                      //@synthesize supportsAVAssetDownloads=_supportsAVAssetDownloads - In the implementation block
@property (getter=_isProxySession) char _proxySession;                                                  //@synthesize proxySession=_proxySession - In the implementation block
@property (copy) NSSet * _authenticatorStatusCodes;                                                     //@synthesize authenticatorStatusCodes=_authenticatorStatusCodes - In the implementation block
@property (assign) char _preventsIdleSleep;                                                             //@synthesize preventsIdleSleep=_preventsIdleSleep - In the implementation block
@property (assign) char _usePipeliningHeuristics;                                                       //@synthesize usePipeliningHeuristics=_usePipeliningHeuristics - In the implementation block
@property (copy) NSArray * _contentDispHeadEncFallback;                                                 //@synthesize contentDispHeadEncFallback=_contentDispHeadEncFallback - In the implementation block
@property (assign) char _shouldPreserveBackgroundSessionDisposition;                                    //@synthesize shouldPreserveBackgroundSessionDisposition=_shouldPreserveBackgroundSessionDisposition - In the implementation block
@property (assign) char _disablesOutOfProcessDirectWiFiUsage;                                           //@synthesize disablesOutOfProcessDirectWiFiUsage=_disablesOutOfProcessDirectWiFiUsage - In the implementation block
@property (assign) char _disablesUseOfProxySession;                                                     //@synthesize disablesUseOfProxySession=_disablesUseOfProxySession - In the implementation block
@property (copy) NSString * _companionAppBundleIdentifier;                                              //@synthesize companionAppBundleIdentifier=_companionAppBundleIdentifier - In the implementation block
@property (copy) NSString * _watchAppBundleIdentifier;                                                  //@synthesize watchAppBundleIdentifier=_watchAppBundleIdentifier - In the implementation block
@property (copy) NSString * _watchExtensionBundleIdentifier;                                            //@synthesize watchExtensionBundleIdentifier=_watchExtensionBundleIdentifier - In the implementation block
@property (assign) unsigned long long _forcedNetworkServiceType;                                        //@synthesize forcedNetworkServiceType=_forcedNetworkServiceType - In the implementation block
@property (copy) NSDictionary * _overriddenDelegateOptions;                                             //@synthesize overriddenDelegateOptions=_overriddenDelegateOptions - In the implementation block
@property (retain) _NSHTTPAlternativeServicesStorage * _phskip_alternativeServicesStorage;              //@synthesize phskip_alternativeServicesStorage=_phskip_alternativeServicesStorage - In the implementation block
@property (assign) char _phskip_alternativeServicesStorageSet;                                          //@synthesize phskip_alternativeServicesStorageSet=_phskip_alternativeServicesStorageSet - In the implementation block
@property (assign) char _requiresPowerPluggedIn;                                                        //@synthesize requiresPowerPluggedIn=_requiresPowerPluggedIn - In the implementation block
@property (copy) NSURL * _directoryForDownloadedFiles;                                                  //@synthesize directoryForDownloadedFiles=_directoryForDownloadedFiles - In the implementation block
@property (copy) NSString * _sourceApplicationBundleIdentifier;                                         //@synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier - In the implementation block
@property (copy) NSString * _sourceApplicationSecondaryIdentifier;                                      //@synthesize sourceApplicationSecondaryIdentifier=_sourceApplicationSecondaryIdentifier - In the implementation block
@property (copy) NSData * _sourceApplicationAuditTokenData;                                             //@synthesize sourceApplicationAuditTokenData=_sourceApplicationAuditTokenData - In the implementation block
@property (assign) unsigned long long _TCPAdaptiveReadTimeout;                                          //@synthesize TCPAdaptiveReadTimeout=_TCPAdaptiveReadTimeout - In the implementation block
@property (assign) unsigned long long _TCPAdaptiveWriteTimeout;                                         //@synthesize TCPAdaptiveWriteTimeout=_TCPAdaptiveWriteTimeout - In the implementation block
@property (assign) char _reportsDataStalls;                                                             //@synthesize reportsDataStalls=_reportsDataStalls - In the implementation block
@property (assign) char _allowsExpensiveAccess;                                                         //@synthesize allowsExpensiveAccess=_allowsExpensiveAccess - In the implementation block
@property (assign) char _allowsConstrainedNetworkAccess;                                                //@synthesize allowsConstrainedNetworkAccessSPI=_allowsConstrainedNetworkAccessSPI - In the implementation block
@property (assign) unsigned long long _multipathAlternatePort;                                          //@synthesize multipathAlternatePort=_multipathAlternatePort - In the implementation block
@property (assign) char _allowsPowerNapScheduling;                                                      //@synthesize allowsPowerNapScheduling=_allowsPowerNapScheduling - In the implementation block
@property (assign) char _preventsIdleSleepOnceConnected;                                                //@synthesize preventsIdleSleepOnceConnected=_preventsIdleSleepOnceConnected - In the implementation block
@property (assign) char _sessionSendsLaunchOnDemandEvents;                                              //@synthesize sessionSendsLaunchOnDemandEvents=_sessionSendsLaunchOnDemandEvents - In the implementation block
@property (assign) long long _timingDataOptions;                                                        //@synthesize timingDataOptions=_timingDataOptions - In the implementation block
@property (assign) char _shouldSkipPreferredClientCertificateLookup;                                    //@synthesize shouldSkipPreferredClientCertificateLookup=_shouldSkipPreferredClientCertificateLookup - In the implementation block
@property (copy) id<NSURLSessionAppleIDContext> _appleIDContext;                                        //@synthesize appleIDContext=_appleIDContext - In the implementation block
@property (copy) NSData * _atsContext;                                                                  //@synthesize atsContext=_atsContext - In the implementation block
@property (assign) double _connectionCachePurgeTimeout;                                                 //@synthesize connectionCachePurgeTimeout=_connectionCachePurgeTimeout - In the implementation block
@property (assign) double _connectionCacheCellPurgeTimeout;                                             //@synthesize connectionCacheCellPurgeTimeout=_connectionCacheCellPurgeTimeout - In the implementation block
@property (assign) double _longLivedConnectionCachePurgeTimeout;                                        //@synthesize longLivedConnectionCachePurgeTimeout=_longLivedConnectionCachePurgeTimeout - In the implementation block
@property (assign) double _longLivedConnectionCacheCellPurgeTimeout;                                    //@synthesize longLivedConnectionCacheCellPurgeTimeout=_longLivedConnectionCacheCellPurgeTimeout - In the implementation block
@property (assign) long long _connectionCacheNumPriorityLevels; 
@property (assign) long long _connectionCacheNumFastLanes; 
@property (assign) long long _connectionCacheMinimumFastLanePriority; 
@property (assign) char _allowsRetryForBackgroundDataTasks;                                             //@synthesize allowsRetryForBackgroundDataTasks=_allowsRetryForBackgroundDataTasks - In the implementation block
@property (assign) char _onBehalfOfPairedDevice;                                                        //@synthesize onBehalfOfPairedDevice=_onBehalfOfPairedDevice - In the implementation block
@property (assign) char _clientIsNotExplicitlyDiscretionary;                                            //@synthesize clientIsNotExplicitlyDiscretionary=_clientIsNotExplicitlyDiscretionary - In the implementation block
@property (assign) char _respectsAllowsCellularAccessForDiscretionaryTasks;                             //@synthesize respectsAllowsCellularAccessForDiscretionaryTasks=_respectsAllowsCellularAccessForDiscretionaryTasks - In the implementation block
@property (assign) char _allowsWCA;                                                                     //@synthesize _allowsWCA=__allowsWCA - In the implementation block
@property (copy) NSNumber * _maximumWatchCellularTransferSize;                                          //@synthesize maximumWatchCellularTransferSize=_maximumWatchCellularTransferSize - In the implementation block
@property (assign) char _overridesBackgroundSessionAutoRedirect;                                        //@synthesize overridesBackgroundSessionAutoRedirect=_overridesBackgroundSessionAutoRedirect - In the implementation block
@property (assign) char _performsEVCertCheck;                                                           //@synthesize performsEVCertCheck=_performsEVCertCheck - In the implementation block
@property (assign) char _infersDiscretionaryFromOriginatingClient;                                      //@synthesize infersDiscretionaryFromOriginatingClient=_infersDiscretionaryFromOriginatingClient - In the implementation block
@property (copy) NSString * _connectionPoolName;                                                        //@synthesize connectionPoolName=_connectionPoolName - In the implementation block
@property (assign) char _prefersInfraWiFi;                                                              //@synthesize prefersInfraWiFi=_prefersInfraWiFi - In the implementation block
@property (assign) char _allowsMultipathTCP;                                                            //@synthesize allowsMultipathTCP=_allowsMultipathTCP - In the implementation block
@property (assign) char _allowsResponseMonitoringDuringBodyTranmission;                                 //@synthesize allowsResponseMonitoringDuringBodyTranmission=_allowsResponseMonitoringDuringBodyTranmission - In the implementation block
@property (assign) char _allowsIndefiniteConnections;                                                   //@synthesize allowsIndefiniteConnections=_allowsIndefiniteConnections - In the implementation block
@property (copy) NSString * _CTDataConnectionServiceType;                                               //@synthesize CTDataConnectionServiceType=_CTDataConnectionServiceType - In the implementation block
@property (assign) char _allowsTCPFastOpen;                                                             //@synthesize allowsTCPFastOpen=_allowsTCPFastOpen - In the implementation block
@property (assign) char _allowsTLSSessionTickets;                                                       //@synthesize allowsTLSSessionTickets=_allowsTLSSessionTickets - In the implementation block
@property (assign) char _allowsTLSSessionResumption;                                                    //@synthesize allowsTLSSessionResumption=_allowsTLSSessionResumption - In the implementation block
@property (assign) char _allowsTLSFalseStart;                                                           //@synthesize allowsTLSFalseStart=_allowsTLSFalseStart - In the implementation block
@property (copy) NSString * _tlsTrustPinningPolicyName;                                                 //@synthesize tlsTrustPinningPolicyName=_tlsTrustPinningPolicyName - In the implementation block
@property (assign) char _allowsTLSFallback;                                                             //@synthesize allowsTLSFallback=_allowsTLSFallback - In the implementation block
@property (assign) char _preventsDirectWiFiAccess;                                                      //@synthesize preventsDirectWiFiAccess=_preventsDirectWiFiAccess - In the implementation block
@property (assign) char _allowTCPIOConnectionStreamTask;                                                //@synthesize allowTCPIOConnectionStreamTask=_allowTCPIOConnectionStreamTask - In the implementation block
@property (assign) unsigned long long _customReadBufferSize;                                            //@synthesize customReadBufferSize=_customReadBufferSize - In the implementation block
@property (assign) double _customReadBufferTimeout;                                                     //@synthesize customReadBufferTimeout=_customReadBufferTimeout - In the implementation block
@property (assign) char _preventsSystemHTTPProxyAuthentication;                                         //@synthesize preventsSystemHTTPProxyAuthentication=_preventsSystemHTTPProxyAuthentication - In the implementation block
@property (assign) char _requiresSecureHTTPSProxyConnection;                                            //@synthesize requiresSecureHTTPSProxyConnection=_requiresSecureHTTPSProxyConnection - In the implementation block
@property (assign) char _duetPreauthorized;                                                             //@synthesize duetPreauthorized=_duetPreauthorized - In the implementation block
@property (assign) long long _duetPreClearedMode;                                                       //@synthesize duetPreClearedMode=_duetPreClearedMode - In the implementation block
@property (assign) char _requiresSustainedDataDelivery;                                                 //@synthesize requiresSustainedDataDelivery=_requiresSustainedDataDelivery - In the implementation block
@property (assign) char _ignoreDidReceiveResponseDisposition;                                           //@synthesize ignoreDidReceiveResponseDisposition=_ignoreDidReceiveResponseDisposition - In the implementation block
@property (assign) char _alwaysPerformDefaultTrustEvaluation;                                           //@synthesize alwaysPerformDefaultTrustEvaluation=_alwaysPerformDefaultTrustEvaluation - In the implementation block
@property (copy) NSSet * _suppressedAutoAddedHTTPHeaders;                                               //@synthesize suppressedAutoAddedHTTPHeaders=_suppressedAutoAddedHTTPHeaders - In the implementation block
@property (assign) long long _expiredDNSBehavior;                                                       //@synthesize expiredDNSBehavior=_expiredDNSBehavior - In the implementation block
@property (assign) long long _IDSMessageTimeout;                                                        //@synthesize IDSMessageTimeout=_IDSMessageTimeout - In the implementation block
@property (assign) long long _companionProxyPreference;                                                 //@synthesize _companionProxyPreference=__companionProxyPreference - In the implementation block
@property (assign) char _preventsAppSSO;                                                                //@synthesize preventsAppSSO=_preventsAppSSO - In the implementation block
@property (assign) char _allowsSensitiveLogging; 
@property (assign) char _allowsReachabilityCheck;                                                       //@synthesize allowsReachabilityCheck=_allowsReachabilityCheck - In the implementation block
@property (assign) char _allowsHTTP3;                                                                   //@synthesize allowsHTTP3=_allowsHTTP3 - In the implementation block
@property (retain) _NSHTTPAlternativeServicesStorage * _alternativeServicesStorage; 
@property (retain) _NSHSTSStorage * _hstsStorage; 
@property (assign) int _loggingPrivacyLevel;                                                            //@synthesize loggingPrivacyLevel=_loggingPrivacyLevel - In the implementation block
@property (assign) unsigned long long requestCachePolicy;                                               //@synthesize requestCachePolicy=_requestCachePolicy - In the implementation block
@property (assign) double timeoutIntervalForRequest;                                                    //@synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest - In the implementation block
@property (assign) double timeoutIntervalForResource;                                                   //@synthesize timeoutIntervalForResource=_timeoutIntervalForResource - In the implementation block
@property (assign) unsigned long long networkServiceType;                                               //@synthesize networkServiceType=_networkServiceType - In the implementation block
@property (assign) char allowsCellularAccess;                                                           //@synthesize allowsCellularAccess=_allowsCellularAccess - In the implementation block
@property (assign) char allowsExpensiveNetworkAccess;                                                   //@synthesize allowsExpensiveNetworkAccess=_allowsExpensiveNetworkAccess - In the implementation block
@property (assign) char allowsConstrainedNetworkAccess;                                                 //@synthesize allowsConstrainedNetworkAccessAPI=_allowsConstrainedNetworkAccessAPI - In the implementation block
@property (assign) char waitsForConnectivity;                                                           //@synthesize waitsForConnectivity=_waitsForConnectivity - In the implementation block
@property (getter=isDiscretionary) char discretionary;                                                  //@synthesize discretionary=_discretionary - In the implementation block
@property (copy) NSString * sharedContainerIdentifier;                                                  //@synthesize sharedContainerIdentifier=_sharedContainerIdentifier - In the implementation block
@property (assign) char sessionSendsLaunchEvents;                                                       //@synthesize sessionSendsLaunchEvents=_sessionSendsLaunchEvents - In the implementation block
@property (copy) NSDictionary * connectionProxyDictionary;                                              //@synthesize connectionProxyDictionary=_connectionProxyDictionary - In the implementation block
@property (assign) int TLSMinimumSupportedProtocol;                                                     //@synthesize TLSMinimumSupportedProtocol=_TLSMinimumSupportedProtocol - In the implementation block
@property (assign) int TLSMaximumSupportedProtocol;                                                     //@synthesize TLSMaximumSupportedProtocol=_TLSMaximumSupportedProtocol - In the implementation block
@property (assign) unsigned short TLSMinimumSupportedProtocolVersion; 
@property (assign) unsigned short TLSMaximumSupportedProtocolVersion; 
@property (assign) char HTTPShouldUsePipelining;                                                        //@synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining - In the implementation block
@property (assign) char HTTPShouldSetCookies;                                                           //@synthesize HTTPShouldSetCookies=_HTTPShouldSetCookies - In the implementation block
@property (assign) unsigned long long HTTPCookieAcceptPolicy;                                           //@synthesize HTTPCookieAcceptPolicy=_HTTPCookieAcceptPolicy - In the implementation block
@property (copy) NSDictionary * HTTPAdditionalHeaders;                                                  //@synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders - In the implementation block
@property (assign) long long HTTPMaximumConnectionsPerHost;                                             //@synthesize HTTPMaximumConnectionsPerHost=_HTTPMaximumConnectionsPerHost - In the implementation block
@property (retain) NSHTTPCookieStorage * HTTPCookieStorage; 
@property (retain) NSURLCredentialStorage * URLCredentialStorage; 
@property (retain) NSURLCache * URLCache; 
@property (assign) char shouldUseExtendedBackgroundIdleMode;                                            //@synthesize shouldUseExtendedBackgroundIdleMode=_shouldUseExtendedBackgroundIdleMode - In the implementation block
@property (copy) NSArray * protocolClasses;                                                             //@synthesize protocolClasses=_protocolClasses - In the implementation block
@property (assign) long long multipathServiceType;                                                      //@synthesize multipathServiceType=_multipathServiceType - In the implementation block
+(id)_defaultProtocolClasses;
+(id)sessionConfigurationForSharedSession;
+(id)_AVBackgroundSessionConfigurationWithIdentifier:(id)arg1 ;
+(id)AVBackgroundSessionConfigurationWithIdentifier:(id)arg1 ;
+(id)backgroundSessionConfiguration:(id)arg1 ;
+(void)initialize;
+(id)new;
+(char)supportsSecureCoding;
+(id)defaultSessionConfiguration;
+(id)ephemeralSessionConfiguration;
+(id)backgroundSessionConfigurationWithIdentifier:(id)arg1 ;
-(void)geo_configureWithRequest:(id)arg1 ;
-(char)geo_isCompatibleWithRequest:(id)arg1 ;
-(void)geo_setApplicationAttribution:(id)arg1 ;
-(char)geo_hasApplicationAttribution:(id)arg1 ;
-(NSURLCredentialStorage *)URLCredentialStorage;
-(HTTPConnectionCacheLimits)getConnectionCacheLimits;
-(CFHSTSPolicyRef)copyHSTSPolicy;
-(char)_preventsAppSSO;
-(char)_requiresClientToOpenFiles;
-(char)skip_download_unlink;
-(NSSet *)_suppressedAutoAddedHTTPHeaders;
-(void*)_copyAttribute:(CFStringRef)arg1 ;
-(char)_isProxySession;
-(NSDictionary *)_overriddenDelegateOptions;
-(unsigned long long)HTTPCookieAcceptPolicy;
-(char)HTTPShouldSetCookies;
-(char)_overridesBackgroundSessionAutoRedirect;
-(char)_allowTCPIOConnectionStreamTask;
-(char)_preventsSystemHTTPProxyAuthentication;
-(id)copyImmutableVariant:(/*^block*/id)arg1 ;
-(void)set_supportsAVAssetDownloads:(char)arg1 ;
-(char)shouldUseExtendedBackgroundIdleMode;
-(unsigned long long)_forcedNetworkServiceType;
-(NSString *)_companionAppBundleIdentifier;
-(NSString *)_tcpConnectionPoolName;
-(char)_forcesNewConnections;
-(char)_preventsIdleSleepOnceConnected;
-(char)_allowsIndefiniteConnections;
-(char)_allowsResponseMonitoringDuringBodyTranmission;
-(unsigned long long)_customReadBufferSize;
-(double)_customReadBufferTimeout;
-(char)_allowsTLSSessionResumption;
-(long long)_expiredDNSBehavior;
-(char)_allowsWCA;
-(char)_allowsHTTP3;
-(double)_connectionCacheCellPurgeTimeout;
-(NSURLCredentialStorage *)_phskip_credStorage;
-(char)_phskip_credStorageSet;
-(NSURLCache *)_phskip_urlCache;
-(char)_phskip_urlCacheSet;
-(NSHTTPCookieStorage *)_phskip_cookieStorage;
-(char)_phskip_cookieStorageSet;
-(_NSHSTSStorage *)_phskip_hstsStorage;
-(char)_phskip_hstsStorageSet;
-(long long)pipeliningHighWatermark;
-(long long)pipeliningLowWatermark;
-(long long)numPriorityLevels;
-(long long)numFastLanes;
-(long long)minimumFastLanePriority;
-(char)_preventsIdleSleep;
-(char)_usePipeliningHeuristics;
-(NSArray *)_contentDispHeadEncFallback;
-(char)_shouldPreserveBackgroundSessionDisposition;
-(char)_disablesOutOfProcessDirectWiFiUsage;
-(char)_disablesUseOfProxySession;
-(NSString *)_watchAppBundleIdentifier;
-(_NSHTTPAlternativeServicesStorage *)_phskip_alternativeServicesStorage;
-(char)_phskip_alternativeServicesStorageSet;
-(double)_connectionCachePurgeTimeout;
-(double)_longLivedConnectionCachePurgeTimeout;
-(double)_longLivedConnectionCacheCellPurgeTimeout;
-(long long)_connectionCacheNumPriorityLevels;
-(long long)_connectionCacheNumFastLanes;
-(long long)_connectionCacheMinimumFastLanePriority;
-(char)_preventsDirectWiFiAccess;
-(long long)_companionProxyPreference;
-(char)_allowsSensitiveLogging;
-(unsigned short)TLSMinimumSupportedProtocolVersion;
-(unsigned short)TLSMaximumSupportedProtocolVersion;
-(void)set_connectionCacheNumPriorityLevels:(long long)arg1 ;
-(void)set_connectionCacheNumFastLanes:(long long)arg1 ;
-(void)set_connectionCacheMinimumFastLanePriority:(long long)arg1 ;
-(void)set_allowsSensitiveLogging:(char)arg1 ;
-(void)set_longLivedConnectionCacheCellPurgeTimeout:(double)arg1 ;
-(void)set_prefersInfraWiFi:(char)arg1 ;
-(void)set_allowsResponseMonitoringDuringBodyTranmission:(char)arg1 ;
-(void)set_allowsIndefiniteConnections:(char)arg1 ;
-(void)set_allowsTLSSessionResumption:(char)arg1 ;
-(void)set_preventsDirectWiFiAccess:(char)arg1 ;
-(void)set_customReadBufferSize:(unsigned long long)arg1 ;
-(void)set_customReadBufferTimeout:(double)arg1 ;
-(char)isBackgroundSession;
-(void)set_phskip_credStorage:(NSURLCredentialStorage *)arg1 ;
-(void)set_phskip_credStorageSet:(char)arg1 ;
-(void)set_phskip_urlCache:(NSURLCache *)arg1 ;
-(void)set_phskip_urlCacheSet:(char)arg1 ;
-(void)set_phskip_cookieStorage:(NSHTTPCookieStorage *)arg1 ;
-(void)set_phskip_cookieStorageSet:(char)arg1 ;
-(void)set_phskip_hstsStorage:(_NSHSTSStorage *)arg1 ;
-(void)set_phskip_hstsStorageSet:(char)arg1 ;
-(void)setPipeliningHighWatermark:(long long)arg1 ;
-(void)setPipeliningLowWatermark:(long long)arg1 ;
-(void)setNumPriorityLevels:(long long)arg1 ;
-(void)setNumFastLanes:(long long)arg1 ;
-(void)setMinimumFastLanePriority:(long long)arg1 ;
-(void)set_forcesNewConnections:(char)arg1 ;
-(void)set_proxySession:(char)arg1 ;
-(void)set_preventsIdleSleep:(char)arg1 ;
-(void)set_usePipeliningHeuristics:(char)arg1 ;
-(void)set_contentDispHeadEncFallback:(NSArray *)arg1 ;
-(void)set_shouldPreserveBackgroundSessionDisposition:(char)arg1 ;
-(void)set_disablesOutOfProcessDirectWiFiUsage:(char)arg1 ;
-(void)set_disablesUseOfProxySession:(char)arg1 ;
-(void)set_companionAppBundleIdentifier:(NSString *)arg1 ;
-(void)set_watchAppBundleIdentifier:(NSString *)arg1 ;
-(void)set_overriddenDelegateOptions:(NSDictionary *)arg1 ;
-(void)set_phskip_alternativeServicesStorageSet:(char)arg1 ;
-(void)set_phskip_alternativeServicesStorage:(_NSHTTPAlternativeServicesStorage *)arg1 ;
-(void)set_allowsWCA:(char)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)init;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSString *)identifier;
-(void)setIdentifier:(NSString *)arg1 ;
-(void)setTimeoutIntervalForResource:(double)arg1 ;
-(void)setDiscretionary:(char)arg1 ;
-(void)setAllowsCellularAccess:(char)arg1 ;
-(double)timeoutIntervalForResource;
-(void)setTimeoutIntervalForRequest:(double)arg1 ;
-(NSString *)_sourceApplicationBundleIdentifier;
-(NSString *)_sourceApplicationSecondaryIdentifier;
-(char)_allowsExpensiveAccess;
-(char)allowsCellularAccess;
-(double)timeoutIntervalForRequest;
-(long long)_duetPreClearedMode;
-(void)set_sourceApplicationSecondaryIdentifier:(NSString *)arg1 ;
-(void)setWaitsForConnectivity:(char)arg1 ;
-(void)setURLCache:(NSURLCache *)arg1 ;
-(void)setURLCredentialStorage:(NSURLCredentialStorage *)arg1 ;
-(void)setRequestCachePolicy:(unsigned long long)arg1 ;
-(void)setHTTPShouldSetCookies:(char)arg1 ;
-(void)setHTTPCookieStorage:(NSHTTPCookieStorage *)arg1 ;
-(void)setHTTPCookieAcceptPolicy:(unsigned long long)arg1 ;
-(void)setHTTPShouldUsePipelining:(char)arg1 ;
-(void)set_sourceApplicationBundleIdentifier:(NSString *)arg1 ;
-(void)setHTTPMaximumConnectionsPerHost:(long long)arg1 ;
-(void)set_connectionCachePurgeTimeout:(double)arg1 ;
-(void)set_connectionCacheCellPurgeTimeout:(double)arg1 ;
-(void)set_timingDataOptions:(long long)arg1 ;
-(long long)multipathServiceType;
-(unsigned long long)_multipathAlternatePort;
-(char)isDiscretionary;
-(char)waitsForConnectivity;
-(void)set_allowsTLSSessionTickets:(char)arg1 ;
-(void)set_allowsExpensiveAccess:(char)arg1 ;
-(void)set_requiresPowerPluggedIn:(char)arg1 ;
-(char)_allowsTLSSessionTickets;
-(char)_requiresPowerPluggedIn;
-(NSDictionary *)connectionProxyDictionary;
-(char)_allowsTCPFastOpen;
-(char)_requiresSecureHTTPSProxyConnection;
-(void)setAllowsExpensiveNetworkAccess:(char)arg1 ;
-(void)setAllowsConstrainedNetworkAccess:(char)arg1 ;
-(void)set_sourceApplicationAuditTokenData:(NSData *)arg1 ;
-(NSData *)_sourceApplicationAuditTokenData;
-(void)setConnectionProxyDictionary:(NSDictionary *)arg1 ;
-(void)set_requiresSecureHTTPSProxyConnection:(char)arg1 ;
-(void)set_preventsSystemHTTPProxyAuthentication:(char)arg1 ;
-(unsigned long long)networkServiceType;
-(void)setNetworkServiceType:(unsigned long long)arg1 ;
-(char)allowsExpensiveNetworkAccess;
-(char)allowsConstrainedNetworkAccess;
-(char)HTTPShouldUsePipelining;
-(void)set_appleIDContext:(id<NSURLSessionAppleIDContext>)arg1 ;
-(NSArray *)protocolClasses;
-(void)setProtocolClasses:(NSArray *)arg1 ;
-(char)_allowsPowerNapScheduling;
-(void)set_allowsRetryForBackgroundDataTasks:(char)arg1 ;
-(void)set_allowsPowerNapScheduling:(char)arg1 ;
-(id<NSURLSessionAppleIDContext>)_appleIDContext;
-(char)_allowsRetryForBackgroundDataTasks;
-(void)set_infersDiscretionaryFromOriginatingClient:(char)arg1 ;
-(void)set_connectionPoolName:(NSString *)arg1 ;
-(void)set_duetPreClearedMode:(long long)arg1 ;
-(void)set_tlsTrustPinningPolicyName:(NSString *)arg1 ;
-(void)set_expiredDNSBehavior:(long long)arg1 ;
-(void)set_alwaysPerformDefaultTrustEvaluation:(char)arg1 ;
-(void)set_allowsTCPFastOpen:(char)arg1 ;
-(long long)HTTPMaximumConnectionsPerHost;
-(NSURLCache *)URLCache;
-(unsigned long long)requestCachePolicy;
-(void)set_overridesBackgroundSessionAutoRedirect:(char)arg1 ;
-(void)set_performsEVCertCheck:(char)arg1 ;
-(NSString *)_CTDataConnectionServiceType;
-(void)setMultipathServiceType:(long long)arg1 ;
-(_NSHSTSStorage *)_hstsStorage;
-(void)set_hstsStorage:(_NSHSTSStorage *)arg1 ;
-(void)set_preventsAppSSO:(char)arg1 ;
-(void)set_suppressedAutoAddedHTTPHeaders:(NSSet *)arg1 ;
-(void)set_alternativeServicesStorage:(_NSHTTPAlternativeServicesStorage *)arg1 ;
-(void)set_allowsHTTP3:(char)arg1 ;
-(void)set_socketStreamProperties:(NSDictionary *)arg1 ;
-(void)set_shouldSkipPreferredClientCertificateLookup:(char)arg1 ;
-(_NSHTTPAlternativeServicesStorage *)_alternativeServicesStorage;
-(char)_allowsTLSFallback;
-(void)set_companionProxyPreference:(long long)arg1 ;
-(void)setSessionSendsLaunchEvents:(char)arg1 ;
-(void)set_ignoreDidReceiveResponseDisposition:(char)arg1 ;
-(void)set_requiresSustainedDataDelivery:(char)arg1 ;
-(char)_ignoreDidReceiveResponseDisposition;
-(void)setHTTPAdditionalHeaders:(NSDictionary *)arg1 ;
-(void)setBackgroundSession:(char)arg1 ;
-(void)set_allowTCPIOConnectionStreamTask:(char)arg1 ;
-(NSDictionary *)_socketStreamProperties;
-(NSDictionary *)HTTPAdditionalHeaders;
-(NSHTTPCookieStorage *)HTTPCookieStorage;
-(NSString *)disposition;
-(void)set_allowsMultipathTCP:(char)arg1 ;
-(void)set_multipathAlternatePort:(unsigned long long)arg1 ;
-(char)_allowsMultipathTCP;
-(void)set_allowsTLSFalseStart:(char)arg1 ;
-(void)setDisposition:(NSString *)arg1 ;
-(void)set_CTDataConnectionServiceType:(NSString *)arg1 ;
-(long long)_timingDataOptions;
-(NSString *)sharedContainerIdentifier;
-(void)setSharedContainerIdentifier:(NSString *)arg1 ;
-(void)set_TCPAdaptiveReadTimeout:(unsigned long long)arg1 ;
-(void)set_TCPAdaptiveWriteTimeout:(unsigned long long)arg1 ;
-(void)set_atsContext:(NSData *)arg1 ;
-(char)_allowsConstrainedNetworkAccess;
-(NSNumber *)_maximumWatchCellularTransferSize;
-(void)set_allowsConstrainedNetworkAccess:(char)arg1 ;
-(void)setTLSMaximumSupportedProtocol:(int)arg1 ;
-(void)setTLSMinimumSupportedProtocolVersion:(unsigned short)arg1 ;
-(void)setTLSMaximumSupportedProtocolVersion:(unsigned short)arg1 ;
-(char)_supportsAVAssetDownloads;
-(void)set_maximumWatchCellularTransferSize:(NSNumber *)arg1 ;
-(void)set_duetPreauthorized:(char)arg1 ;
-(char)_duetPreauthorized;
-(void)set_directoryForDownloadedFiles:(NSURL *)arg1 ;
-(NSURL *)_directoryForDownloadedFiles;
-(NSString *)_connectionPoolName;
-(void)set_respectsAllowsCellularAccessForDiscretionaryTasks:(char)arg1 ;
-(char)_respectsAllowsCellularAccessForDiscretionaryTasks;
-(char)_performsEVCertCheck;
-(NSString *)_watchExtensionBundleIdentifier;
-(char)_onBehalfOfPairedDevice;
-(char)_infersDiscretionaryFromOriginatingClient;
-(char)_sessionSendsLaunchOnDemandEvents;
-(char)sessionSendsLaunchEvents;
-(void)setSkip_download_unlink:(char)arg1 ;
-(void)set_forcedNetworkServiceType:(unsigned long long)arg1 ;
-(void)set_clientIsNotExplicitlyDiscretionary:(char)arg1 ;
-(char)_clientIsNotExplicitlyDiscretionary;
-(void)set_allowsReachabilityCheck:(char)arg1 ;
-(char)_allowsReachabilityCheck;
-(void)set_loggingPrivacyLevel:(int)arg1 ;
-(int)_loggingPrivacyLevel;
-(void)set_requiresClientToOpenFiles:(char)arg1 ;
-(void)set_watchExtensionBundleIdentifier:(NSString *)arg1 ;
-(char)_shouldSkipPreferredClientCertificateLookup;
-(void)set_preventsIdleSleepOnceConnected:(char)arg1 ;
-(void)set_longLivedConnectionCachePurgeTimeout:(double)arg1 ;
-(void)set_tcpConnectionPoolName:(NSString *)arg1 ;
-(void)setShouldUseExtendedBackgroundIdleMode:(char)arg1 ;
-(char)_alwaysPerformDefaultTrustEvaluation;
-(void)set_IDSMessageTimeout:(long long)arg1 ;
-(long long)_IDSMessageTimeout;
-(char)_requiresSustainedDataDelivery;
-(void)set_onBehalfOfPairedDevice:(char)arg1 ;
-(unsigned long long)_TCPAdaptiveWriteTimeout;
-(unsigned long long)_TCPAdaptiveReadTimeout;
-(void)set_reportsDataStalls:(char)arg1 ;
-(char)_reportsDataStalls;
-(NSString *)_tlsTrustPinningPolicyName;
-(void)set_allowsTLSFallback:(char)arg1 ;
-(char)_allowsTLSFalseStart;
-(NSData *)_atsContext;
-(void)set_authenticatorStatusCodes:(NSSet *)arg1 ;
-(NSSet *)_authenticatorStatusCodes;
-(int)TLSMaximumSupportedProtocol;
-(void)setTLSMinimumSupportedProtocol:(int)arg1 ;
-(int)TLSMinimumSupportedProtocol;
-(void)set_sessionSendsLaunchOnDemandEvents:(char)arg1 ;
-(char)_prefersInfraWiFi;
@end

