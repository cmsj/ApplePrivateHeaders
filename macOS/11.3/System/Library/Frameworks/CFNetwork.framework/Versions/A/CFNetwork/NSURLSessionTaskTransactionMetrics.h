/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:02 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CFNetwork/CFNetwork-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class __CFN_TransactionMetrics, NSString, NSUUID, NSDate, NSURLRequest, NSURLResponse, NSNumber;

@interface NSURLSessionTaskTransactionMetrics : NSObject <NSSecureCoding> {

	char __connectionTimingCached;
	char __forCache;
	__CFN_TransactionMetrics* __metrics;
	SCD_Struct_NS76 __connectionTiming;

}

@property (readonly) char _secureConnection; 
@property (readonly) char _localCache; 
@property (readonly) char _serverPush; 
@property (readonly) char _connectionRace; 
@property (readonly) unsigned _redirected; 
@property (copy,readonly) NSString * _localAddressAndPort; 
@property (copy,readonly) NSString * _remoteAddressAndPort; 
@property (copy,readonly) NSUUID * _connectionIdentifier; 
@property (readonly) long long _requestHeaderBytesSent; 
@property (readonly) long long _responseHeaderBytesReceived; 
@property (readonly) long long _responseBodyBytesReceived; 
@property (readonly) long long _responseBodyBytesDecoded; 
@property (readonly) char _apsRelayAttempted; 
@property (readonly) char _apsRelaySucceeded; 
@property (readonly) long long _totalBytesSent; 
@property (readonly) long long _totalBytesReceived; 
@property (readonly) int _negotiatedTLSProtocol; 
@property (readonly) unsigned _negotiatedTLSCipher; 
@property (readonly) char _usesMultipath; 
@property (copy,readonly) NSDate * _firstByteReceivedDate; 
@property (copy,readonly) NSString * _interfaceName; 
@property (assign,nonatomic) SCD_Struct_NS76 _connectionTiming;                    //@synthesize _connectionTiming=__connectionTiming - In the implementation block
@property (assign,nonatomic) char _connectionTimingCached;                         //@synthesize _connectionTimingCached=__connectionTimingCached - In the implementation block
@property (copy,readonly) NSURLRequest * request; 
@property (copy,readonly) NSURLResponse * response; 
@property (copy,readonly) NSDate * fetchStartDate; 
@property (copy,readonly) NSDate * domainLookupStartDate; 
@property (copy,readonly) NSDate * domainLookupEndDate; 
@property (copy,readonly) NSDate * connectStartDate; 
@property (copy,readonly) NSDate * secureConnectionStartDate; 
@property (copy,readonly) NSDate * secureConnectionEndDate; 
@property (copy,readonly) NSDate * connectEndDate; 
@property (copy,readonly) NSDate * requestStartDate; 
@property (copy,readonly) NSDate * requestEndDate; 
@property (copy,readonly) NSDate * responseStartDate; 
@property (copy,readonly) NSDate * responseEndDate; 
@property (copy,readonly) NSString * networkProtocolName; 
@property (getter=isProxyConnection,readonly) char proxyConnection; 
@property (getter=isReusedConnection,readonly) char reusedConnection; 
@property (readonly) long long resourceFetchType; 
@property (readonly) long long countOfRequestHeaderBytesSent; 
@property (readonly) long long countOfRequestBodyBytesSent; 
@property (readonly) long long countOfRequestBodyBytesBeforeEncoding; 
@property (readonly) long long countOfResponseHeaderBytesReceived; 
@property (readonly) long long countOfResponseBodyBytesReceived; 
@property (readonly) long long countOfResponseBodyBytesAfterDecoding; 
@property (copy,readonly) NSString * localAddress; 
@property (copy,readonly) NSNumber * localPort; 
@property (copy,readonly) NSString * remoteAddress; 
@property (copy,readonly) NSNumber * remotePort; 
@property (copy,readonly) NSNumber * negotiatedTLSProtocolVersion; 
@property (copy,readonly) NSNumber * negotiatedTLSCipherSuite; 
@property (getter=isCellular,readonly) char cellular; 
@property (getter=isExpensive,readonly) char expensive; 
@property (getter=isConstrained,readonly) char constrained; 
@property (getter=isMultipath,readonly) char multipath; 
@property (readonly) long long domainResolutionProtocol; 
+(id)_c2_stringForTLSProtocolVersion:(unsigned short)arg1 ;
+(id)new;
+(char)supportsSecureCoding;
-(id)c2_NegotiatedTLSProtocolVersionString;
-(SCD_Struct_NS76)_connectionTiming;
-(char)_connectionTimingCached;
-(long long)countOfRequestBodyBytesBeforeEncoding;
-(long long)domainResolutionProtocol;
-(void)set_connectionTiming:(SCD_Struct_NS76)arg1 ;
-(void)set_connectionTimingCached:(char)arg1 ;
-(char)_secureConnection;
-(char)_serverPush;
-(long long)_requestHeaderBytesSent;
-(long long)_responseHeaderBytesReceived;
-(int)_negotiatedTLSProtocol;
-(unsigned)_negotiatedTLSCipher;
-(char)_usesMultipath;
-(id)description;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSURLRequest *)request;
-(NSNumber *)localPort;
-(NSNumber *)remotePort;
-(NSURLResponse *)response;
-(NSString *)_interfaceName;
-(long long)_totalBytesReceived;
-(char)isCellular;
-(long long)_totalBytesSent;
-(NSString *)remoteAddress;
-(long long)resourceFetchType;
-(NSDate *)fetchStartDate;
-(NSDate *)domainLookupStartDate;
-(NSDate *)domainLookupEndDate;
-(NSDate *)connectStartDate;
-(NSDate *)connectEndDate;
-(NSDate *)secureConnectionStartDate;
-(NSDate *)secureConnectionEndDate;
-(NSDate *)requestStartDate;
-(NSDate *)requestEndDate;
-(NSDate *)responseStartDate;
-(NSDate *)responseEndDate;
-(char)isProxyConnection;
-(char)isReusedConnection;
-(NSString *)networkProtocolName;
-(NSUUID *)_connectionIdentifier;
-(NSNumber *)negotiatedTLSProtocolVersion;
-(NSNumber *)negotiatedTLSCipherSuite;
-(char)_apsRelayAttempted;
-(char)_apsRelaySucceeded;
-(char)_connectionRace;
-(long long)_responseBodyBytesDecoded;
-(long long)_responseBodyBytesReceived;
-(char)isMultipath;
-(char)isExpensive;
-(char)isConstrained;
-(long long)countOfRequestHeaderBytesSent;
-(long long)countOfResponseHeaderBytesReceived;
-(long long)countOfResponseBodyBytesReceived;
-(long long)countOfResponseBodyBytesAfterDecoding;
-(NSString *)localAddress;
-(char)_localCache;
-(long long)countOfRequestBodyBytesSent;
-(unsigned)_redirected;
-(NSDate *)_firstByteReceivedDate;
-(NSString *)_remoteAddressAndPort;
-(NSString *)_localAddressAndPort;
@end

