/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:02 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CFNetwork/CFNetwork-Structs.h>
#import <CFNetwork/NSURLRequest.h>

@class NSString, NSDictionary, NSData, NSInputStream, NSURL;

@interface NSMutableURLRequest : NSURLRequest

@property (copy) NSString * HTTPMethod; 
@property (copy) NSDictionary * allHTTPHeaderFields; 
@property (copy) NSData * HTTPBody; 
@property (retain) NSInputStream * HTTPBodyStream; 
@property (assign) char HTTPShouldHandleCookies; 
@property (assign) char HTTPShouldUsePipelining; 
@property (copy) NSURL * URL; 
@property (assign) unsigned long long cachePolicy; 
@property (assign) double timeoutInterval; 
@property (copy) NSURL * mainDocumentURL; 
@property (assign) unsigned long long networkServiceType; 
@property (assign) char allowsCellularAccess; 
@property (assign) char allowsExpensiveNetworkAccess; 
@property (assign) char allowsConstrainedNetworkAccess; 
@property (assign) char assumesHTTP3Capable; 
+(id)ak_proxiedClientInfoHeadersWithDevice:(id)arg1 ;
+(id)ak_clientTimeHeader;
+(id)ak_localeHeader;
+(id)ak_timeZoneHeader;
+(id)ak_proxiedHeadersForDevice:(id)arg1 anisetteData:(id)arg2 ;
+(id)ak_deviceUDIDHeader;
+(id)ak_clientInfoHeader;
+(id)ak_anisetteHeadersWithCompanionData:(id)arg1 ;
+(id)ak_proxiedAnisetteHeadersWithData:(id)arg1 ;
+(id)ak_anisetteHeadersWithData:(id)arg1 ;
-(void)_web_setHTTPReferrer:(id)arg1 ;
-(void)_web_setHTTPUserAgent:(id)arg1 ;
-(void)_web_setHTTPContentType:(id)arg1 ;
-(void)bindToHotspotHelperCommand:(id)arg1 ;
-(void)bindToCommand:(_CNPluginCommand*)arg1 ;
-(void)ak_addICSCRecoveryHeaderWithIdentityToken:(id)arg1 forAltDSID:(id)arg2 ;
-(void)ak_addRecoveryHeaderWithIdentityToken:(id)arg1 forAltDSID:(id)arg2 ;
-(void)ak_setJSONBodyWithParameters:(id)arg1 ;
-(void)_setAuthorizationHeaderWithToken:(id)arg1 altDSID:(id)arg2 key:(id)arg3 ;
-(void)ak_addCircleStatusHeader;
-(void)ak_addCompanionClientInfoHeader:(id)arg1 ;
-(void)ak_addProxiedAttestationHeaders:(id)arg1 ;
-(void)ak_addProxiedAuthorizationHeaderWithIdentityToken:(id)arg1 forAltDSID:(id)arg2 ;
-(void)ak_addURLSwitchingHeaderWithURLKey:(id)arg1 altDSID:(id)arg2 ;
-(void)ak_addDataCenterHeaderWithIdentifier:(id)arg1 ;
-(id)ak_valueForEncodedHeaderWithKey:(id)arg1 ;
-(void)ak_addAbsintheHeaderWithValue:(id)arg1 ;
-(void)ak_addLoggedInServicesHeaderForServices:(id)arg1 ;
-(void)ak_addContextHeaderForServiceType:(long long)arg1 ;
-(void)ak_addContinutationKeyHeader:(id)arg1 ;
-(void)ak_addPasswordResetKeyHeader:(id)arg1 ;
-(void)ak_addProxiedDeviceCountryHeader:(id)arg1 ;
-(void)ak_addProxiedDevicePRKRequestHeader;
-(void)ak_addLocalUserHasAppleIDLoginHeader;
-(void)ak_addProxiedDeviceSerialNumberHeader:(id)arg1 ;
-(void)ak_addPhoneNumberHeader;
-(void)ak_addPhoneNumberCertificateHeaderWithValue:(id)arg1 ;
-(void)ak_addPhoneInformationHeaderWithValue:(id)arg1 ;
-(void)ak_addAcceptedSLAHeaderWithVersion:(unsigned long long)arg1 ;
-(void)ak_addProxyApp:(id)arg1 ;
-(void)ak_addAppProvidedContext:(id)arg1 ;
-(void)ak_addOfferSecurityUpgrade:(char)arg1 ;
-(void)ak_addProxiedDeviceICSCIntentHeader;
-(void)ak_addShowWarranty;
-(void)ak_addDeviceModel;
-(void)ak_addCFUHeader:(id)arg1 ;
-(void)ak_addDeviceConfigurationModeHeader;
-(void)ak_addRequestUUIDHeader:(id)arg1 ;
-(void)ak_addClientTimeHeader;
-(void)ak_addDeviceUDIDHeader;
-(void)ak_addClientInfoHeader;
-(void)ak_addAnisetteHeaders;
-(void)ak_addInternalBuildHeader;
-(void)ak_addAuthorizationHeaderWithServiceToken:(id)arg1 forAltDSID:(id)arg2 ;
-(void)ak_setBodyWithParameters:(id)arg1 ;
-(void)ak_addAppleIDHeaderWithValue:(id)arg1 ;
-(void)ak_addAppleIDUserModeHeaderWithValue:(unsigned long long)arg1 ;
-(void)ak_addAuthorizationHeaderWithIdentityToken:(id)arg1 forAltDSID:(id)arg2 ;
-(void)ak_addPRKRequestHeader;
-(void)ak_addDeviceMLBHeader;
-(void)ak_addDeviceROMHeader;
-(void)ak_addDeviceSerialNumberHeader;
-(void)ak_addLocalUserUUIDHashHeader;
-(void)ak_addClientApp:(id)arg1 ;
-(void)ak_addAuthorizationHeaderWithHeartbeatToken:(id)arg1 forAltDSID:(id)arg2 ;
-(void)ak_addEphemeralAuthHeader;
-(void)ak_addDeviceConfigurationModeHeaderForAuthContext:(id)arg1 ;
-(void)ak_addICSCIntentHeader;
-(void)ak_addProxiedDeviceUDIDHeader:(id)arg1 ;
-(void)ak_addProxiedClientInfoHeader:(id)arg1 ;
-(void)ak_addProxiedAnisetteHeaders:(id)arg1 ;
-(void)ak_addCountryHeader;
-(void)ak_addLocaleHeader;
-(void)ak_addTimeZoneHeaders;
-(void)ak_addSKUCountryHeader;
-(void)ak_addShortLivedTokenHeaderWithIdentityToken:(id)arg1 forAltDSID:(id)arg2 ;
-(void)setHTTPExtraCookies:(id)arg1 ;
-(void)setHTTPReferrer:(id)arg1 ;
-(void)_setPreventHSTSStorage:(char)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setURL:(NSURL *)arg1 ;
-(void)setHTTPShouldHandleCookies:(char)arg1 ;
-(void)setAllowsCellularAccess:(char)arg1 ;
-(void)setHTTPMethod:(NSString *)arg1 ;
-(void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2 ;
-(void)setHTTPBody:(NSData *)arg1 ;
-(void)setTimeoutInterval:(double)arg1 ;
-(void)setCachePolicy:(unsigned long long)arg1 ;
-(void)setHTTPBodyStream:(NSInputStream *)arg1 ;
-(void)setBoundInterfaceIdentifier:(id)arg1 ;
-(void)addValue:(id)arg1 forHTTPHeaderField:(id)arg2 ;
-(void)setHTTPShouldUsePipelining:(char)arg1 ;
-(void)setAllowsExpensiveNetworkAccess:(char)arg1 ;
-(void)setAllowsConstrainedNetworkAccess:(char)arg1 ;
-(unsigned long long)requestPriority;
-(void)setRequestPriority:(unsigned long long)arg1 ;
-(void)setNetworkServiceType:(unsigned long long)arg1 ;
-(void)setMainDocumentURL:(NSURL *)arg1 ;
-(void)setAssumesHTTP3Capable:(char)arg1 ;
-(void)setAllHTTPHeaderFields:(NSDictionary *)arg1 ;
-(void)setContentDispositionEncodingFallbackArray:(id)arg1 ;
-(void)_setIgnoreHSTS:(char)arg1 ;
-(void)setPreventsIdleSystemSleep:(char)arg1 ;
-(void)_setRequiresShortConnectionTimeout:(char)arg1 ;
-(void)setExpectedWorkload:(unsigned long long)arg1 ;
-(void)_setStartTimeoutDate:(id)arg1 ;
-(void)_setPayloadTransmissionTimeout:(double)arg1 ;
-(void)setHTTPUserAgent:(id)arg1 ;
-(void)setHTTPContentType:(id)arg1 ;
-(void)_setTimeWindowDelay:(double)arg1 ;
-(void)_setTimeWindowDuration:(double)arg1 ;
@end

