/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <QuartzComposer/QuartzComposer-Structs.h>
@class GFPort;

@interface GFNodeActor : NSObject {

	GFPort* _tooltipPort;
	void** _unused[4];

}
+(id)sharedActor;
-(CGSize)sizeForNode:(id)arg1 ;
-(CGPoint)pointForPort:(id)arg1 inNode:(id)arg2 bounds:(CGRect)arg3 ;
-(id)portForPoint:(CGPoint)arg1 inNode:(id)arg2 bounds:(CGRect)arg3 ;
-(void)drawNode:(id)arg1 bounds:(CGRect)arg2 view:(id)arg3 ;
-(void)drawSelectionRingWithColor:(id)arg1 width:(double)arg2 forNode:(id)arg3 bounds:(CGRect)arg4 view:(id)arg5 ;
-(char)trackMouse:(id)arg1 inNode:(id)arg2 bounds:(CGRect)arg3 view:(id)arg4 ;
-(id)menuForNode:(id)arg1 view:(id)arg2 ;
-(char)nodeAcceptsFirstResponder:(id)arg1 view:(id)arg2 ;
-(char)nodeBecomesFirstResponder:(id)arg1 view:(id)arg2 ;
-(char)nodeResignsFirstResponder:(id)arg1 view:(id)arg2 ;
-(char)handleKeyUp:(id)arg1 inNode:(id)arg2 view:(id)arg3 ;
-(char)handleKeyDown:(id)arg1 inNode:(id)arg2 view:(id)arg3 ;
-(void)resetInspectorViews;
-(id)setupInspectorViewsForNode:(id)arg1 ;
-(id)_portTextAttributesForNode:(id)arg1 ;
-(id)_titleTextAttributesForNode:(id)arg1 ;
-(id)_portForPoint:(CGPoint)arg1 inNode:(id)arg2 bounds:(CGRect)arg3 outBounds:(CGRect*)arg4 ;
-(void)_makeCGPathForNode:(id)arg1 bounds:(CGRect)arg2 inContext:(CGContextRef)arg3 ;
-(id)_colorForNode:(id)arg1 ;
-(id)_portIsConnected:(id)arg1 view:(id)arg2 ;
-(CGColorRef)_overlayColorForNode:(id)arg1 view:(id)arg2 ;
-(void)_editSubgraph:(id)arg1 ;
-(void)_publish:(id)arg1 ;
-(void)_selectDownstream:(id)arg1 ;
-(void)_deselectDownstream:(id)arg1 ;
-(void)_selectUpstream:(id)arg1 ;
-(void)_deselectUpstream:(id)arg1 ;
-(id)tooltipStringForPoint:(CGPoint)arg1 inNode:(id)arg2 bounds:(CGRect)arg3 tooltipBounds:(CGRect*)arg4 ;
-(void)resetTooltipView;
-(id)setupTooltipViewForPoint:(CGPoint)arg1 inNode:(id)arg2 bounds:(CGRect)arg3 tooltipBounds:(CGRect*)arg4 ;
-(void)__setNodeSelection:(char)arg1 adjacentToNode:(id)arg2 inputNodes:(char)arg3 selectedList:(id)arg4 ;
@end

