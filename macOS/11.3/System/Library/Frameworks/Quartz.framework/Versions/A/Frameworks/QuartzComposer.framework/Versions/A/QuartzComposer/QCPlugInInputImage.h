/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <QuartzComposer/QuartzComposer-Structs.h>
#import <libobjc.A.dylib/QCPlugInInputImageSource.h>

@class QCImage, NSDictionary, QCImageManager, QCPixelFormat, QCImagePixelBuffer, QCImageTextureBuffer;

@interface QCPlugInInputImage : NSObject <QCPlugInInputImageSource> {

	QCImage* _image;
	NSDictionary* _defaultOptions;
	QCImageManager* _imageManager;
	unsigned _textureTarget;
	unsigned long long _maxTextureSize;
	QCPixelFormat* _renderingPixelFormat;
	opaque_pthread_mutex_t _mutex;
	QCImagePixelBuffer* _pixelBuffer;
	QCImagePixelBuffer* _pixelBufferCached;
	CGRect _pixelBufferBounds;
	QCImageTextureBuffer* _textureBuffer;
	QCImageTextureBuffer* _textureBufferCached;
	CGRect _textureBufferBounds;
	SCD_Struct_QC18* _savedState;

}
-(void)dealloc;
-(id)description;
-(unsigned long long)bufferBytesPerRow;
-(id)image;
-(unsigned)textureTarget;
-(CGRect)imageBounds;
-(unsigned)textureName;
-(CGColorSpaceRef)imageColorSpace;
-(char)shouldColorMatch;
-(char)lockBufferRepresentationWithPixelFormat:(id)arg1 colorSpace:(CGColorSpaceRef)arg2 forBounds:(CGRect)arg3 ;
-(unsigned long long)bufferPixelsWide;
-(unsigned long long)bufferPixelsHigh;
-(id)bufferPixelFormat;
-(CGColorSpaceRef)bufferColorSpace;
-(const void*)bufferBaseAddress;
-(void)unlockBufferRepresentation;
-(char)lockTextureRepresentationWithColorSpace:(CGColorSpaceRef)arg1 forBounds:(CGRect)arg2 ;
-(unsigned long long)texturePixelsWide;
-(unsigned long long)texturePixelsHigh;
-(CGColorSpaceRef)textureColorSpace;
-(char)textureFlipped;
-(const float*)textureMatrix;
-(void)bindTextureRepresentationToCGLContext:(CGLContextObject*)arg1 textureUnit:(unsigned)arg2 normalizeCoordinates:(char)arg3 ;
-(void)unbindTextureRepresentationFromCGLContext:(CGLContextObject*)arg1 textureUnit:(unsigned)arg2 ;
-(void)unlockTextureRepresentation;
-(id)initWithImage:(id)arg1 context:(id)arg2 ;
@end

