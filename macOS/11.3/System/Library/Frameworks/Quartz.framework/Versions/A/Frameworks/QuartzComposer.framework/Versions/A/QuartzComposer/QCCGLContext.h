/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <QuartzComposer/QuartzComposer-Structs.h>
#import <QuartzComposer/QCResource.h>

@class NSDictionary, QCResourcePool, QCPixelFormat;

@interface QCCGLContext : QCResource {

	QCCGLContext* _rootContext;
	NSDictionary* _options;
	CGLContextObject* _cglContext;
	CGLPixelFormatObjectRef _cglPixelFormat;
	unsigned long long _virtualScreenCount;
	CFDictionaryRef _ciContextCache;
	CFDictionaryRef _rootC3DContextCache;
	void* _c3dContext;
	QCResourcePool* _sharedPool;
	unsigned long long _defaultSharedVirtualScreen;
	unsigned long long _cachedVirtualScreen;
	unsigned long long _flags;
	QCPixelFormat* _renderPixelFormat;
	id _nsglContext;
	id _nsglPixelFormat;
	void** _unused2[2];

}
+(void)initialize;
+(id)contextWithPixelFormatAttributes:(const int*)arg1 options:(id)arg2 ;
+(id)softwareContextForFormat:(id)arg1 ;
+(id)hardwareContextForDisplay:(unsigned)arg1 ;
+(id)CIBitmapContext;
+(id)copyGlobalRootContext;
+(id)createUniqueContextWithOptions:(id)arg1 ;
-(void)finalize;
-(void)dealloc;
-(id)description;
-(void)lock;
-(void)unlock;
-(id)options;
-(id)CIContext;
-(CGLPixelFormatObjectRef)CGLPixelFormatObj;
-(CGLContextObject*)CGLContextObj;
-(id)rendererName;
-(id)_ciContext;
-(long long)getParameter:(int)arg1 ;
-(unsigned long long)maxRenderingSize;
-(void)setResourcePool:(id)arg1 ;
-(char)didRecycleResource:(id)arg1 ;
-(void)willRecycleResource:(id)arg1 ;
-(id)initWithPixelFormatAttributes:(const int*)arg1 options:(id)arg2 ;
-(id)initWithCGLContext:(CGLContextObject*)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 options:(id)arg3 ;
-(void)_finalize_QCCGLContext;
-(id)createMinimalSharedContextWithAdditionalAttributes:(const int*)arg1 recycleWhenDone:(char)arg2 ;
-(id)rootContext;
-(void)setVirtualScreen:(unsigned long long)arg1 ;
-(id)minimalSharedContextForCurrentThread;
-(long long)rendererID;
-(void)reclaimResources;
-(void)purgeResources;
-(unsigned long long)virtualScreen;
-(unsigned long long)virtualScreenCount;
-(float)rendererVersion;
-(char)hasDrawable;
-(char)enable:(int)arg1 ;
-(char)disable:(int)arg1 ;
-(char)isEnabled:(int)arg1 ;
-(char)setParameter:(int)arg1 value:(long long)arg2 ;
-(void)setBestVirtualScreenForRenderingSize:(CGSize)arg1 ;
-(id)createMinimalSharedContext;
-(void)clearMinimalSharedContextForCurrentThread;
-(char)isSharedWithContext:(id)arg1 ;
-(int)_rendererPropertyValue:(int)arg1 ;
-(unsigned long long)_validateCachedVirtualScreen;
-(char)isProgrammable;
-(unsigned long long)maxTextureSizeForTarget:(unsigned)arg1 ;
-(unsigned long long)videoMemorySize;
-(unsigned long long)textureMemorySize;
-(id)rendererVendor;
-(long long)rendererIDForVirtualScreen:(long long)arg1 ;
-(unsigned long long)textureUnits;
-(unsigned long long)textureMaxImageUnits;
-(char)isAccelerated;
-(char)isCoreImageAccelerated;
-(char)isFBOSupported;
-(char)is16BitSupported;
-(char)isFloatSupported;
-(char)isExtensionSupported:(id)arg1 ;
-(id)renderingPixelFormat;
-(CGSize)fitTextureSize:(CGSize)arg1 forTarget:(unsigned)arg2 uniformScaling:(char)arg3 ;
-(char)readPixelsFromBounds:(int*)arg1 toBaseAddress:(void*)arg2 withBytesPerRow:(unsigned long long)arg3 pixelType:(unsigned)arg4 ;
-(char)copyPixelsFromBounds:(int*)arg1 toSharedCGLContext:(CGLContextObject*)arg2 usingInternalFormat:(unsigned)arg3 ;
-(C3DEngineContextRef)QCSCN_Context;
-(id)createSnapshotImageOfType:(id)arg1 withColorSpace:(CGColorSpaceRef)arg2 ;
-(id)initWithOpenGLContext:(id)arg1 pixelFormat:(id)arg2 options:(id)arg3 ;
-(id)NSOpenGLContext;
-(id)NSOpenGLPixelFormat;
@end

