/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <QuartzComposer/QuartzComposer-Structs.h>
#import <QuartzComposer/QCGraphicsContext.h>

@class QCCGLContext, NSString;

@interface QCOpenGLContext : QCGraphicsContext {

	QCCGLContext* _glContext;
	float _fieldOfView;
	char _resetMatrices;
	char _flipped;
	char _mainThread;
	NSString* _outputImageKey;
	QCCGLContext* _ignoredContext;
	BackgroundInfo* _backgroundInfo;
	GLMatrices* _matrices;
	unsigned long long _flags;
	void** _unused3[1];

}
+(char)isMultiThreaded;
+(CGColorSpaceRef)defaultColorSpace;
+(id)_providerTransformationForImage:(id)arg1 inBounds:(CGRect)arg2 toTextureWithTarget:(unsigned)arg3 maxSize:(unsigned long long)arg4 outBounds:(CGRect*)arg5 ;
+(Class)renderStateClass;
+(void)updateMultiThreaded;
-(void)finalize;
-(void)dealloc;
-(void)invalidate;
-(id)initWithOptions:(id)arg1 ;
-(char)isFlipped;
-(void)setColorSpace:(CGColorSpaceRef)arg1 ;
-(void)setFlipped:(char)arg1 ;
-(id)CIContext;
-(void)_finishInitialization;
-(CGLPixelFormatObjectRef)CGLPixelFormatObj;
-(CGLContextObject*)CGLContextObj;
-(void)clearGLContext;
-(id)openGLContext;
-(void)setOpenGLContext:(id)arg1 ;
-(float)fieldOfView;
-(void)setFieldOfView:(float)arg1 ;
-(id)initWithCGLContext:(CGLContextObject*)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 options:(id)arg3 ;
-(C3DEngineContextRef)QCSCN_Context;
-(char)resetMatrices;
-(void)setResetMatrices:(char)arg1 ;
-(id)outputImageKey;
-(void)setOutputImageKey:(id)arg1 ;
-(int)eraseBackground;
-(void)setEraseBackground:(int)arg1 ;
-(id)initWithOpenGLContext:(id)arg1 options:(id)arg2 ;
-(id)initWithNSOpenGLContext:(id)arg1 format:(id)arg2 options:(id)arg3 ;
-(id)initWithOptions:(id)arg1 contextAttributes:(const int*)arg2 ;
-(void)setBackgroundColor:(id)arg1 checkerboardSize:(unsigned long long)arg2 inLiveResize:(char)arg3 ;
-(void)setScissorTest:(char)arg1 ;
-(char)scissorTest;
-(id)initWithImageManager:(id)arg1 options:(id)arg2 ;
-(char)startRenderingPatch:(id)arg1 options:(id)arg2 ;
-(void)pauseRenderingPatch:(id)arg1 ;
-(double)nextExecutionTimeForPatch:(id)arg1 time:(double)arg2 arguments:(id)arg3 ;
-(char)renderPatch:(id)arg1 time:(double)arg2 arguments:(id)arg3 ;
-(void)resumeRenderingPatch:(id)arg1 ;
-(void)stopRenderingPatch:(id)arg1 ;
-(char)willPushRenderState:(id)arg1 ;
-(void)didPushRenderState:(id)arg1 ;
-(void)didPopRenderState:(id)arg1 ;
-(void)willPopRenderState:(id)arg1 ;
-(char)_mainThread;
-(id)initWithImageManager:(id)arg1 openGLContext:(id)arg2 options:(id)arg3 ;
-(void)_renderMesh:(id)arg1 arguments:(id)arg2 ;
-(void)_clearGLContext;
-(void)renderBackground:(id)arg1 ;
-(void)_drawDirtyRect:(id)arg1 ;
-(id)initWithCGLContextObj:(CGLContextObject*)arg1 pixelFormat:(CGLPixelFormatObjectRef)arg2 options:(id)arg3 ;
-(void)willDestroyCGLContext;
@end

