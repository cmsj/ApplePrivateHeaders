/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <QuartzComposer/QuartzComposer-Structs.h>
#import <QuartzComposer/QCResource.h>

@class QCPixelFormat;

@interface QCImageBuffer : QCResource {

	unsigned long long _identifier;
	int _status;
	CGColorSpaceRef _colorspace;
	QCPixelFormat* _format;
	unsigned long long _width;
	unsigned long long _height;
	char _flipped;
	void* _backing;
	/*function pointer*/void* _backingCallback;
	void* _backingInfo;
	double _cost;
	unsigned long long _cacheRetainCount;
	CFArrayRef _caches;
	opaque_pthread_mutex_t _cachesMutex;
	void** _unused1[4];

}
+(id)allocWithZone:(NSZone*)arg1 ;
+(void)initialize;
-(void)finalize;
-(void)dealloc;
-(id)description;
-(unsigned long long)identifier;
-(int)status;
-(id)pixelFormat;
-(CGRect)bounds;
-(char)isFlipped;
-(CGColorSpaceRef)colorSpace;
-(unsigned long long)pixelsHigh;
-(unsigned long long)pixelsWide;
-(char)writeToFile:(id)arg1 ;
-(double)cost;
-(unsigned long long)byteSize;
-(void)cacheRelease:(id)arg1 ;
-(id)cacheRetain:(id)arg1 ;
-(void)removeFromAllCachesExcept:(id)arg1 ;
-(char)didRecycleResource:(id)arg1 ;
-(unsigned long long)cacheRetainCount;
-(void)willRecycleResource:(id)arg1 ;
-(void)clearBuffer;
-(void*)backingReleaseInfo;
-(id)copyWithZone_GCCacheResource:(NSZone*)arg1 ;
-(void)_finalize_QCImageBuffer;
-(char)beginUpdateBuffer:(char)arg1 ;
-(id)initWithFormat:(id)arg1 pixelsWide:(unsigned long long)arg2 pixelsHigh:(unsigned long long)arg3 options:(id)arg4 ;
-(char)beginUpdateBuffer:(char)arg1 colorSpace:(CGColorSpaceRef)arg2 ;
-(void)endUpdateBuffer:(char)arg1 ;
-(void)setBacking:(void*)arg1 releaseCallback:(/*function pointer*/void*)arg2 releaseInfo:(void*)arg3 ;
-(void*)backing;
-(/*function pointer*/void*)backingReleaseCallback;
-(id)pixelBufferRepresentation;
-(void)setCost:(double)arg1 ;
-(void)_invalidateData;
@end

