/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:59 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/SceneKit.framework/Versions/A/SceneKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SceneKit/SceneKit-Structs.h>
#import <AppKit/NSView.h>
#import <libobjc.A.dylib/SCNSceneRenderer.h>
#import <libobjc.A.dylib/SCNTechniqueSupport.h>

@protocol SCNEventHandler, MTLDevice;
@class NSOpenGLPixelFormat, NSString, SCNRenderer, SCNScene, SCNDisplayLink, CALayer, SCNJitterer, SCNRecursiveLock, NSColor, SCNSpriteKitEventHandler, SCNCameraController, NSOpenGLContext, SCNNode, SKScene, MTLRenderPassDescriptor, AVAudioEngine, AVAudioEnvironmentNode, SCNTechnique;

@interface SCNView : NSView <SCNSceneRenderer, SCNTechniqueSupport> {

	double _currentSystemTime;
	double _lastUpdate;
	NSOpenGLPixelFormat* _userDefinedPixelFormat;
	NSString* __ibSceneName;
	unsigned long long __ibPreferredRenderingAPI;
	unsigned _ibNoMultisampling : 1;
	unsigned long long _renderingAPI;
	unsigned _isOpaque : 1;
	unsigned _rendersContinuously : 1;
	unsigned _firstDrawDone : 1;
	unsigned _drawOnMainThreadPending : 1;
	unsigned _viewIsOffscreen : 1;
	unsigned _inRenderQueueForLayerBackedGLRendering : 1;
	unsigned _disableLinearRendering : 1;
	unsigned _isInLiveResize : 1;
	BOOL _isHidden;
	BOOL _didTriggerRedrawWhileRendering;
	id _delegate;
	SCNRenderer* _renderer;
	SCNScene* _scene;
	char _displayLinkCreationRequested;
	char _skipFramesIfNoDrawableAvailable;
	SCNDisplayLink* _displayLink;
	long long _preferredFramePerSeconds;
	CALayer* _backingLayer;
	SCNJitterer* _jitterer;
	SCNRecursiveLock* _lock;
	NSColor* _backgroundColor;
	CGSize _boundsSize;
	char _asynchronousResizing;
	char* _snapshotImageData;
	unsigned long long _snapshotImageDataLength;
	id<SCNEventHandler> _navigationCameraController;
	SCNSpriteKitEventHandler* _spriteKitEventHandler;
	id<MTLDevice> _device;

}

@property (nonatomic,retain) SCNScene * scene; 
@property (assign,nonatomic) char rendersContinuously; 
@property (nonatomic,copy) NSColor * backgroundColor; 
@property (assign,nonatomic) char allowsCameraControl; 
@property (nonatomic,readonly) id<SCNCameraControlConfiguration> cameraControlConfiguration; 
@property (nonatomic,readonly) SCNCameraController * defaultCameraController; 
@property (assign,nonatomic) long long preferredFramesPerSecond; 
@property (assign) char drawableResizesAsynchronously; 
@property (nonatomic,retain) NSOpenGLContext * openGLContext; 
@property (assign,nonatomic) unsigned long long antialiasingMode; 
@property (nonatomic,retain) NSOpenGLPixelFormat * pixelFormat; 
@property (assign,nonatomic) double sceneTime; 
@property (assign,nonatomic,__weak) id<SCNSceneRendererDelegate> delegate; 
@property (getter=isPlaying) char playing; 
@property (assign,nonatomic) char loops; 
@property (nonatomic,retain) SCNNode * pointOfView; 
@property (assign,nonatomic) char autoenablesDefaultLighting; 
@property (assign,getter=isJitteringEnabled,nonatomic) char jitteringEnabled; 
@property (assign,getter=isTemporalAntialiasingEnabled,nonatomic) char temporalAntialiasingEnabled; 
@property (assign,nonatomic) char showsStatistics; 
@property (assign,nonatomic) unsigned long long debugOptions; 
@property (nonatomic,retain) SKScene * overlaySKScene; 
@property (nonatomic,readonly) unsigned long long renderingAPI; 
@property (nonatomic,readonly) void* context; 
@property (nonatomic,readonly) id<MTLRenderCommandEncoder> currentRenderCommandEncoder; 
@property (nonatomic,readonly) MTLRenderPassDescriptor * currentRenderPassDescriptor; 
@property (nonatomic,readonly) id<MTLDevice> device; 
@property (nonatomic,readonly) unsigned long long colorPixelFormat; 
@property (nonatomic,readonly) unsigned long long depthPixelFormat; 
@property (nonatomic,readonly) unsigned long long stencilPixelFormat; 
@property (nonatomic,readonly) id<MTLCommandQueue> commandQueue; 
@property (nonatomic,readonly) AVAudioEngine * audioEngine; 
@property (nonatomic,readonly) AVAudioEnvironmentNode * audioEnvironmentNode; 
@property (nonatomic,retain) SCNNode * audioListener; 
@property (nonatomic,readonly) CGRect currentViewport; 
@property (assign,nonatomic) double currentTime; 
@property (assign,nonatomic) char usesReverseZ; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) SCNTechnique * technique; 
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)keyPathsForValuesAffectingValueForKey:(id)arg1 ;
+(char)lowLatency;
+(id)_defaultPixelFormat;
+(id)_kvoKeysForwardedToRenderer;
+(id)deviceForOptions:(id)arg1 ;
+(unsigned long long)renderingAPIForOptions:(id)arg1 ;
+(char)_isMetalSupported;
+(id)_defaultPixelFormatWithAPI:(unsigned long long)arg1 sampleCount:(unsigned long long)arg2 stencil:(char)arg3 ;
+(char)usesSeparateWorkGroup;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(void)lock;
-(void)unlock;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id<SCNSceneRendererDelegate>)delegate;
-(void)setDelegate:(id<SCNSceneRendererDelegate>)arg1 ;
-(void)setHidden:(char)arg1 ;
-(void)update;
-(id<MTLDevice>)device;
-(id<MTLCommandQueue>)commandQueue;
-(void)setPixelFormat:(NSOpenGLPixelFormat *)arg1 ;
-(NSOpenGLPixelFormat *)pixelFormat;
-(void)layout;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void*)context;
-(void)setNeedsDisplay:(char)arg1 ;
-(void)setBackgroundColor:(NSColor *)arg1 ;
-(char)isOpaque;
-(void)setFrameSize:(CGSize)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(char)acceptsFirstResponder;
-(void)setWantsLayer:(char)arg1 ;
-(void)viewDidMoveToWindow;
-(NSColor *)backgroundColor;
-(void)mouseDown:(id)arg1 ;
-(id)makeBackingLayer;
-(void)mouseMoved:(id)arg1 ;
-(void)stop:(id)arg1 ;
-(void)rightMouseDown:(id)arg1 ;
-(void)windowWillClose:(id)arg1 ;
-(void)keyDown:(id)arg1 ;
-(char)resignFirstResponder;
-(char)acceptsFirstMouse:(id)arg1 ;
-(char)becomeFirstResponder;
-(void)scrollWheel:(id)arg1 ;
-(char)lockFocusIfCanDraw;
-(void)viewWillStartLiveResize;
-(void)viewDidEndLiveResize;
-(void)mouseDragged:(id)arg1 ;
-(void)mouseUp:(id)arg1 ;
-(void)magnifyWithEvent:(id)arg1 ;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(void)rightMouseUp:(id)arg1 ;
-(void)keyUp:(id)arg1 ;
-(void)flagsChanged:(id)arg1 ;
-(void)rightMouseDragged:(id)arg1 ;
-(CATransform3D)_screenTransform;
-(id)_defaultBackgroundColor;
-(void)reshape;
-(NSOpenGLContext *)openGLContext;
-(void)setOpenGLContext:(NSOpenGLContext *)arg1 ;
-(void)rotateWithEvent:(id)arg1 ;
-(id)snapshot;
-(id)initWithFrame:(CGRect)arg1 options:(id)arg2 ;
-(char)isPlaying;
-(double)currentTime;
-(void)setCurrentTime:(double)arg1 ;
-(void)setLoops:(char)arg1 ;
-(char)loops;
-(id)renderer;
-(void)setWantsBestResolutionOpenGLSurface:(char)arg1 ;
-(void)_setNeedsDisplay;
-(id)contentLayer;
-(void)_windowBackingDidChange:(id)arg1 ;
-(void)setEventHandler:(id)arg1 ;
-(id)eventHandler;
-(unsigned long long)colorPixelFormat;
-(void)setPreferredFramesPerSecond:(long long)arg1 ;
-(MTLRenderPassDescriptor *)currentRenderPassDescriptor;
-(long long)preferredFramesPerSecond;
-(SCNScene *)scene;
-(void)setScene:(SCNScene *)arg1 ;
-(id)displayLink;
-(void)setDisplayLink:(id)arg1 ;
-(void)pause:(id)arg1 ;
-(void)play:(id)arg1 ;
-(double)zoomFactor;
-(void)setZoomFactor:(double)arg1 ;
-(id)_renderingQueue;
-(SCNTechnique *)technique;
-(void)setTechnique:(SCNTechnique *)arg1 ;
-(void)setPlaying:(char)arg1 ;
-(unsigned long long)stencilPixelFormat;
-(const void*)__CFObject;
-(void)_sceneDidUpdate:(id)arg1 ;
-(void)_systemTimeAnimationStarted:(id)arg1 ;
-(char)_canJitter;
-(void)_cancelJitterRedisplay;
-(id)_privateOpenGLContext;
-(void)_commonInit:(id)arg1 ;
-(void)setAllowsCameraControl:(char)arg1 ;
-(char)allowsCameraControl;
-(void)windowChangedScreen:(id)arg1 ;
-(void)setPointOfView:(id)arg1 animate:(char)arg2 ;
-(void)rotateOf:(double)arg1 ;
-(void)setAsynchronousLoading:(char)arg1 ;
-(void)setAllowsBrowsing:(char)arg1 ;
-(void)switchToCameraNamed:(id)arg1 ;
-(void)switchToNextCamera;
-(char)autoenablesDefaultLighting;
-(void)setAutoenablesDefaultLighting:(char)arg1 ;
-(SCNNode *)pointOfView;
-(char)isJitteringEnabled;
-(id)hitTest:(CGPoint)arg1 options:(id)arg2 ;
-(void)setPointOfView:(SCNNode *)arg1 ;
-(void)setJitteringEnabled:(char)arg1 ;
-(void)setAutoAdjustCamera:(char)arg1 ;
-(char)autoAdjustCamera;
-(id)_pixelFormatByDefaultingIfNeeded;
-(id)_privateOpenGLContextIfAny;
-(void)_drawInBackingLayerWithCGLContext:(CGLContextObject*)arg1 atTime:(double)arg2 ;
-(void)_jitterRedisplayWithContext:(CGLContextObject*)arg1 ;
-(SCNCameraController *)defaultCameraController;
-(char)showsStatistics;
-(char)_showsAuthoringEnvironment;
-(void)eventHandlerWantsRedraw;
-(id)_authoringEnvironment;
-(id)hitTestWithSegmentFromPoint:(SCNVector3)arg1 toPoint:(SCNVector3)arg2 options:(id)arg3 ;
-(void)updateAtTime:(double)arg1 ;
-(unsigned long long)renderingAPI;
-(char)_supportsJitteringSyncRedraw;
-(char)scn_inLiveResize;
-(void)SCN_displayLinkCallback:(double)arg1 ;
-(unsigned long long)debugOptions;
-(void)setDebugOptions:(unsigned long long)arg1 ;
-(id<MTLRenderCommandEncoder>)currentRenderCommandEncoder;
-(double)_superSamplingFactor;
-(char)_disableLinearRendering;
-(id)_resourceManagerMonitor;
-(char)usesReverseZ;
-(void)setUsesReverseZ:(char)arg1 ;
-(void)setShowsStatistics:(char)arg1 ;
-(char)isTemporalAntialiasingEnabled;
-(void)setTemporalAntialiasingEnabled:(char)arg1 ;
-(CGRect)currentViewport;
-(id)pointOfCulling;
-(void)setPointOfCulling:(id)arg1 ;
-(double)sceneTime;
-(SCNVector4)_viewport;
-(char)prepareObject:(id)arg1 shouldAbortBlock:(/*^block*/id)arg2 ;
-(void)prepareObjects:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)setSceneTime:(double)arg1 ;
-(SKScene *)overlaySKScene;
-(void)setOverlaySKScene:(SKScene *)arg1 ;
-(AVAudioEngine *)audioEngine;
-(AVAudioEnvironmentNode *)audioEnvironmentNode;
-(SCNNode *)audioListener;
-(void)setAudioListener:(SCNNode *)arg1 ;
-(char)_checkAndUpdateDisplayLinkStateIfNeeded;
-(void)set_showsAuthoringEnvironment:(char)arg1 ;
-(void)presentScene:(id)arg1 withTransition:(id)arg2 incomingPointOfView:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(char)isNodeInsideFrustum:(id)arg1 withPointOfView:(id)arg2 ;
-(id)nodesInsideFrustumWithPointOfView:(id)arg1 ;
-(SCNVector3)projectPoint:(SCNVector3)arg1 ;
-(SCNVector3)unprojectPoint:(SCNVector3)arg1 ;
-(unsigned long long)depthPixelFormat;
-(void)setAntialiasingMode:(unsigned long long)arg1 ;
-(void)setAsynchronousResizing:(char)arg1 ;
-(void)setNavigationCameraController:(id)arg1 ;
-(void)_selectRenderingAPIWithOptions:(id)arg1 ;
-(void)set_ibPreferredRenderingAPI:(int)arg1 ;
-(void)set_ibWantsMultisampling:(char)arg1 ;
-(void)set_ibSceneName:(id)arg1 ;
-(id)_ibSceneName;
-(char)_ibWantsMultisampling;
-(int)_ibPreferredRenderingAPI;
-(void)_clearAppKitGLContext;
-(void)_updateOpacity;
-(void)set_superSamplingFactor:(double)arg1 ;
-(void)set_screenTransform:(CATransform3D)arg1 ;
-(void)_scnUpdateContentsGravity;
-(char)drawableResizesAsynchronously;
-(void)setDrawableResizesAsynchronously:(char)arg1 ;
-(void)_drawAtTime:(double)arg1 WithContext:(CGLContextObject*)arg2 ;
-(char)_shouldInheritContentsScale:(float)arg1 ;
-(void)_updateContentsScaleFactor;
-(CGSize)backingSizeForBoundSize:(CGSize)arg1 ;
-(CGSize)_updateBackingSize;
-(void)_reshape;
-(id)navigationCameraController;
-(void)setRendersContinuously:(char)arg1 ;
-(void)_adjustBackingLayerPixelFormat;
-(id)_openGLContextIfAny;
-(void)_backgroundDidChange;
-(void)set_resourceManagerMonitor:(id)arg1 ;
-(void)_createDisplayLinkIfNeeded;
-(unsigned long long)antialiasingMode;
-(char)_enablesDeferredShading;
-(void)set_enablesDeferredShading:(char)arg1 ;
-(void)_updateProbes:(id)arg1 withProgress:(id)arg2 ;
-(void)_beginMouseMovedTracking;
-(void)_cancelMouseMovedTracking;
-(id)_scnlayerBackedOpenGLContext;
-(void)_openGLContextDidChange:(id)arg1 ;
-(void)scn_setBackingLayer:(id)arg1 ;
-(void)_resetContentsScaleFactor;
-(char)skipFramesIfNoDrawableAvailable;
-(void)setSkipFramesIfNoDrawableAvailable:(char)arg1 ;
-(void)set_renderOptions:(unsigned long long)arg1 ;
-(unsigned long long)_renderOptions;
-(id)scn_backingLayer;
-(char)asynchronousResizing;
-(id<SCNCameraControlConfiguration>)cameraControlConfiguration;
-(char)rendersContinuously;
-(char)_wantsSceneRendererDelegationMessages;
-(void)set_wantsSceneRendererDelegationMessages:(char)arg1 ;
-(double)_renderThreadPriority;
-(char)_isEditor;
-(void)set_disableLinearRendering:(char)arg1 ;
-(int)ibPreferredRenderingAPI;
-(void)setIbPreferredRenderingAPI:(int)arg1 ;
-(id)ibSceneName;
-(void)setIbSceneName:(id)arg1 ;
-(char)ibWantsMultisampling;
-(void)setIbWantsMultisampling:(char)arg1 ;
-(double)_runFPSTestWithDuration:(double)arg1 ;
-(char)_isGLLayerBacked;
@end

