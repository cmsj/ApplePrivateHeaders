/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:03 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <QuartzCore/QuartzCore-Structs.h>
#import <QuartzCore/CALayer.h>

@class CAEDRMetadata;

@interface CAMetalLayer : CALayer {

	CAMetalLayerPrivate* _priv;

}

@property (assign,nonatomic) char fenceEnabled; 
@property (assign,nonatomic) char serverSyncEnabled; 
@property (assign,nonatomic) char muxLockEnabled; 
@property (assign,nonatomic) char nonDefaultColorspace; 
@property (assign,nonatomic) double drawableTimeoutSeconds; 
@property (nonatomic,readonly) unsigned long long displayCompositingInternalStatus; 
@property (retain) id<MTLDevice> device; 
@property (readonly) id<MTLDevice> preferredDevice; 
@property (assign) unsigned long long pixelFormat; 
@property (assign) char framebufferOnly; 
@property (assign) CGSize drawableSize; 
@property (assign) unsigned long long maximumDrawableCount; 
@property (assign) char presentsWithTransaction; 
@property (assign) CGColorSpaceRef colorspace; 
@property (assign) char wantsExtendedDynamicRangeContent; 
@property (retain) CAEDRMetadata * EDRMetadata; 
@property (assign) char displaySyncEnabled; 
@property (assign) char allowsNextDrawableTimeout; 
+(char)CA_automaticallyNotifiesObservers:(Class)arg1 ;
+(id)defaultValueForKey:(id)arg1 ;
-(void)_didCommitLayer:(Transaction*)arg1 ;
-(void)setDrawableTimeoutSeconds:(double)arg1 ;
-(double)drawableTimeoutSeconds;
-(CAEDRMetadata *)EDRMetadata;
-(char)displaySyncEnabled;
-(char)allowsNextDrawableTimeout;
-(void)setColorspace:(CGColorSpaceRef)arg1 nonDefault:(char)arg2 ;
-(void)setEDRMetadata:(CAEDRMetadata *)arg1 ;
-(id)newDrawable;
-(void)setNonDefaultColorspace:(char)arg1 ;
-(char)nonDefaultColorspace;
-(char)serverSyncEnabled;
-(char)fenceEnabled;
-(unsigned long long)displayCompositingInternalStatus;
-(void)setServerSyncEnabled:(char)arg1 ;
-(void)setMuxLockEnabled:(char)arg1 ;
-(char)muxLockEnabled;
-(void)dealloc;
-(id)init;
-(void)didChangeValueForKey:(id)arg1 ;
-(id<MTLDevice>)device;
-(void)setPixelFormat:(unsigned long long)arg1 ;
-(unsigned long long)pixelFormat;
-(char)framebufferOnly;
-(void)setContents:(id)arg1 ;
-(void)_display;
-(void)layerDidBecomeVisible:(char)arg1 ;
-(CGSize)drawableSize;
-(void)setDrawableSize:(CGSize)arg1 ;
-(char)isDrawableAvailable;
-(id)nextDrawable;
-(void)setLowLatency:(char)arg1 ;
-(void)setDevice:(id<MTLDevice>)arg1 ;
-(void)setFramebufferOnly:(char)arg1 ;
-(void)setColorspace:(CGColorSpaceRef)arg1 ;
-(CGColorSpaceRef)colorspace;
-(void)setPresentsWithTransaction:(char)arg1 ;
-(char)presentsWithTransaction;
-(id<MTLDevice>)preferredDevice;
-(void)setDisplaySyncEnabled:(char)arg1 ;
-(void)setAllowsNextDrawableTimeout:(char)arg1 ;
-(char)lowLatency;
-(void)setMaximumDrawableCount:(unsigned long long)arg1 ;
-(void)discardContents;
-(void)removeBackBuffers;
-(unsigned long long)maximumDrawableCount;
-(char)shouldArchiveValueForKey:(id)arg1 ;
-(void)setFenceEnabled:(char)arg1 ;
@end

