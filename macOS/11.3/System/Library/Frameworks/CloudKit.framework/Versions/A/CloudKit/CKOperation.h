/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:04 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudKit/CloudKit-Structs.h>
#import <Foundation/NSOperation.h>
#import <libobjc.A.dylib/CKOperationCallbacks.h>
#import <libobjc.A.dylib/CKThrottlingCriteria.h>

@protocol OS_os_transaction, OS_voucher, OS_os_activity, OS_dispatch_queue, OS_dispatch_source;
@class NSObject, CKOperationCallbackProxy, CKOperationConfiguration, CKOperationGroup, NSString, CKOperationMetrics, CKEventMetric, NSMutableDictionary, NSError, CKPlaceholderOperation, CKOperationMMCSRequestOptions, CKDiscretionaryOptions, CKOperationInfo, NSDictionary;

@interface CKOperation : NSOperation <CKOperationCallbacks, CKThrottlingCriteria> {

	NSObject*<OS_os_transaction> _isExecuting;
	NSObject*<OS_voucher> _clientVoucher;
	NSObject*<OS_os_activity> _osActivity;
	CKOperationCallbackProxy* _clientOperationCallbackProxy;
	char _isOutstandingOperation;
	char _usesBackgroundSession;
	char _scheduledDiscretionaryOperation;
	char _startedDiscretionaryOperation;
	char _failedToScheduleDiscretionaryOperation;
	char _isFinishingOnCallbackQueue;
	char _clouddConnectionInterrupted;
	char _isDiscretionarySuspended;
	char _queueHasStarted;
	char __ckRaiseInGeneratedCallbackImplementation;
	char _isFinished;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	CKOperationConfiguration* _resolvedConfiguration;
	/*^block*/id _longLivedOperationWasPersistedBlock;
	/*^block*/id _requestCompletedBlock;
	CKOperationConfiguration* _configuration;
	CKOperationGroup* _group;
	NSString* _operationID;
	CKOperationMetrics* _metrics;
	NSObject*<OS_dispatch_source> _timeoutSource;
	CKEventMetric* _operationMetric;
	xpc_activity_eligibility_changed_handler_sRef _xpcActivityEligibilityChangedHandler;
	unsigned long long _duetPreClearedMode;
	unsigned long long _discretionaryWhenBackgroundedState;
	unsigned long long _systemScheduler;
	NSMutableDictionary* _lifecycleCallbacks;
	NSError* _cancelError;
	NSError* _error;
	CKPlaceholderOperation* _placeholderOperation;
	NSString* _sectionID;
	NSString* _parentSectionID;
	id _context;
	NSString* _deviceIdentifier;
	CKOperationMMCSRequestOptions* _MMCSRequestOptions;

}

@property (nonatomic,retain) CKOperationMetrics * metrics;                                                                    //@synthesize metrics=_metrics - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> timeoutSource;                                                     //@synthesize timeoutSource=_timeoutSource - In the implementation block
@property (assign,nonatomic) char isOutstandingOperation;                                                                     //@synthesize isOutstandingOperation=_isOutstandingOperation - In the implementation block
@property (assign,nonatomic) char usesBackgroundSession;                                                                      //@synthesize usesBackgroundSession=_usesBackgroundSession - In the implementation block
@property (nonatomic,readonly) CKEventMetric * operationMetric;                                                               //@synthesize operationMetric=_operationMetric - In the implementation block
@property (assign,nonatomic) char scheduledDiscretionaryOperation;                                                            //@synthesize scheduledDiscretionaryOperation=_scheduledDiscretionaryOperation - In the implementation block
@property (assign,nonatomic) char startedDiscretionaryOperation;                                                              //@synthesize startedDiscretionaryOperation=_startedDiscretionaryOperation - In the implementation block
@property (assign,nonatomic) char failedToScheduleDiscretionaryOperation;                                                     //@synthesize failedToScheduleDiscretionaryOperation=_failedToScheduleDiscretionaryOperation - In the implementation block
@property (assign,nonatomic) xpc_activity_eligibility_changed_handler_sRef xpcActivityEligibilityChangedHandler;              //@synthesize xpcActivityEligibilityChangedHandler=_xpcActivityEligibilityChangedHandler - In the implementation block
@property (assign,nonatomic) unsigned long long duetPreClearedMode;                                                           //@synthesize duetPreClearedMode=_duetPreClearedMode - In the implementation block
@property (assign,nonatomic) unsigned long long discretionaryWhenBackgroundedState;                                           //@synthesize discretionaryWhenBackgroundedState=_discretionaryWhenBackgroundedState - In the implementation block
@property (assign,nonatomic) unsigned long long systemScheduler;                                                              //@synthesize systemScheduler=_systemScheduler - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * lifecycleCallbacks;                                                        //@synthesize lifecycleCallbacks=_lifecycleCallbacks - In the implementation block
@property (nonatomic,readonly) CKDiscretionaryOptions * discretionaryOptions; 
@property (nonatomic,retain) NSError * cancelError;                                                                           //@synthesize cancelError=_cancelError - In the implementation block
@property (nonatomic,retain) NSError * error;                                                                                 //@synthesize error=_error - In the implementation block
@property (retain) CKPlaceholderOperation * placeholderOperation;                                                             //@synthesize placeholderOperation=_placeholderOperation - In the implementation block
@property (nonatomic,copy) NSString * operationID;                                                                            //@synthesize operationID=_operationID - In the implementation block
@property (assign,nonatomic) char isExecuting; 
@property (nonatomic,readonly) char isFinishingOnCallbackQueue;                                                               //@synthesize isFinishingOnCallbackQueue=_isFinishingOnCallbackQueue - In the implementation block
@property (assign,nonatomic) char clouddConnectionInterrupted;                                                                //@synthesize clouddConnectionInterrupted=_clouddConnectionInterrupted - In the implementation block
@property (assign,nonatomic) char isDiscretionarySuspended;                                                                   //@synthesize isDiscretionarySuspended=_isDiscretionarySuspended - In the implementation block
@property (nonatomic,retain) NSString * sectionID;                                                                            //@synthesize sectionID=_sectionID - In the implementation block
@property (nonatomic,readonly) NSString * parentSectionID;                                                                    //@synthesize parentSectionID=_parentSectionID - In the implementation block
@property (nonatomic,readonly) id context;                                                                                    //@synthesize context=_context - In the implementation block
@property (nonatomic,readonly) CKOperationInfo * operationInfo; 
@property (nonatomic,readonly) CKOperationCallbackProxy * clientOperationCallbackProxy; 
@property (assign) char queueHasStarted;                                                                                      //@synthesize queueHasStarted=_queueHasStarted - In the implementation block
@property (assign,nonatomic) char _ckRaiseInGeneratedCallbackImplementation;                                                  //@synthesize _ckRaiseInGeneratedCallbackImplementation=__ckRaiseInGeneratedCallbackImplementation - In the implementation block
@property (nonatomic,retain) NSString * deviceIdentifier;                                                                     //@synthesize deviceIdentifier=_deviceIdentifier - In the implementation block
@property (nonatomic,retain) CKOperationMMCSRequestOptions * MMCSRequestOptions;                                              //@synthesize MMCSRequestOptions=_MMCSRequestOptions - In the implementation block
@property (nonatomic,retain) NSObject*<OS_os_activity> osActivity;                                                            //@synthesize osActivity=_osActivity - In the implementation block
@property (nonatomic,retain) id clientVoucher;                                                                                //@synthesize clientVoucher=_clientVoucher - In the implementation block
@property (nonatomic,readonly) NSString * flowControlKey; 
@property (assign,nonatomic) char preferAnonymousRequests; 
@property (assign,nonatomic) char isFinished;                                                                                 //@synthesize isFinished=_isFinished - In the implementation block
@property (nonatomic,copy,readonly) CKOperationConfiguration * resolvedConfiguration;                                         //@synthesize resolvedConfiguration=_resolvedConfiguration - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> callbackQueue;                                                      //@synthesize callbackQueue=_callbackQueue - In the implementation block
@property (nonatomic,copy) id requestCompletedBlock;                                                                          //@synthesize requestCompletedBlock=_requestCompletedBlock - In the implementation block
@property (nonatomic,copy) NSDictionary * additionalRequestHTTPHeaders; 
@property (nonatomic,copy) CKOperationConfiguration * configuration;                                                          //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,retain) CKOperationGroup * group;                                                                        //@synthesize group=_group - In the implementation block
@property (nonatomic,copy) id longLivedOperationWasPersistedBlock;                                                            //@synthesize longLivedOperationWasPersistedBlock=_longLivedOperationWasPersistedBlock - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)applyDaemonCallbackInterfaceTweaks:(id)arg1 ;
+(id)exportedDaemonCallbackInterface;
+(Class)operationInfoClass;
+(char)_wireUpAssetContentForOperation:(id)arg1 inRecord:(id)arg2 checkSignatures:(char)arg3 outError:(id*)arg4 ;
+(id)assetInfoForOperation:(id)arg1 recordID:(id)arg2 recordKey:(id)arg3 arrayIndex:(long long)arg4 ;
+(id)operationDaemonCallbackProtocol;
+(Class)operationClass;
+(SEL)daemonCallbackCompletionSelector;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(id)container;
-(NSError *)error;
-(void)setQualityOfService:(long long)arg1 ;
-(void)setGroup:(CKOperationGroup *)arg1 ;
-(void)setError:(NSError *)arg1 ;
-(NSObject*<OS_dispatch_queue>)callbackQueue;
-(void)start;
-(void)cancel;
-(void)main;
-(char)isFinished;
-(char)isExecuting;
-(char)isConcurrent;
-(void)setCompletionBlock:(/*^block*/id)arg1 ;
-(long long)qualityOfService;
-(id)context;
-(CKOperationGroup *)group;
-(void)setTimeoutIntervalForResource:(double)arg1 ;
-(void)_start;
-(CKOperationConfiguration *)configuration;
-(void)setContainer:(id)arg1 ;
-(id)containerID;
-(void)setConfiguration:(CKOperationConfiguration *)arg1 ;
-(NSString *)deviceIdentifier;
-(void)setDeviceIdentifier:(NSString *)arg1 ;
-(void)setAllowsCellularAccess:(char)arg1 ;
-(CKOperationMetrics *)metrics;
-(double)timeoutIntervalForResource;
-(void)setTimeoutIntervalForRequest:(double)arg1 ;
-(id)daemon;
-(void)setIsFinished:(char)arg1 ;
-(id)CKDescriptionPropertiesWithPublic:(char)arg1 private:(char)arg2 shouldExpand:(char)arg3 ;
-(char)_ckRaiseInGeneratedCallbackImplementation;
-(char)queueHasStarted;
-(void)fillOutOperationInfo:(id)arg1 ;
-(void)fillFromOperationInfo:(id)arg1 ;
-(char)hasCKOperationCallbacksSet;
-(char)CKOperationShouldRun:(id*)arg1 ;
-(CKOperationInfo *)operationInfo;
-(CKOperationCallbackProxy *)clientOperationCallbackProxy;
-(NSString *)operationID;
-(void)_finishOnCallbackQueueWithError:(id)arg1 ;
-(void)handleLongLivedOperationDidPersist;
-(void)handleSystemDidImposeInfo:(id)arg1 ;
-(void)handleRequestDidComplete:(id)arg1 ;
-(void)handleOperationDidCompleteWithMetrics:(id)arg1 error:(id)arg2 ;
-(void)handleDiscretionaryOperationShouldStart:(char)arg1 nonDiscretionary:(char)arg2 error:(id)arg3 ;
-(void)handleDiscretionaryOperationShouldSuspend;
-(void)handleDaemonOperationWillStartWithClassName:(id)arg1 isTopLevelDaemonOperation:(char)arg2 replyBlock:(/*^block*/id)arg3 ;
-(id)activityCreate;
-(void)performCKOperation;
-(CKOperationConfiguration *)resolvedConfiguration;
-(char)clouddConnectionInterrupted;
-(char)isDiscretionarySuspended;
-(NSError *)cancelError;
-(NSObject*<OS_os_activity>)osActivity;
-(id)clientVoucher;
-(id)unitTestOverrides;
-(void)setCallbackQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(char)isLongLived;
-(NSString *)flowControlKey;
-(void)finishWithError:(id)arg1 ;
-(NSString *)sectionID;
-(void)setIsExecuting:(char)arg1 ;
-(void)_setIsExecuting:(char)arg1 ;
-(void)_setIsFinished:(char)arg1 ;
-(void)setSectionID:(NSString *)arg1 ;
-(void)setQueueHasStarted:(char)arg1 ;
-(char)isOutstandingOperation;
-(CKEventMetric *)operationMetric;
-(void)cancelWithUnderlyingError:(id)arg1 ;
-(void)setSystemScheduler:(unsigned long long)arg1 ;
-(void)setDuetPreClearedMode:(unsigned long long)arg1 ;
-(void)setXpcActivityEligibilityChangedHandler:(xpc_activity_eligibility_changed_handler_sRef)arg1 ;
-(char)_wantsFlowControl;
-(char)failedToScheduleDiscretionaryOperation;
-(void)_finishDiscretionaryOperation;
-(void)setPlaceholderOperation:(CKPlaceholderOperation *)arg1 ;
-(char)usesBackgroundSession;
-(void)setScheduledDiscretionaryOperation:(char)arg1 ;
-(id)discretionaryDaemonWithErrorHandler:(/*^block*/id)arg1 ;
-(CKDiscretionaryOptions *)discretionaryOptions;
-(id)_createPlaceholderOperation;
-(CKPlaceholderOperation *)placeholderOperation;
-(void)setOperationID:(NSString *)arg1 ;
-(unsigned long long)duetPreClearedMode;
-(unsigned long long)discretionaryWhenBackgroundedState;
-(void)setDiscretionaryWhenBackgroundedState:(unsigned long long)arg1 ;
-(unsigned long long)systemScheduler;
-(void)setIsOutstandingOperation:(char)arg1 ;
-(CKOperationMMCSRequestOptions *)MMCSRequestOptions;
-(void)setMMCSRequestOptions:(CKOperationMMCSRequestOptions *)arg1 ;
-(id)requestCompletedBlock;
-(void)setLongLived:(char)arg1 ;
-(NSString *)parentSectionID;
-(void)cancelWithError:(id)arg1 ;
-(void)setCancelError:(NSError *)arg1 ;
-(char)scheduledDiscretionaryOperation;
-(char)startedDiscretionaryOperation;
-(void)_cancelDaemonOperation;
-(void)_finishInternalOnCallbackQueueWithError:(id)arg1 ;
-(NSObject*<OS_dispatch_source>)timeoutSource;
-(void)setTimeoutSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(void)_uninstallTimeoutSource;
-(id)_findBestThrottleError:(id)arg1 ;
-(void)_installTimeoutSource;
-(void)_handleRemoteProxyFailureWithError:(id)arg1 ;
-(id)longLivedOperationWasPersistedBlock;
-(void)setStartedDiscretionaryOperation:(char)arg1 ;
-(void)setFailedToScheduleDiscretionaryOperation:(char)arg1 ;
-(void)setIsDiscretionarySuspended:(char)arg1 ;
-(void)setMetrics:(CKOperationMetrics *)arg1 ;
-(void)setClouddConnectionInterrupted:(char)arg1 ;
-(void)setLongLivedOperationWasPersistedBlock:(id)arg1 ;
-(void)setRequestCompletedBlock:(id)arg1 ;
-(char)allowsCellularAccess;
-(double)timeoutIntervalForRequest;
-(char)preferAnonymousRequests;
-(void)setPreferAnonymousRequests:(char)arg1 ;
-(NSDictionary *)additionalRequestHTTPHeaders;
-(void)setAdditionalRequestHTTPHeaders:(NSDictionary *)arg1 ;
-(id)applicationBundleIdentifierForContainerAccess;
-(id)operationGroupName;
-(void)addUnitTestOverrides:(id)arg1 ;
-(char)_BOOLForUnitTestOverride:(id)arg1 defaultValue:(char)arg2 ;
-(void)setUsesBackgroundSession:(char)arg1 ;
-(xpc_activity_eligibility_changed_handler_sRef)xpcActivityEligibilityChangedHandler;
-(NSMutableDictionary *)lifecycleCallbacks;
-(void)setLifecycleCallbacks:(NSMutableDictionary *)arg1 ;
-(char)isFinishingOnCallbackQueue;
-(void)set_ckRaiseInGeneratedCallbackImplementation:(char)arg1 ;
-(void)setOsActivity:(NSObject*<OS_os_activity>)arg1 ;
-(void)setClientVoucher:(id)arg1 ;
@end

