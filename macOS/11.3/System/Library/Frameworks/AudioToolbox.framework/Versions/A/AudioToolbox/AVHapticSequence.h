/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class AVHapticPlayer;

@interface AVHapticSequence : NSObject {

	AVHapticPlayer* _player;
	unsigned long long _seqID;
	double _lastStartTime;
	unsigned long long _eventBehavior;
	char _loopIsEnabled;
	float _loopLength;
	float _playbackRate;
	double _duration;
	unsigned long long _channelCount;
	unsigned long long _activeChannel;

}

@property (__weak) AVHapticPlayer * player;                        //@synthesize player=_player - In the implementation block
@property (assign) unsigned long long seqID;                       //@synthesize seqID=_seqID - In the implementation block
@property (assign) double duration;                                //@synthesize duration=_duration - In the implementation block
@property (assign) double lastStartTime;                           //@synthesize lastStartTime=_lastStartTime - In the implementation block
@property (assign) unsigned long long activeChannel;               //@synthesize activeChannel=_activeChannel - In the implementation block
@property (assign) unsigned long long eventBehavior; 
@property (assign) char loopingEnabled; 
@property (assign) float playbackRate; 
@property (readonly) unsigned long long channelCount;              //@synthesize channelCount=_channelCount - In the implementation block
@property (copy) id completionHandler; 
-(id)initWithDictionary:(id)arg1 player:(id)arg2 error:(id*)arg3 ;
-(char)setLoopingEnabled:(char)arg1 error:(id*)arg2 ;
-(unsigned long long)getChannelCount;
-(char)prepareToPlayAndReturnError:(id*)arg1 ;
-(unsigned long long)seqID;
-(void)setSeqID:(unsigned long long)arg1 ;
-(void)dealloc;
-(id)init;
-(double)duration;
-(void)setDuration:(double)arg1 ;
-(unsigned long long)channelCount;
-(void)setCompletionHandler:(id)arg1 ;
-(id)completionHandler;
-(void)setPlayer:(AVHapticPlayer *)arg1 ;
-(void)setActiveChannel:(unsigned long long)arg1 ;
-(unsigned long long)activeChannel;
-(AVHapticPlayer *)player;
-(char)stopAtTime:(double)arg1 error:(id*)arg2 ;
-(char)cancelAndReturnError:(id*)arg1 ;
-(unsigned long long)eventBehavior;
-(void)setEventBehavior:(unsigned long long)arg1 ;
-(id)initWithEvents:(id)arg1 player:(id)arg2 error:(id*)arg3 ;
-(char)setParameter:(unsigned long long)arg1 value:(float)arg2 channel:(unsigned long long)arg3 atTime:(double)arg4 error:(id*)arg5 ;
-(char)playAtTime:(double)arg1 offset:(double)arg2 error:(id*)arg3 ;
-(char)seekToTime:(double)arg1 error:(id*)arg2 ;
-(char)resumeAtTime:(double)arg1 error:(id*)arg2 ;
-(char)pauseAtTime:(double)arg1 error:(id*)arg2 ;
-(char)loopingEnabled;
-(float)playbackRate;
-(void)setLoopingEnabled:(char)arg1 ;
-(char)setLoopLength:(float)arg1 error:(id*)arg2 ;
-(void)setPlaybackRate:(float)arg1 ;
-(id)initWithData:(id)arg1 player:(id)arg2 error:(id*)arg3 ;
-(char)activateChannelByIndex:(unsigned long long)arg1 atTime:(double)arg2 error:(id*)arg3 ;
-(char)setVolume:(float)arg1 atTime:(double)arg2 error:(id*)arg3 ;
-(void)setLastStartTime:(double)arg1 ;
-(double)lastStartTime;
@end

