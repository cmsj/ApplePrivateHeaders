/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:16 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/iTunesLibrary.framework/Versions/A/iTunesLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <iTunesLibrary/ITLibMediaEntity.h>

@class ITLibMediaItemData, NSDate, NSString, NSNumber, NSURL, ITLibArtist, ITLibAlbum, ITLibArtwork, ITLibMediaItemVideoInfo;

@interface ITLibMediaItem : ITLibMediaEntity {

	ITLibMediaItemData* _data;
	NSDate* _expirationDate;

}

@property (nonatomic,copy) NSString * title; 
@property (nonatomic,copy) NSString * sortTitle; 
@property (nonatomic,copy) NSString * composer; 
@property (nonatomic,retain) NSNumber * composerPersistentID; 
@property (nonatomic,copy) NSString * sortComposer; 
@property (assign,nonatomic) long long rating; 
@property (assign,getter=isRatingComputed,nonatomic) char ratingComputed; 
@property (assign,nonatomic) unsigned long long startTime; 
@property (assign,nonatomic) unsigned long long stopTime; 
@property (nonatomic,copy) NSString * genre; 
@property (nonatomic,retain) NSNumber * genrePersistentID; 
@property (nonatomic,copy) NSString * kind; 
@property (assign,nonatomic) unsigned long long mediaKind; 
@property (assign,nonatomic) unsigned long long fileSize; 
@property (assign,nonatomic) unsigned long long size; 
@property (assign,nonatomic) unsigned long long bookmarkTime; 
@property (assign,nonatomic) unsigned long long totalTime; 
@property (assign,nonatomic) unsigned long long trackNumber; 
@property (nonatomic,copy) NSString * category; 
@property (nonatomic,copy) NSString * description; 
@property (assign,nonatomic) unsigned long long lyricsContentRating; 
@property (nonatomic,copy) NSString * contentRating; 
@property (nonatomic,retain) NSDate * modifiedDate; 
@property (nonatomic,retain) NSDate * addedDate; 
@property (assign,nonatomic) unsigned long long bitrate; 
@property (assign,nonatomic) unsigned long long sampleRate; 
@property (assign,nonatomic) unsigned long long beatsPerMinute; 
@property (assign,nonatomic) unsigned long long playCount; 
@property (nonatomic,retain) NSDate * lastPlayedDate; 
@property (assign,nonatomic) unsigned long long playStatus; 
@property (nonatomic,retain) NSURL * URL; 
@property (assign,getter=hasArtworkAvailable,nonatomic) char artworkAvailable; 
@property (nonatomic,copy) NSString * comments; 
@property (assign,getter=isPurchased,nonatomic) char purchased; 
@property (assign,setter=setIsCloud:,getter=isCloud,nonatomic) char cloud; 
@property (assign,setter=setDRMProtected:,getter=isDRMProtected,nonatomic) char drmProtected; 
@property (assign,setter=setIsVideo:,getter=isVideo,nonatomic) char video; 
@property (nonatomic,retain) NSDate * releaseDate; 
@property (nonatomic,retain) NSDate * purchaseDate; 
@property (assign,nonatomic) unsigned long long year; 
@property (assign,nonatomic) unsigned long long skipCount; 
@property (nonatomic,retain) NSDate * skipDate; 
@property (nonatomic,copy) NSString * voiceOverLanguage; 
@property (assign,nonatomic) long long volumeAdjustment; 
@property (assign,nonatomic) unsigned long long volumeNormalizationEnergy; 
@property (assign,getter=isUserDisabled,nonatomic) char userDisabled; 
@property (nonatomic,copy) NSString * grouping; 
@property (nonatomic,copy) NSString * work; 
@property (nonatomic,copy) NSString * movementName; 
@property (assign,nonatomic) unsigned long long movementNumber; 
@property (assign,nonatomic) unsigned long long movementCount; 
@property (assign,nonatomic) unsigned long long locationType; 
@property (assign,nonatomic) unsigned long long podcastChannelID; 
@property (nonatomic,retain) NSString * podcastEpisodeGUID; 
@property (nonatomic,retain) NSString * podcastFeedURL; 
@property (assign,nonatomic) char podcastDoNotAutoDelete; 
@property (assign,nonatomic) unsigned long long storeItemID; 
@property (assign,nonatomic) unsigned long long storePlaylistID; 
@property (nonatomic,readonly) unsigned long long nameOrder; 
@property (nonatomic,readonly) unsigned long long albumOrder; 
@property (nonatomic,readonly) unsigned long long artistOrder; 
@property (nonatomic,readonly) unsigned long long genreOrder; 
@property (nonatomic,readonly) unsigned long long composerOrder; 
@property (nonatomic,readonly) unsigned long long albumArtistOrder; 
@property (nonatomic,readonly) unsigned long long albumArtistOrArtistOrder; 
@property (nonatomic,retain) NSString * artistName; 
@property (nonatomic,retain) NSString * sortArtistName; 
@property (nonatomic,retain) NSString * albumTitle; 
@property (nonatomic,retain) NSString * sortAlbumTitle; 
@property (assign,nonatomic) long long albumRating; 
@property (assign,nonatomic) char albumRatingComputed; 
@property (nonatomic,retain) NSNumber * albumPersistentID; 
@property (nonatomic,retain) NSNumber * albumArtistPersistentID; 
@property (assign,nonatomic) char albumGapless; 
@property (assign,nonatomic) char albumCompilation; 
@property (nonatomic,retain) NSString * albumArtist; 
@property (nonatomic,retain) NSString * sortAlbumArtist; 
@property (nonatomic,retain) NSNumber * artistPersistentID; 
@property (assign,nonatomic) unsigned long long albumDiscCount; 
@property (assign,nonatomic) unsigned long long albumDiscNumber; 
@property (assign,nonatomic) unsigned long long albumTrackCount; 
@property (assign,nonatomic) char videoHD; 
@property (assign,nonatomic) unsigned long long videoWidth; 
@property (assign,nonatomic) unsigned long long videoHeight; 
@property (nonatomic,retain) NSString * videoSeries; 
@property (nonatomic,retain) NSString * videoSortSeries; 
@property (assign,nonatomic) unsigned long long videoSeason; 
@property (nonatomic,retain) NSString * videoEpisode; 
@property (assign,nonatomic) long long videoEpisodeOrder; 
@property (assign,nonatomic) unsigned long long playlistCount; 
@property (assign,nonatomic) char downloadable; 
@property (nonatomic,retain) NSDate * expirationDate;                                                      //@synthesize expirationDate=_expirationDate - In the implementation block
@property (assign,getter=isPlaylistOnly,nonatomic) char playlistOnly; 
@property (assign,getter=isParentalRestricted,nonatomic) char parentalRestricted; 
@property (nonatomic,retain,readonly) ITLibArtist * artist; 
@property (nonatomic,retain,readonly) ITLibAlbum * album; 
@property (nonatomic,retain,readonly) NSURL * location; 
@property (nonatomic,retain,readonly) ITLibArtwork * artwork; 
@property (nonatomic,retain,readonly) ITLibMediaItemVideoInfo * videoInfo; 
@property (nonatomic,readonly) unsigned long long fileType; 
+(id)mediaItemWithDict:(id)arg1 ;
-(unsigned long long)size;
-(NSString *)description;
-(id)debugDescription;
-(id)init;
-(void)setYear:(unsigned long long)arg1 ;
-(unsigned long long)year;
-(NSURL *)URL;
-(NSString *)genre;
-(void)setURL:(NSURL *)arg1 ;
-(NSString *)artistName;
-(void)setSize:(unsigned long long)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(NSURL *)location;
-(unsigned long long)startTime;
-(void)setStartTime:(unsigned long long)arg1 ;
-(NSString *)kind;
-(NSString *)category;
-(void)setCategory:(NSString *)arg1 ;
-(unsigned long long)fileSize;
-(unsigned long long)fileType;
-(NSString *)title;
-(NSDate *)expirationDate;
-(void)setExpirationDate:(NSDate *)arg1 ;
-(void)setKind:(NSString *)arg1 ;
-(unsigned long long)sampleRate;
-(id)valueForProperty:(id)arg1 ;
-(ITLibAlbum *)album;
-(ITLibArtist *)artist;
-(NSString *)work;
-(void)setFileSize:(unsigned long long)arg1 ;
-(void)setAddedDate:(NSDate *)arg1 ;
-(NSDate *)addedDate;
-(void)setComposer:(NSString *)arg1 ;
-(NSString *)composer;
-(void)setRating:(long long)arg1 ;
-(long long)rating;
-(void)setPlayCount:(unsigned long long)arg1 ;
-(unsigned long long)playCount;
-(void)setContentRating:(NSString *)arg1 ;
-(NSString *)contentRating;
-(void)setGenre:(NSString *)arg1 ;
-(void)setAlbumPersistentID:(NSNumber *)arg1 ;
-(NSNumber *)albumPersistentID;
-(unsigned long long)totalTime;
-(void)setTotalTime:(unsigned long long)arg1 ;
-(void)setSampleRate:(unsigned long long)arg1 ;
-(NSDate *)modifiedDate;
-(unsigned long long)locationType;
-(void)setLocationType:(unsigned long long)arg1 ;
-(char)isUserDisabled;
-(NSString *)comments;
-(void)setComments:(NSString *)arg1 ;
-(ITLibArtwork *)artwork;
-(void)setWork:(NSString *)arg1 ;
-(unsigned long long)stopTime;
-(unsigned long long)nameOrder;
-(unsigned long long)trackNumber;
-(long long)volumeAdjustment;
-(void)setGrouping:(NSString *)arg1 ;
-(NSString *)grouping;
-(void)setDescription:(NSString *)arg1 ;
-(NSDate *)releaseDate;
-(void)setReleaseDate:(NSDate *)arg1 ;
-(NSString *)sortTitle;
-(void)setSortTitle:(NSString *)arg1 ;
-(NSDate *)lastPlayedDate;
-(void)setLastPlayedDate:(NSDate *)arg1 ;
-(NSString *)albumArtist;
-(void)setAlbumArtist:(NSString *)arg1 ;
-(void)setArtistName:(NSString *)arg1 ;
-(id)longDescription;
-(char)isVideo;
-(unsigned long long)videoWidth;
-(unsigned long long)videoHeight;
-(NSDate *)purchaseDate;
-(char)hasArtworkAvailable;
-(void)setArtworkAvailable:(char)arg1 ;
-(void)setTrackNumber:(unsigned long long)arg1 ;
-(void)setUserDisabled:(char)arg1 ;
-(void)setLongDescription:(id)arg1 ;
-(void)setPurchaseDate:(NSDate *)arg1 ;
-(void)setModifiedDate:(NSDate *)arg1 ;
-(void)setIsVideo:(char)arg1 ;
-(char)downloadable;
-(void)setDownloadable:(char)arg1 ;
-(unsigned long long)bitrate;
-(NSString *)albumTitle;
-(char)isPurchased;
-(unsigned long long)movementCount;
-(NSString *)movementName;
-(unsigned long long)movementNumber;
-(unsigned long long)skipCount;
-(unsigned long long)beatsPerMinute;
-(NSNumber *)albumArtistPersistentID;
-(unsigned long long)albumTrackCount;
-(NSNumber *)artistPersistentID;
-(unsigned long long)bookmarkTime;
-(NSNumber *)composerPersistentID;
-(NSNumber *)genrePersistentID;
-(void)setSkipCount:(unsigned long long)arg1 ;
-(void)enumerateValuesForProperties:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(unsigned long long)albumArtistOrder;
-(unsigned long long)composerOrder;
-(unsigned long long)genreOrder;
-(unsigned long long)artistOrder;
-(unsigned long long)albumOrder;
-(NSString *)sortComposer;
-(NSString *)sortAlbumArtist;
-(char)isPlaylistOnly;
-(unsigned long long)mediaKind;
-(char)isParentalRestricted;
-(char)isDRMProtected;
-(unsigned long long)storeItemID;
-(NSDate *)skipDate;
-(void)setSkipDate:(NSDate *)arg1 ;
-(unsigned long long)volumeNormalizationEnergy;
-(void)setStopTime:(unsigned long long)arg1 ;
-(void)setVolumeNormalizationEnergy:(unsigned long long)arg1 ;
-(void)setBeatsPerMinute:(unsigned long long)arg1 ;
-(unsigned long long)playlistCount;
-(NSString *)podcastEpisodeGUID;
-(void)setPodcastEpisodeGUID:(NSString *)arg1 ;
-(void)setStoreItemID:(unsigned long long)arg1 ;
-(void)setMediaKind:(unsigned long long)arg1 ;
-(void)setVideoWidth:(unsigned long long)arg1 ;
-(void)setVideoHeight:(unsigned long long)arg1 ;
-(void)setBitrate:(unsigned long long)arg1 ;
-(NSString *)voiceOverLanguage;
-(void)setVoiceOverLanguage:(NSString *)arg1 ;
-(void)enumerateValuesExceptForProperties:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(char)isRatingComputed;
-(void)setRatingComputed:(char)arg1 ;
-(void)setSortAlbumArtist:(NSString *)arg1 ;
-(void)setPlaylistCount:(unsigned long long)arg1 ;
-(NSString *)sortArtistName;
-(void)setComposerPersistentID:(NSNumber *)arg1 ;
-(NSString *)sortAlbumTitle;
-(long long)albumRating;
-(char)albumRatingComputed;
-(char)albumGapless;
-(char)albumCompilation;
-(unsigned long long)albumDiscCount;
-(unsigned long long)albumDiscNumber;
-(void)setGenrePersistentID:(NSNumber *)arg1 ;
-(char)videoHD;
-(NSString *)videoSeries;
-(NSString *)videoSortSeries;
-(unsigned long long)videoSeason;
-(NSString *)videoEpisode;
-(long long)videoEpisodeOrder;
-(void)setAlbumArtistPersistentID:(NSNumber *)arg1 ;
-(void)setSortComposer:(NSString *)arg1 ;
-(char)isRatingComputer;
-(void)setBookmarkTime:(unsigned long long)arg1 ;
-(unsigned long long)lyricsContentRating;
-(void)setLyricsContentRating:(unsigned long long)arg1 ;
-(unsigned long long)playStatus;
-(void)setPlayStatus:(unsigned long long)arg1 ;
-(void)setPurchased:(char)arg1 ;
-(char)isCloud;
-(void)setIsCloud:(char)arg1 ;
-(void)setPlaylistOnly:(char)arg1 ;
-(void)setParentalRestricted:(char)arg1 ;
-(void)setDRMProtected:(char)arg1 ;
-(ITLibMediaItemVideoInfo *)videoInfo;
-(void)setVolumeAdjustment:(long long)arg1 ;
-(void)setMovementName:(NSString *)arg1 ;
-(void)setMovementNumber:(unsigned long long)arg1 ;
-(void)setMovementCount:(unsigned long long)arg1 ;
-(unsigned long long)podcastChannelID;
-(void)setPodcastChannelID:(unsigned long long)arg1 ;
-(char)podcastDoNotAutoDelete;
-(void)setPodcastDoNotAutoDelete:(char)arg1 ;
-(NSString *)podcastFeedURL;
-(void)setPodcastFeedURL:(NSString *)arg1 ;
-(unsigned long long)storePlaylistID;
-(void)setStorePlaylistID:(unsigned long long)arg1 ;
-(unsigned long long)albumArtistOrArtistOrder;
-(void)setSortArtistName:(NSString *)arg1 ;
-(void)setAlbumTitle:(NSString *)arg1 ;
-(void)setSortAlbumTitle:(NSString *)arg1 ;
-(void)setAlbumRating:(long long)arg1 ;
-(void)setAlbumRatingComputed:(char)arg1 ;
-(void)setAlbumGapless:(char)arg1 ;
-(void)setAlbumCompilation:(char)arg1 ;
-(void)setArtistPersistentID:(NSNumber *)arg1 ;
-(void)setAlbumDiscCount:(unsigned long long)arg1 ;
-(void)setAlbumDiscNumber:(unsigned long long)arg1 ;
-(void)setAlbumTrackCount:(unsigned long long)arg1 ;
-(void)setVideoHD:(char)arg1 ;
-(void)setVideoSeries:(NSString *)arg1 ;
-(void)setVideoSortSeries:(NSString *)arg1 ;
-(void)setVideoSeason:(unsigned long long)arg1 ;
-(void)setVideoEpisode:(NSString *)arg1 ;
-(void)setVideoEpisodeOrder:(long long)arg1 ;
@end

