/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:16 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/iTunesLibrary.framework/Versions/A/iTunesLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <iTunesLibrary/iTunesLibrary-Structs.h>
@class AMPLFrameworkClient, AMPArtworkClient, NSString, NSNumber, NSArray, NSDictionary, NSDate, NSURL;

@interface ITLibrary : NSObject {

	char _libraryLoaded;
	AMPLFrameworkClient* _libraryClient;
	AMPArtworkClient* _artworkClient;
	unsigned long long _mediaDomains;
	NSString* _libraryFilePath;
	NSNumber* _persistentID;
	NSArray* _cachedMediaItems;
	NSArray* _cachedPlaylists;
	NSArray* _cachedArtists;
	NSArray* _cachedAlbums;
	NSArray* _cachedGenres;
	NSDictionary* _cachedItemMap;
	NSDictionary* _cachedMigratedPodcastSettings;
	NSDate* _lastModifiedDate;

}

@property (nonatomic,retain) AMPLFrameworkClient * libraryClient;                                  //@synthesize libraryClient=_libraryClient - In the implementation block
@property (nonatomic,retain) AMPArtworkClient * artworkClient;                                     //@synthesize artworkClient=_artworkClient - In the implementation block
@property (assign,nonatomic) unsigned long long mediaDomains;                                      //@synthesize mediaDomains=_mediaDomains - In the implementation block
@property (nonatomic,retain) NSString * libraryFilePath;                                           //@synthesize libraryFilePath=_libraryFilePath - In the implementation block
@property (assign,nonatomic) char libraryLoaded;                                                   //@synthesize libraryLoaded=_libraryLoaded - In the implementation block
@property (nonatomic,retain) NSNumber * persistentID;                                              //@synthesize persistentID=_persistentID - In the implementation block
@property (nonatomic,retain) NSArray * cachedMediaItems;                                           //@synthesize cachedMediaItems=_cachedMediaItems - In the implementation block
@property (nonatomic,retain) NSArray * cachedPlaylists;                                            //@synthesize cachedPlaylists=_cachedPlaylists - In the implementation block
@property (nonatomic,retain) NSArray * cachedArtists;                                              //@synthesize cachedArtists=_cachedArtists - In the implementation block
@property (nonatomic,retain) NSArray * cachedAlbums;                                               //@synthesize cachedAlbums=_cachedAlbums - In the implementation block
@property (nonatomic,retain) NSArray * cachedGenres;                                               //@synthesize cachedGenres=_cachedGenres - In the implementation block
@property (nonatomic,retain) NSDictionary * cachedItemMap;                                         //@synthesize cachedItemMap=_cachedItemMap - In the implementation block
@property (nonatomic,retain) NSDictionary * cachedMigratedPodcastSettings;                         //@synthesize cachedMigratedPodcastSettings=_cachedMigratedPodcastSettings - In the implementation block
@property (nonatomic,retain) NSDate * lastModifiedDate;                                            //@synthesize lastModifiedDate=_lastModifiedDate - In the implementation block
@property (nonatomic,copy,readonly) NSString * applicationVersion; 
@property (nonatomic,readonly) unsigned long long features; 
@property (nonatomic,readonly) unsigned long long apiMajorVersion; 
@property (nonatomic,readonly) unsigned long long apiMinorVersion; 
@property (nonatomic,copy,readonly) NSURL * mediaFolderLocation; 
@property (nonatomic,copy,readonly) NSURL * musicFolderLocation; 
@property (getter=shouldShowContentRating,nonatomic,readonly) char showContentRating; 
@property (nonatomic,retain,readonly) NSArray * allMediaItems; 
@property (nonatomic,retain,readonly) NSArray * allPlaylists; 
+(id)libraryForCatalyst:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)libraryWithAPIVersion:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
+(id)libraryWithAPIVersion:(id)arg1 error:(id*)arg2 ;
+(id)libraryWithDeviceID:(id)arg1 error:(id*)arg2 ;
+(id)libraryWithFilePath:(id)arg1 withMediaDomains:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)reloadData;
-(char)loadLibrary:(id*)arg1 ;
-(NSNumber *)persistentID;
-(id)databaseURL;
-(NSDate *)lastModifiedDate;
-(unsigned long long)features;
-(NSString *)applicationVersion;
-(void)setLastModifiedDate:(NSDate *)arg1 ;
-(id)parentalRestrictions;
-(id)databaseID;
-(void)setPersistentID:(NSNumber *)arg1 ;
-(AMPLFrameworkClient *)libraryClient;
-(NSArray *)allPlaylists;
-(NSArray *)allMediaItems;
-(id)storefrontId;
-(unsigned long long)mediaDomains;
-(void)setLibraryFilePath:(NSString *)arg1 ;
-(NSString *)libraryFilePath;
-(id)artworkForMediaEntity:(id)arg1 ;
-(id)itemsForIDs:(id)arg1 ;
-(char)libraryLoaded;
-(AMPArtworkClient *)artworkClient;
-(void)setLibraryLoaded:(char)arg1 ;
-(char)configureWithDomains:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)initWithAPIVersion:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)configureWithDevice:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)initWithDomains:(unsigned long long)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)configureWithFilePath:(id)arg1 withMediaDomains:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)initWithDeviceID:(id)arg1 error:(id*)arg2 ;
-(id)initWithFilePath:(id)arg1 withMediaDomains:(unsigned long long)arg2 error:(id*)arg3 ;
-(NSURL *)mediaFolderLocation;
-(NSDictionary *)cachedItemMap;
-(NSArray *)cachedMediaItems;
-(id)mediaItemsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3 ;
-(void)setCachedMediaItems:(NSArray *)arg1 ;
-(void)setCachedItemMap:(NSDictionary *)arg1 ;
-(id)allMediaItemsForMediaDomains:(unsigned long long)arg1 forMediaKinds:(unsigned long long)arg2 forDeviceCapabilities:(unsigned long long)arg3 ;
-(id)playlistWithDistinguishedKind:(unsigned long long)arg1 withItems:(char)arg2 ;
-(NSArray *)cachedPlaylists;
-(id)playlistsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3 withItems:(char)arg4 ;
-(void)setCachedPlaylists:(NSArray *)arg1 ;
-(id)allPlaylistsForMediaDomains:(unsigned long long)arg1 forMediaKinds:(unsigned long long)arg2 forDeviceCapabilities:(unsigned long long)arg3 withItems:(char)arg4 ;
-(NSArray *)cachedArtists;
-(id)artistsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3 ;
-(void)setCachedArtists:(NSArray *)arg1 ;
-(id)allArtistsForMediaDomains:(unsigned long long)arg1 forMediaKinds:(unsigned long long)arg2 forDeviceCapabilities:(unsigned long long)arg3 ;
-(NSArray *)cachedAlbums;
-(id)albumsForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3 ;
-(void)setCachedAlbums:(NSArray *)arg1 ;
-(id)allAlbumsForMediaDomains:(unsigned long long)arg1 forMediaKinds:(unsigned long long)arg2 forDeviceCapabilities:(unsigned long long)arg3 ;
-(NSArray *)cachedGenres;
-(id)genresForDomains:(unsigned long long)arg1 withMediaKinds:(unsigned long long)arg2 withDeviceCapabilities:(unsigned long long)arg3 ;
-(void)setCachedGenres:(NSArray *)arg1 ;
-(id)allGenresForMediaDomains:(unsigned long long)arg1 forMediaKinds:(unsigned long long)arg2 forDeviceCapabilities:(unsigned long long)arg3 ;
-(NSDictionary *)cachedMigratedPodcastSettings;
-(id)migratedPodcastSettings;
-(void)setCachedMigratedPodcastSettings:(NSDictionary *)arg1 ;
-(id)migratedPodcastSettingForKey:(id)arg1 ;
-(char)setBooksHaveMigrated:(id*)arg1 ;
-(void)unloadData;
-(char)boolPrefWithKey:(id)arg1 ;
-(char)libraryAgentPref:(CFStringRef)arg1 ;
-(char)restrictExplicitBooks;
-(char)haveMigratedBooks;
-(char)haveMigratedPodcasts;
-(id)_artworkForData:(id)arg1 ;
-(id)_artworkForUUID:(id)arg1 ;
-(id)_artworkForMediaFile:(id)arg1 ;
-(id)itemMap;
-(id)initWithAPIVersion:(id)arg1 error:(id*)arg2 ;
-(id)initWithDomains:(unsigned long long)arg1 error:(id*)arg2 ;
-(unsigned long long)apiMajorVersion;
-(unsigned long long)apiMinorVersion;
-(NSURL *)musicFolderLocation;
-(char)shouldShowContentRating;
-(id)allMediaItemsForMediaKinds:(unsigned long long)arg1 ;
-(id)playlistWithDistinguishedKind:(unsigned long long)arg1 ;
-(id)allPlaylistsForMediaKinds:(unsigned long long)arg1 withItems:(char)arg2 ;
-(id)allArtists;
-(id)allArtistsForMediaKinds:(unsigned long long)arg1 ;
-(id)allAlbums;
-(id)allAlbumsForMediaKinds:(unsigned long long)arg1 ;
-(id)allGenres;
-(id)allGenresForMediaKinds:(unsigned long long)arg1 ;
-(id)allPodcastFeeds;
-(id)allPodcastStations;
-(char)podcastCloudSyncingEnabled;
-(unsigned long long)podcastCloudDSID;
-(double)podcastFeedRefreshInterval;
-(unsigned long long)podcastFeedDownloadAction;
-(unsigned long long)podcastFeedLimitRule;
-(unsigned long long)podcastFeedRemovePlayedRule;
-(void)downloadCloudMediaItem:(id)arg1 ;
-(void)migratedMediaItems:(id)arg1 ;
-(void)migratedBooks:(id)arg1 ;
-(char)setPodcastsHaveMigrated:(id*)arg1 ;
-(id)stringPrefWithKey:(id)arg1 ;
-(id)numberPrefWithKey:(id)arg1 ;
-(id)datePrefWithKey:(id)arg1 ;
-(id)storeAccountAppleId;
-(id)storeAccountDsid;
-(char)isAccountEnrolledInAppleMusic;
-(char)isAccountEnrolledInITunesMatch;
-(id)accountAppleMusicExpirationDate;
-(char)isAccountAdmin;
-(unsigned long long)privateFlags;
-(id)readWriteURLForMediaEntity:(id)arg1 ;
-(id)artworkForMediaFile:(id)arg1 ;
-(void)setLibraryClient:(AMPLFrameworkClient *)arg1 ;
-(void)setArtworkClient:(AMPArtworkClient *)arg1 ;
-(void)setMediaDomains:(unsigned long long)arg1 ;
@end

