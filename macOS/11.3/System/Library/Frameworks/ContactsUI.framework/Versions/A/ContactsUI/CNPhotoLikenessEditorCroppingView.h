/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:48 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/ContactsUI.framework/Versions/A/ContactsUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ContactsUI/ContactsUI-Structs.h>
#import <ImageKit/IKImageView2.h>

@protocol CNPhotoLikenessEditorCroppingDataSource;
@class CIImage;

@interface CNPhotoLikenessEditorCroppingView : IKImageView2 {

	char _shouldUpdateCropRect;
	id<CNPhotoLikenessEditorCroppingDataSource> _croppingDataSource;
	double _zoomPosition;
	double _cornerRadius;
	CIImage* _currentImage;
	double _fittingZoom;
	long long _zoomIndex;

}

@property (nonatomic,retain) CIImage * currentImage;                                                             //@synthesize currentImage=_currentImage - In the implementation block
@property (assign,nonatomic) double fittingZoom;                                                                 //@synthesize fittingZoom=_fittingZoom - In the implementation block
@property (assign,nonatomic) long long zoomIndex;                                                                //@synthesize zoomIndex=_zoomIndex - In the implementation block
@property (assign,nonatomic,__weak) id<CNPhotoLikenessEditorCroppingDataSource> croppingDataSource;              //@synthesize croppingDataSource=_croppingDataSource - In the implementation block
@property (assign,nonatomic) char shouldUpdateCropRect;                                                          //@synthesize shouldUpdateCropRect=_shouldUpdateCropRect - In the implementation block
@property (assign,nonatomic) double zoomPosition;                                                                //@synthesize zoomPosition=_zoomPosition - In the implementation block
@property (assign,nonatomic) double cornerRadius;                                                                //@synthesize cornerRadius=_cornerRadius - In the implementation block
+(CGPoint)adjustProposedCenterPoint:(CGPoint)arg1 toKeepEdgesOfImageWithSize:(CGSize)arg2 fromMovingOutsideOfBoundsOfRect:(CGRect)arg3 ;
+(CGImageRef)cgImageRefFromNSImage:(id)arg1 ;
+(CGRect)correctedCropRectForCropRect:(CGRect)arg1 ofImage:(CGImageRef)arg2 placedWithingContainerOfSize:(CGSize)arg3 ;
+(double)minZoomForImage:(CGImageRef)arg1 containerSize:(CGSize)arg2 ;
+(double)fittingZoomForImage:(CGImageRef)arg1 containerSize:(CGSize)arg2 ;
+(CGRect)fittingRectForImage:(CGImageRef)arg1 containerSize:(CGSize)arg2 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)reloadData;
-(void)setCornerRadius:(double)arg1 ;
-(double)cornerRadius;
-(void)mouseDragged:(id)arg1 ;
-(void)setCroppingDataSource:(id<CNPhotoLikenessEditorCroppingDataSource>)arg1 ;
-(void)setZoomPosition:(double)arg1 ;
-(void)clipviewBoundsChanged:(id)arg1 ;
-(CGPoint)imageCenterPoint;
-(id<CNPhotoLikenessEditorCroppingDataSource>)croppingDataSource;
-(char)shouldUpdateCropRect;
-(void)updateZoomPosition;
-(double)zoomFactorForCropRect:(CGRect)arg1 ;
-(void)getZoom:(double*)arg1 center:(CGPoint*)arg2 fromRect:(CGRect)arg3 ;
-(CGImageRef)cgImageRefFromNSImage:(id)arg1 ;
-(void)resetZoomFactor;
-(void)updateFittingZoomGivenImage:(CGImageRef)arg1 ;
-(void)updateToImage:(CGImageRef)arg1 withCropRect:(CGRect)arg2 ;
-(void)updateZoomFactorWithMinZoom:(double)arg1 ;
-(void)setFittingZoom:(double)arg1 ;
-(void)setShouldUpdateCropRect:(char)arg1 ;
-(double)fittingZoom;
-(void)setZoomFromCropRect:(CGRect)arg1 ;
-(double)zoomPosition;
-(CIImage *)currentImage;
-(void)setCurrentImage:(CIImage *)arg1 ;
-(long long)zoomIndex;
-(void)setZoomIndex:(long long)arg1 ;
@end

