/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreML.framework/Versions/A/CoreML
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreML/CoreML-Structs.h>
#import <CoreML/MLModel.h>
#import <libobjc.A.dylib/MLNeuralNetwork.h>
#import <libobjc.A.dylib/MLClassifier.h>
#import <libobjc.A.dylib/MLRegressor.h>
#import <libobjc.A.dylib/MLModelSpecificationLoader.h>
#import <libobjc.A.dylib/MLCompiledModelLoader.h>

@protocol OS_dispatch_semaphore, OS_dispatch_queue;
@class NSArray, NSString, NSDictionary, MLVersionInfo, MLProbabilityDictionary, NSObject, NSMutableDictionary, EspressoProfilingNetworkInfo, MLNeuralNetworkContainer, MLModelDescription, MLModelInterface, MLModelMetadata;

@interface MLNeuralNetworkEngine : MLModel <MLNeuralNetwork, MLClassifier, MLRegressor, MLModelSpecificationLoader, MLCompiledModelLoader> {

	vector<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *>>>>>* _inputBuffers;
	vector<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *>>>, std::__1::allocator<std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *>>>>>* _outputBuffers;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_simple_image_preprocessing_params_t>>>* _params;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>>* _widths;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>>* _heights;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>>* _ks;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>>* _batches;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>>* _sequences;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, int>>>* _ranks;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, MLOptionalNNInputType>>>* _optionalInputTypes;
	vector<bool, std::__1::allocator<bool>>* _bufferAvailable;
	set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>* _flexibleShapesConfigNamesInNet;
	basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _currentConfigurationName;
	map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, bool, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, bool>>>* _OutputBlobIsDynamic;
	char _hardwareFallbackDetected;
	char _ndArrayInterpretation;
	char _usingCPU;
	BOOL _isEspresoBiasPreprocessingShared;
	BOOL _hasBidirectionalLayer;
	BOOL _hasOptionalInputSequenceConcat;
	char _isGPUPathForbidden;
	char _isANEPathForbidden;
	int _precision;
	int _engine;
	int _qos;
	NSArray* _classLabels;
	NSString* _classScoreVectorName;
	NSArray* _inputLayers;
	NSArray* _outputLayers;
	NSDictionary* _imagePreprocessingParameters;
	NSDictionary* _espressoInputShapes;
	NSDictionary* _espressoInputStrides;
	MLVersionInfo* _modelVersionInfo;
	unsigned long long _numInputs;
	unsigned long long _numOutputs;
	void* _plan;
	void* _context;
	MLProbabilityDictionary* _probDict;
	NSString* _modelFilePath;
	NSDictionary* _defaultOptionalValues;
	NSObject*<OS_dispatch_semaphore> _bufferSemaphore;
	NSObject*<OS_dispatch_queue> _espressoQueue;
	NSObject*<OS_dispatch_queue> _predictionsQueue;
	NSObject*<OS_dispatch_semaphore> _submitSemaphore;
	NSMutableDictionary* _blobNameToLastPtrFlags;
	EspressoProfilingNetworkInfo* _espressoProfileInfo;
	MLNeuralNetworkContainer* _container;
	SCD_Struct_ML33* _network;

}

@property (nonatomic,readonly) unsigned long long numInputs;                                  //@synthesize numInputs=_numInputs - In the implementation block
@property (nonatomic,readonly) unsigned long long numOutputs;                                 //@synthesize numOutputs=_numOutputs - In the implementation block
@property (assign,nonatomic) char usingCPU;                                                   //@synthesize usingCPU=_usingCPU - In the implementation block
@property (assign,nonatomic) void* plan;                                                      //@synthesize plan=_plan - In the implementation block
@property (assign,nonatomic) SCD_Struct_ML33* network;                                        //@synthesize network=_network - In the implementation block
@property (assign,nonatomic) int precision;                                                   //@synthesize precision=_precision - In the implementation block
@property (assign,nonatomic) int engine;                                                      //@synthesize engine=_engine - In the implementation block
@property (assign,nonatomic) int qos;                                                         //@synthesize qos=_qos - In the implementation block
@property (assign,nonatomic) void* context;                                                   //@synthesize context=_context - In the implementation block
@property (assign,nonatomic) BOOL isEspresoBiasPreprocessingShared;                           //@synthesize isEspresoBiasPreprocessingShared=_isEspresoBiasPreprocessingShared - In the implementation block
@property (nonatomic,retain) NSArray * classLabels;                                           //@synthesize classLabels=_classLabels - In the implementation block
@property (nonatomic,retain) NSString * classScoreVectorName;                                 //@synthesize classScoreVectorName=_classScoreVectorName - In the implementation block
@property (nonatomic,retain) MLProbabilityDictionary * probDict;                              //@synthesize probDict=_probDict - In the implementation block
@property (nonatomic,retain) NSString * modelFilePath;                                        //@synthesize modelFilePath=_modelFilePath - In the implementation block
@property (nonatomic,retain) NSDictionary * defaultOptionalValues;                            //@synthesize defaultOptionalValues=_defaultOptionalValues - In the implementation block
@property (assign,nonatomic) BOOL hasBidirectionalLayer;                                      //@synthesize hasBidirectionalLayer=_hasBidirectionalLayer - In the implementation block
@property (assign,nonatomic) BOOL hasOptionalInputSequenceConcat;                             //@synthesize hasOptionalInputSequenceConcat=_hasOptionalInputSequenceConcat - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> bufferSemaphore;                          //@synthesize bufferSemaphore=_bufferSemaphore - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> espressoQueue;                                //@synthesize espressoQueue=_espressoQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> predictionsQueue;                             //@synthesize predictionsQueue=_predictionsQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> submitSemaphore;                          //@synthesize submitSemaphore=_submitSemaphore - In the implementation block
@property (assign) char isGPUPathForbidden;                                                   //@synthesize isGPUPathForbidden=_isGPUPathForbidden - In the implementation block
@property (assign) char isANEPathForbidden;                                                   //@synthesize isANEPathForbidden=_isANEPathForbidden - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * blobNameToLastPtrFlags;                  //@synthesize blobNameToLastPtrFlags=_blobNameToLastPtrFlags - In the implementation block
@property (assign,nonatomic) char ndArrayInterpretation;                                      //@synthesize ndArrayInterpretation=_ndArrayInterpretation - In the implementation block
@property (nonatomic,retain) NSDictionary * imagePreprocessingParameters;                     //@synthesize imagePreprocessingParameters=_imagePreprocessingParameters - In the implementation block
@property (nonatomic,retain) EspressoProfilingNetworkInfo * espressoProfileInfo;              //@synthesize espressoProfileInfo=_espressoProfileInfo - In the implementation block
@property (assign,nonatomic,__weak) MLNeuralNetworkContainer * container;                     //@synthesize container=_container - In the implementation block
@property (nonatomic,retain,readonly) NSArray * inputLayers;                                  //@synthesize inputLayers=_inputLayers - In the implementation block
@property (nonatomic,retain,readonly) NSArray * outputLayers;                                 //@synthesize outputLayers=_outputLayers - In the implementation block
@property (assign,nonatomic) char hardwareFallbackDetected;                                   //@synthesize hardwareFallbackDetected=_hardwareFallbackDetected - In the implementation block
@property (nonatomic,retain) NSDictionary * espressoInputShapes;                              //@synthesize espressoInputShapes=_espressoInputShapes - In the implementation block
@property (nonatomic,retain) NSDictionary * espressoInputStrides;                             //@synthesize espressoInputStrides=_espressoInputStrides - In the implementation block
@property (nonatomic,readonly) MLVersionInfo * modelVersionInfo;                              //@synthesize modelVersionInfo=_modelVersionInfo - In the implementation block
@property (nonatomic,retain) MLModelDescription * modelDescription; 
@property (readonly) MLModelInterface * interface; 
@property (readonly) MLModelMetadata * metadata; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)loadModelFromSpecification:(MLModelSpecification*)arg1 configuration:(id)arg2 error:(id*)arg3 ;
+(id)loadModelFromCompiledArchive:(MLModelInputArchiver*)arg1 modelVersionInfo:(id)arg2 compilerVersionInfo:(id)arg3 configuration:(id)arg4 error:(id*)arg5 ;
+(Class)containerClass;
+(id)neuralNetworkFromContainer:(id)arg1 error:(id*)arg2 ;
+(id)neuralNetworkFromContainer:(id)arg1 configuration:(id)arg2 error:(id*)arg3 ;
+(id)neuralNetworkFromContainer:(id)arg1 classScoreVectorName:(id)arg2 classLabels:(id)arg3 error:(id*)arg4 ;
-(void)dealloc;
-(MLNeuralNetworkContainer *)container;
-(int)qos;
-(void*)context;
-(void)setContext:(void*)arg1 ;
-(void)setContainer:(MLNeuralNetworkContainer *)arg1 ;
-(SCD_Struct_ML33*)network;
-(unsigned long long)numInputs;
-(unsigned long long)numOutputs;
-(void)setNetwork:(SCD_Struct_ML33*)arg1 ;
-(NSArray *)classLabels;
-(id)classify:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(id)predictionFromFeatures:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(id)predictionsFromBatch:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(id)executionSchedule;
-(NSString *)modelFilePath;
-(void)setModelFilePath:(NSString *)arg1 ;
-(BOOL)hasBidirectionalLayer;
-(void)setHasBidirectionalLayer:(BOOL)arg1 ;
-(BOOL)hasOptionalInputSequenceConcat;
-(void)setHasOptionalInputSequenceConcat:(BOOL)arg1 ;
-(void)setClassLabels:(NSArray *)arg1 ;
-(NSString *)classScoreVectorName;
-(void)setClassScoreVectorName:(NSString *)arg1 ;
-(char)ndArrayInterpretation;
-(void)setNdArrayInterpretation:(char)arg1 ;
-(MLVersionInfo *)modelVersionInfo;
-(int)precision;
-(void)setPrecision:(int)arg1 ;
-(int)engine;
-(void)setEngine:(int)arg1 ;
-(id)regress:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(id)evaluate:(id)arg1 error:(id*)arg2 ;
-(char)usingEspressoConfigurations;
-(char)sequenceConcatConsumesOptionalInputNamed:(id)arg1 ;
-(int)sequenceNamed:(id)arg1 ;
-(id)convertPredictionToClassifierResult:(id)arg1 withOptions:(id)arg2 error:(id*)arg3 ;
-(id)addClassifierInformationToOutput:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(id)availableOutputBlobList;
-(char)_matchEngineToOptions:(id)arg1 error:(id*)arg2 ;
-(id)initWithContainer:(id)arg1 error:(id*)arg2 ;
-(void)collectParametersFromContainer:(id)arg1 configuration:(id)arg2 ;
-(id)initWithContainer:(id)arg1 configuration:(id)arg2 error:(id*)arg3 ;
-(char)fillInInitialShapeFromEspressoNet:(id*)arg1 ;
-(int)_espressoDeviceForConfiguration:(id)arg1 error:(id*)arg2 ;
-(char)_setupContextAndPlanWithForceCPU:(char)arg1 error:(id*)arg2 ;
-(char)_setupContextAndPlanWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(char)_setupContextAndPlanWithConfiguration:(id)arg1 usingCPU:(char)arg2 error:(id*)arg3 ;
-(id)verifyInputs:(id)arg1 error:(id*)arg2 ;
-(unsigned long long)obtainBuffer;
-(void)releaseBuffer:(unsigned long long)arg1 ;
-(char)bindInputsAndOutputs:(id)arg1 allocatedImageData:(vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char>>>*)arg2 bufferIndex:(unsigned long long)arg3 error:(id*)arg4 ;
-(char)bindInputFeatures:(id)arg1 bufferIndex:(unsigned long long)arg2 allocatedImageData:(vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char>>>*)arg3 error:(id*)arg4 ;
-(char)_setMultiArrayOutputBacking:(id)arg1 forOutputFeatureName:(id)arg2 toEbuf:(SCD_Struct_ML34*)arg3 error:(id*)arg4 ;
-(char)_espressoOutputShapeForFeatureName:(id)arg1 matchesShapeOfMLMultiArray:(id)arg2 ;
-(char)tryToSetOutputBacking:(id)arg1 forFeature:(id)arg2 toEbuf:(SCD_Struct_ML34*)arg3 reportPointerFlags:(int*)arg4 error:(id*)arg5 ;
-(char)bindOutputBuffers:(const map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *>>>*)arg1 outputBackings:(id)arg2 automaticOutputBackingMode:(id)arg3 error:(id*)arg4 ;
-(char)unlockCVPixelBuffers:(id)arg1 error:(id*)arg2 ;
-(id)evaluateInputs:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(char)updateDynamicOutputBlobIndicatorCacheAndReturnError:(id*)arg1 ;
-(void)populateMultiArrayShape:(id*)arg1 strides:(id*)arg2 forEbuf:(SCD_Struct_ML34*)arg3 featureDescription:(id)arg4 ndArrayInterpretation:(char)arg5 ;
-(id)completeOutputBackings:(id)arg1 automaticOutputBackingMode:(id)arg2 error:(id*)arg3 ;
-(id)evaluateInputs:(id)arg1 bufferIndex:(unsigned long long)arg2 options:(id)arg3 error:(id*)arg4 ;
-(char)executePlan:(void*)arg1 error:(id*)arg2 ;
-(char)bindDynamicOutputBuffers:(const map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, espresso_buffer_t *>>>*)arg1 error:(id*)arg2 ;
-(id)populateOutputs:(unsigned long long)arg1 outputBackings:(id)arg2 error:(id*)arg3 ;
-(char)copyEbuf:(const SCD_Struct_ML34*)arg1 ofPixelType:(unsigned long long)arg2 toPixelBuffer:(CVBufferRef)arg3 error:(id*)arg4 ;
-(id)imageFeatureValueFromEbuf:(SCD_Struct_ML34*)arg1 backingCVPixelBuffer:(CVBufferRef)arg2 description:(id)arg3 error:(id*)arg4 ;
-(id)multiArrayFeatureValueFromEbuf:(SCD_Struct_ML34*)arg1 backingMultiArray:(id)arg2 description:(id)arg3 outputName:(id)arg4 error:(id*)arg5 ;
-(CVBufferRef)_pixelBufferFromEbuf:(SCD_Struct_ML34*)arg1 description:(id)arg2 error:(id*)arg3 ;
-(void)_deallocContextAndPlan;
-(id)sortBatchByShape:(id)arg1 withMap:(id*)arg2 error:(id*)arg3 ;
-(char)resetSizes:(id)arg1 error:(id*)arg2 ;
-(char)resetSizesWithEspressoConfigurations:(id)arg1 error:(id*)arg2 ;
-(char)resetSizesNoAutoRelease:(id)arg1 error:(id*)arg2 ;
-(char)rebuildPlan:(id*)arg1 ;
-(id)evaluateBatch:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(void)dumpTestVectorsToPath:(id)arg1 ;
-(id)parameterValueForKey:(id)arg1 error:(id*)arg2 ;
-(NSArray *)inputLayers;
-(NSArray *)outputLayers;
-(char)hardwareFallbackDetected;
-(void)setHardwareFallbackDetected:(char)arg1 ;
-(NSDictionary *)imagePreprocessingParameters;
-(void)setImagePreprocessingParameters:(NSDictionary *)arg1 ;
-(NSDictionary *)espressoInputShapes;
-(void)setEspressoInputShapes:(NSDictionary *)arg1 ;
-(NSDictionary *)espressoInputStrides;
-(void)setEspressoInputStrides:(NSDictionary *)arg1 ;
-(char)usingCPU;
-(void)setUsingCPU:(char)arg1 ;
-(void*)plan;
-(void)setPlan:(void*)arg1 ;
-(void)setQos:(int)arg1 ;
-(BOOL)isEspresoBiasPreprocessingShared;
-(void)setIsEspresoBiasPreprocessingShared:(BOOL)arg1 ;
-(MLProbabilityDictionary *)probDict;
-(void)setProbDict:(MLProbabilityDictionary *)arg1 ;
-(NSDictionary *)defaultOptionalValues;
-(void)setDefaultOptionalValues:(NSDictionary *)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)bufferSemaphore;
-(void)setBufferSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(NSObject*<OS_dispatch_queue>)espressoQueue;
-(void)setEspressoQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)predictionsQueue;
-(void)setPredictionsQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)submitSemaphore;
-(void)setSubmitSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(char)isGPUPathForbidden;
-(void)setIsGPUPathForbidden:(char)arg1 ;
-(char)isANEPathForbidden;
-(void)setIsANEPathForbidden:(char)arg1 ;
-(NSMutableDictionary *)blobNameToLastPtrFlags;
-(EspressoProfilingNetworkInfo *)espressoProfileInfo;
-(void)setEspressoProfileInfo:(EspressoProfilingNetworkInfo *)arg1 ;
@end

