/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:36 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/MediaLibrary.framework/Versions/A/MediaLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/MLMediaLibraryProtocol.h>

@class NSSet, MLMediaLibrary, NSDictionary, NSXPCConnection, NSDate, NSOperationQueue, NSCondition, NSString;

@interface MLMediaLibraryImpl : NSObject <MLMediaLibraryProtocol> {

	NSSet* _mediaGroupAttributesExpectedClasses;
	NSSet* _mediaObjectAttributesExpectedClasses;
	NSSet* _mediaSourceAttributesExpectedClasses;
	char _outboundRequestInFlight;
	MLMediaLibrary* _mediaLibrary;
	NSDictionary* _options;
	NSDictionary* _mediaSourcesByIdentifier;
	NSXPCConnection* _connection;
	NSDate* _loadMediaSourcesStartTime;
	NSOperationQueue* _outboundRequestQueue;
	NSCondition* _outboundRequestCondition;

}

@property (assign) MLMediaLibrary * mediaLibrary;                                      //@synthesize mediaLibrary=_mediaLibrary - In the implementation block
@property (copy) NSDictionary * options;                                               //@synthesize options=_options - In the implementation block
@property (copy) NSDictionary * mediaSourcesByIdentifier;                              //@synthesize mediaSourcesByIdentifier=_mediaSourcesByIdentifier - In the implementation block
@property (retain) NSXPCConnection * connection;                                       //@synthesize connection=_connection - In the implementation block
@property (readonly) id<MLSMediaLibraryProtocol> service; 
@property (nonatomic,retain) NSDate * loadMediaSourcesStartTime;                       //@synthesize loadMediaSourcesStartTime=_loadMediaSourcesStartTime - In the implementation block
@property (retain) NSOperationQueue * outboundRequestQueue;                            //@synthesize outboundRequestQueue=_outboundRequestQueue - In the implementation block
@property (retain) NSCondition * outboundRequestCondition;                             //@synthesize outboundRequestCondition=_outboundRequestCondition - In the implementation block
@property (assign) char outboundRequestInFlight;                                       //@synthesize outboundRequestInFlight=_outboundRequestInFlight - In the implementation block
@property (retain,readonly) NSSet * mediaObjectAttributesExpectedClasses; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(NSXPCConnection *)connection;
-(void)setOptions:(NSDictionary *)arg1 ;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(NSDictionary *)options;
-(id<MLSMediaLibraryProtocol>)service;
-(void)invalidateConnection;
-(void)connectToService;
-(void)setOutboundRequestQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)outboundRequestQueue;
-(void)setOutboundRequestCondition:(NSCondition *)arg1 ;
-(void)setMediaLibrary:(MLMediaLibrary *)arg1 ;
-(void)determineLogLevel;
-(NSCondition *)outboundRequestCondition;
-(void)setOutboundRequestInFlight:(char)arg1 ;
-(char)outboundRequestInFlight;
-(void)setLoadMediaSourcesStartTime:(NSDate *)arg1 ;
-(NSDictionary *)mediaSourcesByIdentifier;
-(NSDate *)loadMediaSourcesStartTime;
-(void)setMediaSourcesByIdentifier:(NSDictionary *)arg1 ;
-(NSSet *)mediaObjectAttributesExpectedClasses;
-(void)_nullOutLibraryPointers;
-(void)_cancelOutstandingSynchronousRequests;
-(MLMediaLibrary *)mediaLibrary;
-(void)_xpcConnectionWasInterrupted;
-(void)_xpcConnectionWasInvalidated;
-(void)rootGroupData:(id)arg1 forMediaSource:(id)arg2 ;
-(void)setAttributesData:(id)arg1 forMediaGroup:(id)arg2 inMediaSource:(id)arg3 ;
-(void)setAttributesData:(id)arg1 forMediaObject:(id)arg2 inMediaSource:(id)arg3 ;
-(void)updateMediaSources:(id)arg1 ;
-(id)mediaSourceForIdentifier:(id)arg1 ;
-(id)_unarchivedMediaGroupAttributesDictionaryFromData:(id)arg1 ;
@end

