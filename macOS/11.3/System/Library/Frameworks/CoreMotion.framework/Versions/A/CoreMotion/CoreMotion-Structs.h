/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:51 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreMotion.framework/Versions/A/CoreMotion
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct _NSZone* NSZoneRef;

typedef struct {
	float x;
	float y;
	float z;
} SCD_Struct_CM1;

typedef struct {
	double field1;
	double field2;
	double field3;
} SCD_Struct_CM2;

typedef struct {
	double x;
	double y;
	double z;
} SCD_Struct_CM3;

typedef struct {
	double field1;
	double field2;
	double field3;
	double field4;
} SCD_Struct_CM4;

typedef struct {
	SCD_Struct_CM1 field1;
	SCD_Struct_CM1 field2;
	SCD_Struct_CM1 field3;
	SCD_Struct_CM4 field4;
	int field5;
	BOOL field6;
	BOOL field7;
	BOOL field8;
	float field9;
	int field10;
} SCD_Struct_CM5;

typedef struct {
	float field1;
} SCD_Struct_CM6;

typedef struct {
	SCD_Struct_CM3 field1;
	int field2;
} SCD_Struct_CM7;

typedef struct {
	double w;
	double x;
	double y;
	double z;
} SCD_Struct_CM8;

typedef struct {
	double field1;
	double field2;
	double field3;
	double field4;
	double field5;
	double field6;
	double field7;
	double field8;
	double field9;
} SCD_Struct_CM9;

typedef struct {
	float pressure;
	float temperature;
} SCD_Struct_CM10;

typedef struct {
	double field1;
	double field2;
} SCD_Struct_CM11;

typedef struct {
	unsigned long long field1;
	id field2;
	unsigned long long field3;
	unsigned long long field4[5];
} SCD_Struct_CM12;

typedef struct AccelUnpacker {
	char* fData;
	unsigned fBitsLeft;
	unsigned char fPartial;
	unsigned long long fTimestampLast;
	long long fTimestampLastDelta;
	int fSampleLast[3];
} AccelUnpacker;

typedef struct GyroUnpacker {
	char* fData;
	unsigned fBitsLeft;
	unsigned char fPartial;
	unsigned long long fTimestampLast;
	long long fTimestampLastDelta;
	int fSampleLast[4];
} GyroUnpacker;

typedef struct PressureUnpacker {
	char* fData;
	unsigned fBitsLeft;
	unsigned char fPartial;
	unsigned long long fTimestampLast;
	long long fTimestampLastDelta;
	int fSampleLast[2];
} PressureUnpacker;

typedef struct _compressed_pair<CLDeviceMotionLiteService *, std::__1::default_delete<CLDeviceMotionLiteService>> {
	CLDeviceMotionLiteService __value_;
} compressed_pair<CLDeviceMotionLiteService *, std::__1::default_delete<CLDeviceMotionLiteService>>;

typedef struct unique_ptr<CLDeviceMotionLiteService, std::__1::default_delete<CLDeviceMotionLiteService>> {
	compressed_pair<CLDeviceMotionLiteService *, std::__1::default_delete<CLDeviceMotionLiteService>> __ptr_;
} unique_ptr<CLDeviceMotionLiteService, std::__1::default_delete<CLDeviceMotionLiteService>>;

typedef struct {
	int field1;
} SCD_Struct_CM18;

typedef struct {
	unsigned motionHint : 1;
	unsigned gpsHint : 1;
	unsigned basebandHint : 1;
	unsigned wifiHint : 1;
	unsigned btHint : 1;
} SCD_Struct_CM19;

typedef struct CLMotionActivity {
	int type;
	int confidence;
	int mountedState;
	int mountedConfidence;
	BOOL isStanding;
	float tilt;
	double timestamp;
	BOOL isVehicleConnected;
	int exitState;
	double estExitTime;
	double startTime;
	int rawType;
	int rawConfidence;
	SCD_Struct_CM19 vehicularFlags;
	int vehicularConfidence;
	float drivingStowedLikelihoodSum;
	float drivingArmLikelihoodSum;
	float ssLikelihoodSum;
	int workoutDetectionType;
	double workoutDetectionTime;
	unsigned long long workoutEscalationTime;
	int typeYouth;
} CLMotionActivity;

typedef struct os_unfair_lock_s {
	unsigned _os_unfair_lock_opaque;
} os_unfair_lock_s;

typedef struct _compressed_pair<CLVO2MaxClassifier *, std::__1::default_delete<CLVO2MaxClassifier>> {
	CLVO2MaxClassifier __value_;
} compressed_pair<CLVO2MaxClassifier *, std::__1::default_delete<CLVO2MaxClassifier>>;

typedef struct unique_ptr<CLVO2MaxClassifier, std::__1::default_delete<CLVO2MaxClassifier>> {
	compressed_pair<CLVO2MaxClassifier *, std::__1::default_delete<CLVO2MaxClassifier>> __ptr_;
} unique_ptr<CLVO2MaxClassifier, std::__1::default_delete<CLVO2MaxClassifier>>;

typedef const struct __CFString* CFStringRef;

typedef const struct __CFDictionary* CFDictionaryRef;

typedef const struct __CFArray* CFArrayRef;

typedef struct {
	int field1;
	SCD_Struct_CM1 field2;
	1 field3;
	double field4;
	double field5;
	double field6;
	double field7;
	double field8;
	double field9;
	double field10;
	double field11;
	int field12;
	double field13;
	int field14;
	SCD_Struct_CM1 field15;
	1 field16;
	double field17;
	int field18;
	unsigned field19;
	int field20;
	int field21;
	int field22;
	double field23;
} SCD_Struct_CL27;

typedef struct {
	double field1;
	double field2;
	double field3;
	int field4;
} SCD_Struct_CL28;

typedef struct {
	unsigned long long field1;
	double field2;
	double field3;
	double field4;
	double field5;
} SCD_Struct_CL29;

typedef struct {
	SCD_Struct_CM3 field1;
	SCD_Struct_CM8 field2;
	double field3;
	double field4;
	double field5;
} SCD_Struct_CM30;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct {
	SCD_Struct_CM1 field1;
	SCD_Struct_CM1 field2;
	SCD_Struct_CM1 field3;
	SCD_Struct_CM1 field4;
	SCD_Struct_CM1 field5;
	unsigned long long field6;
	BOOL field7;
	float field8;
	float field9;
	SCD_Struct_CM8 field10;
	unsigned char field11[3];
} SCD_Struct_CM32;

typedef struct {
	int recordId;
	double startTime;
	unsigned pacebin;
	double kvalue;
	double kvalueTrack;
	double score;
	double endTime;
	double distance;
	int steps;
	int session;
	double speed;
	double percentGrade;
	int gpsSource;
	double timestamp;
} SCD_Struct_CM33;

typedef struct _compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>> {
	unsigned long long __value_;
} compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>>;

typedef struct _tree_end_node<std::__1::__tree_node_base<void *> *> {
	__tree_node_base<void *> __left_;
} tree_end_node<std::__1::__tree_node_base<void *> *>;

typedef struct _compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *>>> {
	tree_end_node<std::__1::__tree_node_base<void *> *> __value_;
} compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *>>>;

typedef struct _tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int>>> {
	__tree_end_node<std::__1::__tree_node_base<void *> *> __begin_node_;
	compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void *>>> __pair1_;
	compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>> __pair3_;
} tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int>>>;

typedef struct map<unsigned long, int, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, int>>> {
	tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int>>> __tree_;
} map<unsigned long, int, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, int>>>;

