/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:43 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AudioVideoBridging.framework/Versions/A/AudioVideoBridging
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioVideoBridging/AudioVideoBridging-Structs.h>
#import <AudioVideoBridging/AVB17221AEMControlDescriptorValue.h>

@class NSArray, NSNumber;

@interface AVB17221AEMControlDescriptorSelectorValue : AVB17221AEMControlDescriptorValue {

	unsigned short unitType;
	NSArray* options;
	NSNumber* currentValue;
	NSNumber* defaultValue;

}

@property (assign) unsigned short unitType; 
@property (assign) unsigned char unitMultiplier; 
@property (assign) unsigned char unitCode; 
@property (copy) NSArray * options; 
@property (retain) NSNumber * currentValue; 
@property (retain) NSNumber * defaultValue; 
+(id)keyPathsForValuesAffectingUnitMultiplier;
+(id)keyPathsForValuesAffectingUnitCode;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(void)setOptions:(NSArray *)arg1 ;
-(NSArray *)options;
-(NSNumber *)defaultValue;
-(void)setDefaultValue:(NSNumber *)arg1 ;
-(NSNumber *)currentValue;
-(void)setCurrentValue:(NSNumber *)arg1 ;
-(unsigned short)unitType;
-(void)setUnitType:(unsigned short)arg1 ;
-(id)debugLogStringWithIndentation:(id)arg1 ;
-(id)initWithValuePointer:(char**)arg1 numberOfValues:(unsigned short)arg2 valueType:(unsigned short)arg3 ;
-(unsigned short)numberOfValues;
-(unsigned long long)valuesSize;
-(char*)setValuesAtPointer:(char*)arg1 maxLength:(unsigned long long)arg2 ;
-(char*)getUInt8ValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getInt16ValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getUInt16ValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getInt32ValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getUInt32ValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getInt64ValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getUInt64ValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getFloatValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)getDoubleValuesAtPointer:(char*)arg1 numberOfValues:(unsigned short)arg2 ;
-(char*)setInt8ValuesAtPointer:(char*)arg1 ;
-(char*)setUInt8ValuesAtPointer:(char*)arg1 ;
-(char*)setInt16ValuesAtPointer:(char*)arg1 ;
-(char*)setUInt16ValuesAtPointer:(char*)arg1 ;
-(char*)setInt32ValuesAtPointer:(char*)arg1 ;
-(char*)setUInt32ValuesAtPointer:(char*)arg1 ;
-(char*)setInt64ValuesAtPointer:(char*)arg1 ;
-(char*)setUInt64ValuesAtPointer:(char*)arg1 ;
-(char*)setFloatValuesAtPointer:(char*)arg1 ;
-(char*)setDoubleValuesAtPointer:(char*)arg1 ;
-(unsigned long long)typeSize;
-(id)objectsForSetCommandValuesData:(id)arg1 ;
-(char)updateWithValueDictionary:(id)arg1 ;
-(id)valueDictionary;
-(id)valueXMLElement;
-(char)updateWithValueXMLElement:(id)arg1 ;
-(unsigned long long)currentValueSize;
-(void)setCurrentValueData:(id)arg1 ;
-(id)currentValueData;
-(void)setUnitMultiplier:(unsigned char)arg1 ;
-(unsigned char)unitMultiplier;
-(void)setUnitCode:(unsigned char)arg1 ;
-(unsigned char)unitCode;
-(char)validControlValueType:(unsigned short)arg1 ;
-(id)valuesDataWithNewNumberValue:(id)arg1 atValueIndex:(unsigned short)arg2 ;
-(char*)getInt8ValuesAtPointer:(char*)arg1 numberOFValues:(unsigned short)arg2 ;
@end

