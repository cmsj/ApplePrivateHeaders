/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:06 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSXPCConnection, NSMutableSet, NSObject, NSMutableDictionary;

@interface CWWiFiClient : NSObject {

	NSXPCConnection* _xpcConnection;
	NSMutableSet* _eventList;
	NSObject*<OS_dispatch_queue> _eventQueue;
	NSMutableDictionary* _interfaceMap;
	NSObject*<OS_dispatch_queue> _mutex;
	id _delegate;

}

@property (assign,nonatomic,__weak) id delegate;              //@synthesize delegate=_delegate - In the implementation block
+(id)interfaceByRole:(long long)arg1 ;
+(id)sharedWiFiClient;
+(id)interfaceNames;
+(unsigned long long)platformCapabilities;
+(id)virtualInterfaceNames;
-(char)setAutoJoinEnabled:(char)arg1 error:(id*)arg2 ;
-(char)setWoWEnabled:(char)arg1 error:(id*)arg2 ;
-(long long)autoHotspotMode;
-(char)setAutoHotspotMode:(long long)arg1 error:(id*)arg2 ;
-(char)updateWiFiProfile:(id)arg1 authorization:(id)arg2 error:(id*)arg3 ;
-(char)removeWiFiProfileWithID:(id)arg1 event:(unsigned long long)arg2 authorization:(id)arg3 error:(id*)arg4 ;
-(char)commitConfiguration:(id)arg1 interfaceName:(id)arg2 authorization:(id)arg3 error:(id*)arg4 ;
-(char)addWiFiProfile:(id)arg1 event:(unsigned long long)arg2 addToBottom:(char)arg3 authorization:(id)arg4 error:(id*)arg5 ;
-(void)__startMonitoringEventWithType:(long long)arg1 reply:(/*^block*/id)arg2 ;
-(id)__interfaceWithName:(id)arg1 legacy:(char)arg2 ;
-(id)__interfaceWithName:(id)arg1 ;
-(void)airPlayDidCompleteForWiFiInterfaceWithName:(id)arg1 ;
-(id)interfaceWithRole:(long long)arg1 legacy:(char)arg2 ;
-(id)autoJoinTemporarilyDisabledUntilDate;
-(char)forgetWiFiProfileWithID:(id)arg1 event:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)startBrowsingForTetherDevicesAndReturnError:(id*)arg1 ;
-(char)stopBrowsingForTetherDevicesAndReturnError:(id*)arg1 ;
-(char)setAutoJoinTemporarilyDisabledUntilDate:(id)arg1 error:(id*)arg2 ;
-(char)autoJoinTemporarilyDisabled;
-(char)forgetPasspointWiFiProfileWithDomainName:(id)arg1 event:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)queryAllWiFiProfilesAndReturnError:(id*)arg1 ;
-(void)dealloc;
-(id)init;
-(id)delegate;
-(void)setDelegate:(id)arg1 ;
-(id)interfaces;
-(id)interface;
-(void)interfaceAddedWithName:(id)arg1 ;
-(void)interfaceRemovedWithName:(id)arg1 ;
-(void)rsnHandshakeDidCompleteForWiFiInterfaceWithName:(id)arg1 ;
-(void)autoJoinDidStartForWiFiInterfaceWithName:(id)arg1 ;
-(void)autoJoinDidCompleteForWiFiInterfaceWithName:(id)arg1 ;
-(void)autoJoinDidUpdate:(id)arg1 ;
-(void)joinDidStartForWiFiInterfaceWithName:(id)arg1 ssid:(id)arg2 ;
-(void)joinDidCompleteForWiFiInterfaceWithName:(id)arg1 error:(id)arg2 ;
-(void)realTimeModeDidStartForWiFiInterfaceWithName:(id)arg1 ;
-(void)realTimeModeDidEndForWiFiInterfaceWithName:(id)arg1 ;
-(void)wowStateDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)deviceAvailabilityChangedForWiFiInterfaceWithName:(id)arg1 isAvailable:(char)arg2 ;
-(void)preferencesDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)virtualInterfaceStateChangedForWiFiInterfaceWithName:(id)arg1 ;
-(void)rangingReportEventForWiFiInterfaceWithName:(id)arg1 data:(id)arg2 error:(id)arg3 ;
-(void)internal_showAvailableWiFiNetworks:(id)arg1 interfaceName:(id)arg2 ;
-(void)internal_showMICErrorWithNetworkName:(id)arg1 ;
-(void)internal_showDHCPMessage:(id)arg1 networkName:(id)arg2 ;
-(void)internal_foundTetherDevices:(id)arg1 ;
-(void)internal_startBrowsingForTetherDevicesAndReply:(/*^block*/id)arg1 ;
-(void)internal_stopBrowsingForTetherDevicesAndReply:(/*^block*/id)arg1 ;
-(void)internal_enableTetherDevice:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)internal_showAutoHotspotNotificationForTetherDevice:(id)arg1 retry:(char)arg2 interfaceName:(id)arg3 ;
-(void)internal_showLowBatteryNotificationForTetherDevice:(id)arg1 interfaceName:(id)arg2 ;
-(void)internal_setupSidecarMetricsSocketManager:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)internal_cleanupSidecarMetricsSocketManager:(/*^block*/id)arg1 ;
-(void)internal_dumpWiFiLogsAndReply:(/*^block*/id)arg1 ;
-(void)rangingStartedForWiFiInterfaceWithName:(id)arg1 ;
-(void)rangingEndedForWiFiInterfaceWithName:(id)arg1 ;
-(void)powerStateDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)ssidDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)bssidDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)countryCodeDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)linkDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)linkQualityDidChangeForWiFiInterfaceWithName:(id)arg1 rssi:(long long)arg2 transmitRate:(double)arg3 ;
-(void)modeDidChangeForWiFiInterfaceWithName:(id)arg1 ;
-(void)scanCacheUpdatedForWiFiInterfaceWithName:(id)arg1 ;
-(char)stopMonitoringAllEventsAndReturnError:(out id*)arg1 ;
-(char)startMonitoringEventWithType:(long long)arg1 error:(out id*)arg2 ;
-(char)stopMonitoringEventWithType:(long long)arg1 error:(out id*)arg2 ;
-(id)interfaceWithRole:(long long)arg1 ;
-(id)interfaceWithName:(id)arg1 ;
-(char)setAutoJoinTemporarilyDisabled:(char)arg1 error:(id*)arg2 ;
-(char)internal_userAgentWillShowJoinUIForWiFiNetwork:(id)arg1 interfaceName:(id)arg2 timestamp:(double)arg3 error:(id*)arg4 ;
-(void)submitAWDMetric:(id)arg1 metricID:(id)arg2 reply:(/*^block*/id)arg3 ;
-(char)rememberWiFiProfile:(id)arg1 event:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)setWiFiPasswordInSystemKeychain:(id)arg1 ssid:(id)arg2 error:(id*)arg3 ;
-(char)forgetWiFiProfileWithSSID:(id)arg1 event:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)internal_receivedAutoHotspotNotificationResponse:(char)arg1 updateMode:(long long)arg2 tetherDevice:(id)arg3 authorization:(id)arg4 interfaceName:(id)arg5 ;
-(void)internal_handOffSidecarMetricsFromCompanion:(id)arg1 metricsData:(id)arg2 ;
-(void)internal_setWiFiPasswordForUserKeychain:(id)arg1 ssid:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)internal_startUserMode8021XUsingKeychainWithSSID:(id)arg1 disableUserInteraction:(char)arg2 interfaceWithName:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)internal_startUserMode8021XWithSSID:(id)arg1 username:(id)arg2 password:(id)arg3 identity:(id)arg4 remember:(char)arg5 interfaceWithName:(id)arg6 reply:(/*^block*/id)arg7 ;
-(void)internal_startUserMode8021XWithPasspointDomainName:(id)arg1 interfaceWithName:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)internal_startUserMode8021XWithProfile:(id)arg1 interfaceWithName:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)internal_joinWiFiNetworkWithUserAgent:(id)arg1 interfaceName:(id)arg2 timestamp:(double)arg3 reply:(/*^block*/id)arg4 ;
-(void)foundTetherDevices:(id)arg1 ;
-(long long)thermalIndex;
-(char)setThermalIndex:(long long)arg1 error:(id*)arg2 ;
-(void)willShowJoinUIForWiFiNetwork:(id)arg1 interfaceName:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)acquireBluetoothPagingLockAndReply:(/*^block*/id)arg1 ;
-(void)relinquishBluetoothPagingLockAndReply:(/*^block*/id)arg1 ;
@end

