/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:06 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <CoreWLAN/CoreWLAN-Structs.h>
@class NSString, NSArray, NSObject, NSXPCConnection, CWIPMonitor, CWEAPOLClient, CWBTCStatus, NSSet;

@interface CWInterface : NSObject {

	void* _device;
	NSString* _interfaceName;
	NSArray* _capabilities;
	IONotificationPortRef _interfaceRemovedNotificationPort;
	unsigned _interfaceRemovedNotification;
	char _deviceAttached;
	id _eapolClient;
	id _ipMonitor;
	NSObject*<OS_dispatch_queue> _internalQueue;
	void* _serviceStore;
	void* _interfaceStore;
	char _lastPowerState;
	NSObject*<OS_dispatch_queue> _eventQueue;
	NSXPCConnection* _xpcConnection;
	char _ownsXPCConnection;

}

@property (readonly) void* device; 
@property (copy,readonly) NSArray * capabilities; 
@property (retain,readonly) CWIPMonitor * ipMonitor; 
@property (retain,readonly) CWEAPOLClient * eapolClient; 
@property (readonly) char deviceAttached; 
@property (readonly) unsigned long long interfaceCapabilities; 
@property (nonatomic,readonly) long long numTXStreams; 
@property (readonly) char powerRX; 
@property (readonly) char powerTX; 
@property (nonatomic,readonly) long long maxNSSSupportedForAP; 
@property (nonatomic,readonly) CWBTCStatus * btcStatus; 
@property (readonly) char powerSaveModeEnabled; 
@property (readonly) long long aggregateRSSI; 
@property (readonly) long long aggregateNoise; 
@property (readonly) NSSet * supportedISMChannels; 
@property (copy) NSArray * capabilities;                                    //@synthesize capabilities=_capabilities - In the implementation block
@property (copy) NSString * interfaceName;                                  //@synthesize interfaceName=_interfaceName - In the implementation block
@property (assign) void* device;                                            //@synthesize device=_device - In the implementation block
@property (assign) char lastPowerState;                                     //@synthesize lastPowerState=_lastPowerState - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> eventQueue;                 //@synthesize eventQueue=_eventQueue - In the implementation block
@property (assign) char deviceAttached;                                     //@synthesize deviceAttached=_deviceAttached - In the implementation block
+(id)interface;
+(id)interfaceNames;
+(id)interfaceWithName:(id)arg1 ;
+(id)supportedInterfaces;
-(id)airplayStatistics;
-(id)powerDebugInfo;
-(id)IO80211ControllerInfo;
-(id)bssidData;
-(id)initWithInterfaceName:(id)arg1 xpcConnection:(id)arg2 legacyEventMonitoring:(char)arg3 ;
-(id)scanForNetworksWithName:(id)arg1 includeHidden:(char)arg2 error:(out id*)arg3 ;
-(id)scanForNetworksWithSSID:(id)arg1 includeHidden:(char)arg2 error:(out id*)arg3 ;
-(char)associateToEnterpriseNetwork:(id)arg1 identity:(SecIdentityRef)arg2 username:(id)arg3 password:(id)arg4 forceBSSID:(char)arg5 remember:(char)arg6 error:(out id*)arg7 ;
-(id)__supportedWLANChannelForChannelNumber:(unsigned long long)arg1 ;
-(id)countryCodeInternal;
-(id)networkServiceIDs;
-(char)setWLANChannel:(id)arg1 error:(out id*)arg2 ;
-(char)setPairwiseMasterKey:(id)arg1 error:(out id*)arg2 ;
-(char)setWEPKey:(id)arg1 flags:(unsigned long long)arg2 index:(long long)arg3 error:(out id*)arg4 ;
-(char)associateToEnterpriseNetwork:(id)arg1 identity:(SecIdentityRef)arg2 username:(id)arg3 password:(id)arg4 error:(out id*)arg5 ;
-(id)__familyScanCacheResults;
-(char)commitConfiguration:(id)arg1 authorization:(id)arg2 error:(out id*)arg3 ;
-(char)lastPowerState;
-(void)setLastPowerState:(char)arg1 ;
-(void)setDeviceAttached:(char)arg1 ;
-(id)__vhtMCSInfo;
-(unsigned long long)__vhtMCSIndex;
-(unsigned long long)__mcsIndex;
-(unsigned long long)__vhtNumberOfSpatialStreams;
-(unsigned long long)__numberOfSpatialStreams;
-(id)__scanForLoginWindowModeEnterpriseNetworkWithEAPProfile:(EAPOLClientProfileRef)arg1 error:(out id*)arg2 ;
-(char)associateToEnterpriseNetwork:(id)arg1 clientItemID:(EAPOLClientItemIDRef)arg2 username:(id)arg3 password:(id)arg4 identity:(SecIdentityRef)arg5 forceBSSID:(char)arg6 remember:(char)arg7 possiblyHidden:(char)arg8 error:(out id*)arg9 ;
-(char)associateToEnterpriseNetwork:(id)arg1 clientItemID:(EAPOLClientItemIDRef)arg2 username:(id)arg3 password:(id)arg4 identity:(SecIdentityRef)arg5 forceBSSID:(char)arg6 remember:(char)arg7 error:(out id*)arg8 ;
-(id)hwSupportedWLANChannels;
-(long long)maximumUCMProfileCount;
-(char)__powerOfAllRadiosMatches:(int)arg1 ;
-(long long)interfaceControlState;
-(char)networkInterfaceAvailable;
-(char)startHostAPMode:(out id*)arg1 ;
-(char)associateTo8021XNetwork:(id)arg1 error:(out id*)arg2 ;
-(char)associateToLoginWindowModeEnterpriseNetworkWithEAPProfile:(EAPOLClientProfileRef)arg1 username:(id)arg2 password:(id)arg3 error:(out id*)arg4 ;
-(char)associateToSystemModeEnterpriseNetwork:(id)arg1 error:(out id*)arg2 ;
-(char)associateToEnterpriseNetwork:(id)arg1 clientItemID:(EAPOLClientItemIDRef)arg2 username:(id)arg3 password:(id)arg4 identity:(SecIdentityRef)arg5 error:(out id*)arg6 ;
-(id)scanForNetworksWithChannels:(id)arg1 ssidList:(id)arg2 legacyScanSSID:(id)arg3 includeHiddenNetworks:(char)arg4 mergedScanResults:(char)arg5 maxAge:(double)arg6 maxMissCount:(long long)arg7 maxWakeCount:(long long)arg8 maxAutoJoinCount:(long long)arg9 waitForWiFi:(char)arg10 waitForBluetooth:(char)arg11 trimmedScanResultProperties:(id)arg12 priority:(long long)arg13 error:(out id*)arg14 ;
-(void)stopIBSSMode;
-(void)clearScanCache;
-(char)causedLastWake;
-(void)clearANQPCacheForNetwork:(id)arg1 ;
-(void)joinNetwork:(id)arg1 reply:(/*^block*/id)arg2 ;
-(long long)activeUCMProfileIndexForBand:(long long)arg1 error:(id*)arg2 ;
-(char)powerRX;
-(char)powerTX;
-(CWBTCStatus *)btcStatus;
-(char)twoGHzChainDisabledAndReturnReassocRequired:(char*)arg1 error:(id*)arg2 ;
-(id)sidecarDiagnostics;
-(void)enableHostAPMode;
-(void)disableHostAPMode;
-(id)scanForNetworksWithParameters:(id)arg1 error:(out id*)arg2 ;
-(char)supportsShortGI40MHz;
-(char)powerSaveModeEnabled;
-(long long)aggregateRSSI;
-(long long)aggregateNoise;
-(NSSet *)supportedISMChannels;
-(char)associateToNetwork:(id)arg1 parameters:(id)arg2 error:(out id*)arg3 ;
-(char)enableIBSSWithParameters:(id)arg1 error:(out id*)arg2 ;
-(void)dealloc;
-(char)conformsToProtocol:(id)arg1 ;
-(id)description;
-(id)name;
-(id)countryCode;
-(void*)device;
-(char)busy;
-(id)configuration;
-(NSArray *)capabilities;
-(id)channel;
-(void)setCapabilities:(NSArray *)arg1 ;
-(NSString *)interfaceName;
-(void)setInterfaceName:(NSString *)arg1 ;
-(void)setDevice:(void*)arg1 ;
-(id)rssi;
-(char)wakeOnWirelessEnabled;
-(id)ssid;
-(char)powerOn;
-(id)wlanChannel;
-(long long)interfaceMode;
-(unsigned long long)securityType;
-(id)bssid;
-(id)supportedWLANChannels;
-(id)scanForNetworksWithChannels:(id)arg1 ssid:(id)arg2 bssid:(id)arg3 error:(out id*)arg4 ;
-(char)associateToNetwork:(id)arg1 password:(id)arg2 error:(out id*)arg3 ;
-(long long)rssiValue;
-(id)scanForNetworksWithName:(id)arg1 error:(out id*)arg2 ;
-(id)scanForNetworksWithSSID:(id)arg1 error:(out id*)arg2 ;
-(char)associateToNetwork:(id)arg1 password:(id)arg2 forceBSSID:(char)arg3 remember:(char)arg4 error:(out id*)arg5 ;
-(id)ssidData;
-(id)lastNetworkJoined;
-(long long)security;
-(NSObject*<OS_dispatch_queue>)eventQueue;
-(char)setPeerTrafficRegistrationWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(char)power;
-(id)phyMode;
-(id)initWithInterfaceName:(id)arg1 ;
-(char)setPower:(char)arg1 error:(out id*)arg2 ;
-(void)disassociate;
-(id)securityMode;
-(id)noise;
-(id)stateInfo;
-(void)setEventQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)opMode;
-(id)txRate;
-(unsigned long long)mcsIndex;
-(id)cachedScanResults;
-(void)stopHostAPMode;
-(long long)noiseMeasurement;
-(id)hardwareAddress;
-(char)startHostAPModeWithSSID:(id)arg1 securityType:(unsigned long long)arg2 channel:(id)arg3 password:(id)arg4 error:(out id*)arg5 ;
-(void)saveJoinConfigurationAndReply:(/*^block*/id)arg1 ;
-(void)restoreJoinConfigurationWithUUID:(id)arg1 reply:(/*^block*/id)arg2 ;
-(unsigned long long)physicalLayerMode;
-(double)transmitRate;
-(char)serviceActive;
-(unsigned long long)maximumLinkSpeed;
-(char)monitorMode;
-(long long)transmitPower;
-(unsigned long long)supportedPhysicalLayerModes;
-(unsigned long long)interfaceCapabilities;
-(id)virtualInterfaceRole;
-(long long)activePHYMode;
-(unsigned long long)numberOfSpatialStreams;
-(long long)numTXStreams;
-(long long)maxNSSSupportedForAP;
-(char)setUCMProfile:(id)arg1 atIndex:(long long)arg2 error:(id*)arg3 ;
-(char)setActiveUCMProfileIndexFor2g:(long long)arg1 and5g:(long long)arg2 error:(id*)arg3 ;
-(char)set2GHzChainDisabled:(char)arg1 andReassocRequired:(char)arg2 error:(id*)arg3 ;
-(char)setULOFDMAStateForBluetoothCoexistence:(char)arg1 error:(id*)arg2 ;
-(char)startAWDL:(id)arg1 error:(out id*)arg2 ;
-(void)stopAWDL;
-(id)autoJoinHistory;
-(id)lastPreferredNetworkJoined;
-(id)lastTetherDeviceJoined;
-(CWIPMonitor *)ipMonitor;
-(char)isAirPlayInProgress;
-(id)interfaceState;
-(CWEAPOLClient *)eapolClient;
-(id)queryANQPCacheWithElements:(unsigned long long)arg1 network:(id)arg2 maxAge:(double)arg3 ;
-(id)queryScanCacheWithChannels:(id)arg1 ssidList:(id)arg2 maxAge:(double)arg3 maxMissCount:(long long)arg4 maxWakeCount:(long long)arg5 maxAutoJoinCount:(long long)arg6 trimmedScanResultProperties:(id)arg7 error:(out id*)arg8 ;
-(char)associateToNetwork:(id)arg1 password:(id)arg2 forceBSSID:(char)arg3 remember:(char)arg4 possiblyHidden:(char)arg5 error:(out id*)arg6 ;
-(char)associateToEnterpriseNetwork:(id)arg1 identity:(SecIdentityRef)arg2 username:(id)arg3 password:(id)arg4 forceBSSID:(char)arg5 remember:(char)arg6 possiblyHidden:(char)arg7 error:(out id*)arg8 ;
-(id)queryANQPElements:(unsigned long long)arg1 network:(id)arg2 maxAge:(double)arg3 waitForWiFi:(char)arg4 waitForBluetooth:(char)arg5 priority:(long long)arg6 error:(out id*)arg7 ;
-(char)associateToPasspointNetwork:(id)arg1 usingDomainName:(id)arg2 error:(out id*)arg3 ;
-(char)startWPSForNetwork:(id)arg1 pin:(id)arg2 remember:(char)arg3 error:(out id*)arg4 ;
-(char)connectToTetherDevice:(id)arg1 remember:(char)arg2 error:(id*)arg3 ;
-(char)isAWDLRealTimeModeInProgress;
-(id)queryScanCacheWithChannels:(id)arg1 ssidList:(id)arg2 maxAge:(double)arg3 maxMissCount:(long long)arg4 maxWakeCount:(long long)arg5 maxAutoJoinCount:(long long)arg6 error:(out id*)arg7 ;
-(id)scanForNetworksWithChannels:(id)arg1 ssidList:(id)arg2 legacyScanSSID:(id)arg3 includeHiddenNetworks:(char)arg4 mergedScanResults:(char)arg5 maxAge:(double)arg6 maxMissCount:(long long)arg7 maxWakeCount:(long long)arg8 maxAutoJoinCount:(long long)arg9 waitForWiFi:(char)arg10 waitForBluetooth:(char)arg11 priority:(long long)arg12 error:(out id*)arg13 ;
-(char)deviceAttached;
-(char)busyUI;
-(char)startIBSSModeWithSSID:(id)arg1 security:(long long)arg2 channel:(unsigned long long)arg3 password:(id)arg4 error:(out id*)arg5 ;
-(char)associateTo8021XNetwork:(id)arg1 remember:(char)arg2 error:(out id*)arg3 ;
-(char)__startEventMonitoring;
-(id)parentInterfaceName;
-(char)setRangeable:(char)arg1 peers:(id)arg2 error:(out id*)arg3 ;
-(id)ucmProfileAtIndex:(long long)arg1 error:(id*)arg2 ;
-(char)setCachedLocaleTimeout:(double)arg1 error:(out id*)arg2 ;
-(id)availableWLANChannels;
-(id)joinHistory;
-(id)awdlOperatingMode;
-(id)roamHistory;
-(void)acquireBluetoothPagingLockAndReply:(/*^block*/id)arg1 ;
-(void)relinquishBluetoothPagingLockAndReply:(/*^block*/id)arg1 ;
-(id)scanForNetworksWithChannels:(id)arg1 ssid:(id)arg2 bssid:(id)arg3 restTime:(unsigned long long)arg4 dwellTime:(unsigned long long)arg5 ssidList:(id)arg6 error:(out id*)arg7 ;
-(id)cachedTrimmedScanResultsWithProperties:(id)arg1 ;
-(char)startRanging:(id)arg1 timeout:(double)arg2 error:(out id*)arg3 ;
@end

