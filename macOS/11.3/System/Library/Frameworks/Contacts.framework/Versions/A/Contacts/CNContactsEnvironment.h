/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Contacts.framework/Versions/A/Contacts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Contacts/Contacts-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol CNSchedulerProvider, CNAccountCollection, SGSuggestionsServiceContactsProtocol, CNSiriIntelligenceSettingsProtocol, CNContactsLoggerProvider;
@class CNCDPersistenceStack, NSArray, NSURL;

@interface CNContactsEnvironment : NSObject <NSCopying> {

	char _shouldUseNativeStack;
	id<CNSchedulerProvider> _schedulerProvider;
	id<CNAccountCollection> _accountCollection;
	CNCDPersistenceStack* _existingPersistenceStack;
	id<SGSuggestionsServiceContactsProtocol> _suggestionsService;
	id<CNSiriIntelligenceSettingsProtocol> _siriIntelligenceSettings;
	NSArray* _delegateInfos;
	id<CNContactsLoggerProvider> _loggerProvider;

}

@property (nonatomic,retain) NSArray * delegateInfos;                                            //@synthesize delegateInfos=_delegateInfos - In the implementation block
@property (nonatomic,readonly) id<CNSchedulerProvider> schedulerProvider;                        //@synthesize schedulerProvider=_schedulerProvider - In the implementation block
@property (nonatomic,readonly) id<CNContactsLoggerProvider> loggerProvider;                      //@synthesize loggerProvider=_loggerProvider - In the implementation block
@property (retain) id<CNAccountCollection> accountCollection;                                    //@synthesize accountCollection=_accountCollection - In the implementation block
@property (retain) CNCDPersistenceStack * existingPersistenceStack;                              //@synthesize existingPersistenceStack=_existingPersistenceStack - In the implementation block
@property (assign,setter=setUseNativeStack:,nonatomic) char shouldUseNativeStack;                //@synthesize shouldUseNativeStack=_shouldUseNativeStack - In the implementation block
@property (copy,readonly) NSURL * baseURL; 
@property (retain) id<SGSuggestionsServiceContactsProtocol> suggestionsService;                  //@synthesize suggestionsService=_suggestionsService - In the implementation block
@property (retain) id<CNSiriIntelligenceSettingsProtocol> siriIntelligenceSettings;              //@synthesize siriIntelligenceSettings=_siriIntelligenceSettings - In the implementation block
@property (readonly) char useInMemoryStores; 
+(char)supportsSecureCoding;
+(id)currentEnvironment;
+(id)unitTestingEnvironmentWithDataLocationName:(id)arg1 ;
+(id)baseURLWithDataLocationName:(id)arg1 ;
+(id)unitTestingEnvironmentWithSchedulerProvider:(id)arg1 loggerProvider:(id)arg2 ;
+(id)inMemoryURL;
+(id)unitTestingEnvironmentWithDataLocationName:(id)arg1 schedulerProvider:(id)arg2 loggerProvider:(id)arg3 ;
+(char)useNativePersistenceStack;
+(id)unitTestingEnvironment;
+(id)unitTestingEnvironmentWithDataLocationName:(id)arg1 schedulerProvider:(id)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSURL *)baseURL;
-(id<CNSchedulerProvider>)schedulerProvider;
-(id<CNAccountCollection>)accountCollection;
-(void)setAccountCollection:(id<CNAccountCollection>)arg1 ;
-(void)setUseNativeStack:(char)arg1 ;
-(NSArray *)delegateInfos;
-(void)setDelegateInfos:(NSArray *)arg1 ;
-(id)copyWithDelegateInfos:(id)arg1 ;
-(id<CNContactsLoggerProvider>)loggerProvider;
-(char)useInMemoryStores;
-(id<SGSuggestionsServiceContactsProtocol>)suggestionsService;
-(id<CNSiriIntelligenceSettingsProtocol>)siriIntelligenceSettings;
-(void)retrieveEnvironmentConfigurationFromRemoteProcess;
-(id)initWithSchedulerProvider:(id)arg1 loggerProvider:(id)arg2 ;
-(void)setSuggestionsService:(id<SGSuggestionsServiceContactsProtocol>)arg1 ;
-(void)setSiriIntelligenceSettings:(id<CNSiriIntelligenceSettingsProtocol>)arg1 ;
-(void)makeCurrentEnvironment;
-(char)isUITestEnvironment;
-(CNCDPersistenceStack *)existingPersistenceStack;
-(void)setExistingPersistenceStack:(CNCDPersistenceStack *)arg1 ;
-(char)shouldUseNativeStack;
@end

