/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:11 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/InputMethodKit.framework/Versions/A/InputMethodKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/IMKCandidateMenuDelegate.h>
#import <libobjc.A.dylib/IMKInputMethod.h>
#import <libobjc.A.dylib/IMKChainable.h>

@protocol IMKKeyboard, IMKTextDocument, IMKInputMethod, IMKCandidateEngine;
@class NSMutableArray, NSTimer, NSString, NSArray;

@interface IMKAbstractInputMethod : NSObject <IMKCandidateMenuDelegate, IMKInputMethod, IMKChainable> {

	id<IMKKeyboard> _attachedKeyboard;
	id<IMKTextDocument> _attachedTextDocument;
	id<IMKInputMethod> _verbatimInputMethod;
	id<IMKInputMethod> _chainedInputMethod;
	id<IMKInputMethod> _composingInputMethod;
	id<IMKCandidateEngine> _candidateEngine;
	NSMutableArray* _textDocumentStack;
	/*^block*/id _compositionCompletionHandler;
	NSTimer* _candidateFireTimer;
	double _candidateDelayTimeInterval;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) id<IMKInputMethod> verbatimInputMethod;                 //@synthesize verbatimInputMethod=_verbatimInputMethod - In the implementation block
@property (nonatomic,readonly) NSMutableArray * textDocumentMutableStack; 
@property (nonatomic,copy) id compositionCompletionHandler;                            //@synthesize compositionCompletionHandler=_compositionCompletionHandler - In the implementation block
@property (assign,nonatomic) double candidateDelayTimeInterval;                        //@synthesize candidateDelayTimeInterval=_candidateDelayTimeInterval - In the implementation block
@property (nonatomic,readonly) NSArray * textDocumentStack; 
@property (nonatomic,retain) id<IMKInputMethod> composingInputMethod;                  //@synthesize composingInputMethod=_composingInputMethod - In the implementation block
@property (nonatomic,readonly) char isComposingInputMethod; 
@property (nonatomic,readonly) id<IMKTextDocument> composingText; 
@property (nonatomic,readonly) NSString * selectedText; 
@property (nonatomic,readonly) char tracksVerbatim; 
@property (nonatomic,readonly) char tracksVerbatimAsComposingText; 
@property (nonatomic,readonly) NSString * verbatim; 
@property (nonatomic,__weak,readonly) id<IMKKeyboard> attachedKeyboard;                //@synthesize attachedKeyboard=_attachedKeyboard - In the implementation block
@property (nonatomic,retain) id<IMKTextDocument> attachedTextDocument;                 //@synthesize attachedTextDocument=_attachedTextDocument - In the implementation block
@property (nonatomic,retain) id<IMKCandidateEngine> candidateEngine;                   //@synthesize candidateEngine=_candidateEngine - In the implementation block
@property (nonatomic,readonly) id<IMKInputMethod> chainedInputMethod;                  //@synthesize chainedInputMethod=_chainedInputMethod - In the implementation block
+(id)inputMethodVerbatimChainWithAttachedKeyboard:(id)arg1 ;
+(id)inputMethodWithAttachedKeyboard:(id)arg1 ;
+(id)inputMethodWithChainedInputMethod:(id)arg1 ;
+(id)inputMethodVerbatimChain;
+(id)inputMethod;
-(char)isComposingInputMethod;
-(id<IMKInputMethod>)composingInputMethod;
-(char)didPressKey:(id)arg1 whileInKeyboardState:(id)arg2 ;
-(char)tracksVerbatim;
-(char)keyboard:(id)arg1 didChange:(id)arg2 to:(id)arg3 ;
-(char)didReleaseKey:(id)arg1 whileInKeyboardState:(id)arg2 ;
-(void)candidateMenu:(id)arg1 didChangeFocusTo:(id)arg2 ;
-(void)candidateMenu:(id)arg1 didSelectCandidate:(id)arg2 ;
-(void)candidateMenuDidFinishInteracting:(id)arg1 ;
-(id)initWithKeyboardToAttach:(id)arg1 ;
-(id<IMKInputMethod>)verbatimInputMethod;
-(NSMutableArray *)textDocumentMutableStack;
-(void)setComposingInputMethod:(id<IMKInputMethod>)arg1 ;
-(id<IMKInputMethod>)chainedInputMethod;
-(void)willAttachTextDocument:(id)arg1 ;
-(void)composeText:(id)arg1 onCompletion:(/*^block*/id)arg2 ;
-(void)didAttachTextDocument:(id)arg1 ;
-(char)unhandledKeyPress:(id)arg1 whileInKeyboardState:(id)arg2 ;
-(char)handleKeyRelease:(id)arg1 whileInKeyboardState:(id)arg2 ;
-(char)unhandledKeyRelease:(id)arg1 whileInKeyboardState:(id)arg2 ;
-(void)setCandidateEngine:(id<IMKCandidateEngine>)arg1 ;
-(void)cancelActiveCandidateRequest;
-(void)pushTextDocument:(id)arg1 ;
-(id)popTextDocument;
-(id)candidateSeparator;
-(char)ignoreSeparatorIfApplied;
-(double)candidateDelayTimeInterval;
-(char)canShowCandidatesOn:(id)arg1 ;
-(void)runShowCandidatesFor:(id)arg1 withKeyboardState:(id)arg2 ;
-(id)newDeferredCandidatesTimerFor:(id)arg1 withKeyboardState:(id)arg2 withDelay:(double)arg3 ;
-(char)handleCandidateRelativeToCursor:(id)arg1 ;
-(char)handleBoundedCandidate:(id)arg1 ;
-(void)candidateHandled:(id)arg1 ;
-(char)apply:(id)arg1 after:(long long)arg2 to:(id)arg3 ;
-(char)apply:(id)arg1 before:(long long)arg2 to:(id)arg3 ;
-(NSArray *)textDocumentStack;
-(void)pushAttachedTextDocument;
-(void)popAttachedTextDocument;
-(id)_candidateSeparator;
-(void)showCandidatesOnKeyboardFor:(id)arg1 ;
-(void)setCandidateDelayTimeInterval:(double)arg1 ;
-(id)init;
-(id)languageCode;
-(NSString *)selectedText;
-(id)compositionCompletionHandler;
-(void)setCompositionCompletionHandler:(id)arg1 ;
-(void)commitComposition;
-(void)_completeComposition:(char)arg1 ;
-(void)composeTextWith:(id)arg1 ;
-(void)completeComposition;
-(void)cancelComposition;
-(char)didAcceptCandidate:(id)arg1 ;
-(id)initWithKeyboardToAttach:(id)arg1 inputMethodToChain:(id)arg2 ;
-(id<IMKTextDocument>)attachedTextDocument;
-(void)showCandidatesOnKeyboardFor:(id)arg1 withKeyboardState:(id)arg2 afterDelay:(double)arg3 ;
-(NSString *)verbatim;
-(id<IMKTextDocument>)composingText;
-(void)showCandidatesOnKeyboardFor:(id)arg1 withKeyboardState:(id)arg2 ;
-(void)alignVerbatimWithComposingText;
-(id<IMKKeyboard>)attachedKeyboard;
-(void)setAttachedTextDocument:(id<IMKTextDocument>)arg1 ;
-(id<IMKCandidateEngine>)candidateEngine;
-(char)tracksVerbatimAsComposingText;
-(char)trackedVerbatimShouldHandle:(id)arg1 whileIn:(id)arg2 ;
-(char)canHandle:(id)arg1 whileInShortcut:(id)arg2 ;
-(char)handleKeyPress:(id)arg1 whileInKeyboardState:(id)arg2 ;
-(id)verbatimFromString:(id)arg1 ;
-(id)initWithInputMethodToChain:(id)arg1 ;
@end

