/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:11 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/InputMethodKit.framework/Versions/A/InputMethodKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <InputMethodKit/InputMethodKit-Structs.h>
#import <libobjc.A.dylib/IMKServerProxy.h>

@class IMKServerPrivate;

@interface IMKServer : NSObject <IMKServerProxy> {

	IMKServerPrivate* _private;

}
+(id)imkServerSingleton;
+(id)_clientWrapperForXPCConn:(id)arg1 ;
+(id)_clientWrapperForDOProxy:(id)arg1 ;
+(id)inputControllerClassNameFor:(id)arg1 ;
+(id)inputDelegateClassNameFor:(id)arg1 ;
+(id)connectionNameFor:(id)arg1 ;
-(id)_currentClientWrapper;
-(void)ironwoodPlaceholderWasInvalidated:(id)arg1 client:(id)arg2 ;
-(oneway void)invalidateClientGeometry;
-(void)setInputMethodProperty:(unsigned long long)arg1 value:(id)arg2 ;
-(void)replyWaitCount_incrementWithLocking;
-(void)pushRunLoopInvocation:(id)arg1 ;
-(void)replyWaitCount_lockDecrement;
-(void)replyWaitCount_unlock;
-(id)higherRunLoopInvocation;
-(id)tailRunLoopInvocation;
-(void)popRunLoopInvocation;
-(void)replyWaitCount_decrementWithLocking;
-(id)IMBundleIdentifier;
-(id)_mapClientDOProxyToController:(id)arg1 ;
-(void)releasePAHController:(id)arg1 ;
-(void)_setCurrentClientWrapper:(id)arg1 ;
-(int)replyWaitCount_testWithLocking;
-(void)replyWaitCount_lockIncrement;
-(id)_controllerForClientXPCConn:(id)arg1 ;
-(void)_setPresentingClientWrapper:(id)arg1 ;
-(id)functionRowItemViewServiceXPCEndpoint;
-(void)setFunctionRowItemViewServiceXPCEndpoint:(id)arg1 ;
-(id)_currentIMKEvent;
-(oneway void)activateServer;
-(void)activateServerWithReply:(/*^block*/id)arg1 ;
-(oneway void)deactivateServer;
-(void)deactivateServerWithReply:(/*^block*/id)arg1 ;
-(oneway void)sessionFinished;
-(void)valueForTag:(unsigned long long)arg1 asyncClient:(char)arg2 reply:(/*^block*/id)arg3 ;
-(void)valueForTag:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(oneway void)setValue:(id)arg1 forTag:(unsigned long long)arg2 ;
-(void)setValue:(id)arg1 forTag:(unsigned long long)arg2 reply:(/*^block*/id)arg3 ;
-(void)modesWithClientAsync:(char)arg1 reply:(/*^block*/id)arg2 ;
-(void)modesWithReply:(/*^block*/id)arg1 ;
-(void)menusDictionaryWithClientAsync:(char)arg1 reply:(/*^block*/id)arg2 ;
-(void)menusDictionaryWithReply:(/*^block*/id)arg1 ;
-(void)handleEvent:(bycopy id)arg1 characterIndex:(unsigned long long)arg2 edge:(unsigned long long)arg3 asyncClient:(char)arg4 reply:(/*^block*/id)arg5 ;
-(void)handleEvent:(bycopy id)arg1 characterIndex:(unsigned long long)arg2 edge:(unsigned long long)arg3 reply:(/*^block*/id)arg4 ;
-(oneway void)commitCompositionWithDiscardMarkedTextFlag:(char)arg1 ;
-(void)commitCompositionWithReply:(/*^block*/id)arg1 ;
-(void)didCommandBySelector:(SEL)arg1 reply:(/*^block*/id)arg2 ;
-(void)doCommandBySelector:(SEL)arg1 commandDictionary:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)recognizedEventsWithClientAsync:(char)arg1 reply:(/*^block*/id)arg2 ;
-(void)recognizedEventsWithReply:(/*^block*/id)arg1 ;
-(oneway void)sendInputSessionSessAction:(unsigned)arg1 ;
-(oneway void)sendInputSessionSessAction:(unsigned)arg1 timestamp:(double)arg2 withInfo:(id)arg3 ;
-(oneway void)ironwoodTextWasCorrected:(id)arg1 ;
-(oneway void)ironwoodPlaceholderWasInvalidated:(id)arg1 ;
-(id)_mapClientXPCConnToController:(id)arg1 ;
-(void)sessionFinished_CommonWithClientWrapper:(id)arg1 controller:(id)arg2 ;
-(void)activateServer_CommonWithClientWrapper:(id)arg1 controller:(id)arg2 ;
-(void)deactivateServer_CommonWithClientWrapper:(id)arg1 controller:(id)arg2 ;
-(id)valueForTag_Common:(unsigned long long)arg1 clientWrapper:(id)arg2 controller:(id)arg3 ;
-(void)setValue_Common:(id)arg1 forTag:(unsigned long long)arg2 clientWrapper:(id)arg3 controller:(id)arg4 ;
-(id)modes_CommonWithClientWrapper:(id)arg1 controller:(id)arg2 ;
-(id)menusDictionary_CommonWithController:(id)arg1 ;
-(char)handleEvent_Common:(id)arg1 characterIndex:(unsigned long long)arg2 edge:(unsigned long long)arg3 clientWrapper:(id)arg4 controller:(id)arg5 ;
-(void)commitComposition_CommonWithClientWrapper:(id)arg1 controller:(id)arg2 ;
-(void)hidePalettes_CommonWithController:(id)arg1 ;
-(char)didCommandBySelector_Common:(SEL)arg1 clientWrapper:(id)arg2 controller:(id)arg3 ;
-(void)doCommandBySelector_Common:(SEL)arg1 commandDictionary:(id)arg2 clientWrapper:(id)arg3 controller:(id)arg4 ;
-(unsigned long long)recognizedEvents_CommonWithClientWrapper:(id)arg1 controller:(id)arg2 ;
-(void)invalidateClientGeometry_CommonWithController:(id)arg1 ;
-(void)sendInputSessionSessAction_Common:(unsigned)arg1 clientWrapper:(id)arg2 controller:(id)arg3 ;
-(void)sendInputSessionSessAction_Common:(unsigned)arg1 timestamp:(double)arg2 withInfo:(id)arg3 clientWrapper:(id)arg4 controller:(id)arg5 ;
-(void)ironwoodTextWasCorrected_Common:(id)arg1 clientWrapper:(id)arg2 controller:(id)arg3 ;
-(void)ironwoodPlaceholderWasInvalidated_Common:(id)arg1 clientWrapper:(id)arg2 controller:(id)arg3 ;
-(void)performDelayedEndpointCheckin:(id)arg1 ;
-(void)endpointCheckinRequestedFromLaunchAgent:(id)arg1 ;
-(void)sessionFinished:(id)arg1 ;
-(id)menusDictionary:(id)arg1 ;
-(char)handleEvent:(bycopy id)arg1 characterIndex:(unsigned long long)arg2 edge:(unsigned long long)arg3 client:(id)arg4 ;
-(void)hidePalettes:(id)arg1 ;
-(void)doCommandBySelector:(SEL)arg1 commandDictionary:(id)arg2 client:(id)arg3 ;
-(void)invalidateClientGeometry:(id)arg1 ;
-(void)registerIMKXPCEndpointWithLaunchAgent;
-(void)registerConnectionAfterDidFinishLaunch:(id)arg1 ;
-(char)_isPalette;
-(unsigned short)_remapKeyEventForCandidateKeylayout:(unsigned short)arg1 ;
-(id)_controllerForClientProxy:(id)arg1 withDictKey:(id)arg2 ;
-(id)newKeyBindings;
-(char)_serverGetsFirstShotAtWindowEvents;
-(char)_windowIsOpen;
-(void)_sendKey:(id)arg1 ;
-(char)_isValidKeyForCandidateView:(id)arg1 ;
-(id)_getStringForKeyCode:(unsigned*)arg1 andModifiers:(unsigned long long*)arg2 unmodifiedString:(id*)arg3 fromEventPackage:(id)arg4 ;
-(id)_eventsForController:(id)arg1 ;
-(id)_controllerForClientDOProxy:(id)arg1 ;
-(id)_presentingClientWrapper;
-(id)textInputFor:(id)arg1 ;
-(id)_actionsFromMenu:(id)arg1 ;
-(id)_copySynchronizedActions:(id)arg1 withMenuItems:(id)arg2 ;
-(void)_setCachedMenu:(id)arg1 ;
-(id)_searchSubMenus:(id)arg1 forTitle:(id)arg2 ;
-(id)_getModeDictionary;
-(id)_attributedStringFromEventPack:(id)arg1 ;
-(char)didCommandBySelector:(SEL)arg1 withObject:(id)arg2 ;
-(void)_setCurrentIMKEvent:(id)arg1 ;
-(void)_rememberKeyboardType:(id)arg1 inClient:(id)arg2 ;
-(id)_eventRefToNSEvent:(id)arg1 repeat:(char)arg2 ;
-(void)_rememberValidEvent:(id)arg1 fromEventPack:(id)arg2 inClient:(id)arg3 ;
-(void)_forgetValidEventsInClient:(id)arg1 ;
-(CGPoint)_breakDownMouseEvent:(id)arg1 theModifiers:(unsigned long long*)arg2 ;
-(void)_setMouseMovedState:(char)arg1 forClient:(id)arg2 controller:(id)arg3 ;
-(char)_insertTextForEvent:(id)arg1 ;
-(id)initWithName:(id)arg1 controllerClass:(Class)arg2 delegateClass:(Class)arg3 ;
-(char)_isMenuKeyEquivalent:(id)arg1 modifierMask:(unsigned long long)arg2 ;
-(void)_sendKeyToView:(unsigned short)arg1 ;
-(void)_setEvents:(id)arg1 forController:(id)arg2 ;
-(id)_menuActions:(id)arg1 ;
-(id)_currentPresentingController;
-(void)_setIMKCandidates:(id)arg1 ;
-(id)_IMKCandidates;
-(void)clientProxy:(id)arg1 ;
-(void)setEventHandlingStatus:(int)arg1 ;
-(void)dealloc;
-(char)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(double)replyTimeout;
-(id)bundle;
-(void)doCommandBySelector:(SEL)arg1 ;
-(void)insertText:(id)arg1 ;
-(id)_currentClient;
-(void)_invalidateConnectionsAsNecessary:(id)arg1 ;
-(id)keyBindingManager;
-(void)_handleText:(id)arg1 ;
-(void)_handleCommand:(SEL)arg1 ;
-(CFStringRef)privateRunLoopMode;
-(id)_keyBindings;
-(id)initWithName:(id)arg1 bundleIdentifier:(id)arg2 ;
-(id)_preferences;
-(char)_createConnection;
-(id)_currentController;
-(void)_setCurrentController:(id)arg1 ;
-(oneway void)commitComposition;
-(void)_hideWindow;
-(oneway void)doCommandBySelector:(SEL)arg1 commandDictionary:(id)arg2 ;
-(char)didCommandBySelector:(SEL)arg1 client:(id)arg2 ;
-(char)lastKeyEventWasDeadKey;
-(void)activateServer:(id)arg1 ;
-(void)deactivateServer:(id)arg1 ;
-(id)modes:(id)arg1 ;
-(unsigned long long)recognizedEvents:(id)arg1 ;
-(id)valueForTag:(unsigned long long)arg1 client:(id)arg2 ;
-(void)setValue:(id)arg1 forTag:(unsigned long long)arg2 client:(id)arg3 ;
-(void)commitComposition:(id)arg1 ;
-(id)keyboardService;
-(void)sendInputSessionSessAction:(unsigned)arg1 client:(id)arg2 ;
-(void)sendInputSessionSessAction:(unsigned)arg1 timestamp:(double)arg2 withInfo:(id)arg3 client:(id)arg4 ;
-(void)ironwoodTextWasCorrected:(id)arg1 client:(id)arg2 ;
-(oneway void)hidePalettes;
-(char)paletteWillTerminate;
@end

