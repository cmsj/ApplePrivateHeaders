/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:36 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <EventKit/EKObject.h>
#import <libobjc.A.dylib/MutableOccurrenceModelProtocol.h>

@class NSString, NSURL, NSNumber, NSTimeZone, NSDate, NSData, EKRecurrenceIdentifier, EKCalendar, NSArray, NSDictionary, NSManagedObjectID;

@interface EKCalendarItem : EKObject <MutableOccurrenceModelProtocol> {

	char cachedHasAttachment;
	char cachedHasAttendee;
	char cachedHasAlarm;
	char cachedIsCalendarOwnerInvitedAttendee;
	char cachedIsCurrentUserInvitedAttendee;
	NSNumber* calendarItemPermissionNumber;
	NSDate* creationDate;
	NSDate* recurrenceDateUnadjustedFromUTC;
	NSString* _localUID;
	NSString* _sharedUID;
	NSString* _itemID;
	EKRecurrenceIdentifier* _recurrenceIdentifier;

}

@property (nonatomic,readonly) NSString * sharedItemCreatedByDisplayName; 
@property (nonatomic,readonly) NSURL * sharedItemCreatedByAddress; 
@property (nonatomic,readonly) NSString * sharedItemCreatedByFirstName; 
@property (nonatomic,readonly) NSString * sharedItemCreatedByLastName; 
@property (nonatomic,readonly) NSDate * sharedItemCreatedDate; 
@property (nonatomic,readonly) NSTimeZone * sharedItemCreatedTimeZone; 
@property (nonatomic,readonly) NSString * sharedItemModifiedByDisplayName; 
@property (nonatomic,readonly) NSURL * sharedItemModifiedByAddress; 
@property (nonatomic,readonly) NSString * sharedItemModifiedByFirstName; 
@property (nonatomic,readonly) NSString * sharedItemModifiedByLastName; 
@property (nonatomic,readonly) NSDate * sharedItemModifiedDate; 
@property (nonatomic,readonly) NSTimeZone * sharedItemModifiedTimeZone; 
@property (nonatomic,retain) NSTimeZone * startTimeZone; 
@property (nonatomic,readonly) char isFloating; 
@property (nonatomic,readonly) long long selfParticipantStatus; 
@property (nonatomic,readonly) char allowsRecurrenceModifications; 
@property (nonatomic,readonly) char isSelfOrganizedInvitation; 
@property (nonatomic,readonly) char isExternallyOrganizedInvitation; 
@property (nonatomic,readonly) char _hadAttendees; 
@property (nonatomic,readonly) NSString * uniqueID; 
@property (nonatomic,readonly) NSString * externalID; 
@property (nonatomic,readonly) unsigned long long actionsState; 
@property (nonatomic,readonly) char requiresDetach; 
@property (nonatomic,copy) NSData * structuredData; 
@property (nonatomic,copy) NSData * localStructuredData; 
@property (nonatomic,retain) NSString * localUID;                                              //@synthesize localUID=_localUID - In the implementation block
@property (nonatomic,retain) NSString * sharedUID;                                             //@synthesize sharedUID=_sharedUID - In the implementation block
@property (nonatomic,retain) NSString * itemID;                                                //@synthesize itemID=_itemID - In the implementation block
@property (nonatomic,retain) EKRecurrenceIdentifier * recurrenceIdentifier;                    //@synthesize recurrenceIdentifier=_recurrenceIdentifier - In the implementation block
@property (nonatomic,readonly) NSString * UUID; 
@property (nonatomic,retain) EKCalendar * calendar; 
@property (nonatomic,readonly) NSString * calendarItemIdentifier; 
@property (nonatomic,readonly) NSString * calendarItemExternalIdentifier; 
@property (nonatomic,copy) NSString * title; 
@property (nonatomic,copy) NSString * location; 
@property (nonatomic,copy) NSString * notes; 
@property (nonatomic,copy) NSURL * URL; 
@property (nonatomic,readonly) NSDate * lastModifiedDate; 
@property (nonatomic,readonly) NSDate * creationDate; 
@property (nonatomic,copy) NSTimeZone * timeZone; 
@property (nonatomic,readonly) char hasAlarms; 
@property (nonatomic,readonly) char hasRecurrenceRules; 
@property (nonatomic,readonly) char hasAttendees; 
@property (nonatomic,readonly) char hasNotes; 
@property (nonatomic,readonly) NSArray * attendees; 
@property (nonatomic,copy) NSArray * alarms; 
@property (nonatomic,copy) NSArray * recurrenceRules; 
@property (nonatomic,retain) id<CalendarModelProtocol> container; 
@property (nonatomic,copy) id<EKProtocolStructuredLocation> ekStructuredLocation; 
@property (nonatomic,copy) NSString * recurrenceRuleString; 
@property (nonatomic,copy) NSString * scheduleAgentString; 
@property (nonatomic,copy) NSNumber * priorityNumber; 
@property (nonatomic,copy) NSTimeZone * timeZoneObject; 
@property (nonatomic,copy) NSDate * startDateUnadjustedFromUTC; 
@property (nonatomic,retain) NSDate * recurrenceDateUnadjustedFromUTC; 
@property (nonatomic,copy) NSString * recurrenceSetID; 
@property (nonatomic,copy) NSString * contactIdentifiersString; 
@property (nonatomic,copy) NSString * relatedExternalID; 
@property (nonatomic,readonly) NSNumber * calendarItemPermissionNumber; 
@property (nonatomic,readonly) char cachedHasAttendee; 
@property (nonatomic,readonly) char cachedHasAttachment; 
@property (nonatomic,readonly) char cachedHasAlarm; 
@property (nonatomic,readonly) char cachedIsCalendarOwnerInvitedAttendee; 
@property (nonatomic,readonly) char cachedIsCurrentUserInvitedAttendee; 
@property (nonatomic,copy,readonly) id<EKProtocolParticipant> participantForMe; 
@property (nonatomic,copy,readonly) NSString * organizerName; 
@property (nonatomic,copy,readonly) NSURL * organizerURL; 
@property (nonatomic,copy,readonly) NSString * organizerEmail; 
@property (nonatomic,copy,readonly) NSString * organizerPhoneNumber; 
@property (nonatomic,copy,readonly) NSString * organizerEncodedLikenessData; 
@property (nonatomic,readonly) char organizedByMe; 
@property (nonatomic,readonly) char defaultAlarmWasDeleted; 
@property (nonatomic,readonly) char canBeConvertedToFullObject; 
@property (nonatomic,readonly) char isPartialObject; 
@property (nonatomic,readonly) NSDictionary * preFrozenRelationshipObjects; 
@property (nonatomic,readonly) NSManagedObjectID * managedObjectID; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)itemWithOccurrence:(id)arg1 createPartialBackingObject:(char)arg2 eventStore:(id)arg3 preFrozenRelationshipObjects:(id)arg4 ;
+(id)itemWithOccurrence:(id)arg1 createPartialBackingObject:(char)arg2 eventStore:(id)arg3 preFrozenRelationshipObjects:(id)arg4 additionalFrozenProperties:(id)arg5 ;
+(Class)_classForOccurrence:(id)arg1 ;
+(id)itemWithOccurrence:(id)arg1 createPartialBackingObject:(char)arg2 eventStore:(id)arg3 ;
+(long long)_scheduleAgentFromScheduleAgentString:(id)arg1 ;
+(Class)frozenClass;
+(id)_scheduleAgentStringFromScheduleAgent:(long long)arg1 ;
+(id)knownImmutableKeys;
+(char)isValidDateComponents:(id)arg1 ;
+(char)canonicalizedEqualityTestValue1:(id)arg1 value2:(id)arg2 key:(id)arg3 object1:(id)arg4 object2:(id)arg5 ;
+(id)adjustDateFromUTC:(id)arg1 allDay:(char)arg2 timeZone:(id)arg3 ;
+(id)adjustDateIntoUTC:(id)arg1 allDay:(char)arg2 timeZone:(id)arg3 ;
+(id)itemWithIdentifier:(id)arg1 inStore:(id)arg2 ;
+(id)itemWithOccurrence:(id)arg1 eventStore:(id)arg2 ;
+(id)itemWithOccurrence:(id)arg1 eventStore:(id)arg2 preFrozenRelationshipObjects:(id)arg3 ;
+(unsigned long long)hashForObject:(id)arg1 ;
+(id)uniqueIdentifierForObject:(id)arg1 ;
+(id)knownRequireRSVPKeys;
+(id)knownPerUserPropertyKeys;
+(id)knownIdentityKeys;
+(id)singleValueDiffKeys;
+(id)multiValueDiffKeys;
+(id)knownRelationshipSingleValueKeys;
+(id)knownRelationshipMultiValueKeys;
+(id)knownDerivedRelationshipKeys;
+(id)knownSingleValueKeys;
+(id)keysToCheckForChangedKeysMethod;
+(char)isAllDayDateComponents:(id)arg1 ;
+(id)calculateDateComponentsFromDate:(id)arg1 usingTimeZone:(id)arg2 isAllDay:(char)arg3 ;
+(id)calculateDateFromDateComponents:(id)arg1 usingTimeZone:(id)arg2 ;
+(id)exportToICS:(id)arg1 ;
+(id)existingItemFromTruthFile:(id)arg1 inStore:(id)arg2 ;
-(id<CalendarModelProtocol>)container;
-(void)setTimeZone:(NSTimeZone *)arg1 ;
-(EKCalendar *)calendar;
-(void)setCalendar:(EKCalendar *)arg1 ;
-(NSTimeZone *)timeZone;
-(NSURL *)URL;
-(id)action;
-(int)sequenceNumber;
-(NSString *)itemID;
-(NSString *)UUID;
-(void)setURL:(NSURL *)arg1 ;
-(char)isDeletable;
-(void)setAction:(id)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(NSString *)location;
-(NSString *)uniqueID;
-(id)sequence;
-(char)_reset;
-(id)attachments;
-(void)setAttachments:(id)arg1 ;
-(id)startDate;
-(NSString *)title;
-(void)setSequence:(id)arg1 ;
-(NSDate *)creationDate;
-(void)setPriority:(unsigned long long)arg1 ;
-(char)isEditable;
-(unsigned long long)priority;
-(void)setContainer:(id<CalendarModelProtocol>)arg1 ;
-(char)isFloating;
-(void)setLocation:(NSString *)arg1 ;
-(void)refetch;
-(void)setStartDate:(id)arg1 ;
-(void)setItemID:(NSString *)arg1 ;
-(id)uniqueId;
-(char)isScheduled;
-(id)contactIdentifiers;
-(void)setContactIdentifiers:(id)arg1 ;
-(char)validate:(id*)arg1 ;
-(void)setAllDay:(char)arg1 ;
-(char)allDay;
-(void)setNotes:(NSString *)arg1 ;
-(NSString *)notes;
-(char)isAllDay;
-(id)customObjectForKey:(id)arg1 ;
-(id)structuredLocation;
-(NSDate *)lastModifiedDate;
-(id)recurrenceRule;
-(NSArray *)alarms;
-(NSArray *)attendees;
-(void)setAttendees:(NSArray *)arg1 ;
-(NSString *)sharedUID;
-(void)addAlarm:(id)arg1 ;
-(void)setSharedUID:(NSString *)arg1 ;
-(void)setAlarms:(NSArray *)arg1 ;
-(void)removeAlarm:(id)arg1 ;
-(id)externalURI;
-(void)willSave;
-(id)duplicate;
-(NSString *)externalID;
-(void)setOrganizerEmail:(NSString *)arg1 ;
-(long long)selfParticipantStatus;
-(void)setLastModifiedDate:(NSDate *)arg1 ;
-(unsigned long long)entityType;
-(NSString *)organizerEmail;
-(id)organizer;
-(void)setOrganizer:(id)arg1 ;
-(NSTimeZone *)startTimeZone;
-(char)hasAttendees;
-(id)localCustomObjectForKey:(id)arg1 ;
-(void)setCustomObject:(id)arg1 forKey:(id)arg2 ;
-(void)setLocalCustomObject:(id)arg1 forKey:(id)arg2 ;
-(void)setStructuredLocation:(id)arg1 ;
-(char)allowsParticipantStatusModifications;
-(id<EKProtocolParticipant>)participantForMe;
-(NSString *)localUID;
-(id)rawTitle;
-(NSNumber *)priorityNumber;
-(id)alarmSet;
-(id)attendeeSet;
-(id)attachmentSet;
-(char)isReminder;
-(char)isEvent;
-(id)_nsCalendar;
-(NSDate *)recurrenceDateUnadjustedFromUTC;
-(NSNumber *)calendarItemPermissionNumber;
-(id<EKProtocolStructuredLocation>)ekStructuredLocation;
-(NSString *)recurrenceRuleString;
-(char)cachedHasAttendee;
-(char)cachedHasAttachment;
-(char)cachedHasAlarm;
-(char)cachedIsCalendarOwnerInvitedAttendee;
-(char)cachedIsCurrentUserInvitedAttendee;
-(NSString *)organizerName;
-(NSURL *)organizerURL;
-(NSString *)organizerPhoneNumber;
-(NSString *)organizerEncodedLikenessData;
-(char)organizedByMe;
-(NSString *)scheduleAgentString;
-(NSTimeZone *)timeZoneObject;
-(NSDate *)startDateUnadjustedFromUTC;
-(char)defaultAlarmWasDeleted;
-(NSString *)recurrenceSetID;
-(NSString *)contactIdentifiersString;
-(NSString *)relatedExternalID;
-(NSData *)structuredData;
-(NSData *)localStructuredData;
-(id)initWithObject:(id)arg1 createPartialBackingObject:(char)arg2 keepBackingObject:(char)arg3 preFrozenRelationshipObjects:(id)arg4 additionalFrozenProperties:(id)arg5 ;
-(void)setLocalUID:(NSString *)arg1 ;
-(id)occurrenceIdentifier;
-(char)allowsResponseCommentModifications;
-(id)selfAttendee;
-(char)currentUserMayActAsOrganizer;
-(char)isCalendarOwnerInvitedAttendee;
-(char)_currentUserMayActAsOrganizerForCalendar:(id)arg1 ;
-(char)isOrganizedByCurrentUser;
-(id)_cachedMeltedParticipantForMeInAttendeeSet;
-(id)_cachedMeltedParticipantForMe;
-(void)_setCachedMeltedParticipantForMe:(id)arg1 ;
-(id)backingOccurrence;
-(void)_wrapWithDefaultAlarmsUpdate:(/*^block*/id)arg1 ;
-(void)setScheduleAgentString:(NSString *)arg1 ;
-(void)setAttendeeSet:(id)arg1 ;
-(void)_removeDefaultAlarms;
-(void)setDefaultAlarmWasDeleted:(char)arg1 ;
-(id)singleChangedValueForKey:(id)arg1 ;
-(id)defaultAlarms;
-(void)_addDefaultAlarms;
-(char)_validateDeletable:(id*)arg1 ;
-(long long)calendarItemPermission;
-(char)allowsAttendeesModifications;
-(void)_setCachedMeltedParticipantForMeInAttendeeSet:(id)arg1 ;
-(void)setEkStructuredLocation:(id<EKProtocolStructuredLocation>)arg1 ;
-(void)setContactIdentifiersString:(NSString *)arg1 ;
-(char)hasAlarms;
-(char)organizerIsRepresentedByAttendee:(id)arg1 ;
-(char)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id*)arg3 ;
-(char)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 allowedRequirements:(long long)arg3 error:(id*)arg4 ;
-(char)canMoveOrCopyToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id*)arg3 ;
-(void)setPriorityNumber:(NSNumber *)arg1 ;
-(NSString *)calendarItemIdentifier;
-(id)commitedItem;
-(id)allAlarms;
-(void)setAlarmSet:(id)arg1 ;
-(void)setAttachmentSet:(id)arg1 ;
-(void)removeAttachment:(id)arg1 ;
-(void)setOrganizedByMe:(char)arg1 ;
-(void)setOrganizerName:(NSString *)arg1 ;
-(void)setOrganizerURL:(NSURL *)arg1 ;
-(void)setOrganizerEncodedLikenessData:(NSString *)arg1 ;
-(void)setOrganizerPhoneNumber:(NSString *)arg1 ;
-(id)datePreservingDateComponentsForDate:(id)arg1 inCurrentTimeZone:(id)arg2 movingToTimeZone:(id)arg3 ;
-(NSArray *)recurrenceRules;
-(void)setRecurrenceRules:(NSArray *)arg1 ;
-(void)setTimeZoneObject:(NSTimeZone *)arg1 ;
-(id)adjustDateFromUTC:(id)arg1 ;
-(id)adjustDateIntoUTC:(id)arg1 ;
-(void)setStartDateUnadjustedFromUTC:(NSDate *)arg1 ;
-(void)clearCachedTimeValues;
-(id)_duplicateWithChangedKeys:(id)arg1 ;
-(void)setRecurrenceSetID:(NSString *)arg1 ;
-(void)changeIdentifiersFromOriginal:(id)arg1 ;
-(id)_chosenLocalUIDForDuplicate;
-(void)_updateRecurrenceIdentifier;
-(void)setRecurrenceIdentifier:(EKRecurrenceIdentifier *)arg1 ;
-(char)_suggestedStartDateHelperRecurrenceRuleRequiresExpansion:(id)arg1 forDate:(id)arg2 ;
-(void)_resetMeltedCache;
-(id)ruleStringForRecurrenceRule:(id)arg1 ;
-(void)setRecurrenceRuleString:(NSString *)arg1 ;
-(id)singleRecurrenceRule;
-(void)_changeRecurrenceDate:(id)arg1 ;
-(unsigned long long)_ekToICalendarExportOptions:(long long)arg1 ;
-(char)_validateAccessConsent:(id*)arg1 ;
-(char)_validateHasCalendar:(id*)arg1 ;
-(char)_validateEntityTypeIsSupported:(id*)arg1 ;
-(char)_validateMoveToCalendar:(id*)arg1 ;
-(char)_validateEditable:(id*)arg1 ;
-(char)_validateAttendees:(id*)arg1 ;
-(char)_validateAttachments:(id*)arg1 ;
-(char)_validatePriority:(id*)arg1 ;
-(char)_validateAlarms:(id*)arg1 ;
-(char)_validateRecurrence:(id*)arg1 ;
-(id)_updatedBackingItem;
-(void)_handleDuplicateAttachments;
-(char)_validateSchedulingAllowed:(id*)arg1 ;
-(char)_validateDefaultOrganizerExists:(id*)arg1 ;
-(char)_needsAttendeePartStatReset;
-(char)allowsLikenessDataModifications;
-(id)attendeeRepresentingOrganizer;
-(void)addAttendee:(id)arg1 ;
-(char)_safeToUnschedule;
-(void)removeAttendee:(id)arg1 ;
-(char)isOrganizedBySomeoneElse;
-(char)_hasCalendarChange;
-(id)_previousCalendar;
-(char)_isInSharedToMeCalendarWithNoSharingScheduling;
-(char)_validateDeletableInCalendarWithError:(id*)arg1 ;
-(char)_validateDeletableBySharedCalendarShareeWithError:(id*)arg1 ;
-(void)setRecurrenceDateUnadjustedFromUTC:(NSDate *)arg1 ;
-(void)setRelatedExternalID:(NSString *)arg1 ;
-(void)setStructuredData:(NSData *)arg1 ;
-(void)setLocalStructuredData:(NSData *)arg1 ;
-(id)specificIdentifier;
-(id)attendeeForCurrentUser;
-(id)attendeeForMe;
-(void)setSelfAttendee:(id)arg1 ;
-(long long)currentUserGeneralizedParticipantRole;
-(char)isCurrentUserInvitedAttendee;
-(char)isSelfOrganized;
-(char)isOrganizedBySharedCalendarOwner;
-(id)participantMatchingContact:(id)arg1 ;
-(long long)scheduleAgent;
-(void)setParticipantForMe:(id<EKProtocolParticipant>)arg1 ;
-(void)setScheduleAgent:(long long)arg1 ;
-(void)markDefaultAlarmsDeleted;
-(char)allowsAttachmentModifications;
-(id)structuredLocationWithoutPrediction;
-(void)setStructuredLocationWithoutPrediction:(id)arg1 ;
-(id)preferredLocation;
-(char)_hasAbsoluteAlarms;
-(char)isValidAttendee:(id)arg1 forCalendar:(id)arg2 ;
-(char)canMoveToCalendar:(id)arg1 error:(id*)arg2 ;
-(char)canMoveOrCopyToCalendar:(id)arg1 error:(id*)arg2 ;
-(void)_applyKnownImmutableValuesFrom:(id)arg1 ;
-(NSString *)calendarItemExternalIdentifier;
-(id)backingOccurrenceIdentifier;
-(char)isDifferentFromCommitted;
-(id)commitedItemIgnoringPotentialSlice:(char)arg1 ;
-(void)updateWithAppLink:(id)arg1 usedSelectedText:(char*)arg2 ;
-(id)nonNoneAlarms;
-(char)hasAttachment;
-(void)addAttachment:(id)arg1 ;
-(void)removeAllAttachments;
-(char)hasNotes;
-(id)_keysToChangeForDuplicateWithOptions:(long long)arg1 ;
-(EKRecurrenceIdentifier *)recurrenceIdentifier;
-(char)futureOccurrencesCannotBeAffectedByChangingStartDateToDate:(id)arg1 ;
-(id)suggestedStartDateForCurrentRecurrenceRule;
-(void)addRecurrenceRule:(id)arg1 ;
-(void)removeRecurrenceRule:(id)arg1 ;
-(char)hasRecurrenceRules;
-(char)hasEquivalentRecurrenceRuleToItem:(id)arg1 ;
-(char)hasComplexRecurrence;
-(void)setSingleRecurrenceRule:(id)arg1 ;
-(id)adjustRangeIntoUTC:(id)arg1 ;
-(void)_updateRecurrenceRuleTiedToStartDayUnadjustedFromUTC:(id)arg1 toNewStartDayUnadjustedFromUTC:(id)arg2 ;
-(void)_updateIdentifiersFromItem:(id)arg1 ;
-(void)_updateDatesForRecurrenceDate:(id)arg1 ;
-(void)_clearRecurrenceDate;
-(id)exportToICSWithOptions:(long long)arg1 ;
-(id)_pathToTruthFile;
-(id)roomAttendees;
-(id)roomAttendeeForLocationString:(id)arg1 ;
-(id)recurrenceSet;
-(char)_refreshable;
-(char)revert;
-(void)_removeAllAlarms;
-(id)_previousStartDateUnadjustedFromUTC;
-(void)setStartTimeZone:(NSTimeZone *)arg1 ;
-(id)startDateForRecurrence;
-(char)allowsSpansOtherThanThisEvent;
-(char)_isExternallyOrganizedInvitationWithAttendees:(char)arg1 ;
-(id)sortedAlarms;
-(NSString *)sharedItemCreatedByDisplayName;
-(NSString *)sharedItemCreatedByFirstName;
-(NSString *)sharedItemCreatedByLastName;
-(NSString *)sharedItemModifiedByDisplayName;
-(NSString *)sharedItemModifiedByFirstName;
-(NSString *)sharedItemModifiedByLastName;
-(NSURL *)sharedItemCreatedByAddress;
-(NSURL *)sharedItemModifiedByAddress;
-(NSTimeZone *)sharedItemCreatedTimeZone;
-(NSTimeZone *)sharedItemModifiedTimeZone;
-(unsigned long long)actionsState;
-(id)exportToICS;
-(NSDate *)sharedItemCreatedDate;
-(NSDate *)sharedItemModifiedDate;
-(char)isSelfOrganizedInvitation;
-(char)allowsRecurrenceModifications;
-(char)isExternallyOrganizedInvitation;
-(char)_hadAttendees;
-(char)requiresDetach;
-(long long)indexForAlarm:(id)arg1 ;
-(id)_structuredDataDictionaryFromData:(id)arg1 ;
-(id)_dataFromStructuredDataDictionary:(id)arg1 ;
-(id)_customObjectForKey:(id)arg1 local:(char)arg2 ;
-(void)_setCustomObject:(id)arg1 forKey:(id)arg2 local:(char)arg3 ;
@end

