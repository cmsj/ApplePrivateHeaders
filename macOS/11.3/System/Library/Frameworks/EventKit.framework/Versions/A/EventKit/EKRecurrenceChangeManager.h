/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:36 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class EKBackingStore;

@interface EKRecurrenceChangeManager : NSObject {

	EKBackingStore* _backingStore;

}

@property (nonatomic,__weak,readonly) EKBackingStore * backingStore;              //@synthesize backingStore=_backingStore - In the implementation block
-(EKBackingStore *)backingStore;
-(id)initWithBackingStore:(id)arg1 ;
-(id)doChangeAllOnSeries:(id)arg1 forEvent:(id)arg2 error:(id*)arg3 ;
-(id)doThisAndFutureChangeOnSeries:(id)arg1 forEvent:(id)arg2 error:(id*)arg3 ;
-(char)doThisAndFutureDeleteOnEvent:(id)arg1 withMaster:(id)arg2 error:(id*)arg3 ;
-(void)undoThisAndFutureDeleteOnEvent:(id)arg1 originalMaster:(id)arg2 ;
-(void)adjustDetachedEvents:(id)arg1 andExceptions:(id)arg2 onSeries:(id)arg3 sliceOffset:(id)arg4 ;
-(void)readdDetachedEvents:(id)arg1 andExceptions:(id)arg2 toSeries:(id)arg3 afterDate:(id)arg4 ;
-(void)copyDetachedEventsAndExceptionsFromSeries:(id)arg1 toSeries:(id)arg2 ;
-(void)moveDetachedEventsAndExceptionsFromSeries:(id)arg1 toSeries:(id)arg2 ;
-(void)_handleTimeShiftOnSeries:(id)arg1 forEvent:(id)arg2 ;
-(void)_updateRecurrenceRulesForStartDayChangesOnEvent:(id)arg1 ;
-(void)_updateDetachedEventsAndExceptionsForSeries:(id)arg1 ;
-(id)_seriesOffsetForEvent:(id)arg1 ;
-(void)_applyAppropriateTimeShiftToSeries:(id)arg1 offset:(id)arg2 duration:(id)arg3 ;
-(id)_createNewMasterFromOldMaster:(id)arg1 ;
-(void)_adjustMaster:(id)arg1 matchDetailsFromSliceEvent:(id)arg2 ;
-(void)_adjustSliceEvent:(id)arg1 asFirstOccurrenceOfMaster:(id)arg2 ;
-(void)_adjustNewMaster:(id)arg1 withSliceDate:(id)arg2 ;
-(void)_modifyRecurrenceRulesOnEarlierMaster:(id)arg1 laterMaster:(id)arg2 sliceDate:(id)arg3 isDelete:(char)arg4 ;
-(void)moveDetachedEventsAndExceptionsFromSeries:(id)arg1 toSeries:(id)arg2 sliceDate:(id)arg3 ;
-(id)_computeAppropriateRecurrenceEndDateForEvent:(id)arg1 sliceDate:(id)arg2 ;
-(void)_moveExceptionsFromSeries:(id)arg1 toSeries:(id)arg2 sliceDate:(id)arg3 copy:(char)arg4 ;
-(void)_moveDetachedEventsFromSeries:(id)arg1 toSeries:(id)arg2 sliceDate:(id)arg3 copy:(char)arg4 ;
-(void)_moveExceptions:(id)arg1 fromSeries:(id)arg2 toSeries:(id)arg3 sliceDate:(id)arg4 copy:(char)arg5 ;
-(void)_moveDetachedEvents:(id)arg1 fromSeries:(id)arg2 toSeries:(id)arg3 sliceDate:(id)arg4 copy:(char)arg5 ;
-(char)_shouldShiftExceptionDate:(id)arg1 fromMaster:(id)arg2 toMaster:(id)arg3 sliceDate:(id)arg4 ;
-(id)_validExceptionDateInNewSeries:(id)arg1 originalDate:(id)arg2 ;
-(char)_shouldMoveExceptionDate:(id)arg1 fromMaster:(id)arg2 toMaster:(id)arg3 sliceDate:(id)arg4 ;
-(char)_updateDatesFromDetachedEvent:(id)arg1 toEvent:(id)arg2 calendar:(id)arg3 offset:(id)arg4 duration:(id)arg5 ;
@end

