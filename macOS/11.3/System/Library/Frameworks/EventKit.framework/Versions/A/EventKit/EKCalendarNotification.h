/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:36 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <EventKit/EKObject.h>
#import <libobjc.A.dylib/EKProtocolMutableCalendarNotification.h>
#import <libobjc.A.dylib/EKIdentityProtocol.h>
#import <libobjc.A.dylib/EKJunkInvitationProtocol_Private.h>

@class NSNumber, NSString, NSDate, NSDictionary, NSManagedObjectID, EKEventStore;

@interface EKCalendarNotification : EKObject <EKProtocolMutableCalendarNotification, EKIdentityProtocol, EKJunkInvitationProtocol_Private> {

	char dateChanged;
	char timeChanged;
	char locationChanged;
	char titleChanged;
	char attachmentsChanged;
	NSNumber* notificationType;
	NSString* uuid;
	NSString* title;
	NSNumber* createdCount;
	NSNumber* updatedCount;
	NSNumber* deletedCount;
	NSString* name;
	NSString* emailAddress;
	NSString* firstName;
	NSString* lastName;
	NSString* attendeeComment;
	NSString* phoneNumber;
	NSString* calendarName;
	NSString* principalName;
	NSString* componentType;
	NSString* filename;
	NSNumber* senders;
	NSDate* proposedStartDateUnadjustedFromUTC;
	NSDate* proposedEndDateUnadjustedFromUTC;

}

@property (readonly) long long type; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) NSString * firstName; 
@property (nonatomic,readonly) NSString * lastName; 
@property (nonatomic,readonly) NSString * emailAddress; 
@property (nonatomic,readonly) NSString * phoneNumber; 
@property (nonatomic,readonly) NSString * recipientName; 
@property (nonatomic,readonly) unsigned long long numberOfSenders; 
@property (nonatomic,readonly) char dateChanged; 
@property (nonatomic,readonly) char timeChanged; 
@property (nonatomic,readonly) char locationChanged; 
@property (nonatomic,readonly) char titleChanged; 
@property (readonly) NSString * occurrenceIdentifier; 
@property (readonly) unsigned long long allowedEntityTypes; 
@property (assign) char dismissed; 
@property (assign,nonatomic) unsigned long long junkStatus; 
@property (nonatomic,retain) id<EventOccurrenceModelProtocol> occurrence; 
@property (readonly) NSString * uuid; 
@property (nonatomic,readonly) NSNumber * notificationType; 
@property (nonatomic,readonly) NSString * componentType; 
@property (nonatomic,readonly) NSNumber * senders; 
@property (readonly) NSString * attendeeComment; 
@property (readonly) NSString * filename; 
@property (readonly) NSNumber * createdCount; 
@property (readonly) NSNumber * updatedCount; 
@property (readonly) NSNumber * deletedCount; 
@property (nonatomic,readonly) NSDate * proposedStartDateUnadjustedFromUTC; 
@property (nonatomic,readonly) NSDate * proposedEndDateUnadjustedFromUTC; 
@property (nonatomic,readonly) char attachmentsChanged; 
@property (readonly) NSString * calendarName; 
@property (nonatomic,readonly) NSString * principalName; 
@property (nonatomic,readonly) id<CalendarSourceModelProtocol> containerSource; 
@property (nonatomic,readonly) char canBeConvertedToFullObject; 
@property (nonatomic,readonly) char isPartialObject; 
@property (nonatomic,readonly) NSDictionary * preFrozenRelationshipObjects; 
@property (nonatomic,readonly) NSManagedObjectID * managedObjectID; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) char isCurrentUserForScheduling; 
@property (nonatomic,readonly) char isCurrentUserForSharing; 
@property (nonatomic,readonly) NSString * sendersEmail; 
@property (nonatomic,readonly) NSString * sendersPhoneNumber; 
@property (nonatomic,readonly) char supportsJunkReporting; 
@property (nonatomic,readonly) EKEventStore * eventStore; 
+(Class)frozenClass;
+(id)knownImmutableKeys;
+(id)uniqueIdentifierForObject:(id)arg1 ;
+(id)knownIdentityKeys;
+(id)knownSingleValueKeys;
+(id)notificationWithCalendarNotification:(id)arg1 eventStore:(id)arg2 ;
+(id)knownSummaryKeys;
+(Class)_realClassForNotification:(id)arg1 ;
-(NSString *)name;
-(long long)compare:(id)arg1 ;
-(NSString *)uuid;
-(long long)type;
-(id)calendar;
-(id)source;
-(id)event;
-(id<EventOccurrenceModelProtocol>)occurrence;
-(NSString *)phoneNumber;
-(NSString *)title;
-(NSString *)filename;
-(NSString *)firstName;
-(NSString *)lastName;
-(NSString *)emailAddress;
-(NSNumber *)notificationType;
-(NSString *)componentType;
-(void)setOccurrence:(id<EventOccurrenceModelProtocol>)arg1 ;
-(char)isInvitation;
-(NSNumber *)senders;
-(unsigned long long)supportedActions;
-(NSString *)calendarName;
-(id)proposedEndDate;
-(unsigned long long)junkStatus;
-(char)isResourceChange;
-(id)initWithObject:(id)arg1 createPartialBackingObject:(char)arg2 keepBackingObject:(char)arg3 preFrozenRelationshipObjects:(id)arg4 additionalFrozenProperties:(id)arg5 ;
-(NSString *)occurrenceIdentifier;
-(id<CalendarSourceModelProtocol>)containerSource;
-(char)isSharedCalendarInvitation;
-(NSDate *)proposedStartDateUnadjustedFromUTC;
-(NSDate *)proposedEndDateUnadjustedFromUTC;
-(void)_forceUpdateTitle:(id)arg1 name:(id)arg2 emailAddress:(id)arg3 phoneNumber:(id)arg4 ;
-(char)couldBeJunk;
-(unsigned long long)numberOfSenders;
-(NSString *)attendeeComment;
-(char)supportsConflictScanning;
-(NSString *)sendersEmail;
-(NSString *)sendersPhoneNumber;
-(char)supportsJunkReporting;
-(unsigned long long)allowedEntityTypes;
-(char)isForEvent;
-(char)isSupportedForEntityType:(unsigned long long)arg1 ;
-(char)shouldDisplayInNobo;
-(id)notificationTypeString;
-(char)isSuggestion;
-(id)closestOccurrence;
-(char)isForEventInPast;
-(char)supportsAction:(unsigned long long)arg1 ;
-(char)isProposedNewTime;
-(char)dismissed;
-(void)setDismissed:(char)arg1 ;
-(void)setContainerSource:(id<CalendarSourceModelProtocol>)arg1 ;
-(NSNumber *)createdCount;
-(NSNumber *)updatedCount;
-(NSNumber *)deletedCount;
-(char)dateChanged;
-(char)titleChanged;
-(char)timeChanged;
-(char)locationChanged;
-(char)attachmentsChanged;
-(NSString *)principalName;
-(char)isSharedCalendarReply;
-(char)proposedEndDateIsInFuture;
-(void)setJunkStatus:(unsigned long long)arg1 ;
-(long long)_ekTypeForNotificationType:(id)arg1 ;
-(id)_closestOccurrenceInSeries;
-(id)closestStartDate;
-(id)lastOccurrence;
-(NSString *)recipientName;
-(char)supportsConflictDecisions;
@end

