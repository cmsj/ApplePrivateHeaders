/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:36 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <EventKit/EventKit-Structs.h>
#import <EventKit/EKObject.h>
#import <libobjc.A.dylib/MutableCalendarSourceModelProtocol.h>

@class NSString, NSSet, NSURL, NSDate, EKAvailabilityCache, EKSourceConstraints, REMObjectID, NSError, NSDictionary, NSManagedObjectID;

@interface EKSource : EKObject <MutableCalendarSourceModelProtocol> {

	char isDelegate;
	char isWritable;
	char isEnabledForEvents;
	char isEnabledForReminders;
	char supportsAttendeeComments;
	char supportsDropBoxAttachments;
	char supportsEmailValidation;
	char supportsEventCalendarCreation;
	char supportsFreebusy;
	char supportsJunkReporting;
	char supportsLikenessPropagation;
	char supportsManagedAttachments;
	char supportsPhoneNumbers;
	char supportsPrivateEvents;
	char supportsSharingScheduling;
	char supportsTaskCalendarCreation;
	char supportsUnbind;
	char requiresOpeningAttachmentAsLink;
	int displayOrder;
	NSString* externalSourceIdentifier;
	NSSet* ownerAddresses;
	NSString* providerIdentifier;
	NSString* sourceIdentifier;
	NSString* typeString;
	NSString* dropBoxPathString;
	NSURL* serverURL;
	NSSet* _calendars;
	NSString* _delegatedAccountOwnerStoreID;

}

@property (nonatomic,readonly) char isSyncing; 
@property (assign,nonatomic) unsigned long long lastSyncError; 
@property (nonatomic,retain) NSDate * lastSyncEndDate; 
@property (assign,nonatomic) long long preferredEventPrivateValue; 
@property (nonatomic,readonly) char hasOwnerEmailAddress; 
@property (nonatomic,copy) NSString * delegatedAccountOwnerStoreID;                               //@synthesize delegatedAccountOwnerStoreID=_delegatedAccountOwnerStoreID - In the implementation block
@property (nonatomic,readonly) char isDelegate; 
@property (nonatomic,copy) NSString * externalID; 
@property (nonatomic,readonly) NSSet * allCalendars; 
@property (nonatomic,readonly) EKAvailabilityCache * availabilityCache; 
@property (nonatomic,readonly) int displayOrderForNewCalendar; 
@property (assign,getter=isEnabled,nonatomic) char enabled; 
@property (nonatomic,readonly) char isFacebookSource; 
@property (nonatomic,readonly) char supportsCalendarCreation; 
@property (nonatomic,readonly) char supportsReminderActions; 
@property (nonatomic,readonly) EKSourceConstraints * constraints; 
@property (nonatomic,readonly) char isWritable; 
@property (nonatomic,readonly) REMObjectID * remAccountObjectID; 
@property (nonatomic,readonly) char syncs; 
@property (getter=isNestedLocalSource,nonatomic,readonly) char nestedLocalSource; 
@property (nonatomic,readonly) NSError * sourceError; 
@property (nonatomic,readonly) char supportsEventCalendarCreation; 
@property (nonatomic,readonly) char supportsTaskCalendarCreation; 
@property (nonatomic,readonly) char supportsEmailValidation; 
@property (nonatomic,readonly) char supportsFloatingTimeZone; 
@property (nonatomic,readonly) char supportsMultipleAlarms; 
@property (nonatomic,readonly) char supportsMultipleMonthsInYearlyRecurrence; 
@property (nonatomic,readonly) char supportsMultipleDaysInMonthlyRecurrence; 
@property (nonatomic,readonly) char supportsURLs; 
@property (nonatomic,readonly) char supportsSuggestingNewTime; 
@property (nonatomic,readonly) char prefersSuggestingNewTimeViaEmail; 
@property (nonatomic,readonly) char supportsAttendeeEventForwarding; 
@property (nonatomic,readonly) char preferUsingEventOrganizerEmailWhenComposingMail; 
@property (nonatomic,readonly) char supportsYearlyRecurrenceWithArbitraryInterval; 
@property (nonatomic,readonly) NSString * symbolicColorForNewCalendar; 
@property (nonatomic,readonly) char isEnabledForEvents; 
@property (nonatomic,readonly) char isEnabledForReminders; 
@property (nonatomic,readonly) NSString * sourceIdentifier; 
@property (nonatomic,readonly) long long sourceType; 
@property (nonatomic,readonly) NSString * title; 
@property (nonatomic,readonly) NSSet * calendars;                                                 //@synthesize calendars=_calendars - In the implementation block
@property (nonatomic,copy,readonly) NSString * externalSourceIdentifier; 
@property (nonatomic,retain,readonly) NSString * providerIdentifier; 
@property (nonatomic,retain,readonly) NSString * typeString; 
@property (nonatomic,readonly) NSSet * ownerAddresses; 
@property (nonatomic,readonly) char supportsDropBoxAttachments; 
@property (nonatomic,readonly) char supportsManagedAttachments; 
@property (nonatomic,readonly) char supportsUnbind; 
@property (nonatomic,readonly) char supportsAttendeeComments; 
@property (nonatomic,readonly) char supportsFreebusy; 
@property (nonatomic,readonly) char supportsJunkReporting; 
@property (nonatomic,readonly) char supportsLikenessPropagation; 
@property (nonatomic,readonly) char supportsPhoneNumbers; 
@property (nonatomic,readonly) char supportsPrivateEvents; 
@property (nonatomic,readonly) char supportsSharingScheduling; 
@property (nonatomic,readonly) char requiresOpeningAttachmentAsLink; 
@property (nonatomic,readonly) int displayOrder; 
@property (nonatomic,readonly) NSString * dropBoxPathString; 
@property (nonatomic,readonly) NSURL * serverURL; 
@property (nonatomic,readonly) char canBeConvertedToFullObject; 
@property (nonatomic,readonly) char isPartialObject; 
@property (nonatomic,readonly) NSDictionary * preFrozenRelationshipObjects; 
@property (nonatomic,readonly) NSManagedObjectID * managedObjectID; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)localSource;
+(Class)frozenClass;
+(id)knownImmutableKeys;
+(id)uniqueIdentifierForObject:(id)arg1 ;
+(id)knownIdentityKeys;
+(id)knownSingleValueKeys;
+(id)orderSortDescriptors;
+(id)sourceWithCalendarSource:(id)arg1 eventStore:(id)arg2 ;
+(char)isWeakRelationship;
+(long long)sourceTypeFromCalendarType:(long long)arg1 ;
+(id)sourceWithEventStore:(id)arg1 ;
+(long long)calendarTypeFromSourceType:(long long)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)description;
-(void)setEnabled:(char)arg1 ;
-(char)isEnabled;
-(void)setTitle:(NSString *)arg1 ;
-(NSString *)providerIdentifier;
-(char)_reset;
-(NSString *)title;
-(EKSourceConstraints *)constraints;
-(void)refetch;
-(char)validate:(id*)arg1 ;
-(NSString *)sourceIdentifier;
-(NSString *)typeString;
-(id)calendarsForEntityType:(unsigned long long)arg1 ;
-(NSSet *)calendars;
-(long long)sourceType;
-(NSURL *)serverURL;
-(char)isDelegate;
-(char)isEnabledForReminders;
-(char)isWritable;
-(NSString *)externalID;
-(void)setExternalID:(NSString *)arg1 ;
-(int)displayOrder;
-(char)supportsFreebusy;
-(char)isEnabledForEvents;
-(char)requiresOpeningAttachmentAsLink;
-(char)supportsLikenessPropagation;
-(char)supportsPrivateEvents;
-(char)supportsManagedAttachments;
-(id)initWithObject:(id)arg1 createPartialBackingObject:(char)arg2 keepBackingObject:(char)arg3 preFrozenRelationshipObjects:(id)arg4 additionalFrozenProperties:(id)arg5 ;
-(char)supportsSharingScheduling;
-(char)_validateDeletable:(id*)arg1 ;
-(NSSet *)ownerAddresses;
-(void)_applyKnownImmutableValuesFrom:(id)arg1 ;
-(char)_refreshable;
-(char)revert;
-(NSString *)symbolicColorForNewCalendar;
-(char)supportsReminderActions;
-(char)supportsJunkReporting;
-(char)supportsPhoneNumbers;
-(char)supportsEventCalendarCreation;
-(char)supportsTaskCalendarCreation;
-(NSSet *)allCalendars;
-(id)allFrozenOrNewCalendars;
-(NSString *)externalSourceIdentifier;
-(char)changeDefaultSchedulingCalendar;
-(id)readWriteCalendarsForEntityType:(unsigned long long)arg1 ;
-(id)frozenOrNewCalendarsForEntityType:(unsigned long long)arg1 ;
-(id)coreDataEntityName;
-(char)isNestedLocalSource;
-(char)supportsDropBoxAttachments;
-(id)initWithTypeString:(id)arg1 ;
-(char)supportsUnbind;
-(char)supportsSuggestingNewTime;
-(char)isSyncing;
-(unsigned long long)lastSyncError;
-(void)setLastSyncError:(unsigned long long)arg1 ;
-(NSDate *)lastSyncEndDate;
-(void)setLastSyncEndDate:(NSDate *)arg1 ;
-(void)setPreferredEventPrivateValue:(long long)arg1 ;
-(long long)preferredEventPrivateValue;
-(char)prefersSuggestingNewTimeViaEmail;
-(char)hasOwnerEmailAddress;
-(char)supportsAttendeeComments;
-(NSString *)dropBoxPathString;
-(REMObjectID *)remAccountObjectID;
-(char)supportsEmailValidation;
-(void)_performBlockWithManagedPrincipal:(/*^block*/id)arg1 ;
-(id)_updatedBackingSource;
-(id)_principalObjectIDString;
-(id)_ekOfficeHoursFromCalDAVOfficeHoursData:(id)arg1 ;
-(id)_createConstraintsFromManagedPrincipal;
-(id)_createLocalSourceConstraints;
-(id)_createBirthdaySourceConstraints;
-(id)_createSubscribedSourceConstraints;
-(EKAvailabilityCache *)availabilityCache;
-(int)displayOrderForNewCalendar;
-(char)supportsCalendarCreation;
-(char)supportsAbsoluteAlarms;
-(char)supportsCalendarItemsOverlappingInSameSeries;
-(char)supportsCalendarItemsStartingOnSameDayInSameSeries;
-(char)supportsDurationLongerThanRecurrenceInterval;
-(char)supportsFloatingTimeZone;
-(char)supportsMultipleAlarms;
-(char)supportsMultipleMonthsInYearlyRecurrence;
-(char)supportsMultipleDaysInMonthlyRecurrence;
-(char)supportsReorderingDetachedEvents;
-(char)supportsSeriesStartingOnDateOutsideRecurrence;
-(char)supportsURLs;
-(char)preferUsingEventOrganizerEmailWhenComposingMail;
-(char)supportsYearlyRecurrenceWithArbitraryInterval;
-(char)supportsAttendeeEventForwarding;
-(char)syncs;
-(char)isFacebookSource;
-(unsigned)_adjustedDisplayOrder;
-(id)dropBoxPathFromEvent:(id)arg1 ;
-(id)sharedCalendarInvitationsForEntityType:(unsigned long long)arg1 ;
-(NSError *)sourceError;
-(id)backingSource;
-(char)supportsInvitationModificationsWithoutNotification;
-(char)isPushAvailable;
-(void)fetchOfficeHours:(/*^block*/id)arg1 ;
-(void)setOfficeHours:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)_defaultSchedulingCalendar;
-(NSString *)delegatedAccountOwnerStoreID;
-(void)setDelegatedAccountOwnerStoreID:(NSString *)arg1 ;
@end

