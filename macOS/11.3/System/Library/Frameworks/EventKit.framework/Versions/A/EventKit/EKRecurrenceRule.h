/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:36 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/EventKit.framework/Versions/A/EventKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <EventKit/EventKit-Structs.h>
#import <EventKit/EKObject.h>
#import <libobjc.A.dylib/NSCopying.h>

@class EKRecurrenceEnd, EKFrozenRecurrenceRule, EKCalendarItem, NSString, NSDate, NSArray;

@interface EKRecurrenceRule : EKObject <NSCopying> {

	char _usesEndDate;
	char _dirtyStateMayAffectExceptionDates;
	EKRecurrenceEnd* _cachedEnd;
	EKFrozenRecurrenceRule* backingRule;
	EKCalendarItem* _item;
	NSString* _UUID;

}

@property (nonatomic,retain) EKRecurrenceEnd * cachedEnd;                           //@synthesize cachedEnd=_cachedEnd - In the implementation block
@property (nonatomic,readonly) EKFrozenRecurrenceRule * backingRule; 
@property (assign,nonatomic,__weak) EKCalendarItem * item;                          //@synthesize item=_item - In the implementation block
@property (readonly) char usesEndDate;                                              //@synthesize usesEndDate=_usesEndDate - In the implementation block
@property (nonatomic,readonly) NSString * UUID;                                     //@synthesize UUID=_UUID - In the implementation block
@property (nonatomic,readonly) NSDate * cachedEndDate; 
@property (nonatomic,readonly) char dirtyStateMayAffectExceptionDates;              //@synthesize dirtyStateMayAffectExceptionDates=_dirtyStateMayAffectExceptionDates - In the implementation block
@property (nonatomic,readonly) NSString * calendarIdentifier; 
@property (nonatomic,copy) EKRecurrenceEnd * recurrenceEnd; 
@property (nonatomic,readonly) long long frequency; 
@property (nonatomic,readonly) long long interval; 
@property (nonatomic,readonly) long long firstDayOfTheWeek; 
@property (nonatomic,readonly) NSArray * daysOfTheWeek; 
@property (nonatomic,readonly) NSArray * daysOfTheMonth; 
@property (nonatomic,readonly) NSArray * daysOfTheYear; 
@property (nonatomic,readonly) NSArray * weeksOfTheYear; 
@property (nonatomic,readonly) NSArray * monthsOfTheYear; 
@property (nonatomic,readonly) NSArray * setPositions; 
+(id)iCalendarValueFromRecurrenceType:(long long)arg1 ;
+(id)iCalendarValueFromDayOfTheWeek:(unsigned long long)arg1 ;
+(Class)frozenClass;
+(id)uniqueIdentifierForObject:(id)arg1 ;
+(id)knownIdentityKeys;
+(char)isDerivedRelationship;
+(id)iCalendarValueFromDate:(id)arg1 ;
+(id)_stringValueForRecurrenceRule:(id)arg1 ;
+(id)_acceptableStartDateRangeForDailyRecurrenceWithCurrentStartDate:(id)arg1 ;
+(id)_acceptableStartDateRangeForWeeklyRecurrenceWithCurrentStartDate:(id)arg1 ;
+(id)_acceptableStartDateRangeForMonthlyRecurrenceWithCurrentStartDate:(id)arg1 ;
+(id)_acceptableStartDateRangeForYearlyRecurrenceWithCurrentStartDate:(id)arg1 ;
+(id)iCalendarValueFromDate:(id)arg1 allDay:(char)arg2 floating:(char)arg3 ;
+(id)adjustDateIntoUTC:(id)arg1 forRecurrenceRule:(id)arg2 ;
+(long long)daysTypeForDayArray:(id)arg1 ;
+(id)_andDaysOfWeekString:(id)arg1 ;
+(id)_weekDayPositionAsString:(long long)arg1 ;
+(id)_orDaysOfWeekString:(id)arg1 ;
+(id)_dayOfMonthAsString:(long long)arg1 ;
+(id)_numberedWeekDayString:(id)arg1 ;
+(id)_daysOfWeek;
+(id)_customDayCombinationDescription:(id)arg1 ;
+(id)recurrenceRuleWithType:(long long)arg1 interval:(unsigned long long)arg2 end:(id)arg3 ;
+(id)ruleWithBackingRule:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)description;
-(id)init;
-(NSString *)calendarIdentifier;
-(NSString *)UUID;
-(void)reset;
-(void)setItem:(EKCalendarItem *)arg1 ;
-(EKCalendarItem *)item;
-(long long)interval;
-(void)setInterval:(long long)arg1 ;
-(id)endDate;
-(void)setEndDate:(id)arg1 ;
-(long long)frequency;
-(void)setFrequency:(long long)arg1 ;
-(id)backingObject;
-(NSArray *)monthsOfTheYear;
-(NSArray *)daysOfTheMonth;
-(NSArray *)daysOfTheWeek;
-(EKRecurrenceEnd *)recurrenceEnd;
-(char)usesEndDate;
-(long long)firstDayOfTheWeek;
-(void)setDaysOfTheMonth:(NSArray *)arg1 ;
-(void)setDaysOfTheWeek:(NSArray *)arg1 ;
-(NSArray *)daysOfTheYear;
-(void)setDaysOfTheYear:(NSArray *)arg1 ;
-(void)setMonthsOfTheYear:(NSArray *)arg1 ;
-(NSArray *)weeksOfTheYear;
-(void)setWeeksOfTheYear:(NSArray *)arg1 ;
-(id)initRecurrenceWithFrequency:(long long)arg1 interval:(long long)arg2 daysOfTheWeek:(id)arg3 daysOfTheMonth:(id)arg4 monthsOfTheYear:(id)arg5 weeksOfTheYear:(id)arg6 daysOfTheYear:(id)arg7 setPositions:(id)arg8 end:(id)arg9 ;
-(NSArray *)setPositions;
-(void)setSetPositions:(NSArray *)arg1 ;
-(char)shouldPinMonthDays;
-(void)setRecurrenceEnd:(EKRecurrenceEnd *)arg1 ;
-(char)hasDuplicateMonthsOfYear;
-(char)newStartDateIsInvalid:(id)arg1 currentStartDate:(id)arg2 ;
-(id)stringValueAsDate;
-(void)updateItem:(id)arg1 ;
-(id)humanReadableDescriptionWithStartDate:(id)arg1 ;
-(id)countNumber;
-(id)firstDayOfTheWeekNumber;
-(id)frequencyNumber;
-(id)intervalNumber;
-(char)ruleIsForAllDayItem;
-(char)ruleIsForFloatingItem;
-(char)isSimpleRule;
-(id)initRecurrenceWithFrequency:(long long)arg1 interval:(long long)arg2 end:(id)arg3 ;
-(id)initWithBackingRule:(id)arg1 ;
-(EKFrozenRecurrenceRule *)backingRule;
-(void)setFirstDayOfTheWeek:(long long)arg1 ;
-(id)_initializeArrayWithCapacity:(int)arg1 withValue:(id)arg2 ;
-(id)_acceptableStartDateRangeWithCurrentStartDate:(id)arg1 ;
-(char)newStartDateIsValid:(id)arg1 currentStartDate:(id)arg2 ;
-(EKRecurrenceEnd *)cachedEnd;
-(void)setCachedEnd:(EKRecurrenceEnd *)arg1 ;
-(NSDate *)cachedEndDate;
-(void)setCountNumber:(id)arg1 ;
-(char)isEqualToRecurrenceRule:(id)arg1 ;
-(char)dirtyStateMayAffectExceptionDates;
-(void)pinToEndsOfMonthsWithCalendarItem:(id)arg1 ;
-(char)isWeekdayRule;
-(char)isWeekendRule;
-(char)isAnyDayRule;
@end

