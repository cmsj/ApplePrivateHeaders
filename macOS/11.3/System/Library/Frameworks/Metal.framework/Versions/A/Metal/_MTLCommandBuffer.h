/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Metal.framework/Versions/A/Metal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Metal/Metal-Structs.h>
#import <Metal/_MTLObjectWithLabel.h>

@protocol MTLCommandEncoder, MTLCommandQueue, MTLCommandBuffer, MTLBuffer;
@class _MTLCommandQueue, NSError, NSDictionary, NSMutableDictionary, NSMutableArray, NSString;

@interface _MTLCommandBuffer : _MTLObjectWithLabel {

	id<MTLCommandEncoder> _currentCommandEncoder;
	_MTLCommandQueue*<MTLCommandQueue> _queue;
	MTLDispatch* _scheduledDispatchList;
	MTLDispatch* _scheduledDispatchListTail;
	MTLDispatch* _completedDispatchList;
	MTLDispatch* _completedDispatchListTail;
	MTLSyncDispatch* _syncDispatchList;
	MTLSyncDispatch* _syncDispatchListTail;
	opaque_pthread_mutex_t _mutex;
	opaque_pthread_cond_t _cond;
	unsigned long long _creationTime;
	unsigned long long _enqueueTime;
	unsigned long long _commitTime;
	unsigned long long _submitToKernelTime;
	unsigned long long _submitToHardwareTime;
	unsigned long long _completionInterruptTime;
	unsigned long long _completionHandlerEnqueueTime;
	unsigned long long _completionHandlerExecutionTime;
	unsigned long long _status;
	NSError* _error;
	BOOL _skipRender;
	BOOL _profilingEnabled;
	BOOL _scheduledCallbacksDone;
	BOOL _completedCallbacksDone;
	char _strongObjectReferences;
	NSDictionary* _profilingResults;
	char _retainedReferences;
	char _synchronousDebugMode;
	NSMutableDictionary* _userDictionary;
	unsigned long long _kernelStartTime;
	unsigned long long _kernelEndTime;
	unsigned long long _gpuStartTime;
	unsigned long long _gpuEndTime;
	unsigned long long _numEncoders;
	unsigned long long _numThisCommandBuffer;
	unsigned long long _listIndex;
	unsigned long long _numRequestedCounters;
	unsigned long long _numInternalSampleCounters;
	_MTLCommandBuffer*<MTLCommandBuffer> _statCommandBuffer;
	os_unfair_lock_s _sampleLock;
	char _ownedByParallelEncoder;
	char _wakeOnCommit;
	NSMutableArray* _retainedObjects;
	unsigned long long _globalTraceObjectID;
	unsigned long long _labelTraceID;
	char _StatEnabled;
	/*^block*/id _perfSampleHandlerBlock;
	unsigned long long _StatOptions;
	unsigned long long _StatLocations;
	unsigned long long _samplesPerStorageBlock;
	unsigned long long _totalNumStatSamples;
	NSMutableArray* _sampleStorage;
	MTLStatSampleRec* _samples;
	MTLStatSampleRec* _currentSample;
	unsigned long long _internalCounterSampleSize;
	BOOL _hasPresent;
	id<MTLBuffer> _progressBuffer;
	unsigned _progressOffset;
	BOOL _creatingProgressEncoder;
	BOOL _needsFrameworkAssistedErrorTracking;
	NSMutableArray* _encoderInfos;
	char _sharedIndirectionTable;
	NSMutableArray* _logs;
	unsigned long long _errorOptions;

}

@property (readonly) char retainedReferences;                                                                           //@synthesize retainedReferences=_retainedReferences - In the implementation block
@property (readonly) char synchronousDebugMode;                                                                         //@synthesize synchronousDebugMode=_synchronousDebugMode - In the implementation block
@property (readonly) id<MTLCommandQueue> commandQueue;                                                                  //@synthesize queue=_queue - In the implementation block
@property (readonly) unsigned long long status;                                                                         //@synthesize status=_status - In the implementation block
@property (copy) NSString * label; 
@property (readonly) NSError * error; 
@property (getter=isProfilingEnabled) char profilingEnabled; 
@property (readonly) NSDictionary * profilingResults; 
@property (readonly) unsigned long long globalTraceObjectID;                                                            //@synthesize globalTraceObjectID=_globalTraceObjectID - In the implementation block
@property (readonly) NSMutableArray * logs;                                                                             //@synthesize logs=_logs - In the implementation block
@property (nonatomic,readonly) double kernelStartTime; 
@property (nonatomic,readonly) double kernelEndTime; 
@property (nonatomic,readonly) double GPUStartTime; 
@property (nonatomic,readonly) double GPUEndTime; 
@property (nonatomic,readonly) NSMutableDictionary * userDictionary; 
@property (assign,setter=tatEnabled,getter=isStatEnabled,nonatomic) char StatEnabled;                                   //@synthesize StatEnabled=_StatEnabled - In the implementation block
@property (assign,nonatomic) unsigned long long numThisCommandBuffer;                                                   //@synthesize numThisCommandBuffer=_numThisCommandBuffer - In the implementation block
@property (assign,nonatomic) unsigned long long numEncoders;                                                            //@synthesize numEncoders=_numEncoders - In the implementation block
@property (getter=getListIndex,nonatomic,readonly) unsigned long long listIndex;                                        //@synthesize listIndex=_listIndex - In the implementation block
@property (assign,setter=tatOptions,getter=getStatOptions,nonatomic) unsigned long long StatOptions;                    //@synthesize StatOptions=_StatOptions - In the implementation block
@property (assign,setter=tatLocations,getter=getStatLocations,nonatomic) unsigned long long StatLocations;              //@synthesize StatLocations=_StatLocations - In the implementation block
@property (assign,nonatomic) _MTLCommandBuffer*<MTLCommandBuffer> statCommandBuffer;                                    //@synthesize statCommandBuffer=_statCommandBuffer - In the implementation block
@property (assign,nonatomic) unsigned long long internalCounterSampleSize;                                              //@synthesize internalCounterSampleSize=_internalCounterSampleSize - In the implementation block
@property (assign,nonatomic) char ownedByParallelEncoder;                                                               //@synthesize ownedByParallelEncoder=_ownedByParallelEncoder - In the implementation block
@property (assign,nonatomic) char sharedIndirectionTable;                                                               //@synthesize sharedIndirectionTable=_sharedIndirectionTable - In the implementation block
@property (assign,nonatomic) unsigned long long errorOptions;                                                           //@synthesize errorOptions=_errorOptions - In the implementation block
+(void)initialize;
-(void)initProgressTracking;
-(unsigned long long)getAndIncrementNumEncoders;
-(id)progressTrackingRenderCommandEncoder;
-(id)progressTrackingBlitCommandEncoder;
-(void)setOwnedByParallelEncoder:(char)arg1 ;
-(void)setNumEncoders:(unsigned long long)arg1 ;
-(void)setNumThisCommandBuffer:(unsigned long long)arg1 ;
-(id)progressTrackingComputeCommandEncoder;
-(unsigned long long)internalCounterSampleSize;
-(void)processEncoderInfos;
-(char)synchronousDebugMode;
-(void)setInternalCounterSampleSize:(unsigned long long)arg1 ;
-(void)dealloc;
-(id)description;
-(NSError *)error;
-(void)pushDebugGroup:(id)arg1 ;
-(void)popDebugGroup;
-(id)formattedDescription:(unsigned long long)arg1 ;
-(char)retainedReferences;
-(unsigned long long)status;
-(void)addScheduledHandler:(/*^block*/id)arg1 ;
-(void)addCompletedHandler:(/*^block*/id)arg1 ;
-(void)commit;
-(void)commitAndHold;
-(char)commitAndWaitUntilSubmitted;
-(NSMutableArray *)logs;
-(double)GPUStartTime;
-(double)GPUEndTime;
-(unsigned long long)globalTraceObjectID;
-(void)enqueue;
-(void)presentDrawable:(id)arg1 ;
-(void)presentDrawable:(id)arg1 atTime:(double)arg2 ;
-(void)presentDrawable:(id)arg1 afterMinimumDuration:(double)arg2 ;
-(void)waitUntilScheduled;
-(void)waitUntilCompleted;
-(id)accelerationStructureCommandEncoder;
-(double)kernelStartTime;
-(double)kernelEndTime;
-(void*)debugBufferContentsWithLength:(unsigned long long*)arg1 ;
-(char)sharedIndirectionTable;
-(void)setSharedIndirectionTable:(char)arg1 ;
-(id)computeCommandEncoderWithDispatchType:(unsigned long long)arg1 ;
-(id)computeCommandEncoderWithDescriptor:(id)arg1 ;
-(id)blitCommandEncoderWithDescriptor:(id)arg1 ;
-(id)resourceStateCommandEncoderWithDescriptor:(id)arg1 ;
-(char)isProfilingEnabled;
-(void)setProfilingEnabled:(char)arg1 ;
-(NSDictionary *)profilingResults;
-(NSMutableDictionary *)userDictionary;
-(unsigned long long)getListIndex;
-(void)addSynchronizationNotification:(/*^block*/id)arg1 ;
-(void)executeSynchronizationNotifications:(int)arg1 ;
-(void)executeSynchronizationNotifications:(int)arg1 scope:(unsigned long long)arg2 resources:(const id*)arg3 count:(unsigned long long)arg4 ;
-(unsigned long long)errorOptions;
-(id<MTLCommandQueue>)commandQueue;
-(char)skipRender;
-(char)isStatEnabled;
-(void)setStatEnabled:(char)arg1 ;
-(unsigned long long)getStatOptions;
-(void)setStatOptions:(unsigned long long)arg1 ;
-(unsigned long long)getStatLocations;
-(void)setStatLocations:(unsigned long long)arg1 ;
-(char)isCommitted;
-(id)initWithQueue:(id)arg1 retainedReferences:(char)arg2 synchronousDebugMode:(char)arg3 ;
-(void)didCompleteWithStartTime:(unsigned long long)arg1 endTime:(unsigned long long)arg2 error:(id)arg3 ;
-(void)commitAndReset;
-(void)setCurrentCommandEncoder:(id)arg1 ;
-(void)_addRetainedObject:(id)arg1 ;
-(id)initWithQueue:(id)arg1 retainedReferences:(char)arg2 ;
-(void)didScheduleWithStartTime:(unsigned long long)arg1 endTime:(unsigned long long)arg2 error:(id)arg3 ;
-(void)kernelSubmitTime;
-(void)setCommitted:(char)arg1 ;
-(char)ownedByParallelEncoder;
-(_MTLCommandBuffer*<MTLCommandBuffer>)statCommandBuffer;
-(MTLStatSampleRec*)newSample;
-(void)postProcessCommandbuffer;
-(void)postProcessSamples:(MTLStatSampleRec*)arg1 toUserDst:(unsigned long long*)arg2 numSamples:(unsigned long long)arg3 ;
-(void)didSchedule:(unsigned long long)arg1 error:(id)arg2 ;
-(void)setStatCommandBuffer:(_MTLCommandBuffer*<MTLCommandBuffer>)arg1 ;
-(void)getDriverEncoderInfoData:(id)arg1 ;
-(void)runPerfCounterCallbackWithBlock:(/*^block*/id)arg1 ;
-(unsigned long long)numThisCommandBuffer;
-(void)setErrorOptions:(unsigned long long)arg1 ;
-(unsigned long long)numEncoders;
@end

