/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Metal.framework/Versions/A/Metal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, MTLRenderPipelineState, MTLComputePipelineState;
#import <Metal/Metal-Structs.h>
@class NSObject, NSMutableArray, MTLDeviceFeatureQueries, NSString, MTLLoader, MTLGPUBVHBuilder, MTLCompiler, NSArray, MTLTargetDeviceArchitecture;

@interface _MTLDevice : NSObject {

	SCD_Struct_MT59 _limits;
	void* _supportedGPUFamilies;
	NSObject*<OS_dispatch_queue> _serialQueue;
	NSObject*<OS_dispatch_queue> _pipelineSerializationQueue;
	NSObject*<OS_dispatch_queue> _concurrentQueue;
	char _hasInitSerializationPaths;
	char _shaderDebugInfoCaching;
	NSMutableArray* _progressTrackBufferStack;
	BOOL _needsEncoderTypeMatchingProgressBlits;
	id<MTLRenderPipelineState> _progressTrackRenderPipeline;
	id<MTLComputePipelineState> _progressTrackComputePipeline;
	MTLDeviceFeatureQueries* _featureQueries;
	unsigned long long _globalTraceObjectID;
	Ai _commandQueueCount;
	MTLLibraryBuilder* _libraryBuilder;
	MTLPipelineLibraryBuilder* _pipelineLibraryBuilder;
	MTLPipelineCollection* _pipelineCollection;
	NSString* _pipelineDescriptorsOutputFile;
	NSString* _librariesOutputDirectory;
	char _collectAllLibraries;
	char _gpuAssertionsEnabled;
	MTLLoader* _dynamicLoader;
	os_unfair_lock_s _GPUBVHBuilderLock;
	MTLGPUBVHBuilder* _GPUBVHBuilder;
	once_flag _initProgressTrackingOnceToken;
	char _DynamicFunctionPointersSupported;
	unsigned long long _commandBufferErrorOptions;

}

@property (nonatomic,readonly) char supportsBufferlessClientStorageTexture; 
@property (nonatomic,readonly) char supportsComputeMemoryBarrier; 
@property (nonatomic,readonly) char supportsRenderMemoryBarrier; 
@property (nonatomic,readonly) char supportsArgumentBuffersTier2; 
@property (nonatomic,readonly) char supportsReadWriteTextureArgumentsTier2; 
@property (nonatomic,readonly) char supportsProgrammableSamplePositions; 
@property (nonatomic,readonly) char supportsLargeFramebufferConfigs; 
@property (nonatomic,readonly) char supportsCustomBorderColor; 
@property (nonatomic,readonly) char supportsSamplerAddressModeClampToHalfBorder; 
@property (nonatomic,readonly) char supportsBCTextureCompression; 
@property (nonatomic,readonly) char supports3DBCTextures; 
@property (nonatomic,readonly) char supportsRGBA10A2Gamma; 
@property (nonatomic,readonly) char supportsPrimitiveRestartOverride; 
@property (nonatomic,readonly) char supports32bpcMSAATextures; 
@property (nonatomic,readonly) char supports32BitMSAA; 
@property (nonatomic,readonly) char supports32BitFloatFiltering; 
@property (nonatomic,readonly) char supportsQueryTextureLOD; 
@property (nonatomic,readonly) char supportsVertexAmplification; 
@property (nonatomic,readonly) char supportsSamplerReductionMode; 
@property (nonatomic,readonly) char supportsPlacementHeaps; 
@property (nonatomic,readonly) char supportsOpenCLTextureWriteSwizzles; 
@property (nonatomic,readonly) char supportsPullModelInterpolation; 
@property (nonatomic,readonly) char supportsInt64; 
@property (nonatomic,readonly) char supportsFixedLinePointFillDepthGradient; 
@property (nonatomic,readonly) char supportsNonZeroTextureWriteLOD; 
@property (nonatomic,readonly) char supportsSharedTextureHandles; 
@property (nonatomic,readonly) char supportsBufferPrefetchStatistics; 
@property (nonatomic,readonly) char supportsLimitedYUVFormats; 
@property (nonatomic,readonly) char supportsNonPrivateDepthStencilTextures; 
@property (nonatomic,readonly) char supportsNonPrivateMSAATextures; 
@property (nonatomic,readonly) char supportsSharedStorageHeapResources; 
@property (nonatomic,readonly) char supportsSharedStorageTextures; 
@property (nonatomic,readonly) char supportsLinearTextureFromSharedBuffer; 
@property (nonatomic,readonly) char supportsPipelineLibraries; 
@property (nonatomic,readonly) char supportsFragmentOnlyEncoders; 
@property (nonatomic,readonly) char supportsBufferWithIOSurface; 
@property (nonatomic,readonly) char supportsProgrammableBlending; 
@property (nonatomic,readonly) char supportsRenderToLinearTextures; 
@property (nonatomic,readonly) char supportsMemorylessRenderTargets; 
@property (nonatomic,readonly) char supportsFastMathInfNaNPropagation; 
@property (nonatomic,readonly) char supportsInvariantVertexPosition; 
@property (nonatomic,readonly) char supportsShaderLODAverage; 
@property (nonatomic,readonly) char supportsRelaxedTextureViewRequirements; 
@property (nonatomic,readonly) char supportsSeparateDepthStencil; 
@property (nonatomic,readonly) char supportsGPUStatistics; 
@property (nonatomic,readonly) char supportsCompressedTextureViewSPI; 
@property (nonatomic,readonly) char supportsRenderTargetTextureRotation; 
@property (nonatomic,readonly) char supportsDynamicControlPointCount; 
@property (nonatomic,readonly) char supportsIABHashForTools; 
@property (nonatomic,readonly) char supportsBinaryArchives; 
@property (nonatomic,readonly) char supportsBinaryLibraries; 
@property (nonatomic,readonly) char supportsASTCTextureCompression; 
@property (nonatomic,readonly) char supportsExtendedYUVFormats; 
@property (nonatomic,readonly) char supportsPublicXR10Formats; 
@property (nonatomic,readonly) char supportsSRGBwrites; 
@property (nonatomic,readonly) char supportsDepthClipMode; 
@property (nonatomic,readonly) char supportsPacked32TextureBufferWrites; 
@property (nonatomic,readonly) char supports3DASTCTextures; 
@property (nonatomic,readonly) char supportsExtendedXR10Formats; 
@property (nonatomic,readonly) char supportsFragmentBufferWrites; 
@property (nonatomic,readonly) char supportsCountingOcclusionQuery; 
@property (nonatomic,readonly) char supportsBaseVertexInstanceDrawing; 
@property (nonatomic,readonly) char supportsIndirectDrawAndDispatch; 
@property (nonatomic,readonly) char supportsTessellation; 
@property (nonatomic,readonly) char supportsReadWriteBufferArguments; 
@property (nonatomic,readonly) char supportsArrayOfTextures; 
@property (nonatomic,readonly) char supportsArrayOfSamplers; 
@property (nonatomic,readonly) char supportsCombinedMSAAStoreAndResolveAction; 
@property (nonatomic,readonly) char supportsMutableTier1ArgumentBuffers; 
@property (nonatomic,readonly) char supportsSamplerCompareFunction; 
@property (nonatomic,readonly) char supportsMSAADepthResolve; 
@property (nonatomic,readonly) char supportsMSAAStencilResolve; 
@property (nonatomic,readonly) char supportsMSAADepthResolveFilter; 
@property (nonatomic,readonly) char supportsGFXIndirectCommandBuffers; 
@property (nonatomic,readonly) char supportsCMPIndirectCommandBuffers; 
@property (nonatomic,readonly) char supportsIndirectStageInRegion; 
@property (nonatomic,readonly) char supportsIndirectTextures; 
@property (nonatomic,readonly) char supportsNorm16BCubicFiltering; 
@property (nonatomic,readonly) char supportsTextureOutOfBoundsReads; 
@property (nonatomic,readonly) char supportsTextureSwizzle; 
@property (nonatomic,readonly) char supportsAlphaYUVFormats; 
@property (nonatomic,readonly) char supportsMemoryOrderAtomics; 
@property (nonatomic,readonly) char supportsQuadGroup; 
@property (nonatomic,readonly) char supportsRenderTextureWrites; 
@property (nonatomic,readonly) char supportsImageBlocks; 
@property (nonatomic,readonly) char supportsTileShaders; 
@property (nonatomic,readonly) char supportsImageBlockSampleCoverageControl; 
@property (nonatomic,readonly) char supportsNativeHardwareFP16; 
@property (nonatomic,readonly) char supportsPostDepthCoverage; 
@property (nonatomic,readonly) char supportsMipLevelsSmallerThanBlockSize; 
@property (nonatomic,readonly) char supportsNonUniformThreadgroupSize; 
@property (nonatomic,readonly) char supportsReadWriteTextureArguments; 
@property (nonatomic,readonly) char supportsReadWriteTextureCubeArguments; 
@property (nonatomic,readonly) char supportsTextureCubeArray; 
@property (nonatomic,readonly) char supportsQuadShufflesAndBroadcast; 
@property (nonatomic,readonly) char supportsConcurrentComputeDispatch; 
@property (nonatomic,readonly) char supportsRenderPassWithoutRenderTarget; 
@property (nonatomic,readonly) char supportsRasterOrderGroups; 
@property (nonatomic,readonly) char supportsRasterOrderGroupsColorAttachment; 
@property (nonatomic,readonly) char supportsLinearTexture2DArray; 
@property (nonatomic,readonly) char supportsNonSquareTileShaders; 
@property (nonatomic,readonly) char supportsSeparateVisibilityAndShadingRate; 
@property (nonatomic,readonly) char supports2DLinearTexArraySPI; 
@property (nonatomic,readonly) char supportsLayeredRendering; 
@property (nonatomic,readonly) char supportsViewportAndScissorArray; 
@property (nonatomic,readonly) char supportsIndirectTessellation; 
@property (nonatomic,readonly) char supportsMSAAStencilResolveFilter; 
@property (nonatomic,readonly) char supportsStencilFeedback; 
@property (nonatomic,readonly) char supportsFP32TessFactors; 
@property (nonatomic,readonly) char supportsUnalignedVertexFetch; 
@property (nonatomic,readonly) char supportsSIMDGroup; 
@property (nonatomic,readonly) char supportsShaderMinLODClamp; 
@property (nonatomic,readonly) char supportsSIMDShufflesAndBroadcast; 
@property (nonatomic,readonly) char supportsWritableArrayOfTextures; 
@property (nonatomic,readonly) char supportsVariableRateRasterization; 
@property (nonatomic,readonly) char supportsYCBCRFormats; 
@property (nonatomic,readonly) char supportsYCBCRFormatsPQ; 
@property (nonatomic,readonly) char supportsYCBCRFormats12; 
@property (nonatomic,readonly) char supportsYCBCRFormatsXR; 
@property (nonatomic,readonly) char supportsASTCHDRTextureCompression; 
@property (nonatomic,readonly) char supportsSparseTextures; 
@property (nonatomic,readonly) char supportsSparseHeaps; 
@property (nonatomic,readonly) char supportsIndirectWritableTextures; 
@property (nonatomic,readonly) char supportsFunctionPointers; 
@property (nonatomic,readonly) char supportsBinaryFunctionPointers; 
@property (nonatomic,readonly) char supportsDynamicLibraries; 
@property (nonatomic,readonly) char supportsStatefulDynamicLibraries; 
@property (nonatomic,readonly) char supportsShaderBarycentricCoordinates; 
@property (nonatomic,readonly) char supportsBlackOrWhiteSamplerBorderColors; 
@property (nonatomic,readonly) char supportsMirrorClampToEdgeSamplerMode; 
@property (nonatomic,readonly) char supportsSIMDReduction; 
@property (nonatomic,readonly) char supportsDepthClipModeClampExtended; 
@property (nonatomic,readonly) char supportsTexture2DMultisampleArray; 
@property (nonatomic,readonly) char supportsForceSeamsOnCubemaps; 
@property (nonatomic,readonly) char supportsFloat16BCubicFiltering; 
@property (nonatomic,readonly) char supportsFloat16InfNanFiltering; 
@property (nonatomic,readonly) char supportsRTZRounding; 
@property (nonatomic,readonly) char supportsAnisoSampleFix; 
@property (nonatomic,readonly) char supportsYCBCRPackedFormatsPQ; 
@property (nonatomic,readonly) char supportsYCBCRPackedFormats12; 
@property (nonatomic,readonly) char supportsYCBCRPackedFormatsXR; 
@property (nonatomic,readonly) char supportsBufferBoundsChecking; 
@property (nonatomic,readonly) char supportsForkJoin; 
@property (nonatomic,readonly) char supportsDevicePartitioning; 
@property (nonatomic,readonly) char supportsComputeCompressedTextureWrite; 
@property (nonatomic,readonly) char supportsSIMDGroupMatrix; 
@property (nonatomic,readonly) char supportsInterchangeTiled; 
@property (nonatomic,readonly) char supportsQuadReduction; 
@property (readonly) NSString * name; 
@property (assign) char shaderDebugInfoCaching;                                                                                    //@synthesize shaderDebugInfoCaching=_shaderDebugInfoCaching - In the implementation block
@property (readonly) unsigned long long deviceCreationFlags; 
@property (readonly) const SCD_Struct_MT59* limits; 
@property (readonly) unsigned long long globalTraceObjectID;                                                                       //@synthesize globalTraceObjectID=_globalTraceObjectID - In the implementation block
@property (readonly) unsigned long long maxFramebufferStorageBits; 
@property (readonly) unsigned long long linearTextureArrayAlignmentBytes; 
@property (readonly) unsigned long long linearTextureArrayAlignmentSlice; 
@property (readonly) unsigned long long maxTileBuffers; 
@property (readonly) unsigned long long maxTileTextures; 
@property (readonly) unsigned long long maxTileSamplers; 
@property (readonly) unsigned long long maxTileInlineDataSize; 
@property (readonly) unsigned long long minTilePixels; 
@property (readonly) unsigned long long maxColorAttachments; 
@property (readonly) unsigned long long maxVertexAttributes; 
@property (readonly) unsigned long long maxVertexBuffers; 
@property (readonly) unsigned long long maxVertexTextures; 
@property (readonly) unsigned long long maxVertexSamplers; 
@property (readonly) unsigned long long maxVertexInlineDataSize; 
@property (readonly) unsigned long long maxInterpolants; 
@property (readonly) unsigned long long maxFragmentBuffers; 
@property (readonly) unsigned long long maxFragmentTextures; 
@property (readonly) unsigned long long maxFragmentSamplers; 
@property (readonly) unsigned long long maxFragmentInlineDataSize; 
@property (readonly) unsigned long long maxComputeBuffers; 
@property (readonly) unsigned long long maxComputeTextures; 
@property (readonly) unsigned long long maxComputeSamplers; 
@property (readonly) unsigned long long maxComputeInlineDataSize; 
@property (readonly) unsigned long long maxComputeLocalMemorySizes; 
@property (readonly) unsigned long long maxTotalComputeThreadsPerThreadgroup; 
@property (readonly) unsigned long long maxComputeThreadgroupMemory; 
@property (readonly) float maxLineWidth; 
@property (readonly) float maxPointSize; 
@property (readonly) unsigned long long maxVisibilityQueryOffset; 
@property (readonly) unsigned long long minConstantBufferAlignmentBytes; 
@property (readonly) unsigned long long minBufferNoCopyAlignmentBytes; 
@property (readonly) unsigned long long maxTextureWidth1D; 
@property (readonly) unsigned long long maxTextureWidth2D; 
@property (readonly) unsigned long long maxTextureHeight2D; 
@property (readonly) unsigned long long maxTextureWidth3D; 
@property (readonly) unsigned long long maxTextureHeight3D; 
@property (readonly) unsigned long long maxTextureDepth3D; 
@property (readonly) unsigned long long maxTextureDimensionCube; 
@property (readonly) unsigned long long maxTextureLayers; 
@property (readonly) unsigned long long linearTextureAlignmentBytes; 
@property (readonly) unsigned long long iosurfaceTextureAlignmentBytes; 
@property (readonly) unsigned long long iosurfaceReadOnlyTextureAlignmentBytes; 
@property (readonly) unsigned long long deviceLinearTextureAlignmentBytes; 
@property (readonly) unsigned long long deviceLinearReadOnlyTextureAlignmentBytes; 
@property (readonly) unsigned long long maxFunctionConstantIndices; 
@property (readonly) unsigned long long maxComputeThreadgroupMemoryAlignmentBytes; 
@property (readonly) unsigned long long maxInterpolatedComponents; 
@property (readonly) unsigned long long maxTessellationFactor; 
@property (readonly) unsigned long long maxIndirectBuffers; 
@property (readonly) unsigned long long maxIndirectTextures; 
@property (readonly) unsigned long long maxIndirectSamplers; 
@property (readonly) unsigned long long maxIndirectSamplersPerDevice; 
@property (readonly) unsigned long long maxFenceInstances; 
@property (readonly) unsigned long long maxViewportCount; 
@property (readonly) unsigned long long maxCustomSamplePositions; 
@property (readonly) unsigned long long maxVertexAmplificationFactor; 
@property (readonly) unsigned long long maxVertexAmplificationCount; 
@property (readonly) unsigned long long maxTextureBufferWidth; 
@property (readonly) unsigned long long maxComputeAttributes; 
@property (readonly) unsigned long long maxConstantBufferArguments; 
@property (readonly) unsigned long long maxBufferLength; 
@property (readonly) NSObject*<OS_dispatch_queue> serialQueue;                                                                     //@synthesize serialQueue=_serialQueue - In the implementation block
@property (readonly) NSObject*<OS_dispatch_queue> concurrentQueue;                                                                 //@synthesize concurrentQueue=_concurrentQueue - In the implementation block
@property (readonly) unsigned acceleratorPort; 
@property (readonly) int llvmVersion; 
@property (readonly) MTLCompiler * compiler; 
@property (readonly) char requiresIABEmulation; 
@property (readonly) IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities; 
@property (readonly) unsigned long long readWriteTextureSupport; 
@property (readonly) unsigned long long argumentBuffersSupport; 
@property (getter=areRasterOrderGroupsSupported,readonly) char rasterOrderGroupsSupported; 
@property (getter=isFloat32FilteringSupported,readonly) char float32FilteringSupported; 
@property (getter=isBCTextureCompressionSupported,readonly) char BCTextureCompressionSupported; 
@property (getter=isMsaa32bSupported,readonly) char msaa32bSupported; 
@property (getter=isRGB10A2GammaSupported,readonly) char RGB10A2GammaSupported; 
@property (getter=areBarycentricCoordsSupported,readonly) char barycentricCoordsSupported; 
@property (getter=isRTZRoundingSupported,readonly) char RTZRoundingSupported; 
@property (readonly) long long defaultTextureWriteRoundingMode; 
@property (getter=isAnisoSampleFixSupported,readonly) char AnisoSampleFixSupported; 
@property (getter=isFixedLinePointFillDepthGradientSupported,readonly) char FixedLinePointFillDepthGradientSupported; 
@property (getter=isDynamicFunctionPointersSupported,readonly) char DynamicFunctionPointersSupported;                              //@synthesize DynamicFunctionPointersSupported=_DynamicFunctionPointersSupported - In the implementation block
@property (getter=isBinaryFunctionPointersSupported,readonly) char BinaryFunctionPointersSupported; 
@property (readonly) unsigned long long sparseTexturesSupport; 
@property (readonly) unsigned long long sparseTileSizeInBytes; 
@property (readonly) unsigned long long maxArgumentBufferSamplerCount; 
@property (readonly) unsigned long long samplerReductionModeSupport; 
@property (setter=setGPUAssertionsEnabled:,getter=areGPUAssertionsEnabled) char gpuAssertionsEnabled; 
@property (getter=isLargeMRTSupported,readonly) char largeMRTSupported; 
@property (readonly) unsigned long long maxRasterizationRateLayerCount; 
@property (readonly) NSArray * counterSets; 
@property (getter=isPlacementHeapSupported,readonly) char placementHeapSupported; 
@property (assign,nonatomic) unsigned long long commandBufferErrorOptions;                                                         //@synthesize commandBufferErrorOptions=_commandBufferErrorOptions - In the implementation block
@property (readonly) char supportsRaytracing; 
@property (readonly) MTLGPUBVHBuilder * GPUBVHBuilder; 
@property (readonly) char requiresRaytracingEmulation; 
@property (readonly) const MTLTargetDeviceArch* targetDeviceInfo; 
@property (readonly) MTLTargetDeviceArchitecture * targetDeviceArchitecture; 
+(char)useNewPreciseFunctionBehavior;
+(char)featureProfile:(unsigned long long)arg1 supportsFeatureSet:(unsigned long long)arg2 ;
+(char)useNewMaxThreadsPerThreadgroupBehavior;
+(char)useNewPrimitiveRestartBehavior;
-(void)registerTileRenderPipelineDescriptor:(id)arg1 ;
-(void)initGPUFamilySupport;
-(Class)featureQueryClass;
-(void)initSerializationPaths;
-(char)isCollectingLibraries;
-(char)isCollectingPipelines;
-(void)dumpPipelineDescriptorsIfRequested;
-(unsigned long long)optionsForPipelineLibrarySerialization;
-(id)newDynamicLibraryError:(unsigned long long)arg1 message:(id)arg2 ;
-(id)prepareVisibleFunctionRequest:(id)arg1 withDescriptor:(id)arg2 sync:(BOOL)arg3 ;
-(void)addCompileTimeStatisticsForBinaryFunction:(const MTLBinaryRequestReply*)arg1 ;
-(id)newRasterizationRateMapWithScreenSize:(SCD_Struct_MT41)arg1 layerCount:(unsigned long long)arg2 layers:(const id*)arg3 ;
-(void)initProgressTracking;
-(void)initFeatureQueries;
-(void)releaseCacheEntry:(MTLLibraryContainer*)arg1 ;
-(void)registerRenderPipelineDescriptor:(id)arg1 ;
-(void)registerComputePipelineDescriptor:(id)arg1 ;
-(void)startCollectingPipelineDescriptorsFromLibrary:(id)arg1 filePath:(id)arg2 ;
-(void)initLimits;
-(id)newComputeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2 ;
-(id)newFragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2 ;
-(id)newVertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2 ;
-(id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3 errorMessage:(id*)arg4 ;
-(id)newComputePipelineWithDescriptor:(id)arg1 variant:(id)arg2 errorMessage:(id*)arg3 ;
-(id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2 ;
-(id)pipelinePerformanceStatisticsWithComputeVariant:(id)arg1 ;
-(id)vertexResourceBindingIndexRemappingTableWithVariant:(id)arg1 ;
-(id)fragmentResourceBindingIndexRemappingTableWithVariant:(id)arg1 ;
-(id)computeResourceBindingIndexRemappingTableWithVariant:(id)arg1 ;
-(char)isDynamicFunctionPointersSupported;
-(void)dealloc;
-(id)description;
-(id)init;
-(NSString *)name;
-(id)vendorName;
-(NSObject*<OS_dispatch_queue>)serialQueue;
-(id)formattedDescription:(unsigned long long)arg1 ;
-(unsigned long long)globalTraceObjectID;
-(id)newArgumentEncoderWithArguments:(id)arg1 ;
-(char)supportsFamily:(long long)arg1 ;
-(id)newCommandQueueWithDescriptor:(id)arg1 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(void)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(void)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(void)newComputePipelineStateWithDescriptor:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)newLibraryWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const SCD_Struct_MT61*)arg2 error:(id*)arg3 ;
-(id)newLibraryWithCIFilters:(id)arg1 imageFilterFunctionInfo:(const SCD_Struct_MT61*)arg2 error:(id*)arg3 ;
-(id)newDefaultLibrary;
-(id)newDefaultLibraryWithBundle:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithDAG:(id)arg1 functions:(id)arg2 error:(id*)arg3 ;
-(id)newLibraryWithFile:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithData:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithURL:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithSource:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(void)newLibraryWithSource:(id)arg1 options:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newBinaryArchiveWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(id)newBinaryLibraryWithOptions:(unsigned long long)arg1 url:(id)arg2 error:(id*)arg3 ;
-(id)newArgumentEncoderWithArguments:(id)arg1 structType:(id*)arg2 ;
-(char)supportsGFXIndirectCommandBuffers;
-(char)supportsBinaryArchives;
-(char)supportsFunctionPointers;
-(id)newCommandQueue;
-(id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)arg1 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)newComputePipelineStateWithFunction:(id)arg1 error:(id*)arg2 ;
-(void)newComputePipelineStateWithFunction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(id)newArgumentEncoderWithLayout:(id)arg1 ;
-(char)supportsArgumentBuffersTier2;
-(char)supportsCMPIndirectCommandBuffers;
-(char)supportsRaytracing;
-(char)supportsBinaryLibraries;
-(char)supportsBinaryFunctionPointers;
-(char)supportsDynamicLibraries;
-(void)_setDeviceWrapper:(id)arg1 ;
-(id)newFunctionWithGLCoreIR:(void*)arg1 functionType:(unsigned long long)arg2 ;
-(id)newFunctionWithGLCoreIR:(void*)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3 ;
-(id)newFunctionWithGLESIR:(void*)arg1 functionType:(unsigned long long)arg2 ;
-(id)newFunctionWithGLESIR:(void*)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3 ;
-(id)newFunctionWithGLIR:(void*)arg1 functionType:(unsigned long long)arg2 ;
-(id)newFunctionWithGLIR:(void*)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3 ;
-(char)shaderDebugInfoCaching;
-(void)setShaderDebugInfoCaching:(char)arg1 ;
-(char)requiresIABEmulation;
-(char)requiresRaytracingEmulation;
-(MTLGPUBVHBuilder *)GPUBVHBuilder;
-(id)familyName;
-(id)productName;
-(const MTLTargetDeviceArch*)targetDeviceInfo;
-(MTLTargetDeviceArchitecture *)targetDeviceArchitecture;
-(id)loadDynamicLibrariesForComputeDescriptor:(id)arg1 error:(id*)arg2 ;
-(char)validateDynamicLibrary:(id)arg1 state:(char)arg2 error:(id*)arg3 ;
-(char)validateDynamicLibraryURL:(id)arg1 error:(id*)arg2 ;
-(char)areGPUAssertionsEnabled;
-(void)setGPUAssertionsEnabled:(char)arg1 ;
-(id)newSharedTextureWithDescriptor:(id)arg1 ;
-(id)newSharedTextureWithHandle:(id)arg1 ;
-(void)unloadShaderCaches;
-(SCD_Struct_MT62)libraryCacheStats;
-(SCD_Struct_MT62)pipelineCacheStats;
-(void*)getShaderCacheKeys;
-(void)compilerPropagatesThreadPriority:(BOOL)arg1 ;
-(void)startCollectingPipelineDescriptors;
-(id)endCollectingPipelineDescriptors;
-(id)newPipelineLibraryWithFilePath:(id)arg1 error:(id*)arg2 ;
-(id)serializeRenderPipelineDescriptor:(id)arg1 ;
-(id)newRenderPipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2 ;
-(id)newComputePipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2 ;
-(id)serializeStructType:(id)arg1 ;
-(id)newStructTypeWithSerializedData:(id)arg1 ;
-(IndirectArgumentBufferCapabilities)indirectArgumentBufferCapabilities;
-(unsigned long long)maxArgumentBufferSamplerCount;
-(char)deviceSupportsFeatureSet:(unsigned long long)arg1 ;
-(char)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)arg1 ;
-(char)supportsFeatureSet:(unsigned long long)arg1 ;
-(char)supportsTextureSampleCount:(unsigned long long)arg1 ;
-(unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1 ;
-(unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1 ;
-(unsigned long long)minLinearTextureBaseAddressAlignmentForDescriptor:(id)arg1 ;
-(unsigned long long)minLinearTexturePitchAlignmentForDescriptor:(id)arg1 mustMatchExactly:(unsigned long long*)arg2 ;
-(unsigned long long)requiredLinearTextureBytesPerRowForDescriptor:(id)arg1 ;
-(char)areProgrammableSamplePositionsSupported;
-(void)getDefaultSamplePositions:(SCD_Struct_MT45*)arg1 count:(unsigned long long)arg2 ;
-(char)supportsRasterizationRateMapWithLayerCount:(unsigned long long)arg1 ;
-(id)newRasterizationRateMapWithDescriptor:(id)arg1 ;
-(unsigned long long)maxRasterizationRateLayerCount;
-(id)_deviceWrapper;
-(void)_removeRequested;
-(void)_wasRemoved;
-(char)_registerInterestNotification;
-(char)isASTCPixelFormatsSupported;
-(char)isFramebufferReadSupported;
-(char)isMagicMipmapSupported;
-(const SCD_Struct_MT59*)limits;
-(unsigned)acceleratorPort;
-(unsigned long long)maxFramebufferStorageBits;
-(unsigned long long)linearTextureArrayAlignmentBytes;
-(unsigned long long)linearTextureArrayAlignmentSlice;
-(unsigned long long)maxTileBuffers;
-(unsigned long long)maxTileTextures;
-(unsigned long long)maxTileSamplers;
-(unsigned long long)maxTileInlineDataSize;
-(unsigned long long)minTilePixels;
-(unsigned long long)maxColorAttachments;
-(unsigned long long)maxVertexAttributes;
-(unsigned long long)maxVertexBuffers;
-(unsigned long long)maxVertexTextures;
-(unsigned long long)maxVertexSamplers;
-(unsigned long long)maxVertexInlineDataSize;
-(unsigned long long)maxInterpolants;
-(unsigned long long)maxFragmentBuffers;
-(unsigned long long)maxFragmentTextures;
-(unsigned long long)maxFragmentSamplers;
-(unsigned long long)maxFragmentInlineDataSize;
-(unsigned long long)maxComputeBuffers;
-(unsigned long long)maxComputeTextures;
-(unsigned long long)maxComputeSamplers;
-(unsigned long long)maxComputeInlineDataSize;
-(unsigned long long)maxComputeLocalMemorySizes;
-(unsigned long long)maxTotalComputeThreadsPerThreadgroup;
-(unsigned long long)maxComputeThreadgroupMemory;
-(float)maxLineWidth;
-(float)maxPointSize;
-(unsigned long long)maxVisibilityQueryOffset;
-(unsigned long long)minConstantBufferAlignmentBytes;
-(unsigned long long)minBufferNoCopyAlignmentBytes;
-(unsigned long long)maxTextureWidth1D;
-(unsigned long long)maxTextureWidth2D;
-(unsigned long long)maxTextureHeight2D;
-(unsigned long long)maxTextureWidth3D;
-(unsigned long long)maxTextureHeight3D;
-(unsigned long long)maxTextureDepth3D;
-(unsigned long long)maxTextureDimensionCube;
-(unsigned long long)maxTextureLayers;
-(unsigned long long)linearTextureAlignmentBytes;
-(unsigned long long)iosurfaceTextureAlignmentBytes;
-(unsigned long long)iosurfaceReadOnlyTextureAlignmentBytes;
-(unsigned long long)deviceLinearTextureAlignmentBytes;
-(unsigned long long)deviceLinearReadOnlyTextureAlignmentBytes;
-(unsigned long long)maxFunctionConstantIndices;
-(unsigned long long)maxComputeThreadgroupMemoryAlignmentBytes;
-(unsigned long long)maxInterpolatedComponents;
-(unsigned long long)maxTessellationFactor;
-(unsigned long long)maxIndirectBuffers;
-(unsigned long long)maxIndirectTextures;
-(unsigned long long)maxIndirectSamplers;
-(unsigned long long)maxIndirectSamplersPerDevice;
-(unsigned long long)maxFenceInstances;
-(unsigned long long)maxViewportCount;
-(unsigned long long)maxCustomSamplePositions;
-(unsigned long long)maxVertexAmplificationFactor;
-(unsigned long long)maxVertexAmplificationCount;
-(unsigned long long)maxTextureBufferWidth;
-(unsigned long long)maxComputeAttributes;
-(unsigned long long)maxConstantBufferArguments;
-(unsigned long long)readWriteTextureSupport;
-(unsigned long long)argumentBuffersSupport;
-(char)areRasterOrderGroupsSupported;
-(char)isFloat32FilteringSupported;
-(char)isBCTextureCompressionSupported;
-(char)isMsaa32bSupported;
-(char)isRGB10A2GammaSupported;
-(char)isCustomBorderColorSupported;
-(char)isClampToHalfBorderSupported;
-(char)areBarycentricCoordsSupported;
-(char)isLargeMRTSupported;
-(char)isQuadDataSharingSupported;
-(char)isFixedLinePointFillDepthGradientSupported;
-(unsigned long long)sparseTexturesSupport;
-(id)newEvent;
-(id)newSharedEvent;
-(id)newSharedEventWithMachPort:(unsigned)arg1 ;
-(id)newSharedEventWithHandle:(id)arg1 ;
-(id)newTextureWithSurface:(unsigned long long)arg1 buffer:(unsigned long long)arg2 ;
-(id)motionEstimatorCapabilities;
-(void)allowLibrariesFromOtherPlatforms;
-(unsigned long long)samplerReductionModeSupport;
-(unsigned long long)sparseTileSizeInBytes;
-(void)convertSparsePixelRegions:(const SCD_Struct_MT63*)arg1 toTileRegions:(SCD_Struct_MT63*)arg2 withTileSize:(SCD_Struct_MT41)arg3 alignmentMode:(unsigned long long)arg4 numRegions:(unsigned long long)arg5 ;
-(void)convertSparseTileRegions:(const SCD_Struct_MT63*)arg1 toPixelRegions:(SCD_Struct_MT63*)arg2 withTileSize:(SCD_Struct_MT41)arg3 numRegions:(unsigned long long)arg4 ;
-(NSArray *)counterSets;
-(void)sampleTimestamps:(unsigned long long*)arg1 gpuTimestamp:(unsigned long long*)arg2 ;
-(char)supportsCounterSampling:(unsigned long long)arg1 ;
-(id)newCounterSampleBufferWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(char)isPlacementHeapSupported;
-(unsigned long long)commandBufferErrorOptions;
-(void)setCommandBufferErrorOptions:(unsigned long long)arg1 ;
-(unsigned long long)getSupportedCommandBufferErrorOptions;
-(char)supportsPrimitiveType:(unsigned long long)arg1 ;
-(unsigned long long)deviceCreationFlags;
-(id)newDynamicLibraryFromURL:(id)arg1 error:(id*)arg2 ;
-(id)newDynamicLibraryWithURL:(id)arg1 error:(id*)arg2 ;
-(id)newDynamicLibraryWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)newDynamicLibrary:(id)arg1 error:(id*)arg2 ;
-(id)newDynamicLibrary:(id)arg1 computeDescriptor:(id)arg2 error:(id*)arg3 ;
-(SCD_Struct_MT41)accelerationStructureSizesWithDescriptor:(id)arg1 ;
-(id)newAccelerationStructureWithSize:(unsigned long long)arg1 ;
-(id)newAccelerationStructureWithDescriptor:(id)arg1 ;
-(char)isRTZRoundingSupported;
-(char)supportsTextureWriteRoundingMode:(long long)arg1 ;
-(long long)defaultTextureWriteRoundingMode;
-(char)isAnisoSampleFixSupported;
-(char)isBinaryFunctionPointersSupported;
-(char)supportsBufferlessClientStorageTexture;
-(char)supportsComputeMemoryBarrier;
-(char)supportsRenderMemoryBarrier;
-(char)supportsReadWriteTextureArgumentsTier2;
-(char)supportsProgrammableSamplePositions;
-(char)supportsLargeFramebufferConfigs;
-(char)supportsCustomBorderColor;
-(char)supportsSamplerAddressModeClampToHalfBorder;
-(char)supportsBCTextureCompression;
-(char)supports3DBCTextures;
-(char)supportsRGBA10A2Gamma;
-(char)supportsPrimitiveRestartOverride;
-(char)supports32bpcMSAATextures;
-(char)supports32BitMSAA;
-(char)supports32BitFloatFiltering;
-(char)supportsQueryTextureLOD;
-(char)supportsVertexAmplification;
-(char)supportsSamplerReductionMode;
-(char)supportsPlacementHeaps;
-(char)supportsOpenCLTextureWriteSwizzles;
-(char)supportsPullModelInterpolation;
-(char)supportsInt64;
-(char)supportsFixedLinePointFillDepthGradient;
-(char)supportsNonZeroTextureWriteLOD;
-(char)supportsSharedTextureHandles;
-(char)supportsBufferPrefetchStatistics;
-(char)supportsLimitedYUVFormats;
-(char)supportsNonPrivateDepthStencilTextures;
-(char)supportsNonPrivateMSAATextures;
-(char)supportsSharedStorageHeapResources;
-(char)supportsSharedStorageTextures;
-(char)supportsLinearTextureFromSharedBuffer;
-(char)supportsPipelineLibraries;
-(char)supportsFragmentOnlyEncoders;
-(char)supportsBufferWithIOSurface;
-(char)supportsProgrammableBlending;
-(char)supportsRenderToLinearTextures;
-(char)supportsMemorylessRenderTargets;
-(char)supportsFastMathInfNaNPropagation;
-(char)supportsInvariantVertexPosition;
-(char)supportsShaderLODAverage;
-(char)supportsRelaxedTextureViewRequirements;
-(char)supportsSeparateDepthStencil;
-(char)supportsGPUStatistics;
-(char)supportsCompressedTextureViewSPI;
-(char)supportsRenderTargetTextureRotation;
-(char)supportsDynamicControlPointCount;
-(char)supportsIABHashForTools;
-(char)supportsASTCTextureCompression;
-(char)supportsExtendedYUVFormats;
-(char)supportsPublicXR10Formats;
-(char)supportsSRGBwrites;
-(char)supportsDepthClipMode;
-(char)supportsPacked32TextureBufferWrites;
-(char)supports3DASTCTextures;
-(char)supportsExtendedXR10Formats;
-(char)supportsFragmentBufferWrites;
-(char)supportsCountingOcclusionQuery;
-(char)supportsBaseVertexInstanceDrawing;
-(char)supportsIndirectDrawAndDispatch;
-(char)supportsTessellation;
-(char)supportsReadWriteBufferArguments;
-(char)supportsArrayOfTextures;
-(char)supportsArrayOfSamplers;
-(char)supportsCombinedMSAAStoreAndResolveAction;
-(char)supportsMutableTier1ArgumentBuffers;
-(char)supportsSamplerCompareFunction;
-(char)supportsMSAADepthResolve;
-(char)supportsMSAAStencilResolve;
-(char)supportsMSAADepthResolveFilter;
-(char)supportsIndirectStageInRegion;
-(char)supportsIndirectTextures;
-(char)supportsNorm16BCubicFiltering;
-(char)supportsTextureOutOfBoundsReads;
-(char)supportsTextureSwizzle;
-(char)supportsAlphaYUVFormats;
-(char)supportsMemoryOrderAtomics;
-(char)supportsQuadGroup;
-(char)supportsRenderTextureWrites;
-(char)supportsImageBlocks;
-(char)supportsTileShaders;
-(char)supportsImageBlockSampleCoverageControl;
-(char)supportsNativeHardwareFP16;
-(char)supportsPostDepthCoverage;
-(char)supportsMipLevelsSmallerThanBlockSize;
-(char)supportsNonUniformThreadgroupSize;
-(char)supportsReadWriteTextureArguments;
-(char)supportsReadWriteTextureCubeArguments;
-(char)supportsTextureCubeArray;
-(char)supportsQuadShufflesAndBroadcast;
-(char)supportsConcurrentComputeDispatch;
-(char)supportsRenderPassWithoutRenderTarget;
-(char)supportsRasterOrderGroups;
-(char)supportsRasterOrderGroupsColorAttachment;
-(char)supportsLinearTexture2DArray;
-(char)supportsNonSquareTileShaders;
-(char)supportsSeparateVisibilityAndShadingRate;
-(char)supports2DLinearTexArraySPI;
-(char)supportsLayeredRendering;
-(char)supportsViewportAndScissorArray;
-(char)supportsIndirectTessellation;
-(char)supportsMSAAStencilResolveFilter;
-(char)supportsStencilFeedback;
-(char)supportsFP32TessFactors;
-(char)supportsUnalignedVertexFetch;
-(char)supportsSIMDGroup;
-(char)supportsShaderMinLODClamp;
-(char)supportsSIMDShufflesAndBroadcast;
-(char)supportsWritableArrayOfTextures;
-(char)supportsVariableRateRasterization;
-(char)supportsYCBCRFormats;
-(char)supportsYCBCRFormatsPQ;
-(char)supportsYCBCRFormats12;
-(char)supportsYCBCRFormatsXR;
-(char)supportsASTCHDRTextureCompression;
-(char)supportsSparseTextures;
-(char)supportsSparseHeaps;
-(char)supportsIndirectWritableTextures;
-(char)supportsStatefulDynamicLibraries;
-(char)supportsShaderBarycentricCoordinates;
-(char)supportsBlackOrWhiteSamplerBorderColors;
-(char)supportsMirrorClampToEdgeSamplerMode;
-(char)supportsSIMDReduction;
-(char)supportsDepthClipModeClampExtended;
-(char)supportsTexture2DMultisampleArray;
-(char)supportsForceSeamsOnCubemaps;
-(char)supportsFloat16BCubicFiltering;
-(char)supportsFloat16InfNanFiltering;
-(char)supportsRTZRounding;
-(char)supportsAnisoSampleFix;
-(char)supportsYCBCRPackedFormatsPQ;
-(char)supportsYCBCRPackedFormats12;
-(char)supportsYCBCRPackedFormatsXR;
-(char)supportsBufferBoundsChecking;
-(char)supportsForkJoin;
-(char)supportsDevicePartitioning;
-(char)supportsComputeCompressedTextureWrite;
-(char)supportsSIMDGroupMatrix;
-(char)supportsInterchangeTiled;
-(char)supportsQuadReduction;
-(void)newPrecompiledRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 pipelineCache:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)newPrecompiledComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 pipelineCache:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const SCD_Struct_MT61*)arg2 error:(id*)arg3 ;
-(void)startCollectingPipelineDescriptorsUsingPrefixForNames:(id)arg1 ;
-(id)serializeComputePipelineDescriptor:(id)arg1 ;
-(id)serializeStructType:(id)arg1 version:(unsigned)arg2 ;
-(void)compileVisibleFunction:(id)arg1 withDescriptor:(id)arg2 error:(id*)arg3 ;
-(void)compileVisibleFunction:(id)arg1 withDescriptor:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)deserializeCompileTimeStats:(id)arg1 addToDictionary:(id)arg2 ;
-(char)supportsTextureWriteFPRoundingMode:(long long)arg1 ;
-(NSObject*<OS_dispatch_queue>)concurrentQueue;
-(void)_purgeDevice;
-(MTLCompiler *)compiler;
-(void*)fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 previousStateVariant:(id)arg3 fragmentKeySize:(unsigned long long*)arg4 ;
-(void)freeFragmentFunctionKey:(void*)arg1 fragmentKeySize:(unsigned long long)arg2 ;
-(id)fragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2 ;
-(void*)vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 nextStageVariant:(id)arg3 vertexKeySize:(unsigned long long*)arg4 ;
-(void)freeVertexFunctionKey:(void*)arg1 vertexKeySize:(unsigned long long)arg2 ;
-(id)vertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2 ;
-(id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3 ;
-(void*)computeFunctionKeyWithComputePipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 keySize:(unsigned long long*)arg3 ;
-(void)freeComputeFunctionKey:(void*)arg1 keySize:(unsigned long long)arg2 ;
-(id)computeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2 ;
-(id)newComputePipelineWithDescriptor:(id)arg1 variant:(id)arg2 ;
-(void*)libraryKeyWithComputePipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 keySize:(unsigned long long*)arg3 ;
-(void)freeComputeLibraryKey:(void*)arg1 libraryKeySize:(unsigned long long)arg2 ;
-(void*)visibleFunctionKey:(id)arg1 withFunctionDescriptor:(id)arg2 keySize:(unsigned long long*)arg3 ;
-(void)freeVisibleFunctionKey:(void*)arg1 keySize:(unsigned long long)arg2 ;
-(void)getConstantSamplersBitmasks:(unsigned long long*)arg1 uniqueIdentifiers:(unsigned long long*)arg2 constantSamplerCount:(unsigned long long*)arg3 forVertexVariant:(id)arg4 fragmentVariant:(id)arg5 ;
-(void)getConstantSamplersBitmasks:(unsigned long long*)arg1 uniqueIdentifiers:(unsigned long long*)arg2 constantSamplerCount:(unsigned long long*)arg3 forComputeVariant:(id)arg4 ;
-(id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2 vertexCompileTimeOutput:(id)arg3 fragmentCompileTimeOutput:(id)arg4 ;
-(id)pipelinePerformanceStatisticsWithComputeVariant:(id)arg1 compileTimeOutput:(id)arg2 ;
-(int)llvmVersion;
-(void*)fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 fragmentKeySize:(unsigned long long*)arg2 previousStateVariant:(id)arg3 ;
-(void*)vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 vertexKeySize:(unsigned long long*)arg2 nextStageVariant:(id)arg3 ;
-(void*)computeFunctionKeyWithComputePipelineDescriptor:(id)arg1 keySize:(unsigned long long*)arg2 ;
-(SCD_Struct_MT64)pipelineFlagsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2 ;
-(SCD_Struct_MT65)pipelineFlagsWithComputeVariant:(id)arg1 ;
-(id)resolveCounters:(id)arg1 withRange:(NSRange)arg2 ;
-(void)_incrementCommandQueueCount;
-(void)_decrementCommandQueueCount;
@end

