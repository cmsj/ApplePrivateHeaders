/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Metal.framework/Versions/A/Metal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <Metal/Metal-Structs.h>
@class NSObject;

@interface MTLLoader : NSObject {

	LoaderGlobalState* _global;
	NSObject*<OS_dispatch_queue> _claimQueue;
	unordered_map<MTLLoadedFile *, id, std::__1::hash<MTLLoadedFile *>, std::__1::equal_to<MTLLoadedFile *>, std::__1::allocator<std::__1::pair<MTLLoadedFile *const, id>>>* _claims;

}
+(MTLLoaderSliceIdentifier)sliceIDForDevice:(id)arg1 andDriverVersion:(unsigned long long*)arg2 ;
+(char)deserializeMachOContainerWithHandler:(/*^block*/id)arg1 reader:(/*^block*/id)arg2 ;
+(char)deserializeMachOWrapperWithType:(long long)arg1 payloadHandler:(/*^block*/id)arg2 reader:(/*^block*/id)arg3 ;
+(MTLLoaderSliceIdentifier)sliceIDForDescriptors;
+(char)serializeUniversalBinaryHeaderWithSlice:(const MTLLoaderSliceIdentifier*)arg1 offset:(const unsigned long long*)arg2 length:(const unsigned long long*)arg3 count:(unsigned)arg4 writer:(/*^block*/id)arg5 ;
+(char)serializeMachOContainerWithSlice:(MTLLoaderSliceIdentifier)arg1 payload:(const MTLLoaderMachOPayload*)arg2 count:(unsigned)arg3 writer:(/*^block*/id)arg4 ;
+(char)serializePaddingForOffset:(unsigned long long)arg1 writer:(/*^block*/id)arg2 ;
+(char)deserializeUniversalBinaryHeaderWithHandler:(/*^block*/id)arg1 reader:(/*^block*/id)arg2 bytes:(unsigned long long)arg3 ;
+(MTLLoaderSliceIdentifier)sliceIDForAIR:(const MTLLibraryData*)arg1 ;
+(char)serializeMachOWrapperWithType:(long long)arg1 slice:(MTLLoaderSliceIdentifier)arg2 payload:(const MTLLoaderMachOPayload*)arg3 writer:(/*^block*/id)arg4 ;
+(id)canonicalURL:(id)arg1 ;
-(id)loadFileWithURL:(id)arg1 error:(id*)arg2 ;
-(void)releaseLoadedFile:(id)arg1 ;
-(id)associateLoadedFile:(id)arg1 withObject:(id)arg2 ;
-(void)disassociateLoadedFile:(id)arg1 withObject:(id)arg2 ;
-(void)executeBlockForLoadedFile:(id)arg1 withAssociatedObject:(id)arg2 block:(/*^block*/id)arg3 ;
-(id)loadLibrariesWithDevice:(id)arg1 computeDescriptor:(id)arg2 error:(id*)arg3 ;
-(oneway void)dealloc;
-(id)init;
@end

