/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:17 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/CalendarStore.framework/Versions/A/CalendarStore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CalendarStore/CalendarStore-Structs.h>
#import <CalendarStore/CalendarAgentClient.h>

@interface CalCalendarStore : NSObject <CalendarAgentClient> {

	void* _reserved;

}
+(id)allocWithZone:(NSZone*)arg1 ;
+(char)authorizationStatusForServiceName:(CFStringRef)arg1 ;
+(char)requestAccessForServiceName:(CFStringRef)arg1 ;
+(id)_calendarNotFoundWithCalendarName:(id)arg1 isEvent:(char)arg2 ;
+(id)_calendarNotEditableErrorWithCalendarName:(id)arg1 isEvent:(char)arg2 ;
+(id)_calendarDoesNotSupportEventsErrorWithCalendarName:(id)arg1 ;
+(int)_calStoreSpanWithCalSpan:(int)arg1 ;
+(id)_calendarDoesNotSupportTasksErrorWithCalendarName:(id)arg1 ;
+(id)_dateFromPotentialNSCalendarDate:(id)arg1 ;
+(id)defaultCalendarStore;
+(id)eventPredicateWithStartDate:(id)arg1 endDate:(id)arg2 calendars:(id)arg3 ;
+(id)eventPredicateWithStartDate:(id)arg1 endDate:(id)arg2 UID:(id)arg3 calendars:(id)arg4 ;
+(id)taskPredicateWithCalendars:(id)arg1 ;
+(id)taskPredicateWithTasksCompletedSince:(id)arg1 calendars:(id)arg2 ;
+(id)taskPredicateWithUncompletedTasks:(id)arg1 ;
+(id)taskPredicateWithUncompletedTasksDueBefore:(id)arg1 calendars:(id)arg2 ;
-(id)retain;
-(oneway void)release;
-(unsigned long long)retainCount;
-(id)autorelease;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)calendars;
-(id)notificationForDistributedNotification:(id)arg1 userInfo:(id)arg2 ;
-(void)calDavSharedUIDChanged:(id)arg1 ;
-(void)calPersistanceNotification:(id)arg1 userInfo:(id)arg2 ;
-(void)agentUpdatedCache:(id)arg1 ;
-(id)calendarWithUID:(id)arg1 ;
-(id)eventsWithPredicate:(id)arg1 ;
-(id)eventWithUID:(id)arg1 occurrence:(id)arg2 ;
-(id)tasksWithPredicate:(id)arg1 ;
-(id)taskWithUID:(id)arg1 ;
-(char)saveEvent:(id)arg1 span:(int)arg2 error:(id*)arg3 ;
-(char)removeEvent:(id)arg1 span:(int)arg2 error:(id*)arg3 ;
-(char)saveTask:(id)arg1 error:(id*)arg2 ;
-(char)removeTask:(id)arg1 error:(id*)arg2 ;
-(char)saveCalendar:(id)arg1 error:(id*)arg2 ;
-(char)removeCalendar:(id)arg1 error:(id*)arg2 ;
-(void)calMeCardChanged;
@end

