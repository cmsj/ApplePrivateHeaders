/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/Photos.framework/Versions/A/Photos
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Photos/Photos-Structs.h>
#import <Photos/PHImportSource.h>
#import <libobjc.A.dylib/ICCameraDeviceDelegate.h>

@protocol OS_dispatch_queue;
@class NSMutableArray, NSMapTable, NSObject, ICCameraDeviceRemovedItemsCoalescer, NSMutableSet, NSMutableDictionary, NSProgress, NSArray, ICCameraDevice, NSString;

@interface PHImportDeviceSource : PHImportSource <ICCameraDeviceDelegate> {

	NSMutableArray* _assetThumbnailRequests;
	char _waitingForAssetThumbnailRequest;
	NSMutableArray* _assetMetadataRequests;
	char _waitingForAssetMetadataRequest;
	NSMutableArray* _assetThumbnailHighPriorityRequests;
	NSMapTable* _assetDataRequestsByCameraItem;
	NSObject*<OS_dispatch_queue> _assetDataRequestQueue;
	char _isEjecting;
	char _ejectAfterDelete;
	NSObject*<OS_dispatch_queue> _deleteEjectQueue;
	ICCameraDeviceRemovedItemsCoalescer* _removalCoalescer;
	NSMutableSet* _removedCameraFiles;
	NSMutableDictionary* _assetByCameraFile;
	NSObject*<OS_dispatch_queue> _assetByCameraFileAccess;
	NSProgress* _deleteProgress;
	NSArray* _avchdAssets;
	ICCameraDevice* _camera;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> deleteEjectQueue;                       //@synthesize deleteEjectQueue=_deleteEjectQueue - In the implementation block
@property (nonatomic,retain) ICCameraDeviceRemovedItemsCoalescer * removalCoalescer;              //@synthesize removalCoalescer=_removalCoalescer - In the implementation block
@property (nonatomic,retain) NSMutableSet * removedCameraFiles;                                   //@synthesize removedCameraFiles=_removedCameraFiles - In the implementation block
@property (assign,nonatomic) char isEjecting;                                                     //@synthesize isEjecting=_isEjecting - In the implementation block
@property (assign,nonatomic) char ejectAfterDelete;                                               //@synthesize ejectAfterDelete=_ejectAfterDelete - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * assetByCameraFile;                             //@synthesize assetByCameraFile=_assetByCameraFile - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> assetByCameraFileAccess;                //@synthesize assetByCameraFileAccess=_assetByCameraFileAccess - In the implementation block
@property (nonatomic,retain) NSProgress * deleteProgress;                                         //@synthesize deleteProgress=_deleteProgress - In the implementation block
@property (nonatomic,retain) NSArray * avchdAssets;                                               //@synthesize avchdAssets=_avchdAssets - In the implementation block
@property (retain) ICCameraDevice * camera;                                                       //@synthesize camera=_camera - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)name;
-(id)uuid;
-(id)path;
-(CGImageRef)icon;
-(char)isAvailable;
-(id)initWithDevice:(id)arg1 ;
-(void)setCamera:(ICCameraDevice *)arg1 ;
-(ICCameraDevice *)camera;
-(void)eject;
-(char)isAppleDevice;
-(char)canReference;
-(void)beginWork;
-(id)assetsByProcessingItem:(id)arg1 ;
-(id)productKind;
-(id)volumePath;
-(void)cameraDevice:(id)arg1 didAddItems:(id)arg2 ;
-(void)cameraDevice:(id)arg1 didRemoveItems:(id)arg2 ;
-(void)cameraDevice:(id)arg1 didReceiveThumbnail:(CGImageRef)arg2 forItem:(id)arg3 error:(id)arg4 ;
-(void)cameraDevice:(id)arg1 didReceiveMetadata:(id)arg2 forItem:(id)arg3 error:(id)arg4 ;
-(void)cameraDevice:(id)arg1 didRenameItems:(id)arg2 ;
-(void)cameraDeviceDidChangeCapability:(id)arg1 ;
-(void)cameraDevice:(id)arg1 didReceivePTPEvent:(id)arg2 ;
-(void)deviceDidBecomeReadyWithCompleteContentCatalog:(id)arg1 ;
-(void)cameraDeviceDidRemoveAccessRestriction:(id)arg1 ;
-(void)cameraDeviceDidEnableAccessRestriction:(id)arg1 ;
-(void)deviceDidBecomeReady:(id)arg1 ;
-(void)deviceDidChangeName:(id)arg1 ;
-(void)device:(id)arg1 didEncounterError:(id)arg2 ;
-(void)device:(id)arg1 didCloseSessionWithError:(id)arg2 ;
-(void)didRemoveDevice:(id)arg1 ;
-(void)device:(id)arg1 didOpenSessionWithError:(id)arg2 ;
-(void)fetchThumbnailDataUsingRequest:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)sendNextThumbnailRequest;
-(void)fetchMetadataUsingRequest:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)sendNextMetadataRequest;
-(void)fetchMetadataForRequest:(id)arg1 importAsset:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)cameraDevice:(id)arg1 setAccessState:(unsigned char)arg2 ;
-(id)importAssetForCameraFile:(id)arg1 create:(char)arg2 ;
-(void)removeAssetForCameraFile:(id)arg1 ;
-(id)deleteImportAssets:(id)arg1 isConfirmed:(char)arg2 atEnd:(/*^block*/id)arg3 ;
-(id)cameraFilesForAssets:(id)arg1 ;
-(char)canDeleteContent;
-(char)canAutolaunch;
-(char)canEject;
-(void)setAutolaunchApplicationURL:(id)arg1 ;
-(id)autolaunchApplicationURL;
-(char)isConnectedDevice;
-(char)isDeleting;
-(void)deviceFinishedEnumeratingItems:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)deleteEjectQueue;
-(void)setDeleteEjectQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(ICCameraDeviceRemovedItemsCoalescer *)removalCoalescer;
-(void)setRemovalCoalescer:(ICCameraDeviceRemovedItemsCoalescer *)arg1 ;
-(NSMutableSet *)removedCameraFiles;
-(void)setRemovedCameraFiles:(NSMutableSet *)arg1 ;
-(char)isEjecting;
-(void)setIsEjecting:(char)arg1 ;
-(char)ejectAfterDelete;
-(void)setEjectAfterDelete:(char)arg1 ;
-(NSMutableDictionary *)assetByCameraFile;
-(void)setAssetByCameraFile:(NSMutableDictionary *)arg1 ;
-(NSObject*<OS_dispatch_queue>)assetByCameraFileAccess;
-(void)setAssetByCameraFileAccess:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSProgress *)deleteProgress;
-(void)setDeleteProgress:(NSProgress *)arg1 ;
-(NSArray *)avchdAssets;
-(void)setAvchdAssets:(NSArray *)arg1 ;
@end

