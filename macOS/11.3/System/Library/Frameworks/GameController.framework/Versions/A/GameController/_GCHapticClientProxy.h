/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:34 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/GameController.framework/Versions/A/GameController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GameController/GameController-Structs.h>
#import <libobjc.A.dylib/CHHapticServerInterface.h>

@protocol _GCIPCIncomingConnection, NSCopyingNSObjectNSSecureCoding;
@class _GCControllerManagerServer, GCControllerSettings, NSString, NSArray, NSMutableDictionary;

@interface _GCHapticClientProxy : NSObject <CHHapticServerInterface> {

	BOOL _playersPlayedHapticsThisSlice;
	_GCControllerManagerServer* _server;
	HapticSharedMemory* _sharedMemory;
	GCControllerSettings* _bundleSettings;
	GCControllerSettings* _globalSettings;
	BOOL _dirtyMuteState;
	BOOL _muted;
	BOOL _neverMute;
	int _muteReasons[5];
	AB _invalid;
	BOOL _running;
	BOOL _stopping;
	id<_GCIPCIncomingConnection> _connection;
	id _connectionInvalidationRegistration;
	id _connectionInterruptedRegistration;
	double _initializationTime;
	char _complete;
	char _mockClient;
	unsigned _applicationState;
	int _totalPlayers;
	unsigned long long _clientID;
	NSString* _bundleIdentifier;
	id<NSCopying><NSObject><NSSecureCoding> _identifier;
	NSString* _controllerProductCategory;
	NSArray* _actuators;
	NSMutableDictionary* _hapticPlayers;
	double _activeLifetimeInSeconds;
	NSArray* _invalidationHandlers;

}

@property (getter=isInvalid,nonatomic,readonly) char invalid; 
@property (nonatomic,copy) NSMutableDictionary * hapticPlayers;                                      //@synthesize hapticPlayers=_hapticPlayers - In the implementation block
@property (nonatomic,copy) NSArray * invalidationHandlers;                                           //@synthesize invalidationHandlers=_invalidationHandlers - In the implementation block
@property (assign,nonatomic) unsigned long long clientID;                                            //@synthesize clientID=_clientID - In the implementation block
@property (nonatomic,copy) NSString * bundleIdentifier;                                              //@synthesize bundleIdentifier=_bundleIdentifier - In the implementation block
@property (nonatomic,copy,readonly) id<NSCopying><NSObject><NSSecureCoding> identifier;              //@synthesize identifier=_identifier - In the implementation block
@property (nonatomic,copy,readonly) NSString * controllerProductCategory;                            //@synthesize controllerProductCategory=_controllerProductCategory - In the implementation block
@property (nonatomic,copy,readonly) NSArray * actuators;                                             //@synthesize actuators=_actuators - In the implementation block
@property (assign,nonatomic) char complete;                                                          //@synthesize complete=_complete - In the implementation block
@property (assign,getter=isMockClient,nonatomic) char mockClient;                                    //@synthesize mockClient=_mockClient - In the implementation block
@property (assign,nonatomic) unsigned applicationState;                                              //@synthesize applicationState=_applicationState - In the implementation block
@property (nonatomic,readonly) int totalPlayers;                                                     //@synthesize totalPlayers=_totalPlayers - In the implementation block
@property (nonatomic,readonly) double totalLifetimeInSeconds; 
@property (nonatomic,readonly) double activeLifetimeInSeconds;                                       //@synthesize activeLifetimeInSeconds=_activeLifetimeInSeconds - In the implementation block
+(id)clientProxyWithConnection:(id)arg1 server:(id)arg2 clientID:(unsigned long long)arg3 ;
-(void)dealloc;
-(id)description;
-(id)init;
-(void)invalidate;
-(id<NSCopying><NSObject><NSSecureCoding>)identifier;
-(NSString *)bundleIdentifier;
-(unsigned)applicationState;
-(void)setBundleIdentifier:(NSString *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)running;
-(char)complete;
-(void)setComplete:(char)arg1 ;
-(char)isInvalid;
-(unsigned long long)clientID;
-(void)setClientID:(unsigned long long)arg1 ;
-(char)isMuted;
-(void)setApplicationState:(unsigned)arg1 ;
-(void)stopPrewarm;
-(void)referenceCustomAudioEvent:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)copyCustomAudioEvent:(unsigned long long)arg1 options:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)createCustomAudioEvent:(id)arg1 format:(id)arg2 frames:(unsigned long long)arg3 options:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)releaseCustomAudioEvent:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void*)sharedMemory;
-(id)addInvalidationHandler:(/*^block*/id)arg1 ;
-(NSArray *)actuators;
-(void)setMute:(BOOL)arg1 forReason:(unsigned long long)arg2 ;
-(void)notifyClientOnStopWithReason:(long long)arg1 error:(id)arg2 ;
-(void)teardownAndReleaseChannels;
-(void)invalidateDueToControllerDisconnect;
-(char)stopping;
-(void)addActiveTime:(double)arg1 ;
-(char)isMutedForReason:(unsigned long long)arg1 ;
-(NSString *)controllerProductCategory;
-(double)totalLifetimeInSeconds;
-(double)activeLifetimeInSeconds;
-(NSArray *)invalidationHandlers;
-(void)setInvalidationHandlers:(NSArray *)arg1 ;
-(void)configureWithOptions:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)queryCapabilities:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)allocateClientResources:(/*^block*/id)arg1 ;
-(void)releaseClientResources;
-(void)getHapticLatency:(/*^block*/id)arg1 ;
-(void)setPlayerBehavior:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)releaseChannels;
-(void)requestChannels:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)removeChannel:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)setChannelEventBehavior:(unsigned long long)arg1 behavior:(unsigned long long)arg2 reply:(/*^block*/id)arg3 ;
-(void)loadHapticEvent:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)loadHapticSequenceFromData:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)loadHapticSequenceFromEvents:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)loadVibePattern:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)setSequenceEventBehavior:(unsigned long long)arg1 behavior:(unsigned long long)arg2 channelIndex:(unsigned long long)arg3 reply:(/*^block*/id)arg4 ;
-(void)prepareHapticSequence:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)detachSequence:(unsigned long long)arg1 ;
-(void)prewarm:(/*^block*/id)arg1 ;
-(void)startRunning:(/*^block*/id)arg1 ;
-(void)stopRunning;
-(void)stopRunning:(/*^block*/id)arg1 ;
-(void)debugExpectNotifyOnFinishAfter:(double)arg1 reply:(/*^block*/id)arg2 ;
-(char)isMockClient;
-(id)_initWithConnection:(id)arg1 server:(id)arg2 clientID:(unsigned long long)arg3 ;
-(int)totalPlayers;
-(void)refreshUserSettingForMuteHaptics;
-(void)notifyClientCompletedWithError:(id)arg1 ;
-(NSMutableDictionary *)hapticPlayers;
-(void)setHapticPlayers:(NSMutableDictionary *)arg1 ;
-(void)setMockClient:(char)arg1 ;
-(void)_configureActuatorsLegacyWithOptions:(id)arg1 ;
-(void)removeCustomAudioEvent:(unsigned long long)arg1 reply:(/*^block*/id)arg2 ;
-(void)debugEngineIsRunning:(/*^block*/id)arg1 ;
@end

