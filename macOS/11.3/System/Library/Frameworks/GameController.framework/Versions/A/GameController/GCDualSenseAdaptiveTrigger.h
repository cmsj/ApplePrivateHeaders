/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:33 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/GameController.framework/Versions/A/GameController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GameController/GCControllerButtonInput.h>

@protocol GCControllerHIDInfo, GCAdaptiveTriggers;
@class _GCControllerManagerAppClient;

@interface GCDualSenseAdaptiveTrigger : GCControllerButtonInput {

	_GCControllerManagerAppClient* _controllerManagerApp;
	id<GCControllerHIDInfo> _hidInfo;
	id<GCAdaptiveTriggers> _adaptiveTriggers;
	float _armPosition;
	int _index;
	long long _mode;
	long long _status;

}

@property (assign,nonatomic) int index;                      //@synthesize index=_index - In the implementation block
@property (assign,nonatomic) long long mode;                 //@synthesize mode=_mode - In the implementation block
@property (assign,nonatomic) long long status;               //@synthesize status=_status - In the implementation block
@property (assign,nonatomic) float armPosition;              //@synthesize armPosition=_armPosition - In the implementation block
-(void)dealloc;
-(void)setMode:(long long)arg1 ;
-(int)index;
-(long long)status;
-(void)setIndex:(int)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(long long)mode;
-(void)updateStatus;
-(void)setStatus:(long long)arg1 ;
-(void)stopObservingChangesForAdaptiveTriggers:(id)arg1 ;
-(void)sendAdaptiveTriggerPayload:(id)arg1 ;
-(void)observeChangesForAdaptiveTriggers:(id)arg1 ;
-(void)locateAdaptiveTriggerComponent;
-(void)locateControllerManagerApp;
-(float)armPosition;
-(void)setArmPosition:(float)arg1 ;
-(void)setModeFeedbackWithStartPosition:(float)arg1 resistiveStrength:(float)arg2 ;
-(void)setModeWeaponWithStartPosition:(float)arg1 endPosition:(float)arg2 resistiveStrength:(float)arg3 ;
-(void)setModeVibrationWithStartPosition:(float)arg1 amplitude:(float)arg2 frequency:(float)arg3 ;
-(void)setModeOff;
-(void)sendAdaptiveTriggerPayloadDict:(id)arg1 ;
@end

