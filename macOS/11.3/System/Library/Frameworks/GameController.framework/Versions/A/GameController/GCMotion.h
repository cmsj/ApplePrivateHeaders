/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:34 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/GameController.framework/Versions/A/GameController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GameController/GameController-Structs.h>
#import <libobjc.A.dylib/_GCMotionEventSink.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol NSObjectNSCopyingNSSecureCoding;
@class GCController, NSString;

@interface GCMotion : NSObject <_GCMotionEventSink, NSSecureCoding> {

	id _motionEventObservation;
	SCD_Struct_GC12 _gravity;
	SCD_Struct_GC12 _userAcceleration;
	SCD_Struct_GC12 _acceleration;
	GCQuaternion _attitude;
	GCQuaternion _prevAttitude;
	SCD_Struct_GC12 _eulerAngles;
	SCD_Struct_GC12 _prevEulerAngles;
	SCD_Struct_GC12 _rotationRate;
	float _tip;
	float _tilt;
	char _motionLite;
	char _compassEnabled;
	char _hasAttitude;
	char _hasRotationRate;
	/*^block*/id _valueChangedHandler;
	char _sensorsActive;
	GCController* _controller;
	id<NSObject><NSCopying><NSSecureCoding> _identifier;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,__weak,readonly) GCController * controller;                 //@synthesize controller=_controller - In the implementation block
@property (nonatomic,copy) id valueChangedHandler; 
@property (nonatomic,readonly) char sensorsRequireManualActivation; 
@property (assign,nonatomic) char sensorsActive;                                 //@synthesize sensorsActive=_sensorsActive - In the implementation block
@property (nonatomic,readonly) char hasGravityAndUserAcceleration; 
@property (nonatomic,readonly) SCD_Struct_GC12 gravity;                          //@synthesize gravity=_gravity - In the implementation block
@property (nonatomic,readonly) SCD_Struct_GC12 userAcceleration;                 //@synthesize userAcceleration=_userAcceleration - In the implementation block
@property (nonatomic,readonly) SCD_Struct_GC12 acceleration; 
@property (nonatomic,readonly) char hasAttitudeAndRotationRate; 
@property (nonatomic,readonly) char hasAttitude; 
@property (nonatomic,readonly) char hasRotationRate; 
@property (nonatomic,readonly) GCQuaternion attitude;                            //@synthesize attitude=_attitude - In the implementation block
@property (nonatomic,readonly) SCD_Struct_GC12 rotationRate;                     //@synthesize rotationRate=_rotationRate - In the implementation block
+(char)supportsSecureCoding;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)identifier;
-(id)initWithIdentifier:(id)arg1 ;
-(SCD_Struct_GC12)gravity;
-(GCController *)controller;
-(id)initWithController:(id)arg1 ;
-(void)setController:(GCController *)arg1 ;
-(float)_tilt;
-(float)_tip;
-(id)valueChangedHandler;
-(void)setValueChangedHandler:(id)arg1 ;
-(char)sensorsActive;
-(void)setSensorsActive:(char)arg1 ;
-(void)_setGravity:(SCD_Struct_GC12)arg1 ;
-(void)_setUserAcceleration:(SCD_Struct_GC12)arg1 ;
-(void)_setAttitude:(GCQuaternion)arg1 ;
-(void)_setRotationRate:(SCD_Struct_GC12)arg1 ;
-(void)_setMotionLite:(char)arg1 ;
-(void)setMotionEventSource:(id)arg1 ;
-(char)hasGravityAndUserAcceleration;
-(SCD_Struct_GC12)userAcceleration;
-(void)setGravity:(SCD_Struct_GC12)arg1 ;
-(void)setUserAcceleration:(SCD_Struct_GC12)arg1 ;
-(SCD_Struct_GC12)acceleration;
-(void)setAcceleration:(SCD_Struct_GC12)arg1 ;
-(GCQuaternion)attitude;
-(void)setAttitude:(GCQuaternion)arg1 ;
-(SCD_Struct_GC12)rotationRate;
-(void)setRotationRate:(SCD_Struct_GC12)arg1 ;
-(char)sensorsRequireManualActivation;
-(void)_setCompassEnabled:(char)arg1 ;
-(char)hasAttitude;
-(void)_setHasAttitude:(char)arg1 ;
-(char)hasRotationRate;
-(void)_setHasRotationRate:(char)arg1 ;
-(char)hasAttitudeAndRotationRate;
-(char)isEmulatedMicroGamepad;
-(void)_setAcceleration:(SCD_Struct_GC12)arg1 ;
-(void)_startDeviceMotionUpdates;
-(void)_stopDeviceMotionUpdates;
-(char)_isUpdatingDeviceMotion;
-(void)setStateFromMotion:(id)arg1 ;
-(void)_pauseMotionUpdates:(char)arg1 ;
@end

