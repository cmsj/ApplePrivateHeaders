/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:34 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/GameController.framework/Versions/A/GameController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <GameController/GameController-Structs.h>
@class NSMutableDictionary, GCKeyboard, GCMouse, GCKeyboardAndMouseEmulatedController, NSObject;

@interface GCKeyboardAndMouseManager : NSObject {

	NSMutableDictionary* _devicesByRegistryID;
	GCKeyboard* _coalescedKeyboard;
	GCMouse* _currentMouse;
	GCKeyboardAndMouseEmulatedController* _emulatedController;
	int _emulatedControllerMapping;
	NSObject*<OS_dispatch_queue> _devicesQueue;

}

@property (assign,nonatomic,__weak) NSObject*<OS_dispatch_queue> devicesQueue;              //@synthesize devicesQueue=_devicesQueue - In the implementation block
@property (readonly) GCKeyboard * coalescedKeyboard; 
@property (retain) GCMouse * currentMouse; 
@property (assign) int emulatedControllerMapping;                                           //@synthesize emulatedControllerMapping=_emulatedControllerMapping - In the implementation block
-(id)initWithQueue:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(GCKeyboard *)coalescedKeyboard;
-(void)handleKeyboardEventAsFrontmostApp:(id)arg1 ;
-(void)handleMouseEventAsFrontmostApp:(id)arg1 ;
-(void)setEmulatedControllerMapping:(int)arg1 ;
-(id)mice;
-(int)emulatedControllerMapping;
-(char)addDeviceWithServiceRef:(IOHIDServiceClientRef)arg1 ;
-(void)removeDeviceWithServiceRef:(IOHIDServiceClientRef)arg1 ;
-(void)setCurrentMouse:(GCMouse *)arg1 ;
-(GCMouse *)currentMouse;
-(char)handleHIDEvent:(IOHIDEventRef)arg1 ;
-(void)setEmulatedControllerEnabled:(int)arg1 ;
-(void)ensureEmulatedControllerWithDevice:(id)arg1 added:(char)arg2 ;
-(void)addKeyboard:(id)arg1 ;
-(void)addMouse:(id)arg1 ;
-(void)removeDevice:(id)arg1 registryID:(id)arg2 ;
-(void)updateCurrentMouseAfterDisconnecting:(id)arg1 ;
-(void)unpublishDevice:(id)arg1 withNotificationName:(id)arg2 ;
-(NSObject*<OS_dispatch_queue>)devicesQueue;
-(void)storeDevice:(id)arg1 ;
-(void)publishDevice:(id)arg1 withNotificationName:(id)arg2 ;
-(void)updateCurrentDeviceAfterDisconnecting:(id)arg1 ;
-(void)updateCurrentDevice:(id)arg1 ;
-(void)_queue_removeDevice:(id)arg1 registryID:(id)arg2 ;
-(void)setDevicesQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

