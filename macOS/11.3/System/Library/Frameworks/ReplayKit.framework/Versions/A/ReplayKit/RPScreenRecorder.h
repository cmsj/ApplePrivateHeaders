/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:31 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/ReplayKit.framework/Versions/A/ReplayKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ReplayKit/ReplayKit-Structs.h>
#import <libobjc.A.dylib/RPPreviewViewControllerDelegate.h>
#import <libobjc.A.dylib/RPMacUtilityDelegate.h>

@protocol RPScreenRecorderDelegate, RPScreenRecorderPrivateDelegate;
@class NSView, NSString, NSWindow, RPPipViewController, RPAppAudioCaptureManager, RPMacUtility, RPBroadcastController, NSURL;

@interface RPScreenRecorder : NSObject <RPPreviewViewControllerDelegate, RPMacUtilityDelegate> {

	char _recording;
	char _microphoneEnabled;
	char _cameraEnabled;
	char _broadcasting;
	char _available;
	char _hasUserConsentForCamera;
	char _hasUserConsentForMicrophone;
	char _paused;
	char _systemRecording;
	int _processIDForAudioCapture;
	id<RPScreenRecorderDelegate> _delegate;
	long long _cameraPosition;
	NSView* _cameraPreviewView;
	unsigned long long _previousAudioSessionOptions;
	NSString* _previousAudioCategory;
	NSWindow* _windowToRecord;
	RPPipViewController* _pipViewController;
	/*^block*/id _saveVideoToCameraRollCompletionBlock;
	/*^block*/id _captureHandler;
	RPAppAudioCaptureManager* _appAudioCaptureManager;
	RPMacUtility* _rpMacUtility;
	RPBroadcastController* _activeBroadcastController;
	NSURL* _broadcastURL;
	id<RPScreenRecorderPrivateDelegate> _privateDelegate;
	id<RPScreenRecorderDelegate> _secondDelegate;

}

@property (assign,nonatomic) unsigned long long previousAudioSessionOptions;                                   //@synthesize previousAudioSessionOptions=_previousAudioSessionOptions - In the implementation block
@property (nonatomic,retain) NSString * previousAudioCategory;                                                 //@synthesize previousAudioCategory=_previousAudioCategory - In the implementation block
@property (assign,getter=isRecording,nonatomic) char recording;                                                //@synthesize recording=_recording - In the implementation block
@property (assign,nonatomic) char broadcasting;                                                                //@synthesize broadcasting=_broadcasting - In the implementation block
@property (assign,getter=isAvailable,nonatomic) char available;                                                //@synthesize available=_available - In the implementation block
@property (nonatomic,retain) NSWindow * windowToRecord;                                                        //@synthesize windowToRecord=_windowToRecord - In the implementation block
@property (nonatomic,retain) NSView * cameraPreviewView;                                                       //@synthesize cameraPreviewView=_cameraPreviewView - In the implementation block
@property (nonatomic,retain) RPPipViewController * pipViewController;                                          //@synthesize pipViewController=_pipViewController - In the implementation block
@property (nonatomic,copy) id saveVideoToCameraRollCompletionBlock;                                            //@synthesize saveVideoToCameraRollCompletionBlock=_saveVideoToCameraRollCompletionBlock - In the implementation block
@property (assign,nonatomic) char hasUserConsentForCamera;                                                     //@synthesize hasUserConsentForCamera=_hasUserConsentForCamera - In the implementation block
@property (assign,nonatomic) char hasUserConsentForMicrophone;                                                 //@synthesize hasUserConsentForMicrophone=_hasUserConsentForMicrophone - In the implementation block
@property (nonatomic,copy) id captureHandler;                                                                  //@synthesize captureHandler=_captureHandler - In the implementation block
@property (nonatomic,retain) RPAppAudioCaptureManager * appAudioCaptureManager;                                //@synthesize appAudioCaptureManager=_appAudioCaptureManager - In the implementation block
@property (nonatomic,retain) RPMacUtility * rpMacUtility;                                                      //@synthesize rpMacUtility=_rpMacUtility - In the implementation block
@property (nonatomic,retain) RPBroadcastController * activeBroadcastController;                                //@synthesize activeBroadcastController=_activeBroadcastController - In the implementation block
@property (assign,getter=isPaused,nonatomic) char paused;                                                      //@synthesize paused=_paused - In the implementation block
@property (assign,setter=updateProcessIDForAudioCapture:,nonatomic) int processIDForAudioCapture;              //@synthesize processIDForAudioCapture=_processIDForAudioCapture - In the implementation block
@property (assign,nonatomic) char systemRecording;                                                             //@synthesize systemRecording=_systemRecording - In the implementation block
@property (nonatomic,retain) NSURL * broadcastURL;                                                             //@synthesize broadcastURL=_broadcastURL - In the implementation block
@property (nonatomic,retain) id<RPScreenRecorderPrivateDelegate> privateDelegate;                              //@synthesize privateDelegate=_privateDelegate - In the implementation block
@property (nonatomic,retain) id<RPScreenRecorderDelegate> secondDelegate;                                      //@synthesize secondDelegate=_secondDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<RPScreenRecorderDelegate> delegate;                                     //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isMicrophoneEnabled,nonatomic) char microphoneEnabled;                                //@synthesize microphoneEnabled=_microphoneEnabled - In the implementation block
@property (assign,getter=isCameraEnabled,nonatomic) char cameraEnabled;                                        //@synthesize cameraEnabled=_cameraEnabled - In the implementation block
@property (assign,nonatomic) long long cameraPosition;                                                         //@synthesize cameraPosition=_cameraPosition - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedRecorder;
-(void)dealloc;
-(id)init;
-(id<RPScreenRecorderDelegate>)delegate;
-(void)setDelegate:(id<RPScreenRecorderDelegate>)arg1 ;
-(char)isPaused;
-(void)setPaused:(char)arg1 ;
-(char)isAvailable;
-(void)setAvailable:(char)arg1 ;
-(id<RPScreenRecorderPrivateDelegate>)privateDelegate;
-(void)setPrivateDelegate:(id<RPScreenRecorderPrivateDelegate>)arg1 ;
-(char)isRecording;
-(id)videoQueue;
-(void)startRecordingWithHandler:(/*^block*/id)arg1 ;
-(void)stopRecordingWithOutputURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setRecording:(char)arg1 ;
-(long long)cameraPosition;
-(void)setCameraPosition:(long long)arg1 ;
-(char)isMicrophoneEnabled;
-(void)setMicrophoneEnabled:(char)arg1 ;
-(id)audioQueue;
-(RPPipViewController *)pipViewController;
-(void)setPipViewController:(RPPipViewController *)arg1 ;
-(void)updateStateWithActive:(char)arg1 error:(id)arg2 ;
-(void)isScreenRecordingAvailable;
-(void)setRpMacUtility:(RPMacUtility *)arg1 ;
-(void)notifyDelegateOfUpdatedState;
-(id)handleUnavailableState;
-(unsigned)currentWindowLayerContextID;
-(CGSize)currentWindowSize;
-(void)registerAppForStateChangeSetRotationLock:(char)arg1 ;
-(char)isCameraEnabled;
-(void)setHasUserConsentForCamera:(char)arg1 ;
-(void)setHasUserConsentForMicrophone:(char)arg1 ;
-(void)setCameraEnabled:(char)arg1 ;
-(void)instantiatePipView;
-(void)setWindowRotationLocked:(char)arg1 ;
-(void)setBroadcasting:(char)arg1 ;
-(void)updateProcessIDForAudioCapture:(int)arg1 ;
-(void)pauseInAppRecording;
-(void)recordingDidStopWithError:(id)arg1 movieURL:(id)arg2 ;
-(void)setCaptureHandler:(id)arg1 ;
-(void)pauseInAppCapture;
-(void)stopInAppBroadcastWithHandler:(/*^block*/id)arg1 ;
-(void)pauseInAppBroadcast;
-(void)setBroadcastURL:(NSURL *)arg1 ;
-(void)stopClipBufferingWithHandler:(/*^block*/id)arg1 ;
-(void)generateClipWithSeconds:(double)arg1 handler:(/*^block*/id)arg2 ;
-(void)saveVideoToCameraRoll:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)saveVideo:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)removePipView;
-(void)setCameraPreviewView:(NSView *)arg1 ;
-(id)processQueue;
-(char)screenRecordingAllowed;
-(char)screenRecordingSupportedOnDevice;
-(RPMacUtility *)rpMacUtility;
-(id)applicationWindow;
-(void)recordingTimerDidUpdate:(id)arg1 ;
-(void)resumeInAppRecording;
-(void)resumeInAppCapture;
-(void)resumeInAppBroadcast;
-(oneway void)appAudioCaptureStopWithHandler:(/*^block*/id)arg1 ;
-(char)shouldNotifyDidStop;
-(void)didStopRecordingWithError:(id)arg1 previewViewController:(id)arg2 ;
-(id<RPScreenRecorderDelegate>)secondDelegate;
-(void)setAppAudioCaptureManager:(RPAppAudioCaptureManager *)arg1 ;
-(RPAppAudioCaptureManager *)appAudioCaptureManager;
-(void)macApplicationDidResignActive;
-(void)userDidStopRecordingFromStatusBar;
-(void)userDidStopRecordingFromWindowClose;
-(void)macApplicationDidBecomeActive;
-(void)setSecondDelegate:(id<RPScreenRecorderDelegate>)arg1 ;
-(void)startRecordingWithMicrophoneEnabled:(char)arg1 handler:(/*^block*/id)arg2 ;
-(void)stopRecordingWithVideoURLHandler:(/*^block*/id)arg1 ;
-(void)stopRecordingWithHandler:(/*^block*/id)arg1 ;
-(void)discardRecordingWithHandler:(/*^block*/id)arg1 ;
-(void)startCaptureWithHandler:(/*^block*/id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)stopCaptureWithHandler:(/*^block*/id)arg1 ;
-(void)captureHandlerWithSample:(id)arg1 timingData:(id)arg2 ;
-(void)captureHandlerWithAudioSample:(id)arg1 bufferType:(long long)arg2 ;
-(void)startInAppBroadcastWithHandler:(/*^block*/id)arg1 ;
-(void)clientDidUpdateBroadcastServiceInfo:(id)arg1 ;
-(void)startClipBufferingWithMicrophoneEnabled:(char)arg1 withHandler:(/*^block*/id)arg2 ;
-(void)recordingLockInterrupted:(id)arg1 ;
-(void)recordingDidPause;
-(void)shouldResumeSessionType:(id)arg1 ;
-(void)updateScreenRecordingStateWithCurrentState:(id)arg1 ;
-(void)updateRecordingAvailability:(id)arg1 ;
-(oneway void)appAudioCaptureStartWithDidStartHandler:(/*^block*/id)arg1 ;
-(oneway void)appAudioCaptureResumeWithHandler:(/*^block*/id)arg1 ;
-(NSView *)cameraPreviewView;
-(unsigned long long)previousAudioSessionOptions;
-(void)setPreviousAudioSessionOptions:(unsigned long long)arg1 ;
-(NSString *)previousAudioCategory;
-(void)setPreviousAudioCategory:(NSString *)arg1 ;
-(char)broadcasting;
-(NSWindow *)windowToRecord;
-(void)setWindowToRecord:(NSWindow *)arg1 ;
-(id)saveVideoToCameraRollCompletionBlock;
-(void)setSaveVideoToCameraRollCompletionBlock:(id)arg1 ;
-(char)hasUserConsentForCamera;
-(char)hasUserConsentForMicrophone;
-(id)captureHandler;
-(RPBroadcastController *)activeBroadcastController;
-(void)setActiveBroadcastController:(RPBroadcastController *)arg1 ;
-(int)processIDForAudioCapture;
-(char)systemRecording;
-(void)setSystemRecording:(char)arg1 ;
-(NSURL *)broadcastURL;
@end

