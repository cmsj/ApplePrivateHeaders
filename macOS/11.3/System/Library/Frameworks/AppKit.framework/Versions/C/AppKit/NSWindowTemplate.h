/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:59 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <libobjc.A.dylib/NSCoding.h>
#import <libobjc.A.dylib/NSUserInterfaceItemIdentification.h>

@class NSString, NSWindow, NSAppearance, NSViewController, NSToolbar;

@interface NSWindowTemplate : NSObject <NSCoding, NSUserInterfaceItemIdentification> {

	CGRect windowRect;
	int windowStyleMask;
	unsigned long long windowBacking;
	NSString* windowTitle;
	id viewClass;
	NSString* windowClass;
	id windowView;
	NSWindow* realObject;
	id extension;
	CGSize minSize;
	struct {
		unsigned _PADDING : 9;
		unsigned isRestorable : 1;
		unsigned hidesToolbarButton : 1;
		unsigned autorecalculatesKeyViewLoop : 1;
		unsigned hideShadow : 1;
		unsigned allowsToolTipsWhenInactive : 1;
		unsigned autoSetMiniaturizableMask : 1;
		unsigned autoSetZoomableMask : 1;
		unsigned  : 2;
		unsigned savePosition : 1;
		unsigned autoPositionMask : 6;
		unsigned dynamicDepthLimit : 1;
		unsigned wantsToBeColor : 1;
		unsigned visible : 1;
		unsigned oneShot : 1;
		unsigned defer : 1;
		unsigned dontFreeWhenClosed : 1;
		unsigned hidesOnDeactivate : 1;
	}  _wtFlags;
	CGRect screenRect;
	NSString* frameAutosaveName;
	CGSize maxSize;
	CGSize contentMinSize;
	CGSize contentMaxSize;
	unsigned long long windowBackingLocation;
	unsigned long long windowSharingType;
	char autorecalculateContentBorderThicknesses[4];
	double contentBorderThicknesses[4];
	NSString* userInterfaceIdentifier;
	unsigned long long animationBehavior;
	unsigned long long collectionBehavior;
	char isRestorableWasDecodedFromArchive;
	NSAppearance* appearance;
	NSViewController* _contentViewController;
	CGSize _minFullScreenContentSize;
	CGSize _maxFullScreenContentSize;
	char _minFullScreenContentSizeIsSet;
	char _maxFullScreenContentSizeIsSet;
	NSString* _tabbingIdentifier;
	long long _tabbingMode;
	long long _toolbarStyle;
	long long _titlebarSeparatorStyle;
	long long _contentTitlebarSeparatorStyle;
	long long _titleVisibility;
	char _titlebarAppearsTransparent;
	long long _level;
	NSString* _subtitle;

}

@property (copy) NSString * title; 
@property (copy) NSString * subtitle;                                               //@synthesize subtitle=_subtitle - In the implementation block
@property (copy) NSString * className; 
@property (assign) unsigned long long styleMask; 
@property (assign) unsigned long long backingType; 
@property (getter=isOneShot) char oneShot; 
@property (getter=hasDynamicDepthLimit) char dynamicDepthLimit; 
@property (getter=isDeferred) char deferred; 
@property (getter=isReleasedWhenClosed) char releasedWhenClosed; 
@property (assign) char hidesOnDeactivate; 
@property (assign) char wantsToBeColor; 
@property (assign) unsigned long long autoPositionMask; 
@property (copy) NSString * frameAutosaveName; 
@property (assign) CGSize minSize; 
@property (assign) CGSize maxSize; 
@property (assign) char allowsToolTipsWhenApplicationIsInactive; 
@property (assign) char hasShadow; 
@property (assign) char autorecalculatesKeyViewLoop; 
@property (retain) NSToolbar * toolbar; 
@property (assign) unsigned long long windowSharingType; 
@property (assign) unsigned long long windowBackingLocation; 
@property (assign) CGSize contentMinSize; 
@property (assign) CGSize contentMaxSize; 
@property (assign) char showsToolbarButton; 
@property (assign) long long animationBehavior; 
@property (assign) unsigned long long collectionBehavior; 
@property (getter=isRestorable) char restorable; 
@property (nonatomic,retain) NSAppearance * appearance; 
@property (nonatomic,retain) NSViewController * contentViewController;              //@synthesize contentViewController=_contentViewController - In the implementation block
@property (assign) CGSize minFullScreenContentSize; 
@property (assign) CGSize maxFullScreenContentSize; 
@property (assign) char minFullScreenContentSizeIsSet;                              //@synthesize minFullScreenContentSizeIsSet=_minFullScreenContentSizeIsSet - In the implementation block
@property (assign) char maxFullScreenContentSizeIsSet;                              //@synthesize maxFullScreenContentSizeIsSet=_maxFullScreenContentSizeIsSet - In the implementation block
@property (nonatomic,copy) NSString * tabbingIdentifier;                            //@synthesize tabbingIdentifier=_tabbingIdentifier - In the implementation block
@property (assign) long long tabbingMode;                                           //@synthesize tabbingMode=_tabbingMode - In the implementation block
@property (assign) long long toolbarStyle;                                          //@synthesize toolbarStyle=_toolbarStyle - In the implementation block
@property (assign) long long titleVisibility;                                       //@synthesize titleVisibility=_titleVisibility - In the implementation block
@property (assign) char titlebarAppearsTransparent;                                 //@synthesize titlebarAppearsTransparent=_titlebarAppearsTransparent - In the implementation block
@property (assign) long long titlebarSeparatorStyle;                                //@synthesize titlebarSeparatorStyle=_titlebarSeparatorStyle - In the implementation block
@property (assign) long long contentTitlebarSeparatorStyle;                         //@synthesize contentTitlebarSeparatorStyle=_contentTitlebarSeparatorStyle - In the implementation block
@property (assign) long long level;                                                 //@synthesize level=_level - In the implementation block
@property (copy) NSString * identifier; 
+(void)initialize;
-(void)dealloc;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSString *)identifier;
-(void)setTitle:(NSString *)arg1 ;
-(void)setIdentifier:(NSString *)arg1 ;
-(long long)level;
-(NSString *)className;
-(NSString *)title;
-(NSString *)subtitle;
-(void)setSubtitle:(NSString *)arg1 ;
-(CGSize)minFullScreenContentSize;
-(CGSize)minSize;
-(CGSize)maxSize;
-(NSAppearance *)appearance;
-(void)setLevel:(long long)arg1 ;
-(long long)titleVisibility;
-(NSString *)tabbingIdentifier;
-(void)setTabbingIdentifier:(NSString *)arg1 ;
-(long long)tabbingMode;
-(void)setTabbingMode:(long long)arg1 ;
-(unsigned long long)styleMask;
-(char)titlebarAppearsTransparent;
-(void)setReleasedWhenClosed:(char)arg1 ;
-(void)setCollectionBehavior:(unsigned long long)arg1 ;
-(void)setHidesOnDeactivate:(char)arg1 ;
-(NSToolbar *)toolbar;
-(void)setToolbar:(NSToolbar *)arg1 ;
-(void)setRestorable:(char)arg1 ;
-(long long)animationBehavior;
-(void)setAnimationBehavior:(long long)arg1 ;
-(char)hidesOnDeactivate;
-(id)userInterfaceItemIdentifier;
-(void)setUserInterfaceItemIdentifier:(id)arg1 ;
-(unsigned long long)collectionBehavior;
-(void)setTitlebarAppearsTransparent:(char)arg1 ;
-(void)setContentViewController:(NSViewController *)arg1 ;
-(CGSize)maxFullScreenContentSize;
-(void)setHasShadow:(char)arg1 ;
-(void)setStyleMask:(unsigned long long)arg1 ;
-(void)setAppearance:(NSAppearance *)arg1 ;
-(NSViewController *)contentViewController;
-(void)setMinSize:(CGSize)arg1 ;
-(void)setMaxSize:(CGSize)arg1 ;
-(void)setClassName:(NSString *)arg1 ;
-(double)contentBorderThicknessForEdge:(unsigned long long)arg1 ;
-(NSString *)frameAutosaveName;
-(void)setFrameAutosaveName:(NSString *)arg1 ;
-(void)setTitleVisibility:(long long)arg1 ;
-(char)hasShadow;
-(id)nibInstantiate;
-(void)setOneShot:(char)arg1 ;
-(unsigned long long)autoPositionMask;
-(unsigned long long)interfaceStyle;
-(void)setInterfaceStyle:(unsigned long long)arg1 ;
-(void)setBackingType:(unsigned long long)arg1 ;
-(char)allowsToolTipsWhenApplicationIsInactive;
-(void)setShowsToolbarButton:(char)arg1 ;
-(void)setContentMinSize:(CGSize)arg1 ;
-(void)setContentMaxSize:(CGSize)arg1 ;
-(void)setAutorecalculatesKeyViewLoop:(char)arg1 ;
-(void)setAllowsToolTipsWhenApplicationIsInactive:(char)arg1 ;
-(char)autorecalculatesContentBorderThicknessForEdge:(unsigned long long)arg1 ;
-(char)showsToolbarButton;
-(CGSize)contentMinSize;
-(CGSize)contentMaxSize;
-(void)setContentBorderThickness:(double)arg1 forEdge:(unsigned long long)arg2 ;
-(long long)toolbarStyle;
-(void)setToolbarStyle:(long long)arg1 ;
-(void)setTitlebarSeparatorStyle:(long long)arg1 ;
-(unsigned long long)backingType;
-(void)setAutorecalculatesContentBorderThickness:(char)arg1 forEdge:(unsigned long long)arg2 ;
-(char)hasDynamicDepthLimit;
-(char)isRestorable;
-(long long)titlebarSeparatorStyle;
-(long long)contentTitlebarSeparatorStyle;
-(void)setContentTitlebarSeparatorStyle:(long long)arg1 ;
-(char)autorecalculatesKeyViewLoop;
-(char)isReleasedWhenClosed;
-(void)setDynamicDepthLimit:(char)arg1 ;
-(char)isOneShot;
-(void)setMinFullScreenContentSize:(CGSize)arg1 ;
-(void)setMaxFullScreenContentSize:(CGSize)arg1 ;
-(Class)windowClassForNibInstantiate;
-(char)minFullScreenContentSizeIsSet;
-(char)maxFullScreenContentSizeIsSet;
-(void)setMinFullScreenContentSizeIsSet:(char)arg1 ;
-(void)setMaxFullScreenContentSizeIsSet:(char)arg1 ;
-(char)isDeferred;
-(void)setDeferred:(char)arg1 ;
-(char)wantsToBeColor;
-(void)setWantsToBeColor:(char)arg1 ;
-(void)setAutoPositionMask:(unsigned long long)arg1 ;
-(unsigned long long)windowSharingType;
-(void)setWindowSharingType:(unsigned long long)arg1 ;
-(unsigned long long)windowBackingLocation;
-(void)setWindowBackingLocation:(unsigned long long)arg1 ;
@end

