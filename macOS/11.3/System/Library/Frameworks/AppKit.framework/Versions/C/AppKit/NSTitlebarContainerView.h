/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSView.h>

@protocol WindowSectionDelegate;
@class NSThemeFrame, _NSTitlebarDecorationView, NSView, NSWindowSectionController, NSMutableArray, NSTrackingArea, NSTimer;

@interface NSTitlebarContainerView : NSView {

	NSThemeFrame* _associatedThemeFrame;
	char _transparent;
	char _transparencyAllowedInFullScreen;
	char _drawsBottomDividerWhenTransparent;
	char _drawsDecorationView;
	_NSTitlebarDecorationView* _decorationView;
	NSView* _nonRootLayerBackedWindowChromeBackstopRenderingView;
	NSView* _windowDragDisablingView;
	double _sidebarDividerPosition;
	double _trailingSidebarDividerPosition;
	NSWindowSectionController* _windowSectionController;
	NSMutableArray* _sectionContentControllers;
	NSMutableArray* _dividerLayers;
	NSTrackingArea* _forceDisplayContentDividersTrackingArea;
	NSTimer* _forceDisplayContentDividersTimer;
	char _titlebarIsForcingDisplayOfDividers;
	char _updateDividerLayersOnLayout;
	id<WindowSectionDelegate> _windowSectionDelegate;

}

@property (getter=isTransparent) char transparent; 
@property (assign) char transparencyAllowedInFullScreen;                               //@synthesize transparencyAllowedInFullScreen=_transparencyAllowedInFullScreen - In the implementation block
@property (assign) char drawsBottomDividerWhenTransparent; 
@property (__weak) NSThemeFrame * associatedThemeFrame;                                //@synthesize associatedThemeFrame=_associatedThemeFrame - In the implementation block
@property (readonly) double titleHeightToHideInFullScreen; 
@property (assign) double buttonRevealAmount; 
@property (retain) _NSTitlebarDecorationView * decorationView;                         //@synthesize decorationView=_decorationView - In the implementation block
@property (assign) char drawsBottomSeparator; 
@property (assign) double sidebarDividerPosition; 
@property (assign) double trailingSidebarDividerPosition; 
@property (assign) char drawsDecorationView; 
@property (readonly) NSWindowSectionController * windowSectionController;              //@synthesize windowSectionController=_windowSectionController - In the implementation block
@property (__weak) id<WindowSectionDelegate> windowSectionDelegate;                    //@synthesize windowSectionDelegate=_windowSectionDelegate - In the implementation block
@property (readonly) char _titlebarIsForcingDisplayOfDividers; 
-(void)dealloc;
-(void)layout;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setSidebarDividerPosition:(double)arg1 ;
-(char)wantsUpdateLayer;
-(void)updateLayer;
-(double)sidebarDividerPosition;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)setFrameOrigin:(CGPoint)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)hitTest:(CGPoint)arg1 ;
-(void)viewDidChangeEffectiveAppearance;
-(void)viewDidMoveToWindow;
-(id)_themeFrame;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(char)mouseDownCanMoveWindow;
-(char)isTransparent;
-(void)setTransparent:(char)arg1 ;
-(void)_windowChangedKeyState;
-(id)menuForEvent:(id)arg1 ;
-(void)mouseUp:(id)arg1 ;
-(void)updateTrackingAreas;
-(void)setDrawsBottomSeparator:(char)arg1 ;
-(void)setButtonRevealAmount:(double)arg1 ;
-(NSThemeFrame *)associatedThemeFrame;
-(double)trailingSidebarDividerPosition;
-(void)setTrailingSidebarDividerPosition:(double)arg1 ;
-(void)setAssociatedThemeFrame:(NSThemeFrame *)arg1 ;
-(id)_nextResponderForEvent:(id)arg1 ;
-(char)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3 ;
-(CGSRegionObjectRef)_regionForOpaqueDescendants:(CGRect)arg1 forMove:(char)arg2 forUnderTitlebar:(char)arg3 ;
-(double)buttonRevealAmount;
-(double)titleHeightToHideInFullScreen;
-(void)setWindowSectionDelegate:(id<WindowSectionDelegate>)arg1 ;
-(NSWindowSectionController *)windowSectionController;
-(char)computed_titlebarIsForcingDisplayOfDividers;
-(char)transparencyAllowedInFullScreen;
-(void)setTransparencyAllowedInFullScreen:(char)arg1 ;
-(char)drawsBottomDividerWhenTransparent;
-(void)setDrawsBottomDividerWhenTransparent:(char)arg1 ;
-(NSEdgeInsets)safeAreaInsets;
-(char)drawsBottomSeparator;
-(void)_updateSectionContentControllers:(id)arg1 ;
-(void)_unsetForcedDividersAndUpdateRelatedViews;
-(void)_windowDidEnterFS;
-(void)_windowWillExitFS;
-(void)_windowDidExitFS;
-(void)_windowDidChangeSeparatorStyle;
-(void)_windowWillDrag;
-(void)_updateAllDividerLayersAnimated:(char)arg1 ;
-(void)_updateAllTitlebarBackgroundViewVEVs;
-(void)_stopForceShadowContentDividersTimer;
-(void)_forceDisplayOfDividers:(char)arg1 ;
-(void)_refreshLayerHitTesting;
-(void)_fullscreenWindowMoved:(id)arg1 ;
-(void)_setDividerLayersHidden:(char)arg1 ;
-(void)_startForceShadowContentDividersTimer;
-(_NSTitlebarDecorationView *)decorationView;
-(void)_unobserveWindow:(id)arg1 ;
-(id<WindowSectionDelegate>)windowSectionDelegate;
-(void)_syncDividerLayerCountToContentControllerCount;
-(void)_updateTitlebarWithSectionController:(id)arg1 ;
-(void)_updateDividerLayerForController:(id)arg1 animated:(char)arg2 ;
-(void)_updateTitlebarMaterialWithSectionController:(id)arg1 ;
-(void)_observeWindow:(id)arg1 ;
-(void)_updateNonRootLayerBackedWindowChromeBackstopRenderingView;
-(void)_configureLayer:(id)arg1 forDividerStyle:(long long)arg2 ;
-(char)drawsDecorationView;
-(void)setDrawsDecorationView:(char)arg1 ;
-(void)setDecorationView:(_NSTitlebarDecorationView *)arg1 ;
@end

