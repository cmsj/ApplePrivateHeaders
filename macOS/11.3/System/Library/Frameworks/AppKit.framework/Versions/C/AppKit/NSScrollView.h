/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSView.h>
#import <libobjc.A.dylib/NSGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/NSScrollViewSeparatorTrackingAdapter.h>
#import <libobjc.A.dylib/NSScrollerImpPairDelegate.h>
#import <libobjc.A.dylib/NSTextFinderBarContainer.h>

@protocol NSScrollViewDelegate;
@class NSView, NSClipView, NSScroller, NSRulerView, _NSScrollViewLayoutHelper, NSScrollingBehavior, NSScrollerImpPair, NSArray, _NSScrollViewFloatingSubviewsContainerView, _NSScrollViewFloatingDebugView, _NSScrollViewRulerLineView, _NSScrollViewMoreContentIndicatorView, NSGestureRecognizer, _NSScrollViewContentBackgroundView, NSScrollViewMirrorView, _NSDrawingHandlerView, NSHashTable, NSColor, NSCursor, NSString;

@interface NSScrollView : NSView <NSGestureRecognizerDelegate, NSScrollViewSeparatorTrackingAdapter, NSScrollerImpPairDelegate, NSTextFinderBarContainer> {

	NSClipView* _contentView;
	NSClipView* _headerClipView;
	struct {
		unsigned  : 5;
		unsigned findBarPosition : 2;
		unsigned predominantAxisScrolling : 1;
		unsigned hContentElasticity : 2;
		unsigned vContentElasticity : 2;
		unsigned  : 1;
		unsigned findBarVisible : 1;
		unsigned autoforwardsScrollWheelEvents : 1;
		unsigned autohidesScrollers : 1;
		unsigned  : 2;
		unsigned skipRemoveSuperviewCheck : 1;
		unsigned  : 1;
		unsigned needsTile : 1;
		unsigned hasVerticalRuler : 1;
		unsigned hasHorizontalRuler : 1;
		unsigned showRulers : 1;
		unsigned  : 1;
		unsigned borderType : 2;
		unsigned noDynamicScrolling : 1;
		unsigned hScrollerStatus : 1;
		unsigned vScrollerStatus : 1;
		unsigned hScrollerRequired : 1;
		unsigned vScrollerRequired : 1;
	}  _sFlags;
	NSScroller* _vScroller;
	NSScroller* _hScroller;
	NSView* _cornerView;
	id _extraIvars;
	NSRulerView* _horizontalRuler;
	NSRulerView* _verticalRuler;
	double _hPageAmt;
	double _vPageAmt;
	double _hLineAmt;
	double _vLineAmt;
	double _hThumbDestination;
	double _vThumbDestination;
	NSEdgeInsets _contentInsets;
	NSEdgeInsets _scrollerInsets;
	_NSScrollViewLayoutHelper* _baseContentAreaLayout;
	NSView* _findBarView;
	NSScrollingBehavior* _scrollingBehavior;
	NSScrollerImpPair* _scrollerImpPair;
	double _effectiveMagnification;
	double _magnification;
	double _minMagnification;
	double _maxMagnification;
	double _magnificationLock;
	CGPoint _lastSmartMagnificationLocation;
	CGRect _lastSmartMagnificationRect;
	CGPoint _magnificationAnchorPoint;
	NSScrollView* _synchronizedSiblingHorizontal;
	NSScrollView* _synchronizedSiblingVertical;
	id<NSScrollViewDelegate> _delegate;
	NSArray* _pageAlignmentsHorizontal;
	NSArray* _pageAlignmentsVertical;
	_NSScrollViewFloatingSubviewsContainerView* _floatingSubviewsHorizontalContainer;
	_NSScrollViewFloatingSubviewsContainerView* _floatingSubviewsVerticalContainer;
	_NSScrollViewFloatingDebugView* _floatingDebugView;
	_NSScrollViewRulerLineView* _currentRulerLineView;
	id _mouseDownMonitor;
	CGSize _decelerationRate;
	_NSScrollViewMoreContentIndicatorView* _moreLeftContentIndicator;
	_NSScrollViewMoreContentIndicatorView* _moreRightContentIndicator;
	_NSScrollViewMoreContentIndicatorView* _topShadowView;
	_NSScrollViewMoreContentIndicatorView* _bottomShadowView;
	NSGestureRecognizer* _panGestureRecognizer;
	_NSScrollViewContentBackgroundView* _contentBackgroundView;
	NSScrollViewMirrorView* _mirrorView;
	_NSDrawingHandlerView* _betweenScrollersView;
	NSHashTable* _registeredNonInterferingAccessoryViews;
	NSHashTable* _backgroundViews;
	double _topShadowTopInset;
	double _topShadowMinimumRequiredContentYOffset;
	unsigned _tilingContentView : 1;
	unsigned _inScrollGesture : 1;
	unsigned _hasAccessoryViewsInScrollerAreas : 1;
	unsigned _hasScrollOccurred : 1;
	unsigned _allowMagnification : 1;
	unsigned _suppressMagnificationUpdateFromBoundsChange : 1;
	unsigned _inMagnificationGesture : 1;
	unsigned _ignoreSynchronizedSiblings : 1;
	unsigned _delegateImplementsDidScroll : 1;
	unsigned _horizontalAxisScrollingMode : 2;
	unsigned _verticalAxisScrollingMode : 2;
	unsigned _stuntedForIB : 1;
	unsigned _automaticallyAdjustsContentInsets : 1;
	unsigned _haveCheckedForScrollerSizeMethodOverrides : 1;
	unsigned _useCompatibiltyScrollerWidthMethods : 1;
	unsigned _hasHorizontalMoreContentIndicators : 2;
	unsigned _inMagnificationAnimationCount : 8;
	unsigned _contentExtendsUnderHeader : 1;
	unsigned _isRegisteredWithWindowSectionController : 1;
	unsigned _hasTopShadowView : 1;
	unsigned _hasBottomShadowView : 1;

}

@property (assign) char rulersVisible; 
@property (assign) char hasHorizontalRuler; 
@property (assign) char hasVerticalRuler; 
@property (retain) NSRulerView * horizontalRulerView; 
@property (retain) NSRulerView * verticalRulerView; 
@property (readonly) NSEdgeInsets _distancesScrolledFromDocumentEdges; 
@property (readonly) CGRect _mirrorRect; 
@property (assign,setter=_setContentExtendsUnderHeader:,nonatomic) char _contentExtendsUnderHeader; 
@property (assign,setter=_setContentExtendsPastContentInsets:,nonatomic) char _contentExtendsPastContentInsets; 
@property (assign,nonatomic) char autoforwardsScrollWheelEvents; 
@property (setter=_setLineBorderColor:,nonatomic,retain) NSColor * _lineBorderColor; 
@property (assign,nonatomic) char drawsContentShadow; 
@property (__weak) id<NSScrollViewDelegate> delegate; 
@property (assign,setter=_setStuntedForIB:,getter=_isStuntedForIB,nonatomic) char _stuntedForIB; 
@property (assign) double decelerationRate; 
@property (assign) double horizontalScrollDecelerationFactor; 
@property (assign) double verticalScrollDecelerationFactor; 
@property (assign) char hasHorizontalMoreContentIndicators; 
@property (assign) NSEdgeInsets contentInset; 
@property (assign) char automaticallyAdjustsContentViewInsets; 
@property (readonly) NSClipView * _headerClipView; 
@property (assign) char hasTopShadow; 
@property (assign) char hasBottomShadow; 
@property (assign) double topShadowTopInset; 
@property (assign) double topShadowMinimumRequiredContentYOffset; 
@property (readonly) CGRect documentVisibleRect; 
@property (readonly) CGSize contentSize; 
@property (retain) NSView * documentView; 
@property (retain) NSClipView * contentView; 
@property (retain) NSCursor * documentCursor; 
@property (assign) unsigned long long borderType; 
@property (copy) NSColor * backgroundColor; 
@property (assign) char drawsBackground; 
@property (assign) char hasVerticalScroller; 
@property (assign) char hasHorizontalScroller; 
@property (retain) NSScroller * verticalScroller; 
@property (retain) NSScroller * horizontalScroller; 
@property (assign) char autohidesScrollers; 
@property (assign) double horizontalLineScroll; 
@property (assign) double verticalLineScroll; 
@property (assign) double lineScroll; 
@property (assign) double horizontalPageScroll; 
@property (assign) double verticalPageScroll; 
@property (assign) double pageScroll; 
@property (assign) char scrollsDynamically; 
@property (assign) long long scrollerStyle; 
@property (assign) long long scrollerKnobStyle; 
@property (assign) long long horizontalScrollElasticity; 
@property (assign) long long verticalScrollElasticity; 
@property (assign) char usesPredominantAxisScrolling; 
@property (assign) char allowsMagnification; 
@property (assign) double magnification; 
@property (assign) double maxMagnification; 
@property (assign) double minMagnification; 
@property (assign) char automaticallyAdjustsContentInsets; 
@property (assign) NSEdgeInsets contentInsets; 
@property (assign) NSEdgeInsets scrollerInsets; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) CGRect scrollViewFrame; 
@property (readonly) char hasScrolledContentsUnderTitlebar; 
@property (readonly) double separatorOffset; 
@property (retain) NSView * findBarView; 
@property (getter=isFindBarVisible) char findBarVisible; 
+(void)initialize;
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)defaultAnimationForKey:(id)arg1 ;
+(id)_findScrollViewToAutoLiveScrollInWindow:(id)arg1 ;
+(CGSize)frameSizeForContentSize:(CGSize)arg1 hasHorizontalScroller:(char)arg2 hasVerticalScroller:(char)arg3 borderType:(unsigned long long)arg4 ;
+(Class)_verticalScrollerClass;
+(CGSize)contentSizeForFrameSize:(CGSize)arg1 hasHorizontalScroller:(char)arg2 hasVerticalScroller:(char)arg3 borderType:(unsigned long long)arg4 ;
+(CGSize)contentSizeForFrameSize:(CGSize)arg1 horizontalScrollerClass:(Class)arg2 verticalScrollerClass:(Class)arg3 borderType:(unsigned long long)arg4 controlSize:(unsigned long long)arg5 scrollerStyle:(long long)arg6 ;
+(char)isCompatibleWithResponsiveScrolling;
+(CGSize)frameSizeForContentSize:(CGSize)arg1 horizontalScrollerClass:(Class)arg2 verticalScrollerClass:(Class)arg3 borderType:(unsigned long long)arg4 controlSize:(unsigned long long)arg5 scrollerStyle:(long long)arg6 ;
+(Class)_horizontalScrollerClass;
+(void)_drawBetweenScrollersWidgetInRect:(CGRect)arg1 withSmallSize:(char)arg2 ;
+(id)keyPathsForValuesAffectingSeparatorOffset;
+(id)keyPathsForValuesAffectingDocumentView;
+(char)automaticallyNotifiesObserversOfDocumentView;
+(void)_drawCornerWidgetInRect:(CGRect)arg1 withSmallSize:(char)arg2 ;
+(Class)rulerViewClass;
+(void)setRulerViewClass:(Class)arg1 ;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id<NSScrollViewDelegate>)delegate;
-(void)setDelegate:(id<NSScrollViewDelegate>)arg1 ;
-(void)didChangeValueForKey:(id)arg1 ;
-(void)layout;
-(void)_update;
-(void)setBackgroundColor:(NSColor *)arg1 ;
-(char)isFlipped;
-(char)isOpaque;
-(void)updateLayer;
-(void)setNeedsLayout:(char)arg1 ;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)setFrameOrigin:(CGPoint)arg1 ;
-(void)removeFromSuperview;
-(void)addSubview:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(char)acceptsFirstResponder;
-(id)accessibilityAttributeNames;
-(NSClipView *)contentView;
-(id)hitTest:(CGPoint)arg1 ;
-(void)viewDidChangeEffectiveAppearance;
-(void)setBorderType:(unsigned long long)arg1 ;
-(void)setHasVerticalScroller:(char)arg1 ;
-(void)setVerticalScrollElasticity:(long long)arg1 ;
-(void)setHasHorizontalScroller:(char)arg1 ;
-(NSScroller *)horizontalScroller;
-(void)setHorizontalScrollElasticity:(long long)arg1 ;
-(void)setAutomaticallyAdjustsContentInsets:(char)arg1 ;
-(void)setContentInsets:(NSEdgeInsets)arg1 ;
-(void)setHasHorizontalMoreContentIndicators:(char)arg1 ;
-(void)setDocumentView:(NSView *)arg1 ;
-(void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3 ;
-(char)hasHorizontalMoreContentIndicators;
-(NSColor *)backgroundColor;
-(void)setDrawsBackground:(char)arg1 ;
-(NSView *)documentView;
-(char)_wantsPageAlignedHorizontalAxis;
-(void)_setWantsPageAlignedHorizontalAxis:(char)arg1 ;
-(char)_wantsPageAlignedVerticalAxis;
-(void)_setWantsPageAlignedVerticalAxis:(char)arg1 ;
-(char)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(Class)_animatorClass;
-(char)accessibilityIsIgnored;
-(id)accessibilityParameterizedAttributeNames;
-(void)setContentView:(NSClipView *)arg1 ;
-(id)accessibilityRoleAttribute;
-(id)accessibilityPositionAttribute;
-(id)accessibilitySizeAttribute;
-(char)accessibilityIsAttributeSettable:(id)arg1 ;
-(void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2 ;
-(id)accessibilityActionNames;
-(id)accessibilityActionDescription:(id)arg1 ;
-(void)accessibilityPerformAction:(id)arg1 ;
-(void)setLayer:(id)arg1 ;
-(id)accessibilityChildrenAttribute;
-(id)_contentView;
-(void)setNextKeyView:(id)arg1 ;
-(void)setHasTopShadow:(char)arg1 ;
-(void)setHasBottomShadow:(char)arg1 ;
-(void)drawRect:(CGRect)arg1 ;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)restoreStateWithCoder:(id)arg1 ;
-(NSScroller *)verticalScroller;
-(void)_automateLiveScroll;
-(char)_shouldUseFocusRingMask;
-(void)viewWillDraw;
-(unsigned long long)borderType;
-(void)willRemoveSubview:(id)arg1 ;
-(Class)_classToCheckForWantsUpdateLayer;
-(id)accessibilityContentsAttribute;
-(char)accessibilityIsContentsAttributeSettable;
-(char)hasHorizontalScroller;
-(void)tile;
-(void)setAutohidesScrollers:(char)arg1 ;
-(char)autohidesScrollers;
-(CGRect)documentVisibleRect;
-(void)setAutoforwardsScrollWheelEvents:(char)arg1 ;
-(CGSize)contentSize;
-(void)_setLineBorderColor:(id)arg1 ;
-(void)setHorizontalLineScroll:(double)arg1 ;
-(void)setScrollerInsets:(NSEdgeInsets)arg1 ;
-(long long)scrollerStyle;
-(NSEdgeInsets)contentInsets;
-(double)horizontalLineScroll;
-(char)automaticallyAdjustsContentInsets;
-(char)becomeFirstResponder;
-(char)needsPanelToBecomeKey;
-(void)_handleBoundsChangeForSubview:(id)arg1 ;
-(char)drawsBackground;
-(void)setScrollerStyle:(long long)arg1 ;
-(void)_doScroller:(id)arg1 hitPart:(long long)arg2 multiplier:(double)arg3 ;
-(void)scrollWheel:(id)arg1 ;
-(void)_overlayScroller:(id)arg1 didBecomeShown:(char)arg2 ;
-(void)_lockOverlayScrollerState:(unsigned long long)arg1 ;
-(void)_unlockOverlayScrollerState;
-(char)_accessoryViewMightInterfereWithOverlayScrollers:(id)arg1 ;
-(CGRect)_boundsInsetForBorder;
-(id)scrollerImpPair;
-(void)setLineScroll:(double)arg1 ;
-(char)hasVerticalScroller;
-(id)accessibilityHorizontalScrollBarAttribute;
-(char)accessibilityIsHorizontalScrollBarAttributeSettable;
-(void)_setWindow:(id)arg1 ;
-(void)drawFocusRingMask;
-(void)reflectScrolledClipView:(id)arg1 ;
-(void)scrollClipView:(id)arg1 toPoint:(CGPoint)arg2 ;
-(void)viewWillMoveToSuperview:(id)arg1 ;
-(char)_allowsVerticalStretching;
-(char)_allowsHorizontalStretching;
-(NSClipView *)_headerClipView;
-(CGRect)_insetBounds;
-(void)_reflectDocumentViewBoundsChange;
-(double)verticalLineScroll;
-(double)_repeatMultiplier:(double)arg1 ;
-(void)flashScrollers;
-(void)_informDelegateUserDidLiveScroll;
-(void)setDocumentCursor:(NSCursor *)arg1 ;
-(char)drawsContentShadow;
-(void)setDrawsContentShadow:(char)arg1 ;
-(NSEdgeInsets)contentInset;
-(void)setContentInset:(NSEdgeInsets)arg1 ;
-(NSCursor *)documentCursor;
-(void)viewWillStartLiveResize;
-(void)viewDidEndLiveResize;
-(void)updateTrackingAreas;
-(void)setVerticalScroller:(NSScroller *)arg1 ;
-(void)pageDown:(id)arg1 ;
-(void)pageUp:(id)arg1 ;
-(void)viewDidChangeBackingProperties;
-(double)magnification;
-(void)magnifyWithEvent:(id)arg1 ;
-(void)setMagnification:(double)arg1 ;
-(double)_magnification;
-(char)_hasRectangularFocusRingAroundFrame;
-(CGRect)focusRingMaskBounds;
-(void)_updateTrackingAreasWithInvalidCursorRects:(char)arg1 ;
-(void)_automatedLiveScrollingWillBegin;
-(void)_automatedLiveScrollingDidEnd;
-(void)_endScrollGesture;
-(unsigned long long)_scrollingModeForAxis:(long long)arg1 ;
-(void)_beginScrollGesture;
-(double)decelerationRate;
-(NSView *)findBarView;
-(CGSRegionObjectRef)_regionForOpaqueDescendants:(CGRect)arg1 forMove:(char)arg2 ;
-(char)_isConcurrentScrollingCompatible;
-(void)setHorizontalScroller:(NSScroller *)arg1 ;
-(char)_gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(id)accessibilityScrollToShowDescendantAttributeForParameter:(id)arg1 ;
-(void)_tileIfNeeded;
-(void)geometryInWindowDidChange;
-(void)viewDidHide;
-(void)viewDidUnhide;
-(void)smartMagnifyWithEvent:(id)arg1 ;
-(void)beginGestureWithEvent:(id)arg1 ;
-(void)endGestureWithEvent:(id)arg1 ;
-(void)_updateRulerlineForRuler:(id)arg1 oldPosition:(double)arg2 newPosition:(double)arg3 vertical:(char)arg4 ;
-(char)rulersVisible;
-(void)setRulersVisible:(char)arg1 ;
-(id)_cornerView;
-(NSRulerView *)horizontalRulerView;
-(NSRulerView *)verticalRulerView;
-(id)accessibilityVerticalScrollBarAttribute;
-(char)hasHorizontalRuler;
-(char)hasVerticalRuler;
-(id)_accessibilityAdditionalChildren;
-(double)horizontalPageScroll;
-(double)verticalPageScroll;
-(char)accessibilityIsVerticalScrollBarAttributeSettable;
-(double)_destinationFloatValueForScroller:(id)arg1 ;
-(void)_conditionallyReflectScrolledClipView;
-(char)_overlayScrollersShown;
-(void)_sortSubviews;
-(void)resizeSubviewsWithOldSize:(CGSize)arg1 ;
-(char)usesPredominantAxisScrolling;
-(id)_pageAlignmentsForAxis:(long long)arg1 ;
-(id)_synchronizedSiblingsForAxis:(long long)arg1 ;
-(CGSize)_stretchAmount;
-(void)_unregisterNonInterferingAccessoryView:(id)arg1 ;
-(void)_registerNonInterferingAccessoryView:(id)arg1 ;
-(void)_setScrollingMode:(unsigned long long)arg1 forAxis:(long long)arg2 ;
-(double)_verticalScrollerWidthWithBorder;
-(void)_addBackgroundView:(id)arg1 ;
-(void)showActiveFirstResponderIndication;
-(void)_setContentExtendsUnderHeader:(char)arg1 ;
-(char)_contentExtendsUnderHeader;
-(void)addFloatingSubview:(id)arg1 forAxis:(long long)arg2 ;
-(id)_pointInVisibleScroller:(CGPoint)arg1 ;
-(void)setHasHorizontalRuler:(char)arg1 ;
-(void)setHasVerticalRuler:(char)arg1 ;
-(void)_drawRect:(CGRect)arg1 clip:(char)arg2 ;
-(void)_viewDidDrawInLayer:(id)arg1 inContext:(CGContextRef)arg2 ;
-(void)setDecelerationRate:(double)arg1 ;
-(double)horizontalScrollDecelerationFactor;
-(void)setHorizontalScrollDecelerationFactor:(double)arg1 ;
-(double)verticalScrollDecelerationFactor;
-(void)setVerticalScrollDecelerationFactor:(double)arg1 ;
-(id)_copySubviewsInOrderOfDisplay;
-(char)_shouldUseInclusiveLayersAutomatically;
-(long long)findBarPosition;
-(char)isFindBarVisible;
-(char)_cornerViewHidesWithVerticalScroller;
-(char)_usesOverlayScrollers;
-(NSEdgeInsets)scrollerInsets;
-(id)_floatingSubviewsContainerForAxis:(long long)arg1 ;
-(void)_pulseOverlayScrollers;
-(void)_informDelegateWillStartLiveScroll;
-(void)_informDelegateDidEndLiveScroll;
-(char)_willCoverBackingStore;
-(char)_hasNonLayeredOverlappingSiblingView;
-(void)_scrollViewWillMoveToWindow:(id)arg1 ;
-(void)_scrollViewDidMoveToWindow;
-(void)_setMirrorView:(id)arg1 ;
-(void)_resetOverlayScrollerFlashForWindowOrderOut:(id)arg1 ;
-(void)_ensureOverlayScrollerFlashForWindowOrderIn:(id)arg1 ;
-(void)_dynamicColorsChanged:(id)arg1 ;
-(void)_snapRubberBandDueToNotification:(id)arg1 ;
-(id)_mirrorView;
-(double)_horizontalScrollerHeight;
-(double)_verticalScrollerWidth;
-(double)_horizontalScrollerHeightWithBorder;
-(void)_setContentViewFrame:(CGRect)arg1 ;
-(void)_setVerticalScrollerHidden:(char)arg1 ;
-(void)_setHorizontalScrollerHidden:(char)arg1 ;
-(void)_tileWithoutRecursing;
-(long long)scrollerKnobStyle;
-(void)setScrollerKnobStyle:(long long)arg1 ;
-(char)_documentViewWantsHeaderView;
-(char)_fixHeaderAndCornerViews;
-(CGRect)_betweenScrollersRect;
-(void)_drawBetweenScrollersWidgetInRect:(CGRect)arg1 ;
-(NSColor *)_lineBorderColor;
-(void)_drawOldSchoolFocusRingIfNecessaryInRect:(CGRect)arg1 ;
-(void)_dirtyFocusRingOrMask;
-(void)_updateWithDisplay;
-(void)_newScroll:(char)arg1 ;
-(void)_commonNewScroll:(id)arg1 ;
-(void)_doScroller:(id)arg1 ;
-(void)_scrollerDidBeginTracking:(id)arg1 ;
-(void)_scrollerDidEndTracking:(id)arg1 ;
-(void)setVerticalLineScroll:(double)arg1 ;
-(void)setHorizontalPageScroll:(double)arg1 ;
-(void)setVerticalPageScroll:(double)arg1 ;
-(char)_pinnedInDirectionX:(double)arg1 y:(double)arg2 ;
-(long long)verticalScrollElasticity;
-(long long)horizontalScrollElasticity;
-(char)allowsMagnification;
-(void)_beginMagnifyGesture;
-(void)_setMagnification:(double)arg1 centeredAroundPoint:(CGPoint)arg2 animate:(char)arg3 ;
-(void)_endMagnifyGesture;
-(double)maxMagnification;
-(double)minMagnification;
-(void)_smartMagnifyToRect:(CGRect)arg1 centeredAt:(CGPoint)arg2 animate:(char)arg3 ;
-(void)_beginMagnifying;
-(void)_endMagnifying;
-(void)_scrollPageInDirection:(int)arg1 ;
-(void)_applyContentAreaLayout:(id)arg1 ;
-(void)_updateBetweenScrollersView;
-(char)_canOptInToConcurrentScrolling;
-(void)_setIngoreSynchronizedSiblings:(char)arg1 ;
-(void)_setMagnification:(double)arg1 ;
-(void)_magnifyToFitRect:(CGRect)arg1 animate:(char)arg2 ;
-(id)_synchronizedSiblingForAxis:(long long)arg1 ;
-(double)separatorOffset;
-(CGRect)contentAreaRectForScrollerImpPair:(id)arg1 ;
-(char)inLiveResizeForScrollerImpPair:(id)arg1 ;
-(CGPoint)mouseLocationInContentAreaForScrollerImpPair:(id)arg1 ;
-(CGPoint)scrollerImpPair:(id)arg1 convertContentPoint:(CGPoint)arg2 toScrollerImp:(id)arg3 ;
-(void)scrollerImpPair:(id)arg1 setContentAreaNeedsDisplayInRect:(CGRect)arg2 ;
-(void)scrollerImpPair:(id)arg1 updateScrollerStyleForNewRecommendedScrollerStyle:(long long)arg2 ;
-(char)scrollerImpPair:(id)arg1 isContentPointVisible:(CGPoint)arg2 ;
-(void)findBarViewDidChangeHeight;
-(void)setFindBarView:(NSView *)arg1 ;
-(void)setFindBarVisible:(char)arg1 ;
-(CGRect)computedScrollViewFrame;
-(char)computedHasScrolledContentsUnderTitlebar;
-(NSEdgeInsets)computed_distancesScrolledFromDocumentEdges;
-(CGRect)_mirrorRect;
-(void)setScrollsDynamically:(char)arg1 ;
-(char)scrollsDynamically;
-(char)hasTopShadow;
-(void)setTopShadowTopInset:(double)arg1 ;
-(double)topShadowTopInset;
-(void)setTopShadowMinimumRequiredContentYOffset:(double)arg1 ;
-(double)topShadowMinimumRequiredContentYOffset;
-(char)hasBottomShadow;
-(void)_setScrollerNeedsDisplay:(id)arg1 ;
-(double)lineScroll;
-(void)setPageScroll:(double)arg1 ;
-(double)pageScroll;
-(char)_pinnedInDirectionOfScroll:(id)arg1 ;
-(char)_hasScrollOccurredOutsideOfGesture;
-(void)_setHasScrollOccurredOutsideOfGesture:(char)arg1 ;
-(char)_gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2 ;
-(void)_gestureRecognizerFailed:(id)arg1 ;
-(void)_panWithGestureRecognizer:(id)arg1 ;
-(id)_magnificationInflectionPoints;
-(void)setUsesPredominantAxisScrolling:(char)arg1 ;
-(void)setFindBarPosition:(long long)arg1 ;
-(void)setAllowsMagnification:(char)arg1 ;
-(void)setMaxMagnification:(double)arg1 ;
-(void)setMinMagnification:(double)arg1 ;
-(void)magnifyToFitRect:(CGRect)arg1 ;
-(void)setMagnification:(double)arg1 centeredAtPoint:(CGPoint)arg2 ;
-(void)_setPageAlignments:(id)arg1 forAxis:(long long)arg2 ;
-(void)addFloatingHeaderView:(id)arg1 forAxis:(long long)arg2 ;
-(void)removeFloatingHeaderView:(id)arg1 ;
-(void)_resetScrollingBehavior;
-(char)autoforwardsScrollWheelEvents;
-(void)_hideOverlayScrollers;
-(char)_overlayScrollerStateIsLocked;
-(void)_setSynchronizedSibling:(id)arg1 forAxis:(long long)arg2 ;
-(void)_setStuntedForIB:(char)arg1 ;
-(char)_isStuntedForIB;
-(char)automaticallyAdjustsContentViewInsets;
-(void)setAutomaticallyAdjustsContentViewInsets:(char)arg1 ;
-(char)computed_contentExtendsPastContentInsets;
-(void)setHorizontalRulerView:(NSRulerView *)arg1 ;
-(void)setVerticalRulerView:(NSRulerView *)arg1 ;
-(id)rulerStateDescription;
-(id)ns_widgetType;
@end

