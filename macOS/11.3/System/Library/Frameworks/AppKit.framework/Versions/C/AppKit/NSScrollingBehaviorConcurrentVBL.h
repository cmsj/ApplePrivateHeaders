/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSScrollingBehavior.h>
#import <libobjc.A.dylib/_NSScrollStateEventListener.h>

@class _NSScrollingConcurrentConstantData, _NSScrollingConcurrentVBLMonitor, _NSScrollingConcurrentEventMonitor, _NSScrollingConcurrentMainThreadSynchronizer, NSString;

@interface NSScrollingBehaviorConcurrentVBL : NSScrollingBehavior <_NSScrollStateEventListener> {

	id _theCakeIsALie;
	char* _timeOutCancelledPtr;
	unsigned long long _scrollingMode;
	opaque_pthread_mutex_t _mutex;
	long long _state;
	_NSScrollingConcurrentConstantData* _constantData;
	_NSScrollingConcurrentVBLMonitor* _vblMonitor;
	_NSScrollingConcurrentEventMonitor* _eventMonitor;
	_NSScrollingConcurrentMainThreadSynchronizer* _mainThreadSynchronizer;
	long long _gestureAxis;
	opaque_pthread_mutex_t _screenDisabledMutex;
	unsigned long long _gestureToken;
	unsigned long long _screenDisabledToken;
	/*^block*/id _completionHandler;
	struct {
		unsigned isCursorInTarget : 1;
		unsigned momentumAnimationMustAlign : 1;
		unsigned reserved : 30;
	}  _flags;

}

@property (assign) long long state; 
@property (assign) unsigned long long gestureToken; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(long long)state;
-(void)setState:(long long)arg1 ;
-(char)_isStretched;
-(void)scrollStateEvent:(long long)arg1 sender:(id)arg2 ;
-(id)_legacyBehavior;
-(id)scrollView:(id)arg1 responderToForwardMayBeginScrollEvent:(id)arg2 ;
-(id)scrollView:(id)arg1 responderToForwardScrollEvents:(id)arg2 ;
-(void)scrollView:(id)arg1 endScrollGestureDueToReason:(id)arg2 ;
-(void)scrollView:(id)arg1 scrollWheelWithEvent:(id)arg2 ;
-(void)_scrollView:(id)arg1 discreteScrollWithEvent:(id)arg2 ;
-(void)_scrollView:(id)arg1 smoothScrollWithEvent:(id)arg2 ;
-(void)_scrollView:(id)arg1 trackScrollMayBegin:(id)arg2 ;
-(void)_scrollView:(id)arg1 trackGestureScrollWithEvent:(id)arg2 ;
-(void)snapRubberBandOfScrollView:(id)arg1 ;
-(void)scrollView:(id)arg1 boundsChangedForClipView:(id)arg2 ;
-(void)automateLiveScrollOfScrollView:(id)arg1 ;
-(void)_automateLiveScrollOfScrollView:(id)arg1 ;
-(void)_startGestureScrollWithVBLFilter:(id)arg1 ;
-(void)_updatePageReferenceNumber;
-(void)_stopGestureScrollTracking;
-(char)_animateSwipePageAlignment;
-(char)_animateFreeMomentum;
-(void)_animateMomentum;
-(void)waitForEvent;
-(void)_beginPhysicalScroll;
-(void)checkForGestureContinuance;
-(unsigned long long)gestureToken;
-(char)_asynchronouslyAllowDelegateToModifyProposedPageAlignedOrigin:(double*)arg1 onAxis:(long long)arg2 withInitialOrigin:(double)arg3 velocity:(double)arg4 synchronousTimeout:(unsigned long long)arg5 gestureToken:(unsigned long long)arg6 ;
-(char)_asynchronouslyAllowDelegateToAdjustMomentum:(id)arg1 withInitialOrigin:(CGPoint)arg2 velocity:(CGPoint)arg3 synchronousTimeout:(unsigned long long)arg4 gestureToken:(unsigned long long)arg5 ;
-(void)scrollView:(id)arg1 panWithGestureRecognizer:(id)arg2 ;
-(char)scrollView:(id)arg1 panGestureRecognizer:(id)arg2 shouldReceiveTouch:(id)arg3 ;
-(void)scrollView:(id)arg1 panGestureRecognizerFailed:(id)arg2 ;
-(char)supportsConcurrentScrolling;
-(void)setGestureToken:(unsigned long long)arg1 ;
-(void)noteUnexpectedScrollDetected;
-(void)noteUnexpectedScrollCompensated;
@end

