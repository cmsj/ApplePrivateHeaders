/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:59 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <libobjc.A.dylib/_NSBinderPlugin.h>

@protocol _NSBinderPlugin <NSObject>
@required
+(char)isUsableWithObject:(id)arg1;
+(id)objectMechanismsRequiredForObject:(id)arg1;
+(id)_deprecatedBindings;
-(id)initWithBinder:(id)arg1 object:(id)arg2;
-(char)handleObservingRefresh:(id)arg1;
-(char)observeKeyPathForBindingInfo:(id)arg1 registerOrUnregister:(char)arg2 object:(id)arg3;
-(void)connectionWasEstablished:(id)arg1;
-(void)connectionWasBroken:(id)arg1;
-(Class)defaultPlaceholderLookupClassForBinding:(id)arg1 object:(id)arg2;
-(char)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char*)arg3;
-(char)shouldUseInvalidationForObject:(id)arg1;

@end


@class NSString;

@interface _NSBinderPlugin : NSObject <_NSBinderPlugin> {

	id _binder;
	struct {
		unsigned _isTableColumnPlugin : 1;
		unsigned _isOutlineColumnPlugin : 1;
		unsigned _isCellPlugin : 1;
		unsigned _reservedBinderPlugin : 29;
	}  _binderPluginFlags;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)isUsableWithObject:(id)arg1 ;
+(id)objectMechanismsRequiredForObject:(id)arg1 ;
+(id)_deprecatedBindings;
-(id)initWithBinder:(id)arg1 object:(id)arg2 ;
-(char)handleObservingRefresh:(id)arg1 ;
-(char)observeKeyPathForBindingInfo:(id)arg1 registerOrUnregister:(char)arg2 object:(id)arg3 ;
-(void)connectionWasEstablished:(id)arg1 ;
-(void)connectionWasBroken:(id)arg1 ;
-(Class)defaultPlaceholderLookupClassForBinding:(id)arg1 object:(id)arg2 ;
-(char)acceptsMarker:(id)arg1 binding:(id)arg2 overrideWithPlaceholderIfDefined:(char*)arg3 ;
-(char)shouldUseInvalidationForObject:(id)arg1 ;
-(id)cellOrControlForObject:(id)arg1 ;
-(char)needsAction;
-(id)viewForObject:(id)arg1 ;
-(char)isEditingWithObject:(id)arg1 ;
-(char)isEditingAtIndex:(unsigned long long)arg1 withObject:(id)arg2 ;
-(char)isEditingAtIndexPath:(id)arg1 withObject:(id)arg2 ;
-(id)editorWithObject:(id)arg1 ;
-(id)objectMechanismsRequired;
-(id)indexPathForOutlineView:(id)arg1 row:(long long)arg2 ;
-(char)isInvalidationCapableObject:(id)arg1 withSelector:(SEL)arg2 ;
@end

