/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <libobjc.A.dylib/NSCoding.h>

@protocol NSGestureRecognizerDelegate;
@class NSMutableArray, NSView, NSMutableSet, NSPressureConfiguration, NSTouchDevice;

@interface NSGestureRecognizer : NSObject <NSCoding> {

	NSMutableArray* _targets;
	id _target;
	SEL _action;
	NSMutableArray* _delayedEvents;
	NSView* _view;
	id<NSGestureRecognizerDelegate> _delegate;
	NSMutableSet* _friends;
	long long _state;
	unsigned long long _gestureFlags;
	unsigned long long _delayFlags;
	NSMutableSet* _failureRequirements;
	NSMutableSet* _failureDependents;
	NSMutableSet* _dynamicFailureRequirements;
	NSMutableSet* _dynamicFailureDependents;
	id _failureMap;
	NSPressureConfiguration* _activePressureConfiguration;
	NSTouchDevice* _touchDevice;
	long long _touchContextId;
	unsigned long long _allowedTouchTypes;
	struct {
		unsigned sendsActionWhenPossible : 1;
		unsigned privateDelegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer : 1;
		unsigned delegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer : 1;
		unsigned viewIsUnsafeUnretained : 1;
		unsigned delegateIsUnsafeUnretained : 1;
		unsigned targetIsUnsafeUnretained : 1;
		unsigned privateDelegateShouldReceiveTouch : 1;
		unsigned delegateShouldReceiveTouch : 1;
		unsigned reserved : 24;
	}  _additionalFlags;

}

@property (nonatomic,readonly) NSMutableSet * _failureRequirements;                     //@synthesize failureRequirements=_failureRequirements - In the implementation block
@property (nonatomic,readonly) NSMutableSet * _failureDependents;                       //@synthesize failureDependents=_failureDependents - In the implementation block
@property (nonatomic,readonly) NSMutableSet * _dynamicFailureRequirements;              //@synthesize dynamicFailureRequirements=_dynamicFailureRequirements - In the implementation block
@property (nonatomic,readonly) NSMutableSet * _dynamicFailureDependents;                //@synthesize dynamicFailureDependents=_dynamicFailureDependents - In the implementation block
@property (__weak) id target; 
@property (assign) SEL action;                                                          //@synthesize action=_action - In the implementation block
@property (readonly) long long state; 
@property (__weak) id<NSGestureRecognizerDelegate> delegate; 
@property (getter=isEnabled) char enabled; 
@property (readonly) NSView * view; 
@property (retain) NSPressureConfiguration * pressureConfiguration; 
@property (assign) char delaysPrimaryMouseButtonEvents; 
@property (assign) char delaysSecondaryMouseButtonEvents; 
@property (assign) char delaysOtherMouseButtonEvents; 
@property (assign) char delaysKeyEvents; 
@property (assign) char delaysMagnificationEvents; 
@property (assign) char delaysRotationEvents; 
+(id)_mostCompatibleRecognizerFromConfigured:(id)arg1 ;
-(void)dealloc;
-(id)description;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id<NSGestureRecognizerDelegate>)delegate;
-(void)setDelegate:(id<NSGestureRecognizerDelegate>)arg1 ;
-(long long)state;
-(void)setTarget:(id)arg1 ;
-(id)target;
-(void)setEnabled:(char)arg1 ;
-(void)_invalidate;
-(char)isEnabled;
-(SEL)action;
-(void)setState:(long long)arg1 ;
-(void)setAction:(SEL)arg1 ;
-(NSView *)view;
-(void)reset;
-(void)setView:(NSView *)arg1 ;
-(CGPoint)locationInView:(id)arg1 ;
-(id)initWithTarget:(id)arg1 action:(SEL)arg2 ;
-(void)_appendSubclassDescription:(id)arg1 ;
-(void)tabletPoint:(id)arg1 ;
-(void)pressureChangeWithEvent:(id)arg1 ;
-(id)_desiredPressureBehavior;
-(char)shouldRequireFailureOfGestureRecognizer:(id)arg1 ;
-(void)setAllowedTouchTypes:(unsigned long long)arg1 ;
-(void)mouseDown:(id)arg1 ;
-(void)_queueForResetIfFinished;
-(unsigned long long)modifierFlags;
-(void)_setFailureMap:(id)arg1 ;
-(NSMutableSet *)_failureRequirements;
-(NSMutableSet *)_dynamicFailureRequirements;
-(char)_isDirty;
-(id)_briefDescription;
-(id)_failureMap;
-(void)_failureRequirementCompleted:(id)arg1 ;
-(NSMutableSet *)_failureDependents;
-(NSMutableSet *)_dynamicFailureDependents;
-(void)rightMouseDown:(id)arg1 ;
-(void)keyDown:(id)arg1 ;
-(char)acceptsFirstMouse:(id)arg1 ;
-(void)mouseDragged:(id)arg1 ;
-(void)mouseUp:(id)arg1 ;
-(void)setDelaysMagnificationEvents:(char)arg1 ;
-(void)magnifyWithEvent:(id)arg1 ;
-(void)translateWithEvent:(id)arg1 ;
-(void)touchesBeganWithEvent:(id)arg1 ;
-(void)touchesMovedWithEvent:(id)arg1 ;
-(void)touchesEndedWithEvent:(id)arg1 ;
-(void)touchesCancelledWithEvent:(id)arg1 ;
-(char)canPreventGestureRecognizer:(id)arg1 ;
-(char)shouldBeArchived;
-(void)rightMouseUp:(id)arg1 ;
-(void)keyUp:(id)arg1 ;
-(void)setDelaysPrimaryMouseButtonEvents:(char)arg1 ;
-(void)setDelaysSecondaryMouseButtonEvents:(char)arg1 ;
-(void)setDelaysOtherMouseButtonEvents:(char)arg1 ;
-(void)flagsChanged:(id)arg1 ;
-(void)rightMouseDragged:(id)arg1 ;
-(void)otherMouseDown:(id)arg1 ;
-(void)otherMouseDragged:(id)arg1 ;
-(void)otherMouseUp:(id)arg1 ;
-(long long)_touchContextId;
-(id)_touchDevice;
-(id)_descriptionForTouchBarLogging;
-(unsigned long long)allowedTouchTypes;
-(char)_delegateShouldReceiveTouch:(id)arg1 ;
-(char)_delayEvent:(id)arg1 ;
-(void)_setDirty;
-(void)_setTouchDevice:(id)arg1 ;
-(void)_setTouchContextId:(long long)arg1 ;
-(void)setPressureConfiguration:(NSPressureConfiguration *)arg1 ;
-(NSPressureConfiguration *)pressureConfiguration;
-(void)setDelaysRotationEvents:(char)arg1 ;
-(void)rotateWithEvent:(id)arg1 ;
-(void)quickLookWithEvent:(id)arg1 ;
-(void)_resetGestureRecognizer;
-(void)requireOtherGestureToFail:(id)arg1 ;
-(id)_activePressureConfiguration;
-(void)_cancelRecognition;
-(unsigned long long)_acceptedEventMask;
-(char)_delegateShouldAttemptToRecognizeWithEvent:(id)arg1 ;
-(char)_hasDelayedEvents;
-(char)wantsForceGestureEvents;
-(void)setSendsActionWhenPossible:(char)arg1 ;
-(void)_didSendActions;
-(char)_shouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)arg1 ;
-(char)shouldBeRequiredToFailByGestureRecognizer:(id)arg1 ;
-(char)canBePreventedByGestureRecognizer:(id)arg1 ;
-(void)_clearReferencesToRelatedGesture:(id)arg1 ;
-(void)_enqueueDelayedEventsToSend;
-(void)_clearUpdateTimer;
-(void)_noteDesiredPressureBehaviorChanged;
-(char)_shouldBegin;
-(void)_updateGestureStateAfterDelay:(char)arg1 ;
-(char)sendsActionWhenPossible;
-(char)_isFriendWithGesture:(id)arg1 ;
-(void)_clearDelayedEvents;
-(char)_isRecognized;
-(void)_willBeginAfterSatisfyingFailureRequirements;
-(char)_delegateShouldSendActionWhenPossibleConcurrentlyWithRecognizer:(id)arg1 ;
-(void)_removeActiveGestureRecognizerFromTouchDevice;
-(void)_updateGesture;
-(char)_affectedByGesture:(id)arg1 ;
-(char)_delegateCanPreventGestureRecognizer:(id)arg1 ;
-(void)_removeFailureDependent:(id)arg1 ;
-(void)_appendDescriptionToString:(id)arg1 atLevel:(int)arg2 includingDependencies:(char)arg3 ;
-(char)delaysPrimaryMouseButtonEvents;
-(char)delaysSecondaryMouseButtonEvents;
-(char)delaysOtherMouseButtonEvents;
-(char)delaysKeyEvents;
-(char)delaysMagnificationEvents;
-(char)delaysRotationEvents;
-(void)_appendDescription:(id)arg1 forDependencies:(id)arg2 toString:(id)arg3 atLevel:(int)arg4 ;
-(void)addTarget:(id)arg1 action:(SEL)arg2 ;
-(void)removeTarget:(id)arg1 action:(SEL)arg2 ;
-(void)setDelaysKeyEvents:(char)arg1 ;
-(char)cancelsTouchesInView;
-(void)setCancelsTouchesInView:(char)arg1 ;
-(char)_requiresSystemGesturesToFail;
-(void)_setRequiresSystemGesturesToFail:(char)arg1 ;
-(id)_delayedEvents;
-(char)_hasTargets;
-(void)_setWantsFunctionRowTouches:(char)arg1 ;
-(char)_wantsFunctionRowTouches;
-(char)_shouldRequireFailureOfGestureRecognizer:(id)arg1 ;
-(char)_shouldBeRequiredToFailByGestureRecognizer:(id)arg1 ;
-(void)_eventWasCancelled:(id)arg1 ;
-(char)_requiresGestureRecognizerToFail:(id)arg1 ;
-(void)_delayedUpdateGesture;
-(void)_resetIfFinished;
-(long long)_depthFirstViewCompare:(id)arg1 ;
-(void)_addFriendGesture:(id)arg1 ;
-(char)_isExcludedByGesture:(id)arg1 ;
-(void)_exclude;
-(void)_addFailureDependent:(id)arg1 ;
-(void)_addDynamicFailureDependent:(id)arg1 ;
-(void)_addDynamicFailureRequirement:(id)arg1 ;
-(void)removeFailureRequirement:(id)arg1 ;
-(void)_setAcceptsFailureRequiments:(char)arg1 ;
-(char)_acceptsFailureRequirements;
@end

