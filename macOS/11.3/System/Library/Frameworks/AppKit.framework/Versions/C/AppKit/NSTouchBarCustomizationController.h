/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <libobjc.A.dylib/NSTouchBarCustomizationPreviewViewControllerDelegate.h>
#import <libobjc.A.dylib/NSTouchBarCustomizationCursorManagerDelegate.h>
#import <libobjc.A.dylib/NSDraggingSource.h>
#import <libobjc.A.dylib/NSTouchBarCustomizationPaletteViewControllerDelegate.h>
#import <libobjc.A.dylib/_NSFunctionRowCustomizationDragTargetDelegate.h>
#import <libobjc.A.dylib/NSAppExceptionListener.h>
#import <libobjc.A.dylib/NSWindowDelegate.h>

@class NSMenuItem, NSMenu, NSArray, NSTouchBarCustomizationPaletteOverlayWindow, NSTouchBarCustomizationPaletteViewController, NSTouchBar, NSFunctionRow, NSTouchBarCustomizationPreviewViewController, NSTouchBarCustomizationCursorManager, NSTouchBarItemTree, NSTouchBarItem, NSMutableArray, NSValue, NSString;

@interface NSTouchBarCustomizationController : NSObject <NSTouchBarCustomizationPreviewViewControllerDelegate, NSTouchBarCustomizationCursorManagerDelegate, NSDraggingSource, NSTouchBarCustomizationPaletteViewControllerDelegate, _NSFunctionRowCustomizationDragTargetDelegate, NSAppExceptionListener, NSWindowDelegate> {

	NSMenuItem* _mainMenuItem;
	char _mainMenuItemWasAutomaticallyAdded;
	NSMenu* _mainSubmenu;
	NSArray* _auxiliaryMenuItems;
	NSArray* _overlayWindows;
	NSTouchBarCustomizationPaletteOverlayWindow* _paletteWindow;
	NSTouchBarCustomizationPaletteViewController* _appPaletteViewController;
	NSTouchBarCustomizationPaletteViewController* _miniBarPaletteViewController;
	NSTouchBarCustomizationPaletteViewController* _systemBarPaletteViewController;
	NSArray* _currentResponderTouchBars;
	NSArray* _activeTouchBars;
	NSTouchBar* _currentPopoverTouchBar;
	NSFunctionRow* _customizationRow;
	NSTouchBarCustomizationPreviewViewController* _customizationRowViewController;
	NSTouchBarCustomizationCursorManager* _cursorManager;
	NSTouchBarItemTree* _draggedItemTree;
	NSTouchBarItem* _draggedItem;
	unsigned long long _oldPresentationOptions;
	CFStringRef _oldMenuBarDisplayIdentifier;
	NSMutableArray* _barsToReset;
	NSMutableArray* _barsToUpdate;
	NSValue* _oldKeyWindow;
	long long _activeState;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy) NSArray * activeTouchBars;                           //@synthesize activeTouchBars=_activeTouchBars - In the implementation block
@property (copy,readonly) NSTouchBarItemTree * itemTree; 
@property (copy) NSArray * currentResponderTouchBars;                 //@synthesize currentResponderTouchBars=_currentResponderTouchBars - In the implementation block
@property (retain) NSTouchBar * currentPopoverTouchBar;               //@synthesize currentPopoverTouchBar=_currentPopoverTouchBar - In the implementation block
+(id)keyPathsForValuesAffectingItemTree;
-(void)dealloc;
-(char)cursorManager:(id)arg1 shouldEnterTouchBarAtPoint:(CGPoint)arg2 isDragging:(char)arg3 ;
-(CGPoint)cursorManager:(id)arg1 didMoveTouchBarCursorToPoint:(CGPoint)arg2 withDelta:(CGSize)arg3 mouseIsDown:(char)arg4 ;
-(void)cursorManager:(id)arg1 didMouseDownInTouchBarAtPoint:(CGPoint)arg2 ;
-(CGPoint)cursorManager:(id)arg1 didMouseUpInTouchBarAtPoint:(CGPoint)arg2 ;
-(CGPoint)cursorManager:(id)arg1 didEnterTouchBarAtPoint:(CGPoint)arg2 mouseIsDown:(char)arg3 ;
-(void)cursorManagerDidExitTouchBar:(id)arg1 atScreenLocation:(CGPoint)arg2 cancelled:(char)arg3 ;
-(void)application:(id)arg1 willReportException:(id)arg2 willCrash:(char)arg3 willShow:(char)arg4 ;
-(char)windowShouldClose:(id)arg1 ;
-(void)installMenuItemIfNeeded;
-(void)setCurrentResponderTouchBars:(NSArray *)arg1 ;
-(void)removeMenuItem;
-(void)setCurrentPopoverTouchBar:(NSTouchBar *)arg1 ;
-(void)toggleControlStripCustomizationPalette:(id)arg1 ;
-(char)validateTouchBarCustomizationPaletteItem:(id)arg1 ;
-(NSTouchBarItemTree *)itemTree;
-(void)draggingSession:(id)arg1 willBeginAtPoint:(CGPoint)arg2 ;
-(unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2 ;
-(void)draggingSession:(id)arg1 endedAtPoint:(CGPoint)arg2 operation:(unsigned long long)arg3 ;
-(void)draggingSession:(id)arg1 movedToPoint:(CGPoint)arg2 ;
-(void)_quickTypeDidChange:(id)arg1 ;
-(void)dragTarget:(id)arg1 mouseEntered:(id)arg2 ;
-(void)dragTarget:(id)arg1 mouseExited:(id)arg2 ;
-(unsigned long long)dragTarget:(id)arg1 draggingEntered:(id)arg2 ;
-(unsigned long long)dragTarget:(id)arg1 draggingUpdated:(id)arg2 ;
-(void)dragTarget:(id)arg1 draggingExited:(id)arg2 ;
-(void)dragTarget:(id)arg1 draggingConcluded:(id)arg2 ;
-(void)_addMenuItemToMainMenuIfNecessary:(id)arg1 ;
-(void)toggleCustomizationPalette:(id)arg1 forceControlStrip:(char)arg2 ;
-(char)_touchBarsAreCustomizable:(id)arg1 ;
-(NSArray *)currentResponderTouchBars;
-(void)setActiveTouchBars:(NSArray *)arg1 ;
-(void)savePresentationOptions;
-(void)restorePresentationOptions;
-(NSArray *)activeTouchBars;
-(void)_prepareCustomizationDFRFWithCustomizedRect:(CGRect)arg1 inPopover:(char)arg2 ;
-(char)activeTouchBarIsCustomizable;
-(void)controller:(id)arg1 didSelectSection:(long long)arg2 ;
-(void)_showCustomizationDFR;
-(void)_closeCustomizationPalette;
-(void)_prepareToHideCustomizationDFR;
-(void)toggleCustomizationPalette:(id)arg1 ;
-(void)_closeWithoutAnimating;
-(NSTouchBar *)currentPopoverTouchBar;
-(void)controllerDidComplete:(id)arg1 ;
-(void)controller:(id)arg1 didRemoveQuickTypeFromBarNode:(id)arg2 inItemTree:(id)arg3 ;
-(void)controller:(id)arg1 didUpdateBarNode:(id)arg2 inItemTree:(id)arg3 ;
-(void)controller:(id)arg1 didResetBarNode:(id)arg2 inItemTree:(id)arg3 ;
-(void)controllerWillBeginDragging:(id)arg1 ;
-(void)controllerDidEndDragging:(id)arg1 ;
-(void)controller:(id)arg1 accessibilityAddItem:(id)arg2 ;
-(void)controllerAccessibilityResetTouchBar:(id)arg1 ;
@end

