/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AppKit/AppKit-Structs.h>
@class NSDictionary, NSPanel, NSView, NSViewController, NSArray;

@interface NSSpellChecker : NSObject {

	id _guessesBrowser;
	id _wordField;
	id _languagePopUp;
	id _topLevelPanels;
	id _panel;
	id _correctButton;
	id _guessButton;
	id _ignoreButton;
	id _languagesBrowser;
	id _quotesBrowser;
	id _replacementsBrowser;
	id _defineButton;
	struct {
		unsigned autoShowGuesses : 1;
		unsigned needDelayedGuess : 1;
		unsigned unignoreInProgress : 1;
		unsigned wordFieldEdited : 1;
		unsigned inSpelling : 1;
		unsigned reconnectSpelling : 1;
		unsigned inGrammar : 1;
		unsigned reconnectGrammar : 1;
		unsigned languageIdentification : 1;
		unsigned languagesHidden : 1;
		unsigned quotesByLanguage : 1;
		unsigned _reserved : 21;
	}  _scFlags;
	id _substitutionsPanel;
	id _learnButton;
	id _infoField;
	id _grammarControl;

}

@property (copy,readonly) NSDictionary * userReplacementsDictionary; 
@property (readonly) NSPanel * spellingPanel; 
@property (retain) NSView * accessoryView; 
@property (readonly) NSPanel * substitutionsPanel; 
@property (retain) NSViewController * substitutionsPanelAccessoryViewController; 
@property (copy,readonly) NSArray * availableLanguages; 
@property (copy,readonly) NSArray * userPreferredLanguages; 
@property (assign) char automaticallyIdentifiesLanguages; 
+(id)sharedSpellChecker;
+(char)sharedSpellCheckerExists;
+(void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(char)isAutomaticSpellingCorrectionEnabled;
+(char)isAutomaticQuoteSubstitutionEnabled;
+(char)isAutomaticDashSubstitutionEnabled;
+(char)isAutomaticTextReplacementEnabled;
+(char)isAutomaticTextCompletionEnabled;
+(char)isAutomaticTextCompletionCollapsed;
+(void)_recordKeyDownEvent:(id)arg1 ;
+(void)_recordAutocorrectionEventType:(id)arg1 language:(id)arg2 ;
+(id)_keyEventArray;
+(void)_recordAcceptanceType:(id)arg1 language:(id)arg2 charactersTyped:(unsigned long long)arg3 charactersAccepted:(unsigned long long)arg4 ;
+(void)_finishRecordingTypingSession;
+(char)_shouldRecognizeDoubleSpaceForKeyDownEvent:(id)arg1 andKeyDownEvent:(id)arg2 ;
+(char)_shouldPerformDoubleSpaceReplacementAfterString:(id)arg1 ;
+(long long)uniqueSpellDocumentTag;
+(char)isAutomaticCapitalizationEnabled;
+(char)isAutomaticPeriodSubstitutionEnabled;
+(id)_keyEventData;
+(void)_recordTypedWord:(id)arg1 misspelled:(char)arg2 ;
+(char)_shouldRecognizeDoubleSpaceForKeyDownEvents:(id)arg1 ;
+(char)_shouldRecognizeDoubleSpaceForKeyDownEvent:(id)arg1 ;
+(id)_doubleSpaceReplacementAfterString:(id)arg1 ;
+(void)_startLoadOfScanner:(id)arg1 ;
-(id)init;
-(void)setAccessoryView:(NSView *)arg1 ;
-(id)language;
-(char)setLanguage:(id)arg1 ;
-(void)_normalizeUserDictionary:(id)arg1 ;
-(NSView *)accessoryView;
-(void)windowDidBecomeKey:(id)arg1 ;
-(void)awakeFromNib;
-(NSPanel *)spellingPanel;
-(void)window:(id)arg1 willEncodeRestorableState:(id)arg2 ;
-(void)window:(id)arg1 didDecodeRestorableState:(id)arg2 ;
-(id)_responder;
-(long long)numberOfRowsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4 ;
-(char)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3 ;
-(unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4 ;
-(char)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4 ;
-(void)controlTextDidBeginEditing:(id)arg1 ;
-(void)controlTextDidEndEditing:(id)arg1 ;
-(void)controlTextDidChange:(id)arg1 ;
-(char)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3 ;
-(void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4 ;
-(char)tableView:(id)arg1 shouldEditTableColumn:(id)arg2 row:(long long)arg3 ;
-(void)tableViewSelectionDidChange:(id)arg1 ;
-(void)setAutomaticTextCompletionEnabled:(char)arg1 ;
-(char)isAutomaticSpellingCorrectionEnabled;
-(void)setAutomaticSpellingCorrectionEnabled:(char)arg1 ;
-(char)isAutomaticQuoteSubstitutionEnabled;
-(void)setAutomaticQuoteSubstitutionEnabled:(char)arg1 ;
-(char)isAutomaticDashSubstitutionEnabled;
-(void)setAutomaticDashSubstitutionEnabled:(char)arg1 ;
-(char)isAutomaticTextReplacementEnabled;
-(void)setAutomaticTextReplacementEnabled:(char)arg1 ;
-(char)isAutomaticTextCompletionEnabled;
-(void)confirmSheet:(id)arg1 ;
-(void)cancelSheet:(id)arg1 ;
-(void)_setLastCorrectionPanelExplicitlyAccepted:(char)arg1 rejected:(char)arg2 ;
-(void)_clearLastCorrectionPanel;
-(char)isAutomaticTextCompletionCollapsed;
-(void)setAutomaticTextCompletionCollapsed:(char)arg1 ;
-(void)recordAcceptedCandidateIndex:(unsigned long long)arg1 inCandidates:(id)arg2 firstCandidateIsTypedString:(char)arg3 ;
-(id)userQuotesArrayForLanguage:(id)arg1 ;
-(void)checkTextInDocument:(id)arg1 ;
-(char)_fillSpellCheckerPopupButton:(id)arg1 ;
-(id)_defaultServerURL;
-(char)_setLanguage:(id)arg1 ;
-(void)setCompletionLanguage:(id)arg1 ;
-(char)_usePerAppLanguageIdentification;
-(long long)_selectedLanguageIndex;
-(void)_setPreferredOrthographyIndexes;
-(void)_initializeLanguagesArraysAlreadyLockedFromLanguages:(id)arg1 baseLanguages:(id)arg2 multilingualIndex:(unsigned long long)arg3 ;
-(void)_startMonitoringKeyEvents;
-(id)_nameOfDictionaryForDocumentTag:(long long)arg1 ;
-(char)_inSystemPreferences;
-(void)_languagePreferencesChanged:(char)arg1 ;
-(void)_changeLanguage:(id)arg1 ;
-(char)_inSetupAssistant;
-(id)_titleForSelectedItem;
-(void)_changeLanguageFromMenu:(id)arg1 ;
-(void)_fillLanguagePopUp:(id)arg1 ;
-(void)_windowDidBecomeVisible:(id)arg1 ;
-(void)_reallyChooseGuess:(id)arg1 ;
-(void)setupGuessesBrowser;
-(long long)_indexOfItemInArray:(id)arg1 forLanguage:(id)arg2 ;
-(long long)_indexOfItemInPopUp:(id)arg1 forLanguage:(id)arg2 ;
-(void)_setSelectedLanguageIndex:(long long)arg1 ;
-(void)_setGuessLanguageIndex:(long long)arg1 ;
-(long long)_guessLanguageIndex;
-(id)_firstResponderForWindow:(id)arg1 ;
-(void)_updateControl:(id)arg1 forResponder:(id)arg2 getSelector:(SEL)arg3 setSelector:(SEL)arg4 toggleSelector:(SEL)arg5 ;
-(void)_updateGrammar;
-(void)_activateControl:(id)arg1 forResponder:(id)arg2 setSelector:(SEL)arg3 toggleSelector:(SEL)arg4 ;
-(void)_initUI;
-(void)_replaceAccessoryView:(id)arg1 with:(id)arg2 topView:(id)arg3 ;
-(id)_spellServers;
-(char)_launchSpellChecker:(long long)arg1 error:(id*)arg2 ;
-(void)_removeSpellServerWithName:(id)arg1 ;
-(id)_spellServerWithName:(id)arg1 ;
-(id)_findServerWithSelectedIndex;
-(long long)_tagForSelectedItem;
-(void)_addSpellServer:(id)arg1 withName:(id)arg2 ;
-(id)guessLanguage;
-(void)recordSentenceCorrections:(id)arg1 ;
-(id)_chosenSpellServer:(char)arg1 launchIfNecessary:(char)arg2 ;
-(id)_learnOrForgetOrInvalidate:(long long)arg1 word:(id)arg2 dictionary:(id)arg3 language:(id)arg4 ephemeral:(long long)arg5 ;
-(id)_userDictionariesBySettingLanguageDictionaryName:(id)arg1 documentDictionaryName:(id)arg2 ;
-(void)learnWord:(id)arg1 language:(id)arg2 ;
-(void)forgetWord:(id)arg1 language:(id)arg2 ;
-(void)setIgnoredWords:(id)arg1 inSpellDocumentWithTag:(long long)arg2 ;
-(void)_chooseGuess:(id)arg1 ;
-(void)_changeQuotes:(id)arg1 ;
-(void)_updateSubstitutions;
-(void)_setSingleQuotes:(id)arg1 doubleQuotes:(id)arg2 ;
-(void)_addReplacement:(id)arg1 ;
-(void)_removeReplacement:(id)arg1 ;
-(void)_defineFromMenu:(id)arg1 ;
-(void)_copyFromMenu:(id)arg1 ;
-(void)_writeReplacementPreferences;
-(id)guessesForWordRange:(NSRange)arg1 inString:(id)arg2 language:(id)arg3 inSpellDocumentWithTag:(long long)arg4 ;
-(void)_setLastGuess:(id)arg1 ;
-(void)_setGuesses:(id)arg1 ;
-(void)_guess:(id)arg1 ;
-(void)updatePanels;
-(char)automaticallyIdentifiesLanguages;
-(void)setAutomaticallyIdentifiesLanguages:(char)arg1 ;
-(void)_preflightChosenSpellServer;
-(char)_shouldWriteLanguageSettingsToDefaults;
-(void)_configureLanguages:(id)arg1 ;
-(void)_openSystemPreferences:(id)arg1 ;
-(void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 ;
-(NSRange)_chunkAndCheckGrammarInString:(id)arg1 language:(id)arg2 usingSpellServer:(id)arg3 details:(id*)arg4 ;
-(id)_nonIgnoredDetailsForGrammarString:(id)arg1 details:(id)arg2 inSpellDocumentWithTag:(long long)arg3 ;
-(NSRange)_checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(char)arg4 inSpellDocumentWithTag:(long long)arg5 details:(id*)arg6 reconnectOnError:(char)arg7 ;
-(NSRange)checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(char)arg4 inSpellDocumentWithTag:(long long)arg5 details:(id*)arg6 ;
-(NSRange)checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(char)arg4 inSpellDocumentWithTag:(long long)arg5 details:(id*)arg6 reconnectOnError:(char)arg7 ;
-(long long)adjustOffsetToNextWordBoundaryInString:(id)arg1 startingAt:(long long)arg2 ;
-(NSRange)_chunkAndFindMisspelledWordInString:(id)arg1 language:(id)arg2 learnedDictionaries:(id)arg3 wordCount:(long long*)arg4 usingSpellServer:(id)arg5 ;
-(NSRange)_checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(char)arg4 inSpellDocumentWithTag:(long long)arg5 wordCount:(long long*)arg6 reconnectOnError:(char)arg7 ;
-(NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(char)arg4 inSpellDocumentWithTag:(long long)arg5 wordCount:(long long*)arg6 ;
-(NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(char)arg4 inSpellDocumentWithTag:(long long)arg5 wordCount:(long long*)arg6 reconnectOnError:(char)arg7 ;
-(id)_textCheckingResultsFromSpellServerData:(id)arg1 ;
-(char)preventsAutocorrectionBeforeString:(id)arg1 language:(id)arg2 ;
-(char)isSentenceCorrectionWord:(id)arg1 ;
-(id)_nonIgnoredGrammarCheckingResultForResult:(id)arg1 stringToCheck:(id)arg2 offset:(unsigned long long)arg3 inSpellDocumentWithTag:(long long)arg4 ;
-(id)completionLanguage;
-(void)updateSpellingPanelWithMisspelledWord:(id)arg1 ;
-(id)_responderForSubstitutions;
-(void)_updateSingleQuotes:(id)arg1 doubleQuotes:(id)arg2 useByLanguage:(id)arg3 ;
-(void)checkTextInSelection:(id)arg1 ;
-(void)_reallyResetReplacementPreferences;
-(id)defaultEmojiReplacementsDictionary;
-(void)setAdditionalTextReplacementsDictionary:(id)arg1 ;
-(long long)_requestCheckingOfString:(id)arg1 range:(NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 waitUntilFinished:(char)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)_retryCandidateOperation:(id)arg1 ;
-(long long)_requestCandidatesForSelectedRange:(NSRange)arg1 offset:(unsigned long long)arg2 inString:(id)arg3 types:(unsigned long long)arg4 options:(id)arg5 inSpellDocumentWithTag:(long long)arg6 completionHandler:(/*^block*/id)arg7 ;
-(long long)_requestCheckingAndCandidatesForSelectedRange:(NSRange)arg1 inString:(id)arg2 types:(unsigned long long)arg3 keyboardLanguage:(id)arg4 bundleIdentifier:(id)arg5 processID:(int)arg6 options:(id)arg7 inSpellDocumentWithTag:(long long)arg8 completionHandler:(/*^block*/id)arg9 ;
-(long long)requestCandidatesForSelectedRange:(NSRange)arg1 inString:(id)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 completionHandler:(/*^block*/id)arg6 ;
-(char)deletesAutospaceBetweenString:(id)arg1 andString:(id)arg2 language:(id)arg3 ;
-(char)isAutomaticCapitalizationEnabled;
-(char)isAutomaticPeriodSubstitutionEnabled;
-(id)languageMenu;
-(void)_hideLanguagePopUp;
-(void)_showLanguagePopUp;
-(long long)_indexOfPopupItemForLanguage:(id)arg1 ;
-(char)setGuessLanguage:(id)arg1 ;
-(NSArray *)availableLanguages;
-(NSArray *)userPreferredLanguages;
-(void)updateGrammar:(id)arg1 ;
-(void)_changeGrammar:(id)arg1 ;
-(void)setWordFieldStringValue:(id)arg1 ;
-(char)windowIsSpellingPanel:(id)arg1 ;
-(void)_preflightTextCheckingForTypes:(unsigned long long)arg1 ;
-(char)result:(id)arg1 isSentenceCorrectionInString:(id)arg2 ;
-(void)noteSentenceCorrectionResult:(id)arg1 grammarResult:(id)arg2 inString:(id)arg3 offset:(unsigned long long)arg4 ;
-(void)_learn:(id)arg1 ;
-(void)_forget:(id)arg1 ;
-(void)_ignore:(id)arg1 ;
-(void)ignoreWord:(id)arg1 inSpellDocumentWithTag:(long long)arg2 ;
-(void)learnWord:(id)arg1 ;
-(void)forgetWord:(id)arg1 ;
-(void)unlearnWord:(id)arg1 ;
-(char)hasLearnedWord:(id)arg1 ;
-(id)ignoredWordsInSpellDocumentWithTag:(long long)arg1 ;
-(void)closeSpellDocumentWithTag:(long long)arg1 ;
-(void)_correct:(id)arg1 ;
-(void)_setSingleQuotes:(id)arg1 doubleQuotes:(id)arg2 useByLanguage:(id)arg3 quotesBrowser:(id)arg4 replacementsBrowser:(id)arg5 addReplacement:(id)arg6 removeReplacement:(id)arg7 ;
-(char)tableView:(id)arg1 canDragRowsWithIndexes:(id)arg2 atPoint:(CGPoint)arg3 ;
-(void)_define:(id)arg1 ;
-(void)_setSelectionString:(id)arg1 ;
-(id)guessesForWord:(id)arg1 ;
-(id)stringForInputString:(id)arg1 language:(id)arg2 inSpellDocumentWithTag:(long long)arg3 ;
-(id)alternativesForPinyinInputString:(id)arg1 inSpellDocumentWithTag:(long long)arg2 ;
-(void)_doUpdate:(id)arg1 ;
-(void)_findNext:(id)arg1 ;
-(NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 ;
-(long long)countWordsInString:(id)arg1 language:(id)arg2 ;
-(id)correctionForWordRange:(NSRange)arg1 inString:(id)arg2 language:(id)arg3 inSpellDocumentWithTag:(long long)arg4 ;
-(void)recordResponse:(long long)arg1 toCorrection:(id)arg2 forWord:(id)arg3 language:(id)arg4 inSpellDocumentWithTag:(long long)arg5 ;
-(char)_checkSpellingAndGrammarInString:(id)arg1 range:(NSRange)arg2 enclosingRange:(NSRange)arg3 offset:(unsigned long long)arg4 types:(unsigned long long)arg5 options:(id)arg6 orthography:(id)arg7 inSpellDocumentWithTag:(long long)arg8 mutableResults:(id)arg9 wordCount:(long long*)arg10 ;
-(id)completionsForPartialWordRange:(NSRange)arg1 inString:(id)arg2 language:(id)arg3 inSpellDocumentWithTag:(long long)arg4 ;
-(id)completionDictionariesForPartialWordRange:(NSRange)arg1 inString:(id)arg2 language:(id)arg3 inSpellDocumentWithTag:(long long)arg4 ;
-(id)nextLetterDictionariesForPartialWordRange:(NSRange)arg1 inString:(id)arg2 language:(id)arg3 inSpellDocumentWithTag:(long long)arg4 ;
-(id)candidatesForSelectedRange:(NSRange)arg1 inString:(id)arg2 types:(unsigned long long)arg3 options:(id)arg4 offset:(unsigned long long)arg5 orthography:(id)arg6 inSpellDocumentWithTag:(long long)arg7 ;
-(void)updateSpellingPanelWithMisspelledWordRange:(NSRange)arg1 inString:(id)arg2 ;
-(void)updateSpellingPanelWithGrammarString:(id)arg1 detail:(id)arg2 ;
-(NSPanel *)substitutionsPanel;
-(NSViewController *)substitutionsPanelAccessoryViewController;
-(void)setSubstitutionsPanelAccessoryViewController:(NSViewController *)arg1 ;
-(void)_changeSubstitutions:(id)arg1 ;
-(void)_quotesPreferencesChanged;
-(void)_resetReplacementPreferences;
-(void)_replacementPreferencesChanged;
-(NSDictionary *)userReplacementsDictionary;
-(id)_legacyUserReplacementsDictionary;
-(id)menuForResult:(id)arg1 string:(id)arg2 options:(id)arg3 atLocation:(CGPoint)arg4 inView:(id)arg5 ;
-(long long)requestCheckingOfString:(id)arg1 range:(NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)checkString:(id)arg1 range:(NSRange)arg2 types:(unsigned long long)arg3 options:(id)arg4 inSpellDocumentWithTag:(long long)arg5 orthography:(id*)arg6 wordCount:(long long*)arg7 ;
-(long long)_requestCheckingAndCandidatesForSelectedRange:(NSRange)arg1 inString:(id)arg2 types:(unsigned long long)arg3 keyboardLanguage:(id)arg4 processID:(int)arg5 options:(id)arg6 inSpellDocumentWithTag:(long long)arg7 completionHandler:(/*^block*/id)arg8 ;
-(id)languageForWordRange:(NSRange)arg1 inString:(id)arg2 orthography:(id)arg3 ;
-(void)showCorrectionIndicatorOfType:(long long)arg1 primaryString:(id)arg2 alternativeStrings:(id)arg3 forStringInRect:(CGRect)arg4 view:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)showCorrectionBubbleOfType:(long long)arg1 primaryString:(id)arg2 alternativeStrings:(id)arg3 forStringInRect:(CGRect)arg4 view:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(long long)showCorrection:(id)arg1 forStringInRect:(CGRect)arg2 view:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)dismissCorrection:(long long)arg1 acceptCorrection:(char)arg2 ;
-(void)dismissCorrectionWithTag:(long long)arg1 andAccept:(char)arg2 ;
-(void)dismissCorrectionIndicatorForView:(id)arg1 ;
-(void)cancelCorrectionIndicatorForView:(id)arg1 ;
-(void)dismissCorrectionBubbleForView:(id)arg1 ;
-(void)cancelCorrectionBubbleForView:(id)arg1 ;
-(void)makeCorrectionBubbleKeyForView:(id)arg1 ;
-(id)correctionIndicatorForView:(id)arg1 ;
-(void)dismissAuxiliaryWindows;
-(void)setAutomaticCapitalizationEnabled:(char)arg1 ;
-(void)setAutomaticPeriodSubstitutionEnabled:(char)arg1 ;
-(char)deletesAutospaceBeforeString:(id)arg1 language:(id)arg2 ;
-(char)insertsAutospaceAfterString:(id)arg1 language:(id)arg2 ;
-(void)_setTestCorrectionDictionary:(id)arg1 ;
-(void)_newDictionary:(id)arg1 ;
-(void)_changeDictionaries:(id)arg1 ;
-(void)_openDictionaries:(id)arg1 ;
-(void)_deleteDictionaries:(id)arg1 ;
@end

