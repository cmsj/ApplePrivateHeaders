/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol NSObject;
@class NSString, NSBundle, CUICatalog, NSColor;

@interface NSAppearance : NSObject <NSSecureCoding> {

	NSString* _name;
	NSBundle* _bundle;
	OpaqueCUIRendererRefRef _coreUIRenderer;
	CUICatalog* _coreUICatalog;
	int _defaultBlendMode;
	NSColor* _tintColor;
	NSColor* _cachedNormalizedBezelTintColor;
	double _bezelBrightness;
	double _glyphBrightness;
	unsigned long long _colorTemperature;
	id<NSObject> _functionRowAppearanceShouldChangeALSAttributesNotificationToken;
	char _preventArchiving;
	char _allowsVibrancy;
	char _supportsWhitePointAdjustments;
	char _supportsBrightnessAdjustments;
	char _allowsSystemTintColors;
	char _allowsCustomTintColors;

}

@property (readonly) char _backstoppedByFullAppearance; 
@property (readonly) double _textGlyphBrightnessMultiplier; 
@property (readonly) unsigned long long _textGlyphColorTemperature; 
@property (readonly) char _prefersMoreHorizontalContentIndicators; 
@property (readonly) char _prefersSliderAccessoryStepBehavior; 
@property (readonly) CGSize _minimumSizeForStandardButton; 
@property (readonly) CGSize _minimumSizeForToolbarButton; 
@property (readonly) CGSize _minimumSizeForSmallToolbarButton; 
@property (readonly) CGSize _minimumSizeForCompressedButton; 
@property (readonly) CGSize _minimumSizeForStandardSegment; 
@property (readonly) CGSize _minimumSizeForCompressedSegment; 
@property (readonly) char _allowsScrollers; 
@property (readonly) char _disallowsFontSmoothing; 
@property (readonly) NSColor * tintColor; 
@property (copy,readonly) NSString * name;                                       //@synthesize name=_name - In the implementation block
@property (readonly) char allowsVibrancy; 
+(char)supportsSecureCoding;
+(id)currentAppearance;
+(void)_performWithCurrentAppearance:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
+(id)_applicationAppearance;
+(id)appearanceNamed:(id)arg1 ;
+(void)_initializeCoreUI;
+(char)_isLightTintColor:(id)arg1 ;
+(void)setCurrentAppearance:(id)arg1 ;
+(id)currentDrawingAppearance;
+(id)_systemAppearanceProxy;
+(id)_menuBarAppearanceProxy;
+(void)_setSystemAppearanceTestingOverride:(long long)arg1 ;
+(id)_functionRowAppearance;
+(id)_fauxVibrantLightAppearance;
+(id)_fauxVibrantDarkAppearance;
+(id)colorByAdjustingLightnessOfColor:(id)arg1 darker:(char)arg2 ;
+(id)_coreUIOptionsSharedKeySet;
+(void)setFunctionRowALSAttributes:(id)arg1 ;
+(void)_setSystemAppearanceTestingOverrides:(unsigned long long)arg1 ;
+(unsigned long long)_systemAppearanceTestingOverrides;
+(unsigned long long)_effectiveSystemAppearanceOverrides;
+(id)_aquaAppearance;
+(id)_contentBackgroundAppearance;
+(id)_syrahAppearance;
+(id)_aquaAppearanceWithAccessibility:(char)arg1 ;
+(id)_vibrantDarkAppearance;
+(id)_vibrantLightAppearance;
+(id)_controlStripAppearance;
+(id)_touchBarCustomizationPaletteAppearance;
+(id)_controlStripCustomizationPaletteAppearance;
+(id)_darkAquaAppearanceWithAccessibility:(char)arg1 ;
+(id)_darkAquaAppearance;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(id)debugDescription;
-(id)init;
-(NSString *)name;
-(Class)classForCoder;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)uniqueIdentifier;
-(id)_bundle;
-(id)bestMatchFromAppearancesWithNames:(id)arg1 ;
-(char)_allowsVibrancyForColor:(id)arg1 ;
-(id)_defaultCompositingFilter;
-(char)allowsVibrancy;
-(void)setShouldBeArchived:(char)arg1 ;
-(char)_resolvesToFunctionRowAppearanceForWidget:(id)arg1 ;
-(id)imageNamed:(id)arg1 ;
-(char)_drawInRect:(CGRect)arg1 context:(CGContextRef)arg2 options:(id)arg3 ;
-(NSColor *)tintColor;
-(id)_customColor:(id)arg1 withSystemEffectOptions:(id)arg2 ;
-(id)_customColor:(id)arg1 withTint:(id)arg2 ;
-(char)_usesMetricsAppearance;
-(id)_copyMeasurements:(CGRect)arg1 context:(CGContextRef)arg2 options:(id)arg3 requestedMeasurements:(id)arg4 ;
-(int)_defaultBlendMode;
-(void)_commonInit;
-(id)systemFontForControlSize:(unsigned long long)arg1 weight:(double)arg2 ;
-(char)_idealContentInsets:(NSEdgeInsets*)arg1 maximumContentInsets:(NSEdgeInsets*)arg2 forWidget:(id)arg3 ;
-(CGSize)_minimumSizeForCompressedButton;
-(CGSize)_minimumSizeForStandardButton;
-(CGSize)_minimumSizeForToolbarButton;
-(CGSize)_minimumSizeForSmallToolbarButton;
-(CGSize)_frameSizeForWidget:(id)arg1 ;
-(NSEdgeInsets)_alignmentRectInsetsForWidget:(id)arg1 ;
-(NSEdgeInsets)_contentInsetsForWidget:(id)arg1 ;
-(char)_createOrUpdateLayer:(id*)arg1 options:(id)arg2 ;
-(void)performAsCurrentDrawingAppearance:(/*^block*/id)arg1 ;
-(char)_isTintedWithLightColor;
-(char)_isBuiltinAppearance;
-(id)resolvedAppearanceForWidget:(id)arg1 ;
-(id)resolvedAppearanceForWidget:(id)arg1 variant:(id)arg2 ;
-(char)_allowsCustomControlTintColors;
-(char)_isFunctionRowAppearance;
-(id)_appearanceForNonVibrantContent;
-(int)_blendModeForWidget:(id)arg1 ;
-(int)_blendModeForAttributedString:(id)arg1 ;
-(id)resolvedAppearanceForStyleName:(id)arg1 styleConfiguration:(id)arg2 ;
-(id)_coreUICatalog;
-(OpaqueCUIRendererRefRef)_coreUIRenderer;
-(CGColorRef)_copyCustomCGColor:(id)arg1 withTint:(id)arg2 ;
-(id)initWithAppearanceNamed:(id)arg1 bundle:(id)arg2 ;
-(char)shouldBeArchived;
-(void)_setTintColor:(id)arg1 ;
-(id)_compositingFilterForWidget:(id)arg1 ;
-(CGSize)_minimumSizeForCompressedSegment;
-(CGSize)_minimumSizeForStandardSegment;
-(id)appearanceByApplyingTintColor:(id)arg1 ;
-(int)blendModeForStyleName:(id)arg1 styleConfiguration:(id)arg2 ;
-(id)compositingFilterForStyleName:(id)arg1 styleConfiguration:(id)arg2 tintColor:(id)arg3 ;
-(double)_textGlyphBrightnessMultiplier;
-(unsigned long long)_textGlyphColorTemperature;
-(id)resolvedAppearanceForWidget:(id)arg1 styleConfiguration:(id)arg2 ;
-(char)_backstoppedByFullAppearance;
-(id)_refreshedAppearance;
-(CGSize)_intrinsicContentSizeForWidget:(id)arg1 ;
-(id)resolvedAppearanceForColor:(id)arg1 ;
-(id)_appearanceForVibrantContent;
-(id)_customColor:(id)arg1 ;
-(CGImageRef)_createLayerContents:(id)arg1 contentsCenter:(CGRect*)arg2 ;
-(CGColorRef)_copyCustomCGColor:(id)arg1 ;
-(char)_allowsVibrancyForForegroundColorsInAttributedString:(id)arg1 ;
-(char)_prefersSliderAccessoryStepBehavior;
-(char)_allowsScrollers;
-(char)_disallowsFontSmoothing;
-(char)_prefersMoreHorizontalContentIndicators;
-(char)_allowsSystemControlTintColors;
-(id)_initForArchivingOnlyWithAppearanceNamed:(id)arg1 bundle:(id)arg2 ;
-(void)_setCachedNormalizedBezelTintColor:(id)arg1 ;
-(int)_callCoreUIWithBlock:(/*^block*/id)arg1 options:(id)arg2 requireBezelTintColor:(char)arg3 ;
-(double)_defaultBezelBrightness;
-(id)_normalizedBezelTintColorForColor:(id)arg1 ;
-(char)_optionsMustContainTintColor;
-(id)_catalystName;
-(id)_cachedNormalizedBezelTintColor;
-(id)_initWithContentsOfURL:(id)arg1 ;
-(id)_flattenedAppearanceNamesList;
-(long long)_hitTest:(CGRect)arg1 atPoint:(CGPoint)arg2 options:(id)arg3 ;
-(char)_setCustomColor:(id)arg1 ;
-(char)_setCustomFillColor:(id)arg1 ;
-(char)_setCustomStrokeColor:(id)arg1 ;
-(CGSize)_intrinsicContentSizeForDrawingInRect:(CGRect)arg1 context:(CGContextRef)arg2 options:(id)arg3 ;
-(id)_bundleResourceName;
@end

