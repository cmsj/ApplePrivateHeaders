/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSControl.h>
#import <libobjc.A.dylib/_NSAlertSensitiveView.h>
#import <libobjc.A.dylib/NSUserInterfaceValidations.h>
#import <libobjc.A.dylib/NSAccessibilityButton.h>
#import <libobjc.A.dylib/NSUserInterfaceCompression.h>

@class NSUserInterfaceCompressionOptions, NSView, NSString, NSAttributedString, NSSound, NSImage, NSImageSymbolConfiguration, NSColor;

@interface NSButton : NSControl <_NSAlertSensitiveView, NSUserInterfaceValidations, NSAccessibilityButton, NSUserInterfaceCompression> {

	NSView* _contentView;
	unsigned _observingInTableSelection : 1;
	unsigned _observingToolbarRolloverState : 1;

}

@property (retain) NSView * contentView; 
@property (readonly) char wantsAlertStylePadding; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy) NSString * title; 
@property (copy) NSAttributedString * attributedTitle; 
@property (copy) NSString * alternateTitle; 
@property (copy) NSAttributedString * attributedAlternateTitle; 
@property (assign) char hasDestructiveAction; 
@property (retain) NSSound * sound; 
@property (getter=isSpringLoaded) char springLoaded; 
@property (assign) long long maxAcceleratorLevel; 
@property (assign) unsigned long long bezelStyle; 
@property (getter=isBordered) char bordered; 
@property (getter=isTransparent) char transparent; 
@property (assign) char showsBorderOnlyWhileMouseInside; 
@property (retain) NSImage * image; 
@property (retain) NSImage * alternateImage; 
@property (assign) unsigned long long imagePosition; 
@property (assign) unsigned long long imageScaling; 
@property (assign) char imageHugsTitle; 
@property (copy) NSImageSymbolConfiguration * symbolConfiguration; 
@property (copy) NSColor * bezelColor; 
@property (copy) NSColor * contentTintColor; 
@property (assign) long long state; 
@property (assign) char allowsMixedState; 
@property (copy) NSString * keyEquivalent; 
@property (assign) unsigned long long keyEquivalentModifierMask; 
@property (copy,readonly) NSUserInterfaceCompressionOptions * activeCompressionOptions; 
+(void)initialize;
+(id)buttonWithTitle:(id)arg1 image:(id)arg2 target:(id)arg3 action:(SEL)arg4 ;
+(id)buttonWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 ;
+(id)buttonWithImage:(id)arg1 target:(id)arg2 action:(SEL)arg3 ;
+(id)_buttonWithTitle:(id)arg1 image:(id)arg2 target:(id)arg3 action:(SEL)arg4 ;
+(id)checkboxWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 ;
+(id)radioButtonWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 ;
+(id)sourceListBadgeWithTitle:(id)arg1 ;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(long long)state;
-(void)setState:(long long)arg1 ;
-(NSString *)keyEquivalent;
-(unsigned long long)keyEquivalentModifierMask;
-(void)setAttributedTitle:(NSAttributedString *)arg1 ;
-(void)setImage:(NSImage *)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(void)layout;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NSAttributedString *)attributedTitle;
-(NSString *)title;
-(char)isFlipped;
-(id)initWithFrame:(CGRect)arg1 ;
-(NSView *)contentView;
-(char)validateUserInterfaceItem:(id)arg1 ;
-(void)setImageHugsTitle:(char)arg1 ;
-(void)setImagePosition:(unsigned long long)arg1 ;
-(unsigned long long)imagePosition;
-(CGSize)intrinsicContentSize;
-(NSImage *)image;
-(void)setMinimumPressDuration:(double)arg1 ;
-(void)viewDidMoveToWindow;
-(void)setPeriodicDelay:(float)arg1 interval:(float)arg2 ;
-(NSEdgeInsets)alignmentRectInsets;
-(char)_contentHuggingDefault_isUsuallyFixedHeight;
-(char)_contentHuggingDefault_isUsuallyFixedWidth;
-(id)_preferredAppearance;
-(void)setBezelStyle:(unsigned long long)arg1 ;
-(id)accessibilityLabel;
-(char)performKeyEquivalent:(id)arg1 ;
-(void)setKeyEquivalentModifierMask:(unsigned long long)arg1 ;
-(void)setImageScaling:(unsigned long long)arg1 ;
-(void)setContentView:(NSView *)arg1 ;
-(void)setKeyEquivalent:(NSString *)arg1 ;
-(char)showsBorderOnlyWhileMouseInside;
-(void)_setUsesCautionaryAppearanceWhenActionIsDestructive:(char)arg1 ;
-(void)setButtonType:(unsigned long long)arg1 ;
-(char)isBordered;
-(void)setBordered:(char)arg1 ;
-(unsigned long long)bezelStyle;
-(void)setShowsBorderOnlyWhileMouseInside:(char)arg1 ;
-(char)hasDestructiveAction;
-(void)startSpeaking:(id)arg1 ;
-(void)stopSpeaking:(id)arg1 ;
-(char)accessibilityPerformPress;
-(char)isTransparent;
-(void)setCell:(id)arg1 ;
-(void)setTransparent:(char)arg1 ;
-(void)setTitleWithMnemonic:(id)arg1 ;
-(void)updateCell:(id)arg1 ;
-(char)resignFirstResponder;
-(char)acceptsFirstMouse:(id)arg1 ;
-(char)becomeFirstResponder;
-(NSImage *)alternateImage;
-(void)setAlternateImage:(NSImage *)arg1 ;
-(id)_popupToSubstituteInInit;
-(void)_endObservingInSelectedTableRowIfNeeded;
-(void)_endObservingToolbarRolloverStateIfNeeded;
-(void)_finishedMakingConnections;
-(void)_buttonBezelStyleChangedToBorderedInline;
-(void)_buttonBezelStyleChangedToBorderedTexturedRounded;
-(NSString *)alternateTitle;
-(void)setAlternateTitle:(NSString *)arg1 ;
-(NSAttributedString *)attributedAlternateTitle;
-(void)setAttributedAlternateTitle:(NSAttributedString *)arg1 ;
-(NSSound *)sound;
-(void)setSound:(NSSound *)arg1 ;
-(char)isSpringLoaded;
-(void)setSpringLoaded:(char)arg1 ;
-(long long)maxAcceleratorLevel;
-(void)setMaxAcceleratorLevel:(long long)arg1 ;
-(void)getPeriodicDelay:(float*)arg1 interval:(float*)arg2 ;
-(unsigned long long)imageScaling;
-(char)imageHugsTitle;
-(char)allowsMixedState;
-(void)setAllowsMixedState:(char)arg1 ;
-(void)setNextState;
-(void)_updateContentViewState;
-(void)_ensureContentViewIsSubview;
-(NSEdgeInsets)_contentViewInsets;
-(CGPoint)_baselineOffsetsAtSize:(CGSize)arg1 ;
-(char)_canBecomeDefaultButton;
-(void)_setWindow:(id)arg1 ;
-(id)_recursiveFindDefaultButtonCell;
-(void)setHasDestructiveAction:(char)arg1 ;
-(char)_usesCautionaryAppearanceWhenActionIsDestructive;
-(void)_beginObservingInSelectedTableRowIfNeeded;
-(void)_beginObservingToolbarRolloverStateIfNeeded;
-(id)_supportedOptionsFromPrioritizedOptions:(id)arg1 ;
-(void)compressWithPrioritizedCompressionOptions:(id)arg1 ;
-(CGSize)minimumSizeWithPrioritizedCompressionOptions:(id)arg1 ;
-(NSUserInterfaceCompressionOptions *)activeCompressionOptions;
-(id)_sound;
-(void)_setSound:(id)arg1 ;
-(double)periodicDelay;
-(void)setPeriodicDelay:(double)arg1 ;
-(double)periodicInterval;
-(void)setPeriodicInterval:(double)arg1 ;
-(NSImageSymbolConfiguration *)symbolConfiguration;
-(void)setSymbolConfiguration:(NSImageSymbolConfiguration *)arg1 ;
-(NSColor *)bezelColor;
-(void)setBezelColor:(NSColor *)arg1 ;
-(NSColor *)contentTintColor;
-(void)setContentTintColor:(NSColor *)arg1 ;
-(void)highlight:(char)arg1 ;
-(char)showsDisclosureChevron;
-(void)setShowsDisclosureChevron:(char)arg1 ;
-(void)setAlwaysEnablesRadioButtonExclusivity:(char)arg1 ;
-(char)alwaysEnablesRadioButtonExclusivity;
-(void)setToolbarAppearance:(long long)arg1 ;
-(long long)toolbarAppearance;
-(double)firstBaselineOffsetFromTop;
-(double)baselineOffsetFromBottom;
-(char)_hasExtra10_11BordersInToolbars;
-(void)shiftModifySelection:(id)arg1 ;
-(void)altModifySelection:(id)arg1 ;
-(CGRect)_opaqueRectForWindowMoveWhenInTitlebar;
-(char)isGuarded;
-(void)setGuarded:(char)arg1 ;
-(char)isDestructive;
-(void)setDestructive:(char)arg1 ;
-(double)minimumPressDuration;
-(id)_insetMitigationTreatment;
-(NSEdgeInsets)touchBarHitTestInsets;
-(void)_buttonBezelStyleChangedFromBorderedInline;
-(void)_buttonBezelStyleChangedFromBorderedTexturedRounded;
-(unsigned long long)springLoadingEntered:(id)arg1 ;
-(void)springLoadingHighlightChanged:(id)arg1 ;
-(void)springLoadingActivated:(char)arg1 draggingInfo:(id)arg2 ;
-(char)performMnemonic:(id)arg1 ;
-(char)wantsAlertStylePadding;
-(id)_descriptionForTouchBarLogging;
-(id)ns_widgetType;
@end

