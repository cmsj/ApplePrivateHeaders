/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSActionCell.h>

@class NSString, NSImage, _NSButtonCellAux, NSImageSymbolConfiguration, NSAttributedString, NSFont, NSView, NSButtonTextField, NSButtonImageView, NSSound, NSColor;

@interface NSButtonCell : NSActionCell {

	unsigned short _periodicDelay;
	unsigned short _periodicInterval;
	NSString* _altContents;
	id _sound;
	NSString* _keyEquivalent;
	struct {
		unsigned bezelStyle : 3;
		unsigned showsBorderOnlyWhileMouseInside : 1;
		unsigned mouseInside : 1;
		unsigned bezelStyle2 : 1;
		unsigned imageScaling : 2;
		unsigned keyEquivalentModifierMask : 24;
	}  _bcFlags2;
	struct {
		unsigned __reserved : 1;
		unsigned calculatingPreferredAppearance : 1;
		unsigned alwaysRadioExclusive : 1;
		unsigned leadingOrTrailing : 1;
		unsigned shouldNotHighlightOnPerformClick : 1;
		unsigned imageHugsTitle : 1;
		unsigned __reserved2 : 1;
		unsigned isDrawingFocus : 1;
		unsigned useButtonImageSource : 1;
		unsigned hasTitleTextField : 1;
		unsigned isDrawingDisclosure : 1;
		unsigned suppressAXValueChangeNote : 1;
		unsigned doesNotDimImage : 1;
		unsigned inset : 2;
		unsigned transparent : 1;
		unsigned inIntermediateDisclosure : 1;
		unsigned hasKeyEquivalentInsteadOfImage : 1;
		unsigned imageSizeDiff : 1;
		unsigned imageAndText : 1;
		unsigned bottomOrLeft : 1;
		unsigned horizontal : 1;
		unsigned imageOverlaps : 1;
		unsigned bordered : 1;
		unsigned drawing : 1;
		unsigned lightByGray : 1;
		unsigned lightByBackground : 1;
		unsigned lightByContents : 1;
		unsigned changeGray : 1;
		unsigned changeBackground : 1;
		unsigned changeContents : 1;
		unsigned pushIn : 1;
	}  _bcFlags;
	NSImage* _normalImage;
	id _alternateImageOrKeyEquivalentFont;
	unsigned long long _buttonType;
	_NSButtonCellAux* _buttonCellAuxStorage;
	NSImageSymbolConfiguration* _symbolConfiguration;
	SCD_Struct_NS28 _cachedUnconstrainedTitleMetrics;
	SCD_Struct_NS28 _cachedUnconstrainedAlternateTitleMetrics;
	unsigned _usesContentView : 1;
	unsigned _inFunctionRow : 1;
	unsigned _inMetricsAppearance : 1;
	unsigned _subclassNeedsLegacyBorderlessTitleRect : 1;
	unsigned _subclassDisallowsTitleMetricCaching : 1;
	unsigned _subclassOverridesDrawingRectForBounds : 1;

}

@property (setter=_setImageWithMinimalSideEffects:,retain) NSImage * _imageWithMinimalSideEffects; 
@property (setter=_setAlternateImageWithMinimalSideEffects:,retain) NSImage * _alternateImageWithMinimalSideEffects; 
@property (setter=_setTitleWithMinimalSideEffects:,copy) NSString * _titleWithMinimalSideEffects; 
@property (setter=_setAttributedTitleWithMinimalSideEffects:,copy) NSAttributedString * _attributedTitleWithMinimalSideEffects; 
@property (setter=_setAlternateTitleWithMinimalSideEffects:,copy) NSString * _alternateTitleWithMinimalSideEffects; 
@property (setter=_setAttributedAlternateTitleWithMinimalSideEffects:,copy) NSAttributedString * _attributedAlternateTitleWithMinimalSideEffects; 
@property (assign) unsigned long long gradientType; 
@property (retain) NSFont * keyEquivalentFont; 
@property (setter=_setBackgroundView:,retain) NSView * _backgroundView; 
@property (setter=_setTitleTextField:,retain) NSButtonTextField * _titleTextField; 
@property (setter=_setButtonImageView:,retain) NSButtonImageView * _buttonImageView; 
@property (setter=_setAltContents:,copy) id _altContents; 
@property (assign) unsigned long long bezelStyle; 
@property (assign) unsigned long long highlightsBy; 
@property (assign) unsigned long long showsStateBy; 
@property (copy) NSString * title; 
@property (copy) NSAttributedString * attributedTitle; 
@property (copy) NSString * alternateTitle; 
@property (copy) NSAttributedString * attributedAlternateTitle; 
@property (retain) NSImage * alternateImage; 
@property (assign) unsigned long long imagePosition; 
@property (assign) unsigned long long imageScaling; 
@property (copy) NSString * keyEquivalent; 
@property (assign) unsigned long long keyEquivalentModifierMask; 
@property (getter=isTransparent) char transparent; 
@property (getter=isOpaque,readonly) char opaque; 
@property (assign) char imageDimsWhenDisabled; 
@property (assign) char showsBorderOnlyWhileMouseInside; 
@property (retain) NSSound * sound;                                                                                                                            //@synthesize sound=_sound - In the implementation block
@property (copy) NSColor * backgroundColor; 
+(void)initialize;
+(id)_titleCacheStats;
+(id)keyPathsForValuesAffecting_imageWithMinimalSideEffects;
+(id)keyPathsForValuesAffecting_alternateImageWithMinimalSideEffects;
+(id)keyPathsForValuesAffecting_titleWithMinimalSideEffects;
+(id)keyPathsForValuesAffecting_attributedTitleWithMinimalSideEffects;
+(id)keyPathsForValuesAffecting_alternateTitleWithMinimalSideEffects;
+(id)keyPathsForValuesAffecting_attributedAlternateTitleWithMinimalSideEffects;
+(double)_defaultButtonCycleValue;
+(void)_resetDefaultButtonCycleValue;
+(void)_setDefaultButtonCycleTime:(float)arg1 ;
+(double)_defaultButtonCycleTime;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(id)init;
-(double)doubleValue;
-(int)intValue;
-(float)floatValue;
-(long long)compare:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)stringValue;
-(long long)integerValue;
-(void)setState:(long long)arg1 ;
-(NSString *)keyEquivalent;
-(unsigned long long)keyEquivalentModifierMask;
-(void)setAttributedTitle:(NSAttributedString *)arg1 ;
-(void)setImage:(id)arg1 ;
-(void)setTitle:(NSString *)arg1 ;
-(void)setAlignment:(long long)arg1 ;
-(NSAttributedString *)attributedTitle;
-(id)objectValue;
-(void)setObjectValue:(id)arg1 ;
-(void)setStringValue:(id)arg1 ;
-(NSString *)title;
-(void)setBackgroundColor:(NSColor *)arg1 ;
-(void)setControlSize:(unsigned long long)arg1 ;
-(char)isOpaque;
-(char)acceptsFirstResponder;
-(id)accessibilityAttributeNames;
-(void)setImageHugsTitle:(char)arg1 ;
-(void)setImagePosition:(unsigned long long)arg1 ;
-(unsigned long long)imagePosition;
-(id)image;
-(void)setPeriodicDelay:(float)arg1 interval:(float)arg2 ;
-(NSColor *)backgroundColor;
-(void)setUserInterfaceLayoutDirection:(long long)arg1 ;
-(char)_contentHuggingDefault_isUsuallyFixedHeight;
-(char)_contentHuggingDefault_isUsuallyFixedWidth;
-(NSView *)_backgroundView;
-(id)_backgroundColor;
-(void)setBezelStyle:(unsigned long long)arg1 ;
-(void)drawBezelWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(CGRect)accessibilityFocusRingBoundsForBounds:(CGRect)arg1 ;
-(void)setKeyEquivalentModifierMask:(unsigned long long)arg1 ;
-(void)setImageScaling:(unsigned long long)arg1 ;
-(id)accessibilityRoleAttribute;
-(id)accessibilitySubroleAttribute;
-(id)accessibilityActionNames;
-(id)accessibilityActionDescription:(id)arg1 ;
-(void)accessibilityPerformAction:(id)arg1 ;
-(id)accessibilityDescriptionAttribute;
-(char)accessibilityIsDescriptionAttributeSettable;
-(void)setDoubleValue:(double)arg1 ;
-(char)_sendActionFrom:(id)arg1 ;
-(void)setControlView:(id)arg1 ;
-(void)setKeyEquivalent:(NSString *)arg1 ;
-(CFStringRef)_coreUIWidgetName;
-(long long)interiorBackgroundStyle;
-(CGRect)titleRectForBounds:(CGRect)arg1 ;
-(char)_needRedrawOnWindowChangedKeyState;
-(char)showsBorderOnlyWhileMouseInside;
-(void)_setMouseInside:(char)arg1 ;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(void)_setUsesCautionaryAppearanceWhenActionIsDestructive:(char)arg1 ;
-(void)setFont:(id)arg1 ;
-(void)setButtonType:(unsigned long long)arg1 ;
-(char)isBordered;
-(void)setBordered:(char)arg1 ;
-(unsigned long long)bezelStyle;
-(void)performClick:(id)arg1 ;
-(CGSize)cellSizeForBounds:(CGRect)arg1 ;
-(void)setShowsBorderOnlyWhileMouseInside:(char)arg1 ;
-(id)_imageView;
-(id)attributedStringValue;
-(double)_leading;
-(void)setAttributedStringValue:(id)arg1 ;
-(id)accessibilityTitleAttribute;
-(char)accessibilityIsTitleAttributeSettable;
-(void)setIntValue:(int)arg1 ;
-(void)setIntegerValue:(long long)arg1 ;
-(void)setFloatValue:(float)arg1 ;
-(id)accessibilityValueAttribute;
-(char)accessibilityIsValueAttributeSettable;
-(id)accessibilityActivationPointAttribute;
-(id)initTextCell:(id)arg1 ;
-(NSButtonTextField *)_titleTextField;
-(void)_removeBackgroundView;
-(void)_removeTitleTextField;
-(char)isTransparent;
-(void)drawWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_setBackgroundView:(id)arg1 ;
-(void)_setTitleTextField:(id)arg1 ;
-(void)setTransparent:(char)arg1 ;
-(void)setTitleWithMnemonic:(id)arg1 ;
-(unsigned long long)hitTestForEvent:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 ;
-(void)highlight:(char)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(NSImage *)alternateImage;
-(id)initImageCell:(id)arg1 ;
-(void)drawInteriorWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)setBackgroundStyle:(long long)arg1 ;
-(CGRect)imageRectForBounds:(CGRect)arg1 ;
-(void)setAlternateImage:(NSImage *)arg1 ;
-(char)_mouseInside;
-(void)_redisplayAnimatedInRect:(CGRect)arg1 inView:(id)arg2 ;
-(void)setShowsStateBy:(unsigned long long)arg1 ;
-(void)setHighlightsBy:(unsigned long long)arg1 ;
-(void)_setUsesContentView:(char)arg1 ;
-(void)_updateSubviewsInView:(id)arg1 includeTitleTextField:(char)arg2 ;
-(NSString *)alternateTitle;
-(void)setAlternateTitle:(NSString *)arg1 ;
-(NSAttributedString *)attributedAlternateTitle;
-(void)setAttributedAlternateTitle:(NSAttributedString *)arg1 ;
-(NSSound *)sound;
-(void)setSound:(NSSound *)arg1 ;
-(char)isSpringLoaded;
-(void)setSpringLoaded:(char)arg1 ;
-(long long)maxAcceleratorLevel;
-(void)setMaxAcceleratorLevel:(long long)arg1 ;
-(void)getPeriodicDelay:(float*)arg1 interval:(float*)arg2 ;
-(unsigned long long)imageScaling;
-(char)imageHugsTitle;
-(id)_symbolConfiguration;
-(void)_setSymbolConfiguration:(id)arg1 ;
-(id)_bezelTintColor;
-(void)_setBezelTintColor:(id)arg1 ;
-(id)_contentTintColor;
-(void)_setContentTintColor:(id)arg1 ;
-(char)_showsDisclosureChevron;
-(void)_setShowsDisclosureChevron:(char)arg1 ;
-(void)_setAlwaysEnablesRadioButtonExclusivity:(char)arg1 ;
-(char)_alwaysEnablesRadioButtonExclusivity;
-(void)_setToolbarAppearance:(long long)arg1 ;
-(long long)_toolbarAppearance;
-(CGSize)_preferredBezelSizeForBounds:(CGRect)arg1 inView:(id)arg2 ;
-(CGSize)_autolayout_cellSize;
-(NSEdgeInsets)_alignmentRectInsetsForRect:(CGRect)arg1 inView:(id)arg2 ;
-(char)_inToolbar;
-(CGSize)_alignmentRectSizeForRect:(CGRect)arg1 inView:(id)arg2 ;
-(CGPoint)_baselineOffsetsAtSize:(CGSize)arg1 inView:(id)arg2 ;
-(unsigned long long)_buttonType;
-(void)_idealContentInsets:(NSEdgeInsets*)arg1 maximumContentInsets:(NSEdgeInsets*)arg2 forRect:(CGRect)arg3 inView:(id)arg4 ;
-(char)_canBecomeDefaultButtonCell;
-(void)_controlViewDidMoveToWindow:(id)arg1 ;
-(void)updateTrackingAreaWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_acceptsFirstMouseForEvent:(id)arg1 inView:(id)arg2 ;
-(char)_isGuarded;
-(void)_setGuarded:(char)arg1 ;
-(char)_hasDestructiveAction;
-(void)_setHasDestructiveAction:(char)arg1 ;
-(char)_usesCautionaryAppearanceWhenActionIsDestructive;
-(double)_minimumPressDuration;
-(void)_setMinimumPressDuration:(double)arg1 ;
-(char)_isAnyAcceleratorButton;
-(void)setSpringLoadingEmphasized:(char)arg1 ;
-(void)_beginAcceleratorPeriodicActionsUsingLegacyHW:(char)arg1 ;
-(void)_endAcceleratorPeriodicActions;
-(void)setCompressionOptions:(id)arg1 ;
-(id)compressionOptions;
-(CGSize)cellSizeForBounds:(CGRect)arg1 compressionOptions:(id)arg2 ;
-(id)_preferredAppearanceForAppearance:(id)arg1 inView:(id)arg2 ;
-(id)mnemonic;
-(void)_setTitle:(id)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(void)_setAlternateTitle:(id)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(void)_setAttributedTitle:(id)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(void)_setAttributedAlternateTitle:(id)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(void)_setImage:(id)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(void)_setAlternateImage:(id)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(void)_setImagePosition:(unsigned long long)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(void)_setBezelTintColor:(id)arg1 animatedInRect:(CGRect)arg2 inView:(id)arg3 ;
-(id)_controlStateContentStyleOverride;
-(void)_setIsDrawingDisclosure:(char)arg1 ;
-(void)_commonAwake;
-(char)_drawsVerticallyCenteredTitle;
-(CGRect)drawTitle:(id)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(id)_textAttributes;
-(CGRect)drawingRectForBounds:(CGRect)arg1 ;
-(void)_convertToText:(id)arg1 ;
-(void)_commonInit;
-(void)_setAltContents:(id)arg1 ;
-(id)_buttonImageSource;
-(void)_setButtonImageSource:(id)arg1 ;
-(void)_setBackgroundColor:(id)arg1 ;
-(char)_hasButtonCellAux;
-(id)_buttonCellAux;
-(id)_imageSynthesizedForCheckOrRadio:(char*)arg1 ;
-(id)_alternateImageSynthesizedForCheckOrRadio:(char*)arg1 ;
-(id)_buttonCellAuxAllocatingIfNeeded:(char)arg1 ;
-(void)setKeyEquivalentFont:(NSFont *)arg1 ;
-(char)_hasTitle;
-(void)_autoflipUnarchivedProperties;
-(void)_clearButtonCellAux;
-(void)_removeImageView;
-(void)_updateMouseTracking;
-(char)_wantsSeparatedContentSubviewsInView:(id)arg1 ;
-(void)_setSubviewsNeedLayout;
-(void)_invalidateCachedTitleMetrics;
-(void)_invalidateCachedAlternateTitleMetrics;
-(void)_updateTitleTextFieldValue;
-(void)_setButtonType:(unsigned long long)arg1 adjustingImage:(char)arg2 ;
-(NSButtonImageView *)_buttonImageView;
-(void)_setPresentationImagePosition:(unsigned long long)arg1 ;
-(void)_setDefaultButtonIndicatorNeedsDisplay;
-(char)_shouldSetHighlightToFlag:(char)arg1 ;
-(char)_shouldShowFocus;
-(id)_currentImageInView:(id)arg1 ;
-(void)_updateImageViewImageInView:(id)arg1 ;
-(id)_defaultFont;
-(void)_setTextAttributeParaStyleNeedsRecalc;
-(id)_symbolImageHints;
-(unsigned long long)_presentationImagePosition;
-(char)_isDrawingDisclosure;
-(long long)_destinationDisclosureState;
-(long long)nextState;
-(char)_focusRingMaskDependsOnTogglableContent;
-(void)_updateAllOtherButtonsInGroupToNotBeChecked;
-(char)_isMultiLevelAcceleratorButton;
-(CGSize)_coreUIWidgetFrameSizeForRect:(CGRect)arg1 inView:(id)arg2 ;
-(char)_hasImage;
-(const CFDictionaryRef)_coreUIBezelDrawOptionsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_idealContentRect:(CGRect*)arg1 maximumContentRect:(CGRect*)arg2 forBounds:(CGRect)arg3 inView:(id)arg4 ;
-(CGRect)_bezelRectForBounds:(CGRect)arg1 inView:(id)arg2 ;
-(SCD_Struct_NS29)_contentMetricsInFrame:(CGRect)arg1 allowImageScaling:(char)arg2 compactContent:(char)arg3 compressionOptions:(id)arg4 inView:(id)arg5 ;
-(CGRect)_titleRectForProposedTitleRect:(CGRect)arg1 ;
-(id)_currentTitle;
-(char)_preferAlternateContent;
-(void)_imageRect:(CGRect*)arg1 titleRect:(CGRect*)arg2 forBounds:(CGRect)arg3 ;
-(CGRect)_titleRectForTitle:(id)arg1 inProposedTitleRect:(CGRect)arg2 ;
-(CGSize)_minCellSizeWithCompressionOptions:(id)arg1 ;
-(CGSize)_minCellSizeIncrementForCompressionOptions:(id)arg1 ;
-(NSEdgeInsets)_coreUIAlignmentRectInsetsForRect:(CGRect)arg1 inView:(id)arg2 ;
-(id)_resolvedImage;
-(id)_resolvedAlternateImage;
-(id)_displayedAttributedTitle;
-(id)_displayedAttributedAlternateTitle;
-(id)_effectiveFont;
-(SCD_Struct_NS30)_combinedTitleMetricsWithinSize:(CGSize)arg1 ;
-(CGRect)_imageRectWithRect:(CGRect*)arg1 allowImageScaling:(char)arg2 ;
-(CGSize)_titleSpacing;
-(unsigned long long)_effectiveImagePositionBeforeCompression;
-(double)_coreUIBaselineOffsetFromFrameInRect:(CGRect)arg1 inView:(id)arg2 ;
-(void)_unconstrainedImageAlignmentSize:(CGSize*)arg1 alignmentInsets:(NSEdgeInsets*)arg2 ;
-(double)_titlePadding;
-(double)_roundCoordinate:(double)arg1 upToDevicePixelForView:(id)arg2 ;
-(char)_eligibleForSeparatedContentSubviewsInView:(id)arg1 ;
-(char)_wantsBackgroundViewInView:(id)arg1 ;
-(char)_shouldDrawBezel;
-(char)_subclassOverridesAnyDrawMethodsAffectingVibrancy:(char*)arg1 ;
-(char)_bezelStyleCanUseSubviewInView:(id)arg1 ;
-(id)_interiorBackgroundFillColor;
-(char)_hasAnySeparatedContentSubviewsInView:(id)arg1 ;
-(void)_updateBackgroundViewWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_hideBackgroundView;
-(void)_updateImageViewWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_updateTitleTextFieldWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)_layoutExitingViewsWithRect:(CGRect)arg1 inView:(id)arg2 ;
-(void)_updateBackgroundViewInPlaceInView:(id)arg1 ;
-(CGRect)_imageViewFrameWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_titleTextIsScrollable;
-(char)_disabledForDrawingContent;
-(void)_setButtonImageView:(id)arg1 ;
-(double)_imageVerticalAdjustmentForBezel;
-(id)_effectiveContentStyleForImageInView:(id)arg1 ;
-(id)_controlContentStyleInView:(id)arg1 ;
-(void)_updateControlContentStyle:(id)arg1 inView:(id)arg2 ;
-(char)_shouldDrawWithContentTintColorInView:(id)arg1 ;
-(long long)_contentBacking;
-(long long)_stateForDrawing;
-(unsigned long long)highlightsBy;
-(char)_shouldDrawWithRollover;
-(unsigned long long)showsStateBy;
-(char)_isEligibleForContentTintColor;
-(long long)_interiorContentPresentationStateInView:(id)arg1 ;
-(char)_allowsStyledTextForColor:(id)arg1 ;
-(char)_shouldUseStyledTextInView:(id)arg1 ;
-(long long)_interiorContentValueInView:(id)arg1 ;
-(long long)_interiorContentStateInView:(id)arg1 ;
-(long long)_initialBackgroundStyleCompatibilityGuessIgnoringExternalContext;
-(char)_shouldDrawAsDefaultButtonInView:(id)arg1 ;
-(char)_preferOnArtForBezel;
-(char)_shouldDrawTextWithDisabledAppearance;
-(id)_textDimColor;
-(char)_preferAlternateContentForImage;
-(char)_shouldUseTextAppearanceInToolbar;
-(char)_hasRolloverBezelArt;
-(char)_shouldDrawDragged;
-(long long)_nextDisclosureState;
-(char)isSpringLoadingEmphasized;
-(char)_wantsToUseFocusRingMask;
-(unsigned long long)_preferredFocusLocationMask;
-(char)_isDrawingRedundantlyInView:(id)arg1 ;
-(void)_configureAndDrawImageWithRect:(CGRect)arg1 cellFrame:(CGRect)arg2 controlView:(id)arg3 ;
-(void)_configureAndDrawTitleWithCellFrame:(CGRect)arg1 controlView:(id)arg2 ;
-(void)drawImage:(id)arg1 withFrame:(CGRect)arg2 inView:(id)arg3 ;
-(char)_canUseFocusRingMaskForText;
-(char)_subclassHasVibrancyIncompatibleDrawing;
-(CGRect)_trackingBoundsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_isDefaultButton;
-(void)_startSound;
-(char)trackMouse:(id)arg1 inRect:(CGRect)arg2 ofView:(id)arg3 untilMouseUp:(char)arg4 ;
-(char)startTrackingAt:(CGPoint)arg1 inView:(id)arg2 ;
-(char)continueTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 ;
-(void)_doUserDisclosureExpandOrCollapseInRect:(CGRect)arg1 ;
-(void)_clearMouseTracking;
-(void)_setMouseTrackingInRect:(CGRect)arg1 ofView:(id)arg2 ;
-(void)touchEndedAt:(CGPoint)arg1 inView:(id)arg2 ;
-(char)_useHitTestInTrackMouse;
-(char)_hasGuardedBehavior;
-(unsigned long long)sendActionOnMask;
-(char)_shouldSendActionForEventType:(unsigned long long)arg1 ;
-(void)_controlViewDidChangeEffectiveAppearance:(id)arg1 ;
-(Class)_classForOverrideCheck;
-(char)_subclassOverridesDrawImage;
-(void)_setNextDisclosureState:(long long)arg1 ;
-(void)_setDestinationDisclosureState:(long long)arg1 ;
-(char)_alwaysShowBezelForCurrentBezelStyleAndState;
-(id)_altContents;
-(char)imageDimsWhenDisabled;
-(void)setImageDimsWhenDisabled:(char)arg1 ;
-(CGSize)_titleSizeWithSize:(CGSize)arg1 ;
-(CGRect)_imageRectWithRect:(CGRect*)arg1 ;
-(CGRect)_alignedTitleRectWithRect:(CGRect)arg1 ;
-(NSEdgeInsets)_coreUIContentRectInsetsForRect:(CGRect)arg1 inView:(id)arg2 ;
-(double)_coreUIBaselineOffsetFromAlignmentRectInRect:(CGRect)arg1 inView:(id)arg2 ;
-(char)wantsUpdateLayerInView:(id)arg1 ;
-(void)updateLayerWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)layoutLayerWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_usesCachedImage;
-(void)_setUsesCachedImage:(char)arg1 ;
-(id)_internalImageView;
-(void)_preeffectBaseImage:(id*)arg1 state:(unsigned long long*)arg2 backgroundStyle:(int*)arg3 inView:(id)arg4 ;
-(int)_vibrancyBlendModeForControlView:(id)arg1 ;
-(CGRect)focusRingMaskBoundsForFrame:(CGRect)arg1 inView:(id)arg2 ;
-(void)drawFocusRingMaskWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)continueTrackingGesture:(id)arg1 inView:(id)arg2 ;
-(void)stopTracking:(CGPoint)arg1 at:(CGPoint)arg2 inView:(id)arg3 mouseIsUp:(char)arg4 ;
-(void)_updateMouseInside:(char)arg1 ;
-(id)_pressureConfigurationIfNeeded;
-(void)_acceleratorTimerFired;
-(void)_setShouldNotHighlightOnPerformClick:(char)arg1 ;
-(void)_windowChangedKeyStateWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_hasRolloverContentArt;
-(id)_textHighlightColor;
-(char)_usesContentView;
-(void)_setControlStateContentStyleOverride:(id)arg1 ;
-(long long)cellAttribute:(unsigned long long)arg1 ;
-(void)setCellAttribute:(unsigned long long)arg1 to:(long long)arg2 ;
-(NSImage *)_imageWithMinimalSideEffects;
-(void)_setImageWithMinimalSideEffects:(id)arg1 ;
-(NSImage *)_alternateImageWithMinimalSideEffects;
-(void)_setAlternateImageWithMinimalSideEffects:(id)arg1 ;
-(NSString *)_titleWithMinimalSideEffects;
-(void)_setTitleWithMinimalSideEffects:(id)arg1 ;
-(NSAttributedString *)_attributedTitleWithMinimalSideEffects;
-(void)_setAttributedTitleWithMinimalSideEffects:(id)arg1 ;
-(NSString *)_alternateTitleWithMinimalSideEffects;
-(void)_setAlternateTitleWithMinimalSideEffects:(id)arg1 ;
-(NSAttributedString *)_attributedAlternateTitleWithMinimalSideEffects;
-(void)_setAttributedAlternateTitleWithMinimalSideEffects:(id)arg1 ;
-(void)_exchangeTextFieldsWithRect:(CGRect)arg1 inView:(id)arg2 withMutation:(/*^block*/id)arg3 ;
-(void)_exchangeImageViewsWithRect:(CGRect)arg1 inView:(id)arg2 withMutation:(/*^block*/id)arg3 ;
-(id)_detachCurrentTextField;
-(id)_detachCurrentImageView;
-(id)_buttonCellAccessibilityRoleAttribute;
-(char)_axIsNonCheckboxToggleButton;
-(char)_accessibilityIncludeDescriptionAttribute;
-(char)_shouldHighlightCellWhenSelected;
-(CGRect)_focusRingBoundsWithFrame:(CGRect)arg1 inView:(id)arg2 ;
-(char)_stateAnimationRunning;
-(void)_renderCurrentAnimationFrameInContext:(CGContextRef)arg1 atLocation:(CGPoint)arg2 ;
-(void)_stateAnimationDone;
-(void)_setState:(long long)arg1 animated:(char)arg2 ;
-(void)_setHighlighted:(char)arg1 animated:(char)arg2 ;
-(unsigned long long)gradientType;
-(void)setGradientType:(unsigned long long)arg1 ;
-(id)alternateMnemonic;
-(unsigned long long)alternateMnemonicLocation;
-(void)setAlternateMnemonicLocation:(unsigned long long)arg1 ;
-(void)setAlternateTitleWithMnemonic:(id)arg1 ;
-(NSFont *)keyEquivalentFont;
-(void)setKeyEquivalentFont:(id)arg1 size:(double)arg2 ;
@end

