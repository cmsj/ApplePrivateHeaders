/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/NSTouchBarItem.h>
#import <libobjc.A.dylib/NSTouchBarItemTypePopover.h>
#import <libobjc.A.dylib/NSGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/NSTouchBarColorPickerViewControllerDelegate.h>

@class NSString, NSColor, NSView, NSImage, NSColorList, NSArray, NSTouchBar, NSTouchBarItemOverlay;

@interface NSColorPickerTouchBarItem : NSTouchBarItem <NSTouchBarItemTypePopover, NSGestureRecognizerDelegate, NSTouchBarColorPickerViewControllerDelegate> {

	id _overlay;
	NSString* _customizationLabel;
	NSColor* _color;
	id _target;
	SEL _action;
	long long _mode;
	NSView* _view;
	NSString* _buttonTitle;
	NSImage* _buttonImage;
	NSColorList* _colorList;
	id _autounbinder;
	NSArray* _allowedColorSpaces;
	char _showsAlpha;
	char _supportsPressAndHoldVariants;
	char _enabled;

}

@property (readonly) NSTouchBar * popoverTouchBar; 
@property (readonly) char supportsPressAndHold; 
@property (readonly) char showsCloseButton; 
@property (readonly) NSTouchBarItemOverlay * _overlay; 
@property (readonly) char isPresented; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign) long long mode; 
@property (assign) char colorListSupportsPressAndHoldVariants;              //@synthesize supportsPressAndHoldVariants=_supportsPressAndHoldVariants - In the implementation block
@property (copy,readonly) NSColor * storedColor; 
@property (copy) NSColor * color; 
@property (assign) char showsAlpha;                                         //@synthesize showsAlpha=_showsAlpha - In the implementation block
@property (copy) NSArray * allowedColorSpaces; 
@property (retain) NSColorList * colorList;                                 //@synthesize colorList=_colorList - In the implementation block
@property (copy) NSString * customizationLabel;                             //@synthesize customizationLabel=_customizationLabel - In the implementation block
@property (__weak) id target;                                               //@synthesize target=_target - In the implementation block
@property (assign) SEL action;                                              //@synthesize action=_action - In the implementation block
@property (getter=isEnabled) char enabled;                                  //@synthesize enabled=_enabled - In the implementation block
+(id)colorPickerWithIdentifier:(id)arg1 ;
+(id)textColorPickerWithIdentifier:(id)arg1 ;
+(id)strokeColorPickerWithIdentifier:(id)arg1 ;
+(id)colorPickerWithIdentifier:(id)arg1 buttonImage:(id)arg2 ;
+(id)colorPickerWithIdentifier:(id)arg1 buttonTitle:(id)arg2 ;
+(id)keyPathsForValuesAffectingStoredColor;
+(char)automaticallyNotifiesObserversOfColor;
+(id)keyPathsForValuesAffectingPresented;
-(oneway void)release;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(long long)_type;
-(void)setTarget:(id)arg1 ;
-(id)target;
-(void)setEnabled:(char)arg1 ;
-(void)setMode:(long long)arg1 ;
-(id)initWithIdentifier:(id)arg1 ;
-(char)isEnabled;
-(SEL)action;
-(void)setAction:(SEL)arg1 ;
-(id)view;
-(long long)mode;
-(char)isPresented;
-(void)showPopover:(id)arg1 ;
-(NSColor *)color;
-(void)setColor:(NSColor *)arg1 ;
-(id)_autounbinder;
-(NSArray *)allowedColorSpaces;
-(void)setAllowedColorSpaces:(NSArray *)arg1 ;
-(void)setShowsAlpha:(char)arg1 ;
-(char)showsAlpha;
-(void)colorPickerViewController:(id)arg1 didSelectColor:(id)arg2 ;
-(void)colorPickerViewControllerWillBegin:(id)arg1 ;
-(void)colorPickerViewControllerDidEnd:(id)arg1 ;
-(void)colorPickerViewControllerDidCancel:(id)arg1 ;
-(void)colorPicker:(id)arg1 didChangeCurrentModeFrom:(long long)arg2 to:(long long)arg3 ;
-(NSColorList *)colorList;
-(NSString *)customizationLabel;
-(void)setCustomizationLabel:(NSString *)arg1 ;
-(NSTouchBarItemOverlay *)_overlay;
-(void)setButtonTitle:(id)arg1 ;
-(void)setButtonImage:(id)arg1 ;
-(id)buttonTitle;
-(id)buttonImage;
-(void)dismissPopover:(id)arg1 ;
-(char)supportsPressAndHold;
-(char)showsCloseButton;
-(NSTouchBar *)popoverTouchBar;
-(void)setColorList:(NSColorList *)arg1 ;
-(id)initWithIdentifier:(id)arg1 buttonTitle:(id)arg2 buttonImage:(id)arg3 ;
-(void)_showPressHoldPopup:(id)arg1 ;
-(NSColor *)storedColor;
-(void)_pickColor:(id)arg1 ;
-(char)colorListSupportsPressAndHoldVariants;
-(void)setColorListSupportsPressAndHoldVariants:(char)arg1 ;
-(char)_gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)_pickPressAndHoldColor:(id)arg1 ;
-(void)_pressAndHoldWillBeginTracking;
-(void)_pressAndHoldDidEndTracking;
-(void)_pressAndHoldDidCancelTracking;
-(void)_updateButtonImagePosition;
@end

