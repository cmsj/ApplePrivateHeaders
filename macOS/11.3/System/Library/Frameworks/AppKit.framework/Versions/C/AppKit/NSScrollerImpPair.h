/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol NSScrollerImpPairDelegate;
#import <AppKit/AppKit-Structs.h>
@class NSScrollView, NSScrollerImp, NSTimer, NSTrackingArea;

@interface NSScrollerImpPair : NSObject {

	NSScrollView* scrollView;
	id<NSScrollerImpPairDelegate> delegate;
	NSScrollerImp* verticalScrollerImp;
	NSScrollerImp* horizontalScrollerImp;
	long long scrollerStyle;
	NSTimer* overlayScrollerHideTimer;
	struct {
		unsigned isFlipped : 1;
		unsigned wantsToFlashOverlayScrollers : 1;
		unsigned windowIsVisible : 1;
		unsigned inScrollGesture : 1;
		unsigned scrollerKnobStyle : 2;
		unsigned scrollerFlashPending : 1;
		unsigned overlayScrollerStateLocked : 1;
		unsigned inVertScroller : 1;
		unsigned inHorzScroller : 1;
		unsigned areScrollersCatchable : 1;
		unsigned shouldFadeCaughtScroller : 1;
		unsigned reserved : 20;
	}  flags;
	struct {
		unsigned reserved : 32;
	}  flags2;
	NSTrackingArea* contentViewTrackingArea;
	CGPoint lastMouseInContentPoint;
	id reserved2;
	id reserved3;

}

@property (assign) NSScrollView * scrollView; 
@property (assign) id<NSScrollerImpPairDelegate> delegate; 
@property (retain) NSScrollerImp * verticalScrollerImp; 
@property (retain) NSScrollerImp * horizontalScrollerImp; 
@property (getter=isFlipped) char flipped; 
@property (assign) long long scrollerStyle; 
@property (assign) long long scrollerKnobStyle; 
@property (readonly) char overlayScrollersShown; 
@property (readonly) char inScrollGesture; 
+(void)initialize;
+(long long)scrollerLayoutDirection;
+(void)_scrollerStyleRecommendationChanged:(id)arg1 ;
+(void)_updateAllScrollerImpPairsForNewRecommendedScrollerStyle:(long long)arg1 ;
+(void)setSuppressScrollerFlash:(char)arg1 forDecendantsOfView:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(id<NSScrollerImpPairDelegate>)delegate;
-(void)setDelegate:(id<NSScrollerImpPairDelegate>)arg1 ;
-(char)isFlipped;
-(NSScrollView *)scrollView;
-(void)endLiveResize;
-(void)startLiveResize;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseMoved:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(long long)scrollerStyle;
-(void)setScrollerStyle:(long long)arg1 ;
-(void)contentAreaScrolledInDirection:(CGPoint)arg1 ;
-(void)setFlipped:(char)arg1 ;
-(void)flashScrollers;
-(void)updateTrackingAreas;
-(void)beginScrollGesture;
-(void)contentAreaScrolled;
-(void)cancelScrollGesture;
-(void)endScrollGesture;
-(void)setScrollView:(NSScrollView *)arg1 ;
-(void)windowOrderedIn;
-(void)windowOrderedOut;
-(void)setVerticalScrollerImp:(NSScrollerImp *)arg1 ;
-(void)setHorizontalScrollerImp:(NSScrollerImp *)arg1 ;
-(void)_doWork:(/*^block*/id)arg1 ;
-(void)removedFromSuperview;
-(void)endTrackingInScrollerImp:(id)arg1 ;
-(void)movedToNewWindow;
-(void)contentAreaWillDraw;
-(void)contentAreaDidHide;
-(long long)scrollerKnobStyle;
-(void)setScrollerKnobStyle:(long long)arg1 ;
-(void)contentAreaDidResize;
-(void)hideOverlayScrollers;
-(void)lockOverlayScrollerState:(unsigned long long)arg1 ;
-(void)unlockOverlayScrollerState;
-(char)overlayScrollerStateIsLocked;
-(void)_addRemoveTrackingAreasAsNeeded;
-(void)_setOverlayScrollerState:(unsigned long long)arg1 forScrollerImp:(id)arg2 forceImmediately:(char)arg3 ;
-(void)_beginHideOverlayScrollers;
-(void)_cancelOverlayScrollerHideTimer;
-(void)_overlayScrollerHideTimerFired:(id)arg1 ;
-(void)_rescheduleOverlayScrollerHideTimerWithDelay:(double)arg1 ;
-(void)_updateOverlayScrollersStateWithReason:(id)arg1 forcingVisibilityForHorizontalKnob:(long long)arg2 verticalKnob:(long long)arg3 ;
-(void)_updateOverlayScrollersStateWithReason:(id)arg1 forceAtLeastKnobsVisible:(char)arg2 ;
-(char)overlayScrollersShown;
-(void)_endScrollGestureWithCancel:(char)arg1 ;
-(void)mouseEnteredContentArea;
-(void)mouseMovedInContentArea;
-(void)mouseExitedContentArea;
-(NSScrollerImp *)verticalScrollerImp;
-(NSScrollerImp *)horizontalScrollerImp;
-(char)inScrollGesture;
@end

