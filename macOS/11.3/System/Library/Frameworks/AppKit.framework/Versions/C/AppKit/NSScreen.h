/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AppKit/AppKit-Structs.h>
@class NSCGSDisplay, _NSScreenSharedInfo, NSColorSpace, NSString, NSDictionary;

@interface NSScreen : NSObject {

	CGRect _frame;
	int _depth;
	NSCGSDisplay* _display;
	_NSScreenSharedInfo* _sharedInfo;
	NSColorSpace* _colorSpace;
	NSString* _UUIDString;
	int _displayID;
	NSString* _cachedDisplayName;

}

@property (setter=_setCachedDisplayName:,copy) NSString * _cachedDisplayName;                     //@synthesize cachedDisplayName=_cachedDisplayName - In the implementation block
@property (readonly) double maximumExtendedDynamicRangeColorComponentValue; 
@property (readonly) double maximumPotentialExtendedDynamicRangeColorComponentValue; 
@property (readonly) double maximumReferenceExtendedDynamicRangeColorComponentValue; 
@property (readonly) int depth; 
@property (readonly) CGRect frame; 
@property (readonly) CGRect visibleFrame; 
@property (copy,readonly) NSDictionary * deviceDescription; 
@property (readonly) NSColorSpace * colorSpace; 
@property (readonly) const int* supportedWindowDepths; 
@property (readonly) double backingScaleFactor; 
@property (copy,readonly) NSString * localizedName; 
+(id)_zeroScreen;
+(id)screens;
+(double)_zeroScreenHeight;
+(id)mainScreen;
+(id)_screenForScreenNumber:(long long)arg1 ;
+(char)screensHaveSeparateSpaces;
+(char)_spacePerDisplay;
+(double)_backingScaleFactorForScreen:(id)arg1 ;
+(CGPoint)_cgScreenPointForPoint:(CGPoint)arg1 ;
+(char)_zeroScreenIsNew;
+(id)deepestScreen;
+(id)_screenForUUIDString:(id)arg1 ;
+(id)_screenAtPoint:(CGPoint)arg1 ;
+(char)_captureAllScreens:(id*)arg1 ;
+(char)_releaseAllCapturedScreens:(id*)arg1 ;
+(int)_shieldingWindowLevel;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)_localizedName;
-(NSString *)localizedName;
-(int)depth;
-(int)_displayID;
-(CGRect)visibleFrame;
-(CGRect)frame;
-(id)_UUIDString;
-(id)displayLinkWithTarget:(id)arg1 selector:(SEL)arg2 ;
-(NSColorSpace *)colorSpace;
-(double)backingScaleFactor;
-(unsigned long long)_currentSpace;
-(CGRect)backingAlignedRect:(CGRect)arg1 options:(unsigned long long)arg2 ;
-(CGRect)convertRectToBacking:(CGRect)arg1 ;
-(CGRect)convertRectFromBacking:(CGRect)arg1 ;
-(NSDictionary *)deviceDescription;
-(char)canRepresentDisplayGamut:(long long)arg1 ;
-(long long)_screenNumber;
-(unsigned)_dockOrientation;
-(CGSize)devicePixelCounts;
-(id)_initWithDisplay:(id)arg1 sharedInfo:(id)arg2 ;
-(char)_isZeroScreen;
-(double)_menuBarHeight;
-(CGRect)_layoutFrame;
-(CGRect)_dockRect;
-(CGSize)_resolution;
-(NSString *)_cachedDisplayName;
-(void)_setCachedDisplayName:(id)arg1 ;
-(id)_hwModel;
-(void)_updateWithDisplay:(id)arg1 sharedInfo:(id)arg2 ;
-(id)_snapshot;
-(double)maximumExtendedDynamicRangeColorComponentValue;
-(double)maximumPotentialExtendedDynamicRangeColorComponentValue;
-(double)maximumReferenceExtendedDynamicRangeColorComponentValue;
-(char)_dockHidden;
-(CGRect)_safeVisibleFrame;
-(const int*)supportedWindowDepths;
-(id)imageInRect:(CGRect)arg1 ;
-(id)imageInRect:(CGRect)arg1 underWindow:(id)arg2 ;
-(char)_isActiveScreen;
-(double)userSpaceScaleFactor;
-(id)_bestSettingWithBitsPerPixel:(int)arg1 width:(int)arg2 height:(int)arg3 refreshRate:(double)arg4 exactMatch:(char*)arg5 ;
-(char)_capture:(id*)arg1 ;
-(char)_isCaptured;
-(char)_releaseCapture:(id*)arg1 ;
-(id)_currentSetting;
-(id)_availableSettings;
-(id)_bestSettingWithBitsPerPixel:(int)arg1 width:(int)arg2 height:(int)arg3 exactMatch:(char*)arg4 ;
-(id)_bestSettingSimilarToSetting:(id)arg1 exactMatch:(char*)arg2 ;
-(char)_switchToSetting:(id)arg1 error:(id*)arg2 ;
-(id)displayLinkWithHandler:(/*^block*/id)arg1 ;
@end

