/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <libobjc.A.dylib/NSHapticFeedbackPerformer.h>

@class NSString;

@interface NSTouchDevice : NSObject <NSHapticFeedbackPerformer> {

	unsigned long long _deviceID;
	long long _reserved1;
	double _reserved2;
	long long _flags;
	CGSize _surfaceSize;
	id _reserved3[3];
	id _lastEndedTouches;

}

@property (readonly) unsigned long long deviceID;                   //@synthesize deviceID=_deviceID - In the implementation block
@property (readonly) CGSize surfaceSize;                            //@synthesize surfaceSize=_surfaceSize - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)touchDevices;
+(id)_touchDeviceFromTrueDeviceID:(unsigned long long)arg1 ;
+(void)_touchDeviceAdded:(id)arg1 ;
+(void)_touchDeviceRemoved:(id)arg1 ;
+(id)_touchDeviceWithIOHIDDictionary:(id)arg1 ;
+(id)touchDeviceFromDeviceID:(unsigned long long)arg1 ;
+(void)_pressureCapabilitiesPrefChanged:(id)arg1 ;
+(id)_firstTouchInView:(id)arg1 contextID:(long long)arg2 ;
+(char)_isTouchStillValid:(id)arg1 ;
+(char)_hasPressureEnabledTouchDevice;
+(char)_hasForceCapableTouchDevice;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(unsigned long long)deviceID;
-(void)_removeClaimedTouchIdentities:(id)arg1 forContextID:(long long)arg2 ;
-(void)addGestureRecognizers:(id)arg1 forTouch:(id)arg2 ;
-(void)performFeedbackPattern:(long long)arg1 performanceTime:(unsigned long long)arg2 ;
-(id)_touchingTouches;
-(id)_cancelledTouches;
-(long long)deviceType;
-(void)_cancelAllTouchesRemoving:(char)arg1 ;
-(id)_touchingTouchesForContextID:(long long)arg1 ;
-(id)_cancelledTouchesForContextID:(long long)arg1 ;
-(CGSize)surfaceSize;
-(void)setTouches:(id)arg1 forContextID:(long long)arg2 ;
-(void)_setLastEndedTouches:(id)arg1 ;
-(char)supportsForce;
-(id)_gestureRecognizersForTouch:(id)arg1 ;
-(void)removeGestureRecognizersForTouch:(id)arg1 ;
-(void)_preventFlushingContextID:(long long)arg1 during:(/*^block*/id)arg2 ;
-(void)_flushContextID:(long long)arg1 ;
-(id)_commandeeredTouchIdentitiesForContextID:(long long)arg1 ;
-(id)_activeTouchGestureRecognizersForContextID:(long long)arg1 ;
-(id)_gestureRecognizerClaimedTouchIdentitiesForContextID:(long long)arg1 ;
-(id)_beginTouchForIdentity:(id)arg1 contextId:(long long)arg2 ;
-(char)hasActuation;
-(id)_initWithIOHIDDictionary:(id)arg1 ;
-(void)_commandeerTouchIdentities:(id)arg1 forContextID:(long long)arg2 ;
-(void)_cancelCommandeeredTouchesForContextId:(long long)arg1 ;
-(void)_cancelActiveTouchGestureRecognizersForContextID:(long long)arg1 ;
-(void)_cancelViewTouchesForContextID:(long long)arg1 ;
-(void)_cancelTouchesForContextID:(long long)arg1 removing:(char)arg2 ;
-(void)_commandeerTouches:(id)arg1 ;
-(void)_removeCommandeeredTouchIdentities:(id)arg1 forContextID:(long long)arg2 ;
-(unsigned long long)_trueDeviceID;
-(void)setOverridePressureConfiguration:(id)arg1 ;
-(void)_removeActiveGestureRecognizer:(id)arg1 forContextID:(long long)arg2 ;
-(void)_claimTouchesAssociatedWithGestureRecognizer:(id)arg1 forContextID:(long long)arg2 ;
-(id)_lastEndedTouches;
-(void)_commandeerDirectTouches:(id)arg1 handler:(/*^block*/id)arg2 ;
-(id)_deviceInfo;
@end

