/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSStackView.h>
#import <libobjc.A.dylib/_NSTouchBarItemLayoutWrapper.h>

@class NSButtonGroupTouchBarItem, NSLayoutConstraint, NSMutableArray, NSString;

@interface _NSTouchBarButtonsStackView : NSStackView <_NSTouchBarItemLayoutWrapper> {

	NSButtonGroupTouchBarItem* _groupTouchBarItem;
	NSLayoutConstraint* _desiredWidthConstraint;
	NSMutableArray* _preferredWidthConstraints;
	NSMutableArray* _equalWidthConstraints;
	NSMutableArray* _adjustableButtons;
	NSMutableArray* _popoverItems;
	double _maxWidth;

}

@property (__weak) NSButtonGroupTouchBarItem * groupTouchBarItem;              //@synthesize groupTouchBarItem=_groupTouchBarItem - In the implementation block
@property (retain) NSLayoutConstraint * desiredWidthConstraint;                //@synthesize desiredWidthConstraint=_desiredWidthConstraint - In the implementation block
@property (retain) NSMutableArray * preferredWidthConstraints;                 //@synthesize preferredWidthConstraints=_preferredWidthConstraints - In the implementation block
@property (retain) NSMutableArray * equalWidthConstraints;                     //@synthesize equalWidthConstraints=_equalWidthConstraints - In the implementation block
@property (retain) NSMutableArray * adjustableButtons;                         //@synthesize adjustableButtons=_adjustableButtons - In the implementation block
@property (retain) NSMutableArray * popoverItems;                              //@synthesize popoverItems=_popoverItems - In the implementation block
@property (readonly) CGSize minSize; 
@property (readonly) CGSize maxSize; 
@property (readonly) char isSpace; 
@property (readonly) CGSize preferredSize; 
@property (readonly) CGSize contentClippingSize; 
@property (readonly) CGSize compressedMinSize; 
@property (readonly) long long priorityIndex; 
@property (readonly) unsigned long long itemPosition; 
@property (readonly) double preferredZOrder; 
@property (readonly) double preferredTrailingPosition; 
@property (readonly) char participatesInOverflow; 
@property (readonly) char isTitle; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)makeButtonWithTitle:(id)arg1 image:(id)arg2 target:(id)arg3 action:(SEL)arg4 preferredWidth:(double)arg5 ;
+(id)makeAlertButtonWithTitle:(id)arg1 image:(id)arg2 target:(id)arg3 action:(SEL)arg4 ;
+(id)makePopoverItemWithIdentifier:(id)arg1 popoverTouchBar:(id)arg2 title:(id)arg3 image:(id)arg4 preferredWidth:(double)arg5 ;
+(id)_buttonWithTitle:(id)arg1 image:(id)arg2 target:(id)arg3 action:(SEL)arg4 preferredWidth:(double)arg5 isAlertButton:(char)arg6 ;
-(void)dealloc;
-(void)layout;
-(void)setFrame:(CGRect)arg1 ;
-(CGSize)minSize;
-(CGSize)maxSize;
-(id)initWithBarItem:(id)arg1 ;
-(void)resetLayout;
-(void)insertView:(id)arg1 atIndex:(long long)arg2 ;
-(void)insertPopover:(id)arg1 atIndex:(long long)arg2 ;
-(void)setGroupTouchBarItem:(NSButtonGroupTouchBarItem *)arg1 ;
-(void)setDesiredWidthConstraint:(NSLayoutConstraint *)arg1 ;
-(void)setPreferredWidthConstraints:(NSMutableArray *)arg1 ;
-(void)setEqualWidthConstraints:(NSMutableArray *)arg1 ;
-(void)setAdjustableButtons:(NSMutableArray *)arg1 ;
-(void)setPopoverItems:(NSMutableArray *)arg1 ;
-(NSButtonGroupTouchBarItem *)groupTouchBarItem;
-(char)_buttonsFitFullTitles;
-(void)_setButtonsWithFullTitles;
-(char)_buttonsFitShortTitles;
-(void)_setButtonsWithShortTitles;
-(void)_setButtonsWithShortTitlesCompressedImage;
-(NSMutableArray *)adjustableButtons;
-(void)_removeConstraintsForView:(id)arg1 ;
-(void)_removeSubview:(id)arg1 ;
-(void)_removeConstraintsForView:(id)arg1 fromConstraints:(id)arg2 ;
-(NSLayoutConstraint *)desiredWidthConstraint;
-(void)resetButtons;
-(void)updateButtons;
-(unsigned long long)_compressedImagePosition;
-(NSMutableArray *)preferredWidthConstraints;
-(NSMutableArray *)equalWidthConstraints;
-(NSMutableArray *)popoverItems;
-(char)isSpace;
-(CGSize)contentClippingSize;
@end

