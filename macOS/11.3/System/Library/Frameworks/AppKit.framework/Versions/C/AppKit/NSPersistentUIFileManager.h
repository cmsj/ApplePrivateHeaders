/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSURL, NSPersistentUIPreservedStateDirectory, NSObject;

@interface NSPersistentUIFileManager : NSObject {

	NSURL* _persistentStateDirectoryURL;
	NSPersistentUIPreservedStateDirectory* _rawStateDirectoryAtLaunch;
	char _rawHadValidStateDirectoryAtLaunch;
	NSObject*<OS_dispatch_queue> _IOQueue;
	int _stateFileFD;
	int _publicPlistFD;
	unsigned long long _currentFileSize;
	unsigned long long _fileSizeAfterLastRewrite;
	unsigned _publicPlistChecksum;
	char _stateDirectoryHasBeenRefreshed;
	char _stateFileHasBeenCreated;
	char _elideAllFileWrites;

}

@property (setter=_setRawStateDirectoryAtLaunch:,retain) NSPersistentUIPreservedStateDirectory * _rawStateDirectoryAtLaunch;              //@synthesize rawStateDirectoryAtLaunch=_rawStateDirectoryAtLaunch - In the implementation block
@property (setter=_setRawHadValidStateDirectoryAtLaunch:) char _rawHadValidStateDirectoryAtLaunch;                                        //@synthesize rawHadValidStateDirectoryAtLaunch=_rawHadValidStateDirectoryAtLaunch - In the implementation block
@property (copy,readonly) NSURL * persistentStateDirectoryURL;                                                                            //@synthesize persistentStateDirectoryURL=_persistentStateDirectoryURL - In the implementation block
+(id)persistentStateDirectoryURLForBundleID:(id)arg1 ;
-(void)dealloc;
-(id)initWithBundleID:(id)arg1 ;
-(char)hasPersistentStateToRestore;
-(id)initWithPersistentStateDirectoryURL:(id)arg1 ;
-(void)_setRawStateDirectoryAtLaunch:(id)arg1 ;
-(void)_setRawHadValidStateDirectoryAtLaunch:(char)arg1 ;
-(void)tryCreatingPersistentStateDirectoryForURL:(id)arg1 ;
-(NSURL *)persistentStateDirectoryURL;
-(char)_refreshStateDirectoryIfNecessary;
-(id)_persistentStateFileURL;
-(void)_elideAllFileWrites;
-(char)_trySystemCallDescribedBy:(const char*)arg1 executor:(/*^block*/id)arg2 ;
-(unsigned long long)writeRecords:(id)arg1 toFile:(int)arg2 ;
-(int)openPersistentStateFile;
-(void)rewriteFile:(int)arg1 withWindowInfos:(id)arg2 withImpendingRecords:(id)arg3 ;
-(void)_writeRecords:(id)arg1 withWindowInfos:(id)arg2 flushingStaleData:(char)arg3 ;
-(void)refreshStateDirectoryIfNecessary;
-(void)_writePublicPlistData:(id)arg1 ;
-(char)_rawHadValidStateDirectoryAtLaunch;
-(NSPersistentUIPreservedStateDirectory *)_rawStateDirectoryAtLaunch;
-(void)preserveStateDirectoryAtLaunch;
-(void)reopenPersistentState;
-(void)writeRecords:(id)arg1 withWindowInfos:(id)arg2 flushingStaleData:(char)arg3 ;
-(void)writePublicPlistData:(id)arg1 ;
-(void)discardPersistentState;
-(id)stateDirectoryAtLaunch;
-(void)invalidateStateDirectoryAtLaunch;
-(void)finishPendingChangesImmediatelyWithCompletionHandler:(/*^block*/id)arg1 ;
@end

