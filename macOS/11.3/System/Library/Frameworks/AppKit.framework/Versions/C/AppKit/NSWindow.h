/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:59 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSResponder.h>
#import <libobjc.A.dylib/NSTouchBarProviderContainer.h>
#import <libobjc.A.dylib/NSViewRoot.h>
#import <libobjc.A.dylib/NSAppearanceCustomizationInternal.h>
#import <libobjc.A.dylib/NSAnimatablePropertyContainer.h>
#import <libobjc.A.dylib/NSMenuItemValidation.h>
#import <libobjc.A.dylib/NSUserInterfaceValidations.h>
#import <libobjc.A.dylib/NSUserInterfaceItemIdentification.h>
#import <libobjc.A.dylib/NSAppearanceCustomization.h>
#import <libobjc.A.dylib/NSAccessibilityElement.h>
#import <libobjc.A.dylib/NSAccessibility.h>

@class NSResponder, NSColor, NSImage, NSString, NSToolbar, NSView, NSWindowAuxiliary, NSMutableSet, CALayer, NSTitlebarAccessoryViewController, NSTabBarItem, NSWindowStackController, NSArray, NSTouchBar, NSAppearance, NSCGSWindow, CAContext, NSURL, NSDockTile, NSScreen, NSDictionary, NSWindowController, NSColorSpace, NSViewController, NSButtonCell, NSWindowTab, NSWindowTabGroup;

@interface NSWindow : NSResponder <NSTouchBarProviderContainer, NSViewRoot, NSAppearanceCustomizationInternal, NSAnimatablePropertyContainer, NSMenuItemValidation, NSUserInterfaceValidations, NSUserInterfaceItemIdentification, NSAppearanceCustomization, NSAccessibilityElement, NSAccessibility> {

	NSResponder* _firstResponder;
	int _level;
	NSColor* _backgroundColor;
	unsigned char _postingDisabled;
	unsigned char _flushDisabled;
	unsigned _ignoreResignEvent : 1;
	unsigned _reservedWindow : 7;
	void* _cursorRects;
	void* _trectTable;
	NSImage* _miniIcon;
	CGSize* _sizeLimits;
	NSString* _frameSaveName;
	NSToolbar* _toolbar;
	id _defaultButtonCell;
	NSView* _initialFirstResponderX;
	long long _windowNum;
	NSView* _contentView;
	id _delegate;
	unsigned char _styleMask;
	struct {
		unsigned backing : 2;
		unsigned visible : 1;
		unsigned isMainWindow : 1;
		unsigned isKeyWindow : 1;
		unsigned hidesOnDeactivate : 1;
		unsigned dontFreeWhenClosed : 1;
		unsigned oneShot : 1;
		unsigned deferred : 1;
		unsigned cursorRectsDisabled : 1;
		unsigned haveFreeCursorRects : 1;
		unsigned validCursorRects : 1;
		unsigned docEdited : 1;
		unsigned staticDepthLimit : 1;
		unsigned worksWhenModal : 1;
		unsigned limitedBecomeKey : 1;
		unsigned needsFlush : 1;
		unsigned viewsNeedDisplay : 1;
		unsigned ignoredFirstMouse : 1;
		unsigned repostedFirstMouse : 1;
		unsigned unused1 : 1;
		unsigned tempHidden : 1;
		unsigned floatingPanel : 1;
		unsigned wantsToBeOnMainScreen : 1;
		unsigned needsBuildLayerTree : 1;
		unsigned deferCanDraw : 1;
		unsigned titleIsRepresentedFilename : 1;
		unsigned excludedFromWindowsMenu : 1;
		unsigned depthLimit : 4;
		unsigned delegateReturnsValidRequestor : 1;
		unsigned lmouseupPending : 1;
		unsigned rmouseupPending : 1;
		unsigned hasColorSensitiveUI : 1;
		unsigned wantsToRegDragTypes : 1;
		unsigned sentInvalidateCursorRectsMsg : 1;
		unsigned avoidsActivation : 1;
		unsigned frameSavedUsingTitle : 1;
		unsigned didRegDragTypes : 1;
		unsigned delayedOneShot : 1;
		unsigned postedNeedsDisplayNote : 1;
		unsigned unused2 : 1;
		unsigned initialFirstResponderTempSet : 1;
		unsigned autodisplay : 1;
		unsigned tossedFirstEvent : 1;
		unsigned isImageCache : 1;
		unsigned autolayoutEngagedSomewhere : 1;
		unsigned hasRegisteredBackdropViews : 1;
		unsigned unused3 : 1;
		unsigned keyViewSelectionDirection : 2;
		unsigned defaultButtonCellKETemporarilyDisabled : 1;
		unsigned defaultButtonCellKEDisabled : 1;
		unsigned menuHasBeenSet : 1;
		unsigned wantsToBeModal : 1;
		unsigned showingModalFrame : 1;
		unsigned unused4 : 1;
		unsigned makingFirstResponderForMouseDown : 1;
		unsigned needsZoom : 1;
		unsigned sentWindowNeedsDisplayMsg : 1;
		unsigned wasModalAtSometime : 1;
		unsigned windowWillBecomeFS : 1;
	}  _wFlags;
	NSWindowAuxiliary* _auxiliaryStorage;
	CGRect _frame;
	NSView* _lastLeftHit;
	NSView* _lastRightHit;
	id _fieldEditor;
	NSView* _borderView;
	NSMutableSet* _dragTypes;
	int _winEventMask;
	unsigned long long _currentZoomState;
	unsigned long long _previousZoomState;
	long long _previousScreenNumber;
	CGRect _previousFrameForScreenChange;
	CGRect _frameAtStartMove;
	CALayer* _contentLayer;

}

@property (getter=isTabOverviewVisible,readonly) char tabOverviewVisible; 
@property (setter=_setTabBarAccessoryViewController:,retain) NSTitlebarAccessoryViewController * _tabBarAccessoryViewController; 
@property (retain,readonly) NSTabBarItem * _tabBarItem; 
@property (setter=_setWindowStackController:) NSWindowStackController * _windowStackController; 
@property (retain) NSResponder * _beforeTabPickerResponder; 
@property (copy,readonly) NSArray * drawers; 
@property (readonly) NSTouchBar * touchBar; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) void* windowRef; 
@property (readonly) char allowsInteriorShadow; 
@property (__weak) id timeMachineDelegate; 
@property (readonly) char hasCloseBox; 
@property (readonly) char hasTitleBar; 
@property (getter=isFloatingPanel,readonly) char floatingPanel; 
@property (getter=isMiniaturizable,readonly) char miniaturizable; 
@property (getter=isModalPanel,readonly) char modalPanel; 
@property (getter=isResizable,readonly) char resizable; 
@property (getter=isZoomable,readonly) char zoomable; 
@property (assign) long long orderedIndex; 
@property (getter=isInKeyWindow,readonly) char inKeyWindow; 
@property (readonly) NSView * contentView; 
@property (getter=isVisible,readonly) char visible; 
@property (readonly) double _displayScale; 
@property (readonly) id<NSAppearanceCustomization> _effectiveAppearanceParent; 
@property (retain) NSAppearance * appearance; 
@property (readonly) NSAppearance * effectiveAppearance; 
@property (readonly) NSCGSWindow * _cgsWindow; 
@property (readonly) CAContext * _functionRowContext; 
@property (__weak,readonly) CAContext * _contextForLayerHosting; 
@property (__weak,readonly) CAContext * _layerHostedContext; 
@property (readonly) CGAffineTransform _layerTransformToHost; 
@property (getter=_isFunctionRowWindow,readonly) char _functionRowWindow; 
@property (assign) char hasColorSensitiveUI; 
@property (copy) NSString * title; 
@property (copy) NSString * subtitle; 
@property (assign) long long titleVisibility; 
@property (assign) char titlebarAppearsTransparent; 
@property (assign) long long toolbarStyle; 
@property (readonly) CGRect contentLayoutRect; 
@property (readonly) id contentLayoutGuide; 
@property (copy) NSArray * titlebarAccessoryViewControllers; 
@property (copy) NSURL * representedURL; 
@property (copy) NSString * representedFilename; 
@property (getter=isExcludedFromWindowsMenu) char excludedFromWindowsMenu; 
@property (retain) NSView * contentView; 
@property (__weak) id<NSWindowDelegate> delegate; 
@property (readonly) long long windowNumber; 
@property (assign) unsigned long long styleMask; 
@property (readonly) CGRect frame; 
@property (readonly) char inLiveResize; 
@property (assign) CGSize resizeIncrements; 
@property (assign) CGSize aspectRatio; 
@property (assign) CGSize contentResizeIncrements; 
@property (assign) CGSize contentAspectRatio; 
@property (assign) char viewsNeedDisplay; 
@property (assign) char preservesContentDuringLiveResize; 
@property (__weak,readonly) NSResponder * firstResponder; 
@property (readonly) unsigned long long resizeFlags; 
@property (getter=isReleasedWhenClosed) char releasedWhenClosed; 
@property (getter=isZoomed,readonly) char zoomed; 
@property (getter=isMiniaturized,readonly) char miniaturized; 
@property (copy) NSColor * backgroundColor; 
@property (getter=isMovable) char movable; 
@property (getter=isMovableByWindowBackground) char movableByWindowBackground; 
@property (assign) char hidesOnDeactivate; 
@property (assign) char canHide; 
@property (retain) NSImage * miniwindowImage; 
@property (copy) NSString * miniwindowTitle; 
@property (readonly) NSDockTile * dockTile; 
@property (getter=isDocumentEdited) char documentEdited; 
@property (getter=isKeyWindow,readonly) char keyWindow; 
@property (getter=isMainWindow,readonly) char mainWindow; 
@property (readonly) char canBecomeKeyWindow; 
@property (readonly) char canBecomeMainWindow; 
@property (readonly) char worksWhenModal; 
@property (assign) char preventsApplicationTerminationWhenModal; 
@property (readonly) double backingScaleFactor; 
@property (assign) char allowsToolTipsWhenApplicationIsInactive; 
@property (assign) unsigned long long backingType; 
@property (assign) long long level; 
@property (assign) int depthLimit; 
@property (readonly) char hasDynamicDepthLimit; 
@property (readonly) NSScreen * screen; 
@property (readonly) NSScreen * deepestScreen; 
@property (assign) char hasShadow; 
@property (assign) double alphaValue; 
@property (getter=isOpaque) char opaque; 
@property (assign) unsigned long long sharingType; 
@property (assign) char allowsConcurrentViewDrawing; 
@property (assign) char displaysWhenScreenProfileChanges; 
@property (assign) char canBecomeVisibleWithoutLogin; 
@property (assign) unsigned long long collectionBehavior; 
@property (assign) long long animationBehavior; 
@property (getter=isOnActiveSpace,readonly) char onActiveSpace; 
@property (copy,readonly) NSString * stringWithSavedFrame; 
@property (copy,readonly) NSString * frameAutosaveName; 
@property (assign) CGSize minSize; 
@property (assign) CGSize maxSize; 
@property (assign) CGSize contentMinSize; 
@property (assign) CGSize contentMaxSize; 
@property (assign) CGSize minFullScreenContentSize; 
@property (assign) CGSize maxFullScreenContentSize; 
@property (copy,readonly) NSDictionary * deviceDescription; 
@property (__weak) NSWindowController * windowController; 
@property (copy,readonly) NSArray * sheets; 
@property (readonly) NSWindow * attachedSheet; 
@property (getter=isSheet,readonly) char sheet; 
@property (readonly) NSWindow * sheetParent; 
@property (copy,readonly) NSArray * childWindows; 
@property (__weak) NSWindow * parentWindow; 
@property (__weak) NSObject*<NSAppearanceCustomization> appearanceSource; 
@property (retain) NSColorSpace * colorSpace; 
@property (readonly) unsigned long long occlusionState; 
@property (assign) long long titlebarSeparatorStyle; 
@property (retain) NSViewController * contentViewController; 
@property (__weak) NSView * initialFirstResponder; 
@property (readonly) unsigned long long keyViewSelectionDirection; 
@property (retain) NSButtonCell * defaultButtonCell; 
@property (assign) char autorecalculatesKeyViewLoop; 
@property (retain) NSToolbar * toolbar; 
@property (assign) char showsToolbarButton; 
@property (assign) long long tabbingMode; 
@property (copy) NSString * tabbingIdentifier; 
@property (copy,readonly) NSArray * tabbedWindows; 
@property (readonly) NSWindowTab * tab; 
@property (__weak,readonly) NSWindowTabGroup * tabGroup; 
@property (readonly) long long windowTitlebarLayoutDirection; 
@property (copy) NSDictionary * animations; 
@property (copy) NSString * identifier; 
@property (getter=isAccessibilityElement) char accessibilityElement; 
@property (assign) CGRect accessibilityFrame; 
@property (getter=isAccessibilityFocused) char accessibilityFocused; 
@property (assign) CGPoint accessibilityActivationPoint; 
@property (__weak) id accessibilityTopLevelUIElement; 
@property (copy) NSURL * accessibilityURL; 
@property (retain) id accessibilityValue; 
@property (copy) NSString * accessibilityValueDescription; 
@property (copy) NSArray * accessibilityVisibleChildren; 
@property (copy) NSString * accessibilitySubrole; 
@property (copy) NSString * accessibilityTitle; 
@property (__weak) id accessibilityTitleUIElement; 
@property (copy) NSArray * accessibilityNextContents; 
@property (assign) long long accessibilityOrientation; 
@property (retain) id accessibilityOverflowButton; 
@property (__weak) id accessibilityParent; 
@property (copy) NSString * accessibilityPlaceholderValue; 
@property (copy) NSArray * accessibilityPreviousContents; 
@property (copy) NSString * accessibilityRole; 
@property (copy) NSString * accessibilityRoleDescription; 
@property (retain) id accessibilitySearchButton; 
@property (retain) id accessibilitySearchMenu; 
@property (getter=isAccessibilitySelected) char accessibilitySelected; 
@property (copy) NSArray * accessibilitySelectedChildren; 
@property (copy) NSArray * accessibilityServesAsTitleForUIElements; 
@property (retain) id accessibilityShownMenu; 
@property (retain) id accessibilityMinValue; 
@property (retain) id accessibilityMaxValue; 
@property (copy) NSArray * accessibilityLinkedUIElements; 
@property (__weak) id accessibilityWindow; 
@property (copy) NSString * accessibilityIdentifier; 
@property (copy) NSString * accessibilityHelp; 
@property (copy) NSString * accessibilityFilename; 
@property (getter=isAccessibilityExpanded) char accessibilityExpanded; 
@property (getter=isAccessibilityEdited) char accessibilityEdited; 
@property (getter=isAccessibilityEnabled) char accessibilityEnabled; 
@property (copy) NSArray * accessibilityChildren; 
@property (copy) NSArray * accessibilityChildrenInNavigationOrder; 
@property (retain) id accessibilityClearButton; 
@property (retain) id accessibilityCancelButton; 
@property (getter=isAccessibilityProtectedContent) char accessibilityProtectedContent; 
@property (copy) NSArray * accessibilityContents; 
@property (copy) NSString * accessibilityLabel; 
@property (getter=isAccessibilityAlternateUIVisible) char accessibilityAlternateUIVisible; 
@property (copy) NSArray * accessibilitySharedFocusElements; 
@property (getter=isAccessibilityRequired) char accessibilityRequired; 
@property (copy) NSArray * accessibilityCustomRotors; 
@property (retain) id accessibilityApplicationFocusedUIElement; 
@property (retain) id accessibilityMainWindow; 
@property (getter=isAccessibilityHidden) char accessibilityHidden; 
@property (getter=isAccessibilityFrontmost) char accessibilityFrontmost; 
@property (retain) id accessibilityFocusedWindow; 
@property (copy) NSArray * accessibilityWindows; 
@property (__weak) id accessibilityExtrasMenuBar; 
@property (__weak) id accessibilityMenuBar; 
@property (copy) NSArray * accessibilityColumnTitles; 
@property (getter=isAccessibilityOrderedByRow) char accessibilityOrderedByRow; 
@property (assign) long long accessibilityHorizontalUnits; 
@property (assign) long long accessibilityVerticalUnits; 
@property (copy) NSString * accessibilityHorizontalUnitDescription; 
@property (copy) NSString * accessibilityVerticalUnitDescription; 
@property (copy) NSArray * accessibilityHandles; 
@property (retain) id accessibilityWarningValue; 
@property (retain) id accessibilityCriticalValue; 
@property (getter=isAccessibilityDisclosed) char accessibilityDisclosed; 
@property (__weak) id accessibilityDisclosedByRow; 
@property (retain) id accessibilityDisclosedRows; 
@property (assign) long long accessibilityDisclosureLevel; 
@property (copy) NSArray * accessibilityMarkerUIElements; 
@property (retain) id accessibilityMarkerValues; 
@property (retain) id accessibilityMarkerGroupUIElement; 
@property (assign) long long accessibilityUnits; 
@property (copy) NSString * accessibilityUnitDescription; 
@property (assign) long long accessibilityRulerMarkerType; 
@property (copy) NSString * accessibilityMarkerTypeDescription; 
@property (retain) id accessibilityHorizontalScrollBar; 
@property (retain) id accessibilityVerticalScrollBar; 
@property (copy) NSArray * accessibilityAllowedValues; 
@property (copy) NSArray * accessibilityLabelUIElements; 
@property (assign) float accessibilityLabelValue; 
@property (copy) NSArray * accessibilitySplitters; 
@property (retain) id accessibilityDecrementButton; 
@property (retain) id accessibilityIncrementButton; 
@property (copy) NSArray * accessibilityTabs; 
@property (retain) id accessibilityHeader; 
@property (assign) long long accessibilityColumnCount; 
@property (assign) long long accessibilityRowCount; 
@property (assign) long long accessibilityIndex; 
@property (copy) NSArray * accessibilityColumns; 
@property (copy) NSArray * accessibilityRows; 
@property (copy) NSArray * accessibilityVisibleRows; 
@property (copy) NSArray * accessibilitySelectedRows; 
@property (copy) NSArray * accessibilityVisibleColumns; 
@property (copy) NSArray * accessibilitySelectedColumns; 
@property (assign) long long accessibilitySortDirection; 
@property (copy) NSArray * accessibilityRowHeaderUIElements; 
@property (copy) NSArray * accessibilitySelectedCells; 
@property (copy) NSArray * accessibilityVisibleCells; 
@property (copy) NSArray * accessibilityColumnHeaderUIElements; 
@property (assign) NSRange accessibilityRowIndexRange; 
@property (assign) NSRange accessibilityColumnIndexRange; 
@property (assign) long long accessibilityInsertionPointLineNumber; 
@property (assign) NSRange accessibilitySharedCharacterRange; 
@property (copy) NSArray * accessibilitySharedTextUIElements; 
@property (assign) NSRange accessibilityVisibleCharacterRange; 
@property (assign) long long accessibilityNumberOfCharacters; 
@property (copy) NSString * accessibilitySelectedText; 
@property (assign) NSRange accessibilitySelectedTextRange; 
@property (copy) NSArray * accessibilitySelectedTextRanges; 
@property (retain) id accessibilityToolbarButton; 
@property (getter=isAccessibilityModal) char accessibilityModal; 
@property (retain) id accessibilityProxy; 
@property (getter=isAccessibilityMain) char accessibilityMain; 
@property (retain) id accessibilityFullScreenButton; 
@property (retain) id accessibilityGrowArea; 
@property (copy) NSString * accessibilityDocument; 
@property (retain) id accessibilityDefaultButton; 
@property (retain) id accessibilityCloseButton; 
@property (retain) id accessibilityZoomButton; 
@property (retain) id accessibilityMinimizeButton; 
@property (getter=isAccessibilityMinimized) char accessibilityMinimized; 
@property (copy) NSArray * accessibilityCustomActions; 
+(void)initialize;
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(void)_automateActivateDeactivate;
+(long long)_readWindowTabbingModeFromPrefs;
+(void)setUserTabbingPreference:(long long)arg1 ;
+(void)_setShouldInvertImplicitBehavior:(char)arg1 ;
+(void)_setShouldInvertImplicitBehaviorToYesForCurrentRunLoop;
+(void)_setTabPlusButtonWasClicked:(char)arg1 ;
+(char)shouldPreferWindowTabbingForEvent:(id)arg1 withIdentifier:(id)arg2 ;
+(char)_shouldInvertImplicitBehavior;
+(long long)userTabbingPreference;
+(char)allowsAutomaticWindowTabbing;
+(void)_updateTabbingModePreference;
+(char)_wantsAutomaticWindowTabbing;
+(void)setAllowsAutomaticWindowTabbing:(char)arg1 ;
+(char)shouldPreferWindowTabbingForEvent:(id)arg1 ;
+(void)_addWindowTabsMenuItemsIfNeeded;
+(void)_tabbedWindowsFinishedRestoration;
+(id)defaultAnimationForKey:(id)arg1 ;
+(id)windowNumbersWithOptions:(unsigned long long)arg1 ;
+(void)_calcKeyAndMain;
+(void)_minimizeAll;
+(char)_sendDockMenuCommand:(unsigned)arg1 withTag:(unsigned long long)arg2 modifierFlags:(unsigned long long)arg3 ;
+(long long)windowNumberAtPoint:(CGPoint)arg1 belowWindowWithWindowNumber:(long long)arg2 ;
+(int)defaultDepthLimit;
+(unsigned long long)_validateStyleMask:(unsigned long long)arg1 ;
+(Class)frameViewClassForStyleMask:(unsigned long long)arg1 ;
+(CGRect)frameRectForContentRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 ;
+(CGRect)contentRectForFrameRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 ;
+(CGSize)minFrameSizeForMinContentSize:(CGSize)arg1 styleMask:(unsigned long long)arg2 ;
+(long long)_baseModalWindowLevel;
+(id)_windowNumbersWithOptions:(unsigned long long)arg1 onSpace:(unsigned long long)arg2 ;
+(CGSize)minContentSizeForMinFrameSize:(CGSize)arg1 styleMask:(unsigned long long)arg2 ;
+(double)minFrameWidthWithTitle:(id)arg1 styleMask:(unsigned long long)arg2 ;
+(id)keyPathsForValuesAffectingEffectiveAppearance;
+(id)_allowedRunLoopModesForToolTips;
+(id)windowWithContentViewController:(id)arg1 ;
+(char)_hiddenInWindowList;
+(id)keyPathsForValuesAffecting_appearanceForAttachedPopovers;
+(id)standardWindowButton:(unsigned long long)arg1 forStyleMask:(unsigned long long)arg2 ;
+(char)_shouldZoomOnDoubleClick;
+(char)_shouldMiniaturizeOnDoubleClick;
+(char)_isStyleMaskEffectivelyTitled:(unsigned long long)arg1 ;
+(char)_allowsNontitledResizableWindows;
+(CGRect)_integralizeProposedFrame:(CGRect)arg1 againstExistingFrame:(CGRect)arg2 ;
+(void)_disableKeyStateChangeNotifications;
+(void)_enableKeyStateChangeNotifications;
+(CGRect)_savedFrameFromString:(id)arg1 ;
+(NSModalSession*)_modalSessionForShownService:(id)arg1 ;
+(id)defaultAnimationForKeyPath:(id)arg1 ;
+(id)keyPathsForValuesAffectingUndoManager;
+(id)keyPathsForValuesAffectingTitlebarBlendingMode;
+(id)keyPathsForValuesAffectingContentLayoutRect;
+(id)_defaultShadowSpec;
+(char)automaticallyNotifiesObserversOf_borderView;
+(double)standardContentBorderThicknessForEdge:(unsigned long long)arg1 borderSize:(unsigned long long)arg2 styleMask:(unsigned long long)arg3 ;
+(char)_batchOrderWindows:(unsigned long long)arg1 withBlock:(/*^block*/id)arg2 ;
+(void)_setBaseWindowModalLevel:(long long)arg1 ;
+(char)_batchMinimizeWindowsWithBlock:(/*^block*/id)arg1 ;
+(char)_currentWorkspaceIsUserSpace;
+(void)removeFrameUsingName:(id)arg1 ;
+(char)automaticallyNotifiesObserversOfAppearance;
+(id)keyPathsForValuesAffectingAppearance;
+(id)_windowWithPersistentUIWindowID:(unsigned)arg1 ;
+(OpaqueCUIRendererRefRef)coreUIRenderer;
+(void)_getResizeEdgeAndCornerThicknesses:(double)arg1 forStyleMask:(unsigned long long)arg2 ;
+(double)_tileDividerInteriorResizeEdgeThickness;
+(char)canBeResizedFromInterior;
+(void)_getExteriorResizeEdgeThicknesses:(double)arg1 forStyleMask:(unsigned long long)arg2 ;
+(long long)_mouseHysteresisCheck:(id)arg1 withExpiration:(id)arg2 andDistance:(CGSize)arg3 finalMouseLocation:(CGPoint*)arg4 ;
+(char)_hidesChromeWhenFullScreen;
+(char)_useReducedMotionFullScreenTransition;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id<NSWindowDelegate>)delegate;
-(void)close;
-(void)setDelegate:(id<NSWindowDelegate>)arg1 ;
-(char)_isHidden;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(NSString *)identifier;
-(id)_displayName;
-(void)update;
-(void)setTitle:(NSString *)arg1 ;
-(id)menu;
-(NSWindow *)parentWindow;
-(char)hasTitleBar;
-(void)setIdentifier:(NSString *)arg1 ;
-(long long)uniqueID;
-(long long)level;
-(id)objectSpecifier;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void*)arg3 ;
-(id)document;
-(NSString *)title;
-(NSString *)subtitle;
-(void)setSubtitle:(NSString *)arg1 ;
-(id)_screenForAutomatedLiveResize;
-(char)_inFullScreen;
-(CGRect)frame;
-(char)_confirmSize:(CGSize*)arg1 force:(char)arg2 ;
-(void)setFrame:(CGRect)arg1 display:(char)arg2 ;
-(id)_liveResizeOperation;
-(CGSize)minFullScreenContentSize;
-(void)_setStartingSizeAndPosition;
-(id)nextEventMatchingMask:(unsigned long long)arg1 untilDate:(id)arg2 inMode:(id)arg3 dequeue:(char)arg4 ;
-(id)_fullScreenContentController;
-(long long)windowNumber;
-(void)postEvent:(id)arg1 atStart:(char)arg2 ;
-(CGPoint)convertScreenToBase:(CGPoint)arg1 ;
-(NSScreen *)screen;
-(void)_startLiveResize;
-(void)_endLiveResize;
-(void)_markStartOfLiveResizeForPerformanceMeasurement;
-(void)_markEndOfLiveResizeForPerformanceMeasurement;
-(void)_synthesizeEventsForLiveResize;
-(void)_automateLiveResize;
-(void)resetCursorRects;
-(void)setBackgroundColor:(NSColor *)arg1 ;
-(NSAppearance *)effectiveAppearance;
-(long long)userInterfaceLayoutDirection;
-(char)isOpaque;
-(CGSize)minSize;
-(CGSize)maxSize;
-(void)setFrameOrigin:(CGPoint)arg1 ;
-(NSResponder *)firstResponder;
-(char)makeFirstResponder:(id)arg1 ;
-(id)accessibilityAttributeNames;
-(id)accessibilityWindowAttribute;
-(id)accessibilityParentAttribute;
-(void)sendEvent:(id)arg1 ;
-(NSView *)contentView;
-(void)undo:(id)arg1 ;
-(void)redo:(id)arg1 ;
-(char)validateMenuItem:(id)arg1 ;
-(char)validateUserInterfaceItem:(id)arg1 ;
-(id)_getActiveUndoManager;
-(void)makeKeyWindow;
-(void)resignKeyWindow;
-(char)isVisible;
-(void)setColorSpace:(NSColorSpace *)arg1 ;
-(NSAppearance *)appearance;
-(void)_setForceIsOnActiveSpace:(char)arg1 ;
-(char)isOnActiveSpace;
-(void)_makeKeyRegardlessOfVisibility;
-(void)_refreshTilingConstraints:(char)arg1 ;
-(id)animator;
-(NSColor *)backgroundColor;
-(void)setUserInterfaceLayoutDirection:(long long)arg1 ;
-(id)nextEventMatchingMask:(unsigned long long)arg1 ;
-(void)setAnimations:(NSDictionary *)arg1 ;
-(void)mouseDown:(id)arg1 ;
-(id)accessibilityParent;
-(char)_hasActiveAppearance;
-(CGRect)accessibilityFocusRingBounds;
-(id)accessibilityFocusedUIElement;
-(id)accessibilityWindowAttributeValueHelper;
-(id)accessibilityTopLevelUIElementAttributeValueHelper;
-(CGRect)convertRectToScreen:(CGRect)arg1 ;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(double)accessibilityVisibleArea;
-(CGRect)accessibilityFrame;
-(char)accessibilityIsIgnored;
-(char)_presenterOnly;
-(id)remoteUIElement;
-(void*)windowRef;
-(id)accessibilityAttributeValue:(id)arg1 ;
-(id)_borderView;
-(long long)accessibilityWindowNumber;
-(void)setLevel:(long long)arg1 ;
-(char)isTabOverviewVisible;
-(void)_toggleTabOverview:(id)arg1 ;
-(NSWindowStackController *)_windowStackController;
-(long long)titleVisibility;
-(NSString *)tabbingIdentifier;
-(NSWindowController *)windowController;
-(id)_titlebarDisplayIdentifier;
-(char)canEnterFullScreenMode;
-(id)_storedTabbingIdentifier;
-(id)_implicitTabbingIdentifier;
-(void)setTabbingIdentifier:(NSString *)arg1 ;
-(id)_aux;
-(long long)tabbingMode;
-(void)setTabbingMode:(long long)arg1 ;
-(NSTitlebarAccessoryViewController *)_tabBarAccessoryViewController;
-(void)_ensureStackControllerExists;
-(char)_ignoreWindowStackController;
-(void)_setIgnoreWindowStackController:(char)arg1 ;
-(NSWindowTab *)tab;
-(char)_hasTabBarItem;
-(char)_implicitlyAllowsWindowTabbing;
-(unsigned long long)styleMask;
-(char)_supportsTitlebarAccessoryViewControllers;
-(char)_borderViewCanAddWindowTabs;
-(NSWindow *)sheetParent;
-(char)titlebarAppearsTransparent;
-(char)isResizable;
-(char)isKeyWindow;
-(void)makeKeyAndOrderFront:(id)arg1 ;
-(char)_supportsTabbing;
-(char)_canAutoParticipateInWindowTabs;
-(char)_isInHiddenWindowTab;
-(char)_isPerformingRestoration;
-(char)_shouldJoinTabbingStackOnOrderIn;
-(void)_doWindowTabSetupAttemptingToJoinExistingStack:(char)arg1 makeIfNeeded:(char)arg2 ;
-(void)_fixIgnoredKeyMainAppearancesIfNeeded;
-(void)_doWindowTabOrderAbove:(id)arg1 ;
-(char)_doTabbedWindowOrderInWithWasVisible:(char)arg1 mode:(long long)arg2 ;
-(void)_setIsInHiddenWindowTab:(char)arg1 ;
-(void)_unscheduleWindowForBatchOrdering;
-(NSCGSWindow *)_cgsWindow;
-(void)_doWindowTabOrderOut;
-(char)_isTabbedWithOtherWindows;
-(char)_canTabMergeWithIdentifier:(id)arg1 ;
-(char)isMiniaturized;
-(char)_canTabWithIdentifier:(id)arg1 ;
-(char)_supportsNewTabButton;
-(char)_runningDocModal;
-(void)selectNextTab:(id)arg1 ;
-(char)_canSelectNextOrPreviousTab;
-(void)selectPreviousTab:(id)arg1 ;
-(void)moveTabToNewWindow:(id)arg1 ;
-(char)_canMoveTabToNewWindow;
-(void)mergeAllWindows:(id)arg1 ;
-(char)_canMergeWindows;
-(void)toggleTabBar:(id)arg1 ;
-(char)_validateToggleTabBarItem:(id)arg1 ;
-(void)toggleTabOverview:(id)arg1 ;
-(char)_validateShowAllTabsMenuItem:(id)arg1 ;
-(void)performCloseOtherTabs:(id)arg1 ;
-(char)_canCloseOtherTabs;
-(char)_nextResponderChainValidateUIItem:(id)arg1 withResult:(char)arg2 ;
-(char)_attemptToCloseAllTabs:(id)arg1 ;
-(void)performClose:(id)arg1 ;
-(char)isTabbed;
-(void)performCloseTabbedWindowGroup:(id)arg1 ;
-(char)_eventIsOldSelectNextPreviousTabKeyEquivalent:(id)arg1 direction:(char*)arg2 ;
-(char)performKeyEquivalent:(id)arg1 ;
-(void)_setTemporarilyIgnoresMoves:(char)arg1 ;
-(void)_prepareToMinimizeCore;
-(void)_finishMinimizeToDock;
-(void)_prepareToUnMinimizeFromDock:(char)arg1 forceActivation:(char)arg2 wantsToBeKey:(char)arg3 ;
-(void)_finishDeminiaturizeFromDock:(char)arg1 ;
-(id)_currentlySelectedTabbedWindow;
-(void)pinTab:(id)arg1 ;
-(void)unpinTab:(id)arg1 ;
-(NSWindowTabGroup *)tabGroup;
-(void)_toggleTabOverview:(id)arg1 animated:(char)arg2 ;
-(NSResponder *)_beforeTabPickerResponder;
-(id)_themeFrame;
-(void)setTabOverviewVisible:(char)arg1 ;
-(void)_setTabBarAccessoryViewController:(id)arg1 ;
-(id)_tabGroup;
-(void)_setWindowStackController:(id)arg1 ;
-(NSTabBarItem *)_tabBarItem;
-(void)_doTabbedWindowSyncTitleToTabBar;
-(id)_startingWindowForSendAction:(SEL)arg1 ;
-(char)_isFullScreenModal;
-(id)_fullScreenModalStackController;
-(void)_makeNewWindowInTab;
-(void)_makeTabStackActive;
-(void)_beginNextQueuedSheetInGroupIfNecessary;
-(id)_nextTabbedWindowToSelect;
-(void)_moveToModalStackController:(id)arg1 ;
-(CGRect)_tabRect;
-(char)_tabBarIsVisible;
-(char)_willBecomeTabbedWithOtherWindows;
-(void)_doWindowTabCleanupForStyleMaskChange;
-(void)_doTabbedWindowCleanupForOrderOut;
-(void)_doTabbedWindowOrderFront;
-(void)_doTabbedWindowMadeKey;
-(void)_doTabbedWindowSyncToolbar;
-(char)_validateTabUserInterfaceItem:(id)arg1 withResult:(char)arg2 ;
-(char)_tabbingPerformKeyEquivalent:(id)arg1 ;
-(char)_temporarilyIgnoreMoves;
-(char)_prepareTabbedWindowMinimize;
-(void)_doNonVisibleTabMinimize;
-(char)_prepareTabbedWindowDeminimize;
-(void)_doNonVisibleTabDeminimize;
-(void)_tabsFinishDeminiaturizeFromDock;
-(void)_encodeTabbedWindowRestorableStateWithCoder:(id)arg1 ;
-(void)_restoreTabbedWindowStateWithCoder:(id)arg1 ;
-(void)_setIsPerformingRestoration:(char)arg1 ;
-(id)_windowForLayoutEncoding;
-(void)_tabbedWindowsWillEnterFullScreen;
-(void)_tabbedWindowsDidEnterFullScreen;
-(void)_tabbedWindowsDidExitFullScreen;
-(void)_moveWindowToSpace:(unsigned long long)arg1 ;
-(char)_tabbedWindowsHandleEnterFullScreen;
-(void)_doTabbedWindowWillEnterVersionsEditor;
-(void)_doTabbedWindowWillExitVersionsEditor;
-(void)orderOutTabbedWindowGroup:(id)arg1 ;
-(void)_selectNextTab:(id)arg1 ;
-(void)_selectPreviousTab:(id)arg1 ;
-(void)_moveTabToNewWindow:(id)arg1 ;
-(void)_mergeAllWindows:(id)arg1 ;
-(void)_toggleTabBar:(id)arg1 ;
-(void)windowDidBecomeTabbed;
-(id)_tabbedWindows;
-(void)_doTabbedWindowDidChangeToolbar;
-(void)_addTabbedWindow:(id)arg1 ordered:(long long)arg2 ;
-(void)set_beforeTabPickerResponder:(NSResponder *)arg1 ;
-(void)_setTemporaryContentView:(id)arg1 ;
-(id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2 ;
-(void)setReleasedWhenClosed:(char)arg1 ;
-(void)orderWindow:(long long)arg1 relativeTo:(long long)arg2 ;
-(void)orderOut:(id)arg1 ;
-(void)setAlphaValue:(double)arg1 ;
-(id)initWithContentRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(char)arg4 ;
-(void)setOpaque:(char)arg1 ;
-(void)setContentView:(NSView *)arg1 ;
-(void)orderFront:(id)arg1 ;
-(void)display;
-(void)flushWindow;
-(id)accessibilityHelpStringForChild:(id)arg1 ;
-(char)accessibilityIsChildFocusable:(id)arg1 ;
-(id)accessibilityPositionOfChild:(id)arg1 ;
-(id)accessibilitySizeOfChild:(id)arg1 ;
-(char)accessibilityShouldUseUniqueId;
-(id)accessibilityRoleAttribute;
-(char)accessibilityIsRoleAttributeSettable;
-(id)accessibilityRoleDescriptionAttribute;
-(char)accessibilityIsRoleDescriptionAttributeSettable;
-(id)accessibilitySubroleAttribute;
-(char)accessibilityIsSubroleAttributeSettable;
-(id)accessibilityFocusedAttribute;
-(char)accessibilityIsFocusedAttributeSettable;
-(char)accessibilityIsParentAttributeSettable;
-(char)accessibilityIsWindowAttributeSettable;
-(id)accessibilityPositionAttribute;
-(char)accessibilityIsPositionAttributeSettable;
-(id)accessibilitySizeAttribute;
-(char)accessibilityIsSizeAttributeSettable;
-(char)accessibilityIsAttributeSettable:(id)arg1 ;
-(void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2 ;
-(id)accessibilityActionNames;
-(id)accessibilityActionDescription:(id)arg1 ;
-(void)accessibilityPerformAction:(id)arg1 ;
-(CGRect)convertRectFromScreen:(CGRect)arg1 ;
-(NSColorSpace *)colorSpace;
-(char)accessibilitySupportsOverriddenAttributes;
-(id)accessibilityChildrenAttribute;
-(void)setMovable:(char)arg1 ;
-(void)setCollectionBehavior:(unsigned long long)arg1 ;
-(void)_lockToAbsoluteSubLevel:(long long)arg1 ;
-(void)setHidesOnDeactivate:(char)arg1 ;
-(void)setIgnoresMouseEvents:(char)arg1 ;
-(double)backingScaleFactor;
-(char)_shouldSnapWindowsClientSide;
-(char)_allowsSnapping;
-(char)_canBeSnappingTarget;
-(char)_allowsExteriorResizing;
-(char)isMovable;
-(char)_canMiniaturize;
-(char)canBecomeKeyWindow;
-(char)canBecomeMainWindow;
-(char)_ignoreForFullScreenTransition;
-(void)_setWindowTag;
-(void*)graphicsPort;
-(void)_setFullScreenPresentationOptions:(unsigned long long)arg1 ;
-(CAContext *)_contextForLayerHosting;
-(NSToolbar *)toolbar;
-(void)setToolbar:(NSToolbar *)arg1 ;
-(NSArray *)childWindows;
-(char)_ignoreForFullScreenTransitionSnapshot;
-(id)_displayChanged;
-(NSWindow *)attachedSheet;
-(void)_updateFullScreenSpaceDockTitle;
-(char)_supportsDockInitiatedFullScreen;
-(CGRect)_frameForFullScreenModeInRect:(CGRect)arg1 ;
-(id)_layoutEngine;
-(void)layoutIfNeeded;
-(CGSize)_actualMinFullScreenContentSize;
-(void)exitFullScreenMode:(id)arg1 ;
-(id)_bestScreenByGeometry;
-(void)disableCursorRects;
-(void)enableCursorRects;
-(void)_saveUserFrame;
-(void)_saveTilePreferredSize;
-(void)_queryCanAddSiblingTileForWindow:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_createSiblingTileForWindow:(id)arg1 preferredPositions:(unsigned long long)arg2 responseHandler:(/*^block*/id)arg3 ;
-(NSString *)stringWithSavedFrame;
-(id)_stringWithSavedFrame;
-(CGPoint)mouseLocationOutsideOfEventStream;
-(void)_setAlertWindow:(char)arg1 ;
-(void)setRestorable:(char)arg1 ;
-(void)setMovableByWindowBackground:(char)arg1 ;
-(void)setDefaultButtonCell:(NSButtonCell *)arg1 ;
-(long long)animationBehavior;
-(void)setAnimationBehavior:(long long)arg1 ;
-(long long)_orderOutAnimationType;
-(void)_setOrderOutAnimationType:(long long)arg1 ;
-(void)beginCriticalSheet:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)beginSheet:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)endSheet:(id)arg1 returnCode:(long long)arg2 ;
-(char)isSheet;
-(void)setInitialFirstResponder:(NSView *)arg1 ;
-(void)_setAvoidsActivation:(char)arg1 ;
-(NSView *)initialFirstResponder;
-(void)setAnchorAttribute:(long long)arg1 forOrientation:(long long)arg2 ;
-(void)setContentSize:(CGSize)arg1 ;
-(NSDictionary *)animations;
-(void)_scheduleWindowForBatchOrdering:(long long)arg1 relativeTo:(long long)arg2 ;
-(void)_updateButtonsForModeChanged;
-(char)_canAutoQuitQuietlyAndSafelyWithOptionalExplanation:(id)arg1 ;
-(void)_closeForTermination;
-(id)validRequestorForSendType:(id)arg1 returnType:(id)arg2 ;
-(char)canHide;
-(id)_tempHide:(char)arg1 relWin:(long long)arg2 ;
-(id)_tempHideHODWindow;
-(void)_setVisible:(char)arg1 ;
-(id)_tempUnhideHODWindow;
-(void)accessibilityPostNotification:(id)arg1 ;
-(id)_getPositionFromServer;
-(id)_registerDragTypesIfNeeded;
-(void)_setWindowDidExistAtLaunch:(char)arg1 ;
-(void)_resetDisableCounts;
-(void)_resetPostingCounts;
-(char)_hasWindowRef;
-(char)_wrapsCarbonWindow;
-(void)_setSheet:(char)arg1 ;
-(void)center;
-(void)setFrameTopLeftPoint:(CGPoint)arg1 ;
-(void)_setModal:(char)arg1 ;
-(void)_setUpFirstResponderBeforeBecomingVisible;
-(void)_doOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(char)arg3 forCounter:(char)arg4 force:(char)arg5 isModal:(char)arg6 ;
-(void)deminiaturize:(id)arg1 ;
-(long long)_realWindowNumber;
-(void)_rebuildOrderingGroup:(char)arg1 ;
-(char)_wantsUserAttention;
-(char)hidesOnDeactivate;
-(void)_setWantsHideOnDeactivate:(char)arg1 ;
-(char)_blocksActionWhenModal:(SEL)arg1 ;
-(void)_setSheetParent:(id)arg1 ;
-(id)_clearModalWindowLevel;
-(NSArray *)sheets;
-(void)_dismissModalForTerminate;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)restoreStateWithCoder:(id)arg1 ;
-(unsigned)_persistentUIWindowID;
-(char)_isNonactivatingPanel;
-(id)currentEvent;
-(id)_bestScreenBySpaceAssignmentOrGeometry;
-(char)_visibleAndCanBecomeKey;
-(char)_isActiveAndOnScreen:(id)arg1 ;
-(char)_sharesParentFirstResponder;
-(char)_canBecomeMainWindowRegardlessOfVisibility;
-(void)makeMainWindow;
-(void)_updateFrameToScreenConstraints;
-(id)_restoreModalWindowLevel;
-(void)_activateTrackingRectsForApplicationActivation;
-(void)_deactivateTrackingRectsForApplicationDeactivation;
-(char)_deferQuickLookIfPossible;
-(void)quickLookPreviewItems:(id)arg1 ;
-(void)_resignKeyFocus;
-(void)becomeKeyWindow;
-(void)_setFrameNeedsDisplay:(char)arg1 ;
-(char)_orderOutInProgress;
-(id)_documentWindow;
-(char)_isUtilityWindow;
-(NSDockTile *)dockTile;
-(id)userInterfaceItemIdentifier;
-(void)_takeApplicationMenuIfNeeded:(id)arg1 ;
-(void)_sendWindowWillMoveNoteWithEvent:(id)arg1 ;
-(void)_startWindowMoveWithEvent:(id)arg1 ;
-(void)_endWindowMoveWithEvent:(id)arg1 ;
-(void)_handleResignKeyAppearanceEvent;
-(void)_handleResignMainAppearanceEvent;
-(char)_toggleOrderedFrontMostWillOrderOut;
-(void)doCommandBySelector:(SEL)arg1 ;
-(void)enterFullScreenMode:(id)arg1 ;
-(void)_updateButtonsForFullScreen;
-(unsigned long long)occlusionState;
-(void)endSheet:(id)arg1 ;
-(unsigned)_persistentStateTerminationGeneration;
-(id)_copyPublicPersistentUIInfo;
-(void)rightMouseDown:(id)arg1 ;
-(void)quickLookPreviewItemsAtWindowLocation:(CGPoint)arg1 ;
-(void)setMenu:(id)arg1 ;
-(void)setCanEnterFullScreenMode:(char)arg1 ;
-(void)setUserInterfaceItemIdentifier:(id)arg1 ;
-(void)toggleFullScreen:(id)arg1 ;
-(void)setWindowController:(NSWindowController *)arg1 ;
-(void)_restoreLevelAfterRunningModal;
-(char)_wantsHideOnDeactivate;
-(char)accessibilityIsChildOfApp;
-(id)_titlebarContainerView;
-(id)_toolbarView;
-(id)accessibilityTitleAttribute;
-(char)accessibilityIsTitleAttributeSettable;
-(id)accessibilityChildrenInNavigationOrderAttribute;
-(char)accessibilityIsChildrenAttributeSettable;
-(id)accessibilityAuditIssuesAttribute;
-(CGRect)constrainFrameRect:(CGRect)arg1 toScreen:(id)arg2 ;
-(char)_hostsLayersInWindowServer;
-(char)_isImageCache;
-(id)handlePrintScriptCommand:(id)arg1 ;
-(NSURL *)representedURL;
-(id)_bindingAdaptor;
-(long long)_effectiveToolbarStyle;
-(unsigned long long)collectionBehavior;
-(void)setTitlebarAppearsTransparent:(char)arg1 ;
-(void)setContentViewController:(NSViewController *)arg1 ;
-(CGSize)maxFullScreenContentSize;
-(void)setHasShadow:(char)arg1 ;
-(void)_cgsMoveWindow:(CGRect)arg1 moveGroup:(char)arg2 ;
-(unsigned long long)_tileSpaceID;
-(void)_setFullScreenSavedFrameFromWindow:(id)arg1 ;
-(void)_changeKeyAndMainLimitedOK:(char)arg1 ;
-(long long)_effectiveOrderFrontAnimationTypeIfModal:(char)arg1 ;
-(long long)_effectiveOrderOutAnimationTypeIfModal:(char)arg1 ;
-(id)_windowTransformAnimationForOrdering:(long long)arg1 animationType:(long long)arg2 interruptingAnimation:(id)arg3 ;
-(char)_wantsSnapshotProxyWindowForOrderOutAnimation;
-(char)_wantsFullScreenCleanupOnOrderOut;
-(void)_doFullScreenCleanupForOrderOut;
-(char)_canJoinActiveFullScreenSpace;
-(char)_joinActiveFullScreenSpaceUsingPosition:(unsigned long long)arg1 ;
-(void)_setExcludedFromVisibleWindowList:(char)arg1 ;
-(void)setStyleMask:(unsigned long long)arg1 ;
-(void)setAppearance:(NSAppearance *)arg1 ;
-(id)accessibilityActivationPointAttribute;
-(void)_setBindingAdaptor:(id)arg1 ;
-(void)setFrameFromString:(id)arg1 ;
-(CGSize)_shadowOffset;
-(id)_ultimateParentWindow;
-(void)_noteExteriorResizeMarginsMayHaveChanged;
-(void)_noteAllowedResizeDirectionsMayHaveChanged;
-(void)_unlockSublevel;
-(char)_fullScreenTileFillsScreen;
-(void)displayIfNeeded;
-(long long)titlePosition;
-(long long)_effectiveTitlePosition;
-(void)_updateTitleTextField;
-(CGRect)backingAlignedRect:(CGRect)arg1 options:(unsigned long long)arg2 ;
-(void)setTitlePosition:(long long)arg1 ;
-(CGRect)_convertRectToIntegralizationSpace:(CGRect)arg1 ;
-(CGRect)convertRectToBacking:(CGRect)arg1 ;
-(CGRect)_convertRectFromIntegralizationSpace:(CGRect)arg1 ;
-(CGRect)convertRectFromBacking:(CGRect)arg1 ;
-(id)accessibilityTitleUIElementAttribute;
-(CGPoint)convertBaseToScreen:(CGPoint)arg1 ;
-(char)accessibilityIsTitleUIElementAttributeSettable;
-(char)hasKeyAppearance;
-(id)_newFirstResponderAfterResigning;
-(void)disableFlushWindow;
-(void)enableFlushWindow;
-(CGPoint)convertPointToBacking:(CGPoint)arg1 ;
-(void)keyDown:(id)arg1 ;
-(id)_oldFirstResponderBeforeBecoming;
-(char)inLiveResize;
-(char)preservesContentDuringLiveResize;
-(CGRect)_frame:(CGRect)arg1 resizedFromEdge:(unsigned long long)arg2 withDelta:(CGSize)arg3 withEvent:(id)arg4 ;
-(void)dragImage:(id)arg1 at:(CGPoint)arg2 offset:(CGSize)arg3 event:(id)arg4 pasteboard:(id)arg5 source:(id)arg6 slideBack:(char)arg7 ;
-(void)registerForDraggedTypes:(id)arg1 ;
-(void)unregisterDraggedTypes;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(void)draggingExited:(id)arg1 ;
-(void)draggingEnded:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(void)_disableToolTipCreationAndDisplay;
-(void)_enableToolTipCreationAndDisplay;
-(id)registeredDraggedTypes;
-(id)animationForKey:(id)arg1 ;
-(id)_lastLeftHit;
-(void)_finishedMakingConnections;
-(void)setViewsNeedDisplay:(char)arg1 ;
-(void)disableKeyEquivalentForDefaultButtonCell;
-(void)enableKeyEquivalentForDefaultButtonCell;
-(void)_verifyDefaultButtonCell:(char)arg1 ;
-(id<NSAppearanceCustomization>)_effectiveAppearanceParent;
-(char)performMnemonic:(id)arg1 ;
-(void)_commonAwake;
-(void)_setDefaultButtonCell:(id)arg1 ;
-(CGPoint)convertPointFromBacking:(CGPoint)arg1 ;
-(char)_viewIsInContentBorder:(id)arg1 ;
-(char)_shouldForceRolloverStylingForControl:(id)arg1 ;
-(void)_setDefaultButtonSuppressed:(char)arg1 ;
-(char)_controlAppearanceChangesOnKeyStateChange;
-(char)_defaultButtonSuppressed;
-(char)_hasActiveControls;
-(char)_worksWhenModalOrChildOfModalWindow;
-(double)alphaValue;
-(void)cancelOperation:(id)arg1 ;
-(void)setDepthLimit:(int)arg1 ;
-(int)depthLimit;
-(CGPoint)_convertViewRootPointToScreen:(CGPoint)arg1 ;
-(id)appearanceParent;
-(void)setAppearanceParent:(id)arg1 ;
-(char)areCursorRectsEnabled;
-(NSDictionary *)deviceDescription;
-(id)_initContent:(const CGRect*)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(char)arg4 contentView:(id)arg5 ;
-(void)_setWindowNumber:(long long)arg1 ;
-(void)_setFrame:(CGRect)arg1 ;
-(void)setResizeIncrements:(CGSize)arg1 ;
-(void)_oldPlaceWindow:(CGRect)arg1 fromServer:(char)arg2 ;
-(char)_isDocWindow;
-(void)_adjustWindowToScreen;
-(void)_selectFirstKeyView;
-(void)_disableEnablingKeyEquivalentForDefaultButtonCell;
-(void)_postInvalidCursorRects;
-(void)_orderFrontRelativeToWindow:(id)arg1 ;
-(void)_orderOutRelativeToWindow:(id)arg1 ;
-(void)_orderOutAndCalcKeyWithCounter:(char)arg1 ;
-(char)isExcludedFromWindowsMenu;
-(char)_miniaturizedOrCanBecomeMain;
-(id)_updateFrameWidgets;
-(void)_windowMovedToRect:(CGRect)arg1 ;
-(char)isMainWindow;
-(void)becomeMainWindow;
-(char)ignoresMouseEvents;
-(void)_setEventMask:(unsigned long long)arg1 ;
-(void)_cleanupAndRemoveFullScreenContentController;
-(void)resignMainWindow;
-(char)isAutodisplay;
-(void)setAutodisplay:(char)arg1 ;
-(unsigned)_carbonWindowClass;
-(CGRect)startRectForSheet:(id)arg1 ;
-(void)print:(id)arg1 ;
-(char)_allowsActiveInputContext;
-(char)_managesWindowRef;
-(void)_removeWindowRef;
-(void)_setWindowRef:(OpaqueWindowPtrRef)arg1 ;
-(void)_cancelKey:(id)arg1 ;
-(id)_destroyRealWindow:(char)arg1 ;
-(void)_reallyDoOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(char)arg3 forCounter:(char)arg4 force:(char)arg5 isModal:(char)arg6 ;
-(void)_termWindowIfOwner;
-(void)_resetDragMargins;
-(char)worksWhenModal;
-(void)_setModalWindowLevel;
-(OpaqueWindowPtrRef)_windowRef;
-(void)_setOrderOutInProgress:(char)arg1 ;
-(void)_setMiniaturized:(char)arg1 ;
-(NSViewController *)contentViewController;
-(CGRect)frameRectForContentRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 ;
-(CGRect)contentRectForFrameRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 ;
-(CGSize)minFrameSizeForMinContentSize:(CGSize)arg1 styleMask:(unsigned long long)arg2 ;
-(id)windowTitleController;
-(char)_toolbarIsShown;
-(CGRect)dragRectForFrameRect:(CGRect)arg1 ;
-(void)_setNonactivatingPanel:(char)arg1 ;
-(CGSize)resizeIncrements;
-(void)setAspectRatio:(CGSize)arg1 ;
-(CGSize)aspectRatio;
-(id)undoManager;
-(char)_hasActiveAppearanceIgnoringKeyFocus;
-(void)_setNeedsToRemoveFieldEditor:(char)arg1 ;
-(void)invalidateCursorRectsForView:(id)arg1 ;
-(void)setAccessibilitySections:(id)arg1 ;
-(void)_viewDidChangeGeometryInWindow:(id)arg1 ;
-(char)_wantsHeartBeat;
-(void)heartBeat:(SCD_Struct_NS37*)arg1 ;
-(void)setMinSize:(CGSize)arg1 ;
-(void)setMaxSize:(CGSize)arg1 ;
-(id)accessibilitySectionsAttribute;
-(void)constraintsDidChangeInEngine:(id)arg1 ;
-(id)_accessibilityTitleCell;
-(void)_invalidateAllRevealoversForView:(id)arg1 ;
-(char)isMovableByWindowBackground;
-(void)_setNeedsToResetDragMargins:(char)arg1 ;
-(char)_inLiveResize;
-(unsigned long long)keyViewSelectionDirection;
-(CGRect)contentRectForFrameRect:(CGRect)arg1 ;
-(CGPoint)convertPointFromScreen:(CGPoint)arg1 ;
-(double)contentBorderThicknessForEdge:(unsigned long long)arg1 ;
-(char)canRepresentDisplayGamut:(long long)arg1 ;
-(void)setRestorationClass:(Class)arg1 ;
-(void)setFrame:(CGRect)arg1 display:(char)arg2 animate:(char)arg3 ;
-(void)recalculateKeyViewLoop;
-(void)_setShowingModalFrame:(char)arg1 ;
-(NSString *)frameAutosaveName;
-(void)saveFrameUsingName:(id)arg1 ;
-(void)_setUtilityWindow:(char)arg1 ;
-(char)setFrameUsingName:(id)arg1 ;
-(char)setFrameAutosaveName:(NSString *)arg1 ;
-(id)standardWindowButton:(unsigned long long)arg1 ;
-(CGRect)_adjustedFrameFromDefaults:(CGRect)arg1 ;
-(CGRect)_adjustedFrameForSaving:(CGRect)arg1 ;
-(void)_toggleOrderedFrontMost:(id)arg1 ;
-(void)selectNextKeyView:(id)arg1 ;
-(void)selectPreviousKeyView:(id)arg1 ;
-(id)NS_touchBarProviders;
-(id)NS_touchBarProvidersKeyPaths;
-(NSString *)miniwindowTitle;
-(void)_willEnterFullScreen;
-(CGRect)_frameForFullScreenMode;
-(char)titlebarAppearsTransparentWhenFullscreen;
-(void)_didEnterFullScreen;
-(void)_fullScreenUpdateUserSpaceSavedFrameIfNeeded;
-(void)_setLocationTemporary:(char)arg1 ;
-(void)_didFailToEnterFullScreen;
-(void)_markAppropriateForAutomaticFullScreenMode:(char)arg1 ;
-(void)_createFullScreenContentControllerIfNeeded;
-(void)_saveFrameBeforeFullScreen;
-(CGPoint)convertPointToScreen:(CGPoint)arg1 ;
-(char)_hasGradientBackground;
-(id)_runningWindowTransformAnimation;
-(unsigned long long)_effectiveCollectionBehavior;
-(void)endEditingFor:(id)arg1 ;
-(id)fieldEditor:(char)arg1 forObject:(id)arg2 ;
-(void)toggleSidebar:(id)arg1 ;
-(void)setTitleVisibility:(long long)arg1 ;
-(void)_setForceActiveControls:(char)arg1 ;
-(char)canBecomeVisibleWithoutLogin;
-(unsigned long long)shadowOptions;
-(char)hasShadow;
-(char)_allowsImplicitRemovalFromMovementGroup;
-(void)_enableFullScreenMenubarAutohiding;
-(void)_disableFullScreenMenubarAutohiding;
-(void)addChildWindow:(id)arg1 ordered:(long long)arg2 ;
-(void)removeChildWindow:(id)arg1 ;
-(void)_contentViewControllerChanged;
-(char)_isEffectivelyVisible;
-(void)_setViewsNeedUpdateLayoutDependentMetrics:(char)arg1 ;
-(char)shouldBeTreatedAsInkEvent:(id)arg1 ;
-(CGRect)_sheetDimmingMaterialRect;
-(id)_kitAppearance;
-(void)selectKeyViewPrecedingView:(id)arg1 ;
-(void)selectKeyViewFollowingView:(id)arg1 ;
-(void)setRepresentedFilename:(NSString *)arg1 ;
-(void)_didRestoreUserActivity:(id)arg1 ;
-(void)discardEventsMatchingMask:(unsigned long long)arg1 beforeEvent:(id)arg2 ;
-(char)isDocumentEdited;
-(void)_setDocumentAutosavingError:(id)arg1 ;
-(void)editTitleWithCompletionHandler:(/*^block*/id)arg1 ;
-(char)_cancelTitleEditing;
-(void)_invalidateDocumentIcon;
-(void)_setDocumentShowsPanelOnClose:(char)arg1 ;
-(void)setDocumentEdited:(char)arg1 ;
-(long long)_documentEditingState;
-(void)_setDocumentEditingState:(long long)arg1 animate:(char)arg2 ;
-(char)_documentShowsPanelOnClose;
-(void)_setNonModalDocumentError:(id)arg1 ;
-(void)_resetDragMarginsIfNeeded;
-(char)isFloatingPanel;
-(long long)_nextTrackingNum;
-(SCD_Struct_NS108*)_setTrackingRect:(CGRect)arg1 inside:(char)arg2 owner:(id)arg3 userData:(void*)arg4 useTrackingNum:(long long)arg5 install:(char)arg6 ;
-(void)_synchronizeConfigurationForTrackingArea:(id)arg1 ;
-(char)_didInstallTrackingRect:(CGRect)arg1 assumeInside:(char)arg2 userData:(void*)arg3 trackingNum:(long long)arg4 ;
-(long long)_setTrackingRect:(CGRect)arg1 inside:(char)arg2 owner:(id)arg3 userData:(void*)arg4 useTrackingNum:(long long)arg5 ;
-(void)_removeTrackingRects:(long long*)arg1 count:(long long)arg2 ;
-(void)_removeTrackingRect:(long long)arg1 ;
-(CAContext *)_layerHostedContext;
-(void)_setTrackingAreasDirty;
-(void)_verifyTrackingRects;
-(void)_setEventMask:(unsigned long long)arg1 forTrackingRect:(long long)arg2 ;
-(void)_resetClipForTrackingRect:(long long)arg1 ;
-(long long)_trackingAreaIDForTrackingArea:(id)arg1 ;
-(void)_setTrackingRects;
-(void)_clearTrackingRects;
-(void)_setTrackingRects:(CGRect*)arg1 insideList:(char*)arg2 owner:(id)arg3 userDataList:(void*)arg4 trackingNums:(long long*)arg5 count:(long long)arg6 ;
-(long long)_setTrackingRect:(CGRect)arg1 inside:(char)arg2 owner:(id)arg3 userData:(void*)arg4 ;
-(void)_discardTrackingRects:(long long*)arg1 count:(long long)arg2 ;
-(void)_discardTrackingRect:(long long)arg1 ;
-(void)_disableTrackingRect:(long long)arg1 ;
-(void)_enableTrackingRect:(long long)arg1 ;
-(char)_containsTrackingRect:(long long)arg1 ;
-(char)_handleTrackingRectEnterExitEvent:(id)arg1 ;
-(void)_disableTrackingArea:(id)arg1 ;
-(void)_enableTrackingArea:(id)arg1 ;
-(void)_moveTrackingArea:(id)arg1 toRect:(CGRect)arg2 ;
-(void)_updateTrackingAreasDueToEndScrolling;
-(void)_recursiveResetTrackingAreasToPending;
-(char)_shouldShowCursorRects;
-(void)_setCursorRect:(CGRect)arg1 index:(long long)arg2 ;
-(void)_discardCursorRect:(long long)arg1 ;
-(void)_updateEventMaskDueToDisableCursorRects;
-(void)_updateEventMaskDueToEnableCursorRects;
-(void)_updateStructuralRegionsOnNextDisplayCycle;
-(void)_invalidateCursorRectsForViewsWithNoTrackingAreas;
-(char)_hasCursorRectsForView:(id)arg1 ;
-(void)_invalidateCursorRectsForView:(id)arg1 force:(char)arg2 ;
-(char)allowsCursorRectsWhenInactive;
-(void)discardCursorRects;
-(void)_setCursorForMouseLocation:(CGPoint)arg1 ;
-(void)GDBDumpCursorRects;
-(char)_edgeResizingCursorUpdate:(id)arg1 atLocation:(CGPoint)arg2 ;
-(void)cursorUpdate:(id)arg1 ;
-(char)_shouldResetCursorRects;
-(char)_isViewScrolling;
-(char)_addCursorRect:(CGRect)arg1 cursor:(id)arg2 forView:(id)arg3 ;
-(char)_removeCursorRect:(CGRect)arg1 cursor:(id)arg2 forView:(id)arg3 ;
-(char)_hasCursorRects;
-(void)setAllowsCursorRectsWhenInactive:(char)arg1 ;
-(id)_discardCursorRectsForView:(id)arg1 ;
-(void)_markCursorRectsForRemovedView:(id)arg1 ;
-(void)_deallocCursorRects;
-(id)_findCursorForView:(id)arg1 ;
-(void)_updateCursorRectsDueToBecomingVisible;
-(void)_updateCursorRectsDueToBecomingKey;
-(void)_updateCursorRectsDueToResigningKey;
-(CGRect)contentLayoutRect;
-(id)handleSaveScriptCommand:(id)arg1 ;
-(id)handleCloseScriptCommand:(id)arg1 ;
-(void)_screenChanged:(id)arg1 ;
-(char)_isDocModal;
-(unsigned long long)_fullScreenPresentationOptions;
-(NSArray *)titlebarAccessoryViewControllers;
-(void)_windowMoved:(id)arg1 ;
-(float)_backdropBleedAmount;
-(char)_isOnActiveScreen;
-(void)addTitlebarAccessoryViewController:(id)arg1 ;
-(void)flushWindowIfNeeded;
-(void)_updateContentLayoutGuideFrame;
-(void)_surrenderToolbarViewForFullScreenWindow;
-(void)_setSharesParentFirstResponder:(char)arg1 ;
-(void)updateDraggingItemsForDrag:(id)arg1 ;
-(id)_dragTypes;
-(char)prepareForDragOperation:(id)arg1 ;
-(void)concludeDragOperation:(id)arg1 ;
-(char)wantsPeriodicDraggingUpdates;
-(id)_findDragTargetFrom:(id)arg1 ;
-(id)_openDrawers;
-(NSArray *)drawers;
-(id)openDrawers;
-(void)setParentWindow:(NSWindow *)arg1 ;
-(void)setOneShot:(char)arg1 ;
-(void)setCanHide:(char)arg1 ;
-(long long)_effectiveLevel;
-(void)setCanBecomeVisibleWithoutLogin:(char)arg1 ;
-(void)_changeKeyState;
-(void)_changeMainState;
-(void)_changeFirstResponderToParentsFirstResponder;
-(void)_addToGroups:(id)arg1 ordered:(long long)arg2 ;
-(char)_keepChildrenAttached;
-(void)_removeFromGroups:(id)arg1 ;
-(void)_setFrameCommon:(CGRect)arg1 display:(char)arg2 fromServer:(char)arg3 ;
-(char)tryToPerform:(SEL)arg1 with:(id)arg2 ;
-(void)helpRequested:(id)arg1 ;
-(void)_setFirstResponder:(id)arg1 ;
-(char)_isKeyWindow;
-(void)_hiliteWindow:(OpaqueWindowPtrRef)arg1 fromWindow:(id)arg2 ;
-(id)_getUndoManager:(char)arg1 ;
-(void)showToolbar:(id)arg1 ;
-(void)hideToolbar:(id)arg1 ;
-(void)toggleToolbarShown:(id)arg1 ;
-(void)runToolbarCustomizationPalette:(id)arg1 ;
-(void)performZoom:(id)arg1 ;
-(void)performMiniaturize:(id)arg1 ;
-(void)_resetFirstResponder;
-(void)_cycleDrawersReversed:(char)arg1 ;
-(void)_hideAttachedWindows:(char)arg1 findKey:(char)arg2 ;
-(CGSize)_minContentSizeForDrawers;
-(void)_hideAllDrawers;
-(void)_unhideAllDrawers;
-(void)_moveAllDrawersByOffset:(CGSize)arg1 ;
-(void)_displayAllDrawersIfNeeded;
-(void)_positionAllDrawers;
-(void)_sizeAllDrawers;
-(void)_sizeAllDrawersWithRect:(CGRect)arg1 ;
-(CGRect)_standardFrameForDrawersInRect:(CGRect)arg1 ;
-(CGSize)_minSizeForDrawers;
-(void)_removeAllDrawersImmediately:(char)arg1 ;
-(void)_registerAllDrawersForDraggedTypesIfNeeded;
-(void)_resetAllDrawersDisableCounts;
-(void)_resetAllDrawersPostingCounts;
-(void)_startLiveResizeForAllDrawers;
-(void)_endLiveResizeForAllDrawers;
-(void)_setLevelForAllDrawers;
-(id)_orderedDrawerAndWindowKeyLoopGroupingViews;
-(void)_changeAllDrawersKeyState;
-(void)_changeAllDrawersMainState;
-(void)_changeAllDrawersFirstResponder;
-(void)_setVisibleWithoutLoginForAllDrawers;
-(void)performWindowDragWithEvent:(id)arg1 ;
-(void)accessibilitySetSizeAttribute:(id)arg1 ;
-(unsigned long long)_parentSpaceID;
-(long long)_resizeWeighting;
-(void)acquireKeyAppearance;
-(void)resignKeyAppearance;
-(char)_isViewRoot;
-(void)_setViewsNeedUpdateConstraints;
-(void)_setViewsNeedLayout;
-(void)_setViewsNeedBuildLayerTree;
-(void)_setViewsNeedDisplay;
-(void)_setNeedsDisplayInRegion:(id)arg1 ;
-(char)_allowsRootLayerBackingViews;
-(CGPoint)_convertViewRootPointFromScreen:(CGPoint)arg1 ;
-(id)_rootViewForViewRoot;
-(void)trackEventsMatchingMask:(unsigned long long)arg1 timeout:(double)arg2 mode:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)_addMouseMovedListener:(id)arg1 ;
-(void)_removeMouseMovedListener:(id)arg1 ;
-(char)isInKeyWindow;
-(double)_displayScale;
-(id)recursiveDescription;
-(double)_scaleFactor;
-(Class)restorationClass;
-(id)inspectorBar;
-(id)_activeGestureRecognizers;
-(id)_lastDragRegionData;
-(id)_savedScreen;
-(long long)_fullScreenSidebarToolbarMaterial;
-(id)functionRow;
-(void)_unlockViewHierarchyForReading;
-(void)_windowDeviceRoundWithContext:(id)arg1 ;
-(void)_updateFullHeightDividerStatus;
-(void)_setKeyViewLoopNeedsRecalc:(char)arg1 ;
-(void)setAppearanceSource:(NSObject*<NSAppearanceCustomization>)arg1 ;
-(CGRect)frameRectForContentRect:(CGRect)arg1 ;
-(CGRect)_accessibilityTitleRect;
-(void)setRepresentedURL:(NSURL *)arg1 ;
-(NSString *)representedFilename;
-(char)_updateEdgeResizingTrackingAreas;
-(char)_isSheet;
-(id)graphicsContext;
-(void)_fromConstraintsGetWindowMinSize:(CGSize*)arg1 maxSize:(CGSize*)arg2 allowDynamicLayout:(char)arg3 changingOnlySlightly:(char)arg4 ;
-(long long)anchorAttributeForOrientation:(long long)arg1 ;
-(void)updateConstraintsIfNeeded;
-(char)_isInSomeVisibleSpace;
-(char)_blocksKeyAndMainWindowTouchBarsWhenModal;
-(id)_windowForToolbar;
-(char)_needsBehindWindowBlendingForFullScreenTitlebar;
-(void)_toggleSelectAnyValidResponderOverride;
-(void)_handleFocusToolbarHotKey:(id)arg1 ;
-(void)_cycleWindowsBackwards:(id)arg1 ;
-(void)_cycleWindows:(id)arg1 ;
-(void)_cycleDrawers:(id)arg1 ;
-(void)_cycleDrawersBackwards:(id)arg1 ;
-(char)_makingFirstResponderForMouseDown;
-(void)_lockViewHierarchyForModification;
-(void)_unlockViewHierarchyForModification;
-(void)_lockViewHierarchyForDrawing;
-(void)_unlockViewHierarchyForDrawing;
-(char)hasAmbiguousLayout;
-(char)becomesKeyOnlyIfNeeded;
-(void)_updateEventMaskDueToBecomingKey;
-(char)_allowsActiveInputContextDuringMenuTracking;
-(CGRect)_overrideDefeatingConstrainFrameRect:(CGRect)arg1 toScreen:(id)arg2 ;
-(void)_updateMouseMovedState;
-(char)_visibleAndCanBecomeKeyLimitedOK:(char)arg1 ;
-(void)zoom:(id)arg1 ;
-(void)_tileLeft:(id)arg1 ;
-(void)_zoomLeft:(id)arg1 ;
-(void)_tileRight:(id)arg1 ;
-(void)_zoomRight:(id)arg1 ;
-(void)_toggleIPad:(id)arg1 ;
-(void)_moveToDisplay:(id)arg1 ;
-(NSArray *)tabbedWindows;
-(long long)_semanticContext;
-(void)_didExitFullScreen;
-(CGSize)_shadowRadius;
-(void)_setDoingCacheDisplayInRect:(char)arg1 ;
-(void)_didFailToExitFullScreen;
-(void)_dragWindowRelativeToMouseDown:(CGPoint)arg1 ;
-(void)setBackingType:(unsigned long long)arg1 ;
-(void)miniaturize:(id)arg1 ;
-(void)_close:(id)arg1 ;
-(void)_resizeWithEvent:(id)arg1 ;
-(long long)_resizeDirectionForMouseLocation:(CGPoint)arg1 ;
-(id)_currentDividerResizeDirections;
-(char)_performDividerDragWithEvent:(id)arg1 forResizeDirection:(long long)arg2 ;
-(id)_lastRightHit;
-(void)_lockViewHierarchyForReading;
-(id)contentLayoutGuide;
-(void)_updateManagedDisplay;
-(char)_locationTemporary;
-(void)_persistFrame;
-(void)setPreservesContentDuringLiveResize:(char)arg1 ;
-(double)animationResizeTime:(CGRect)arg1 ;
-(char)_isRunningADocModalAttachedSheet;
-(char)preventsApplicationTerminationWhenModal;
-(void)setPreventsApplicationTerminationWhenModal:(char)arg1 ;
-(char)_showToolTip;
-(char)allowsToolTipsWhenApplicationIsInactive;
-(id)_toggleFrameAutosaveEnabled:(id)arg1 ;
-(void)_setTempHidden:(char)arg1 ;
-(char)_implicitlyAllowsFullScreenPrimary;
-(void)_setPreventsActivation:(char)arg1 ;
-(char)_containedMenusAreEligibleForKeyEquivalents;
-(void)setShowsToolbarButton:(char)arg1 ;
-(double)_minXTitlebarButtonsWidth;
-(double)_maxXTitlebarButtonsWidth;
-(void)setContentMinSize:(CGSize)arg1 ;
-(void)setContentMaxSize:(CGSize)arg1 ;
-(unsigned long long)gestureEventMask;
-(void)setGestureEventMask:(unsigned long long)arg1 ;
-(void)quickLookWithEvent:(id)arg1 ;
-(id)_eventFirstResponderChainDescription;
-(void)_setLastDragRegion:(void*)arg1 ;
-(void)setAutorecalculatesKeyViewLoop:(char)arg1 ;
-(void)setTitlebarAlphaValue:(double)arg1 ;
-(void)_justOrderOut;
-(char)_shouldUseTexturedAppearanceForSegmentedCellInView:(id)arg1 ;
-(char)_isTitleHidden;
-(char)_allowsRootLayerBacking;
-(char)_preserveAnimatingFrames;
-(id)titlebarViewController;
-(char)_hasFullSizeContentView;
-(char)_setFrameAutosaveName:(id)arg1 changeFrame:(char)arg2 ;
-(char)_hasTitlebarContent;
-(NSScreen *)deepestScreen;
-(double)userSpaceScaleFactor;
-(char)_isConsideredOpenForPersistentState;
-(void)_cornerMaskChanged;
-(void)_setCanCycle:(char)arg1 ;
-(void)_adjustMinAndMaxSizeForSheet:(char)arg1 ;
-(unsigned long long)sheetBehavior;
-(id)_windowForSheetMovementAndOrderingGroups;
-(void)_updateWindowIsFullScreenCapable;
-(CGRect)_positionSheet:(id)arg1 constrained:(char)arg2 andDisplay:(char)arg3 ;
-(void)_positionSheetsConstrained:(char)arg1 andDisplay:(char)arg2 ;
-(CGRect)_keepOnScreenSheetFrame:(CGRect)arg1 ;
-(CGRect)_positioningRectForSheet:(id)arg1 ;
-(CGRect)_centerSheetFrame:(CGRect)arg1 forSheet:(id)arg2 inParentFrame:(CGRect)arg3 ;
-(CGRect)_adjustFrame:(CGRect)arg1 constrained:(char)arg2 forSheet:(id)arg3 positioningFrame:(CGRect*)arg4 ;
-(void)_hideSheetWindow:(id)arg1 findKey:(char)arg2 ;
-(char)_beginNextQueuedSheetIfNecessary;
-(void)_setKeepChildrenAttached:(char)arg1 ;
-(char)_isSheetOnModalWindow;
-(char)_isSheetOnWindowWithWindowNumber:(long long)arg1 ;
-(void)_setDocModal:(char)arg1 ;
-(void)_moveSheetByItself:(id)arg1 delta:(CGPoint)arg2 ;
-(void)_reparentSheetsToSelfOnFullScreenExit;
-(void)_attachSheetWindow:(id)arg1 ;
-(void)_detachSheetWindow:(id)arg1 ;
-(id)_attachedSheet;
-(char)_wantsSheetDimmingMaterial;
-(double)_xOffsetForSheetFrame:(CGRect)arg1 inParentFrame:(CGRect)arg2 ;
-(void)_stashOrigin:(CGPoint)arg1 ;
-(CGPoint)_stashedOrigin;
-(void)_stashCollapsedOrigin:(CGPoint)arg1 ;
-(CGPoint)_collapsedOrigin;
-(void)_hideSheet:(char)arg1 ;
-(void)_unhideSheet;
-(char)showsAutosaveButton;
-(void)setShowsAutosaveButton:(char)arg1 ;
-(id)_documentAutosavingError;
-(id)_nonModalDocumentError;
-(CGPoint)_convertPointFromScreen:(CGPoint)arg1 ;
-(char)_visualEffectViewAlwaysUseWSAwareBackdrops;
-(void)_registerBackdropView:(id)arg1 ;
-(void)_unregisterBackdropView:(id)arg1 ;
-(char)_doingCacheDisplayInRect;
-(id)_registeredBackdropViews;
-(char)_shouldGetCornerMaskFromVisualEffectView;
-(char)_viewsNeedUpdateConstraints;
-(void)_sidebarAdapterWasAddedToWindow:(id)arg1 ;
-(void)_sidebarProviderWillRemoveFromWindow:(id)arg1 ;
-(void)_trailingSidebarAdapterWasAddedToWindow:(id)arg1 ;
-(void)_trailingSidebarProviderWillRemoveFromWindow:(id)arg1 ;
-(void)_resetSplitViewUserPreferredThicknessFromSetAlignmentFrames;
-(void)_lockViewHierarchyForWriting;
-(void)_unlockViewHierarchyForWriting;
-(char)_measuringMinFullScreenContentSize;
-(void)unregisterSplitViewItemSeparatorTrackingAdapter:(id)arg1 ;
-(void)registerSplitViewItemSeparatorTrackingAdapter:(id)arg1 ;
-(void)setAllowsToolTipsWhenApplicationIsInactive:(char)arg1 ;
-(void)_startWindowDragWithEvent:(id)arg1 options:(unsigned long long)arg2 animate:(char)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_lighterViewDetaching:(id)arg1 ;
-(void)_dragWindowRelativeToMouseDown:(CGPoint)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)_appearanceForAttachedPopovers;
-(void)_orderForwardWithEvent:(id)arg1 ;
-(char)_cgsPositionManagedByWindowServer;
-(void)_viewAttaching:(id)arg1 ;
-(char)acceptsMouseMovedEvents;
-(char)_hasMouseMovedListeners;
-(char)_isChildOfWindowWithWindowNumber:(long long)arg1 ;
-(char)_allowsOrdering;
-(char)_lmouseUpPending;
-(char)_performKeyEquivalentConditionally:(id)arg1 ;
-(char)_hostWindowIsKey;
-(void)_latchViewForPressureEvent:(id)arg1 ;
-(void)_latchViewForScrollEvent:(id)arg1 ;
-(char)_acceptsSecondaryKey;
-(char)_forwardActionToParent:(SEL)arg1 ;
-(char)_isChildOfWindow:(id)arg1 ;
-(char)_sharesParentKeyState;
-(id)_responderDebugDescription;
-(char)bottomCornerRounded;
-(char)_shouldRoundCornersForSurface;
-(CGRect)_intersectBottomCornersWithRect:(CGRect)arg1 ;
-(id)_copyAcquiredViewHierarchyLockForReading;
-(char)_wantsFullScreenTileDropTargets;
-(char)_isKeyWindowIgnoringFocus;
-(char)_allowsAnyValidResponder;
-(void)_updateLayoutDependentMetricsIfNeeded;
-(void)setAcceptsMouseMovedEvents:(char)arg1 ;
-(char)_reallyIsVisible;
-(char)_postingDisabled;
-(void)_postWindowNeedsUpdateConstraintsUnlessPostingDisabled;
-(void)_postWindowNeedsLayoutUnlessPostingDisabled;
-(void)_postWindowNeedsDisplayUnlessPostingDisabled;
-(id)_layoutDescription;
-(char)autorecalculatesContentBorderThicknessForEdge:(unsigned long long)arg1 ;
-(char)_needsToResetDragMargins;
-(void)disableScreenUpdatesUntilFlush;
-(void)_recalculateKeyViewLoopIfNeeded;
-(void)_setKeyViewSelectionDirection:(unsigned long long)arg1 ;
-(char)_needsDisplayInRect:(CGRect)arg1 ;
-(void)setInspectorBar:(id)arg1 ;
-(double)_bottomBarHeight;
-(char)_movableByBottomBar;
-(void)_addKnownSubview:(id)arg1 ;
-(double)_topBarHeight;
-(char)showsContentSeparatorForEdge:(unsigned long long)arg1 ;
-(char)_hasToolbar;
-(char)_hasKeyAppearance;
-(char)_hasMainAppearance;
-(id)_customTitleCell;
-(char)_hasBackgroundColor;
-(unsigned long long)_themeBackgroundStyle;
-(void)removeUnderTitlebarView:(id)arg1 withAssociatedWithView:(id)arg2 ;
-(char)_zoomButtonIsFullScreenButton;
-(char)showsToolbarButton;
-(char)showsLockButton;
-(char)showsFullScreenButton;
-(char)_autohidesToolbar;
-(void)_setContentRect:(CGRect)arg1 ;
-(char)prefersFullWidthTitlebarWhenAccessoriesVisible;
-(void)_toolbarFrameSizeChanged:(id)arg1 oldSize:(CGSize)arg2 ;
-(double)_toolbarLeadingSpace;
-(void)_setResizeWeighting:(long long)arg1 ;
-(CGSize)contentMinSize;
-(CGSize)contentMaxSize;
-(void)setContentBorderThickness:(double)arg1 forEdge:(unsigned long long)arg2 ;
-(char)_hitTestInResizeRegionShouldReturnNil;
-(id)_remoteRenameSession;
-(long long)windowTitlebarLayoutDirection;
-(long long)toolbarStyle;
-(char)_canMiniaturizeCheckingMask:(char)arg1 forButtonEnabledState:(char)arg2 ;
-(void)_titlebarEditingDidEndNormally:(char)arg1 title:(id)arg2 editingRange:(NSRange)arg3 grantHandler:(/*^block*/id)arg4 ;
-(void)_renamingDidEndNormally:(char)arg1 ;
-(char)_attemptToSnapWindowSizeWithEvent:(id)arg1 ;
-(char)_attemptToModifyAlwaysOnTopWithEvent:(id)arg1 ;
-(void)_doClientSideDraggingWithEvent:(id)arg1 ;
-(void)_startWindowDragWithEvent:(id)arg1 options:(unsigned long long)arg2 animate:(char)arg3 ;
-(void)_setMovableByBottomBar:(char)arg1 ;
-(void)setBottomCornerRounded:(char)arg1 ;
-(id)_cornerMask;
-(void)_setDocumentButtonEnabled:(char)arg1 ;
-(void)addUnderTitlebarView:(id)arg1 withAssociatedWithView:(id)arg2 ;
-(void)setPrefersFullWidthTitlebarWhenAccessoriesVisible:(char)arg1 ;
-(long long)titlebarBlendingMode;
-(double)_toolbarTrailingSpace;
-(void)_willStartRenameWithTitle:(id)arg1 editingRange:(NSRange)arg2 ;
-(double)titlebarAlphaValue;
-(id)_sidebarTrackingAdapter;
-(id)_trailingSidebarTrackingAdapter;
-(void)removeTitlebarAccessoryViewControllerAtIndex:(long long)arg1 ;
-(void)_showToolbar:(id)arg1 animate:(char)arg2 ;
-(void)_hideToolbar:(id)arg1 animate:(char)arg2 ;
-(void)_addToWindowsMenuIfNecessary;
-(char)_hasQueuedSheets;
-(void)_validSize:(CGSize*)arg1 forFullScreen:(char)arg2 force:(char)arg3 ;
-(void)disableSnapshotRestoration;
-(void)enableSnapshotRestoration;
-(char)_tabbedFullHeightSidebarsAreIndependent;
-(id)snapshotFromRect:(CGRect)arg1 options:(unsigned long long)arg2 ;
-(int)_doRestoreComingFromDock:(char)arg1 forceActivation:(char)arg2 wantsToBeKey:(char)arg3 ;
-(int)_regularMinimizeToDock;
-(CGPoint)topLeftPoint;
-(CGPoint)cascadeTopLeftFromPoint:(CGPoint)arg1 ;
-(void)setExcludedFromWindowsMenu:(char)arg1 ;
-(void)setToolbarStyle:(long long)arg1 ;
-(void)_disablePosting;
-(void)_enablePosting;
-(void)_setNeedsZoom:(id)arg1 ;
-(char)_shouldZoomInDragRegionAtLocation:(CGPoint)arg1 ;
-(CGRect)_validFrameForFrame:(CGRect)arg1 resizedFromEdge:(unsigned long long)arg2 ;
-(unsigned long long)resizeFlags;
-(id)windowSectionController;
-(void)toggleUsingSmallToolbarIcons:(id)arg1 ;
-(id)_newStandardItemWithItemIdentifier:(id)arg1 willBeInsertedIntoToolbar:(char)arg2 ;
-(char)_showingModalSheet;
-(char)_positionsToolbarInExternalWindow;
-(void)setTitlebarSeparatorStyle:(long long)arg1 ;
-(double)_windowResolution;
-(void)_setWindowResolution:(double)arg1 ;
-(double)_backingStoreResolution;
-(int)_setBackingStoreResolution:(double)arg1 ;
-(void)changeToolbarDisplayModeToNumber:(id)arg1 ;
-(void)_evilHackToClearlastLeftHitInWindow;
-(void)changeToolbarDisplayMode:(id)arg1 ;
-(char)_frameIsCurrentlyAnimating;
-(id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2 ;
-(void)_pauseUIHeartBeatingInView:(id)arg1 ;
-(void)_resumeUIHeartBeatingInView:(id)arg1 ;
-(void)_setAnyViewCanDrawConcurrently:(char)arg1 ;
-(void)_incrementViewCount;
-(void)_decrementViewCount;
-(void)_removeAsSavedFirstResponder:(id)arg1 ;
-(id)_viewDetaching:(id)arg1 ;
-(void)_removeTouchListener:(id)arg1 ;
-(void)_didEndViewScrolling;
-(void)_willBeginViewScrolling;
-(void)_resumeWindowServerLayerHosting;
-(void)_suspendWindowServerLayerHosting;
-(void)_addTouchListener:(id)arg1 ;
-(void)_setNeedsDisplayInRect:(CGRect)arg1 ;
-(void)_markDefaultButtonCellDirty;
-(char)_hasRegisteredForDragTypes;
-(void)_registerDragTypesLater;
-(char)_keyViewRedirectionDisabled;
-(void)_setKeyViewRedirectionDisabled:(char)arg1 ;
-(void)_setDisableInteraction:(char)arg1 ;
-(void)_hierarchyDidChangeInView:(id)arg1 ;
-(char)_windowValidForDrawing;
-(id)_threadContext;
-(unsigned long long)backingType;
-(char)_allowsCompositing;
-(id)_copyNeedsDisplayRegionInRect:(CGRect)arg1 validateSubtractedRegion:(char)arg2 ;
-(void)_verifyDefaultButtonCellIfDirty;
-(void)_getRetainedLastFocusRingView:(id*)arg1 bleedRegion:(id*)arg2 ;
-(void)_subtractFromNeedsDisplayRegion:(id)arg1 ;
-(char)_needsDisplayForEntireRect:(CGRect)arg1 ;
-(void)_refreshWindowResizeConstraintsWithSize:(CGSize)arg1 ;
-(void)_maskRoundedBottomCorners:(CGRect)arg1 ;
-(char)canStoreColor;
-(void)_setKeyViewGroupBoundaryNeedsRecalc:(char)arg1 ;
-(char)_hasWindowRefCreatedForCarbonControl;
-(void)_windowDidChangeAppearance;
-(char)_anyViewCanDrawConcurrently;
-(char)allowsConcurrentViewDrawing;
-(char)_shouldSyncSurfaceToView;
-(char)_shouldAutoFlattenLayerTree;
-(void)_synchronizeOverrideForActiveGestureRecognizers;
-(void)_setHasInvalidRestorableState:(char)arg1 ;
-(char)_hasInvalidRestorableState;
-(char)_hasEverHadInvalidRestorableState;
-(CGPoint)frameOrigin;
-(char)_nsib_usesPointIntegralizationForLayout;
-(void)_nsib_setUsesPointIntegralizationForLayout:(char)arg1 ;
-(long long)gState;
-(id)_dirtyRegion;
-(char)_hasIncompatibleAppearanceOverride;
-(void)_windowDeviceRound;
-(id)_findKeyLoopGroupingViewFollowingKeyLoopGroupingView:(id)arg1 direction:(unsigned long long)arg2 ;
-(char)hasKeyAppearanceIncludingSheets:(char)arg1 ;
-(unsigned long long)_autoPositionMask;
-(void)_withWindowLayoutsByScreenLayout:(/*^block*/id)arg1 ;
-(void)_withWindowLayoutsForScreen:(id)arg1 performBlock:(/*^block*/id)arg2 ;
-(char)_isScreenLayoutAware;
-(id)_matchingWindowLayoutForScreen:(id)arg1 ;
-(void)_saveWindowLayoutForScreen:(id)arg1 ;
-(void)_saveWindowLayoutForScreenLayout;
-(id)_screenForWindowLayoutAdjustment;
-(void)_moveWindowFrame:(CGRect*)arg1 fromScreen:(id)arg2 toScreen:(id)arg3 ;
-(void)_adjustWindowFrame:(CGRect*)arg1 fromScreen:(id)arg2 toScreen:(id)arg3 ;
-(char)_applyWindowLayoutForScreen:(id)arg1 ;
-(void)_restoreWindowLayoutsByScreenLayoutWithCoder:(id)arg1 ;
-(void)_encodeWindowLayoutsByScreenLayoutWithCoder:(id)arg1 ;
-(char)_isToolTipCreationAndDisplayEnabled;
-(void)_setWantsToBeOnMainScreen:(char)arg1 ;
-(void)_fromScreenCommonCode:(id)arg1 ;
-(void)_setBackingScaleFactor:(double)arg1 ;
-(void)_borderViewChanged;
-(void)setDisplaysWhenScreenProfileChanges:(char)arg1 ;
-(void)setAutorecalculatesContentBorderThickness:(char)arg1 forEdge:(unsigned long long)arg2 ;
-(id)_creationCallStackSymbols;
-(void)_windowResizeConstraints_borderViewChanged;
-(void)_setViewsNeedLayout:(char)arg1 ;
-(void)_commonInitFrame:(CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(char)arg4 ;
-(void)_updateEventMaskDueToInit;
-(void)_setOrderFrontAnimationType:(long long)arg1 ;
-(id)_initFromGlobalWindow:(long long)arg1 inRect:(const CGRect*)arg2 styleMask:(unsigned long long)arg3 ;
-(void)_unregisterDragTypes;
-(void)_cancelPerformSelectors;
-(void)_removeEventHandlers;
-(void)_unbindTitleIfNecessary;
-(void)_setFirstResponderIvar:(id)arg1 ;
-(void)_resetUndoManager;
-(id)_firstResponderIvar;
-(void)_changeAllAttachmentsFirstResponder;
-(char)_alwaysOnTop;
-(char)_preventsActivation;
-(char)_allowedInOtherAppsFullScreenSpaceWithCollectionBehavior:(unsigned long long)arg1 ;
-(char)_allowedInDashboardSpaceWithCollectionBehavior:(unsigned long long)arg1 ;
-(char)_canEnterTileMode;
-(char)hasDynamicDepthLimit;
-(void)_adjustDynamicDepthLimit;
-(void)_adjustWindowResolution;
-(void)_adjustColorSpace:(char)arg1 ;
-(void)_updateEventMaskDueToCommonAwake;
-(char)_registerWithDockIfNeeded;
-(unsigned long long)_backingType;
-(void)_dosetTitle:(id)arg1 andDefeatWrap:(char)arg2 ;
-(void)_setRepresentedURL:(id)arg1 ;
-(id)_calcAndSetFilenameTitle;
-(void)guessDockTitle:(id)arg1 ;
-(void)_toolbarPillButtonClicked:(id)arg1 ;
-(void)lockButtonClicked:(id)arg1 ;
-(char)_isView:(id)arg1 standardWindowButtonOfType:(unsigned long long)arg2 ;
-(id)_findOrMakeStandardWindowButton:(unsigned long long)arg1 ;
-(char)_needsToRemoveFieldEditor;
-(void)_reallySetFrame:(CGRect)arg1 ;
-(void)_cgsPlaceWindow:(CGRect)arg1 ;
-(void)_setWindowResizeConstraintSize:(CGSize)arg1 ;
-(void)_layoutViewTree;
-(void)_invalidateCompositedBackground;
-(void)_checkForImplicitRemovalFromMovementGroupWhenMovingToFrame:(CGRect)arg1 ;
-(void)_stopClientSideMove;
-(void)_cgsWindowRelativeMoveChildrenWithGroupWithDelta:(CGPoint)arg1 ;
-(void)_adjustChildWindowMovementOffsets;
-(char)allowsInteriorShadow;
-(char)_cornerMaskShouldDefineShadow;
-(void)_updateSettingsSendingScreenChangeNotificationToScreen:(id)arg1 ;
-(char)_updateInheritedColorSpaceIfNeeded;
-(char)_updateInheritedBackingScaleFactorIfNeeded;
-(void)_postWindowDidChangeBackingPropertiesAndDisplayWindowForPreviousBackingScaleFactor:(double)arg1 previousColorSpace:(id)arg2 ;
-(char)_frameOriginIsCurrentlyAnimating;
-(char)_canAdjustSizeForScreensHaveSeparateSpacesIfFillingSecondaryScreen;
-(char)_ownerOnly;
-(id)_bestScreenByGeometryOfFrame:(CGRect)arg1 respectingSpaceAssignment:(char)arg2 ;
-(void)_startClientSideMove;
-(void)_adjustNeedsDisplayRegionForNewFrame:(CGRect)arg1 ;
-(void)_updateStateForMoveBackToScreen:(long long)arg1 ;
-(void)_setFrame:(CGRect)arg1 display:(char)arg2 allowImplicitAnimation:(char)arg3 stashSize:(char)arg4 ;
-(void)_setFrameCommon:(CGRect)arg1 display:(char)arg2 stashSize:(char)arg3 ;
-(CGPoint)_adjustedOriginAroundAnchorPointForSize:(CGSize)arg1 fromFrame:(CGRect)arg2 ;
-(char)_windowIsBeingMoved;
-(char)_shouldIgnoreSetFrameOrigin;
-(void)_setShadowParameters;
-(id)_bestScreenBySpaceAssignment;
-(void)_updateSettingsSendingScreenChangeNotification;
-(char)_isEffectivelyTitled;
-(char)_hasCornerMask;
-(void)_fullScreenStatusChanged;
-(void)_updateFullHeightSidebarStatus;
-(void)_updateCollectionBehavior;
-(void)_setRegisteredBackdropViews:(id)arg1 ;
-(void)_updateBackdropViewsIfNeeded;
-(void)_clearBackingStoreForBackdropViews;
-(char)isFlushWindowDisabled;
-(void)_flushBackdropViews;
-(unsigned long long)shadowStyle;
-(char)_forceInactiveShadow;
-(id)shadowParameters;
-(void)_setShadowActiveState;
-(char)_viewsNeedLayout;
-(char)viewsNeedDisplay;
-(void)_postWindowNeedsToResetDragMarginsUnlessPostingDisabled;
-(CAContext *)_functionRowContext;
-(char)_isFunctionRowWindow;
-(void)_lockFirstResponder;
-(void)_saveFirstResponder;
-(void)_unlockFirstResponder;
-(char)_makeParentWindowHaveFirstResponder:(id)arg1 ;
-(char)_secondaryKeyMakeFirstResponder:(id)arg1 ;
-(char)_realMakeFirstResponder:(id)arg1 ;
-(id)_validateFirstResponder:(id)arg1 ;
-(void)_drawKeyboardUILoopStartingAtResponder:(id)arg1 validOnly:(char)arg2 ;
-(char)_keyViewLoopsMayCrossWindows;
-(void)_drawKeyboardUIIndicationForView:(id)arg1 debuggingIndex:(id)arg2 ;
-(char)_shouldIncludeTitlebarAccessoryViewsInKeyViewLoop;
-(void)_performToggleToolbarShown:(id)arg1 ;
-(void)changeToolBarDisplayModeToDisplayMode:(unsigned long long)arg1 ;
-(char)_toolbarButtonIsClickable;
-(void)_toggleToolbarConfigPanel:(id)arg1 ;
-(void)_setNextToolbarSizeAndDisplayMode:(id)arg1 ;
-(void)_setPreviousToolbarSizeAndDisplayMode:(id)arg1 ;
-(char)_shouldDoClientSideDragging;
-(void)_beginWindowDragWithEvent:(id)arg1 options:(unsigned long long)arg2 ;
-(void)_beginWindowDragWithEvent:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_dragWindowRelativeToMouseDown:(CGPoint)arg1 options:(unsigned long long)arg2 ;
-(char)_shouldStartWindowDragForEvent:(id)arg1 ;
-(char)_isDraggable;
-(void)_showDragBeginFeedback;
-(char)_tryWindowDragWithEvent:(id)arg1 ;
-(char)_allowsMoving;
-(void)_startWindowDragWithEvent:(id)arg1 animate:(char)arg2 ;
-(char)_canEnterFullScreenOrTileMode;
-(void)_maximizeTileToFillScreen;
-(CGRect)mouseConfinementRect;
-(void)_setFrameAfterMove:(CGRect)arg1 ;
-(id)_bestScreenByGeometryOfFrame:(CGRect)arg1 avoidingFullScreen:(char)arg2 ;
-(void)_updateSavedFrameForFullScreen;
-(void)_resolveAnySpaceMisassignmentByUpdatingManagedDisplay;
-(id)_displayChangedSoAdjustWindows:(char)arg1 ;
-(void)_displayResolutionChanged;
-(char)displaysWhenScreenProfileChanges;
-(char)_colorSpaceIsInherited;
-(id)_defaultColorSpaceForScreen;
-(char)_setColorSpace:(id)arg1 sendNotification:(char)arg2 displayIfChanged:(char)arg3 ;
-(void)_displayProfileChanged;
-(char)_shouldDockWindow;
-(void)_attemptToShowDockWindowFeedbackWithEvent:(id)arg1 ;
-(unsigned long long)_windowDockRectEdgesFromPoint:(CGPoint)arg1 ;
-(void)_updateWindowDockFeedbackAtRectEdges:(unsigned long long)arg1 ;
-(unsigned long long)_rectEdgesForDocking;
-(id)_windowDockFeedbackWindow;
-(void)_attemptToDockWindowOnRectEdges:(unsigned long long)arg1 ;
-(void)_validSize:(CGSize*)arg1 force:(char)arg2 ;
-(void)setUnsnappedFrame:(CGRect)arg1 ;
-(void)_unsnapFrameWithEvent:(id)arg1 ;
-(void)_setWindowDockFeedbackWindow:(id)arg1 ;
-(id)_makeGhostContentViewWithFrame:(CGRect)arg1 ;
-(id)_makeGhostFeedbackWindowWithFrame:(CGRect)arg1 ;
-(id)_windowDockingEventMonitor;
-(void)_setWindowDockingEventMonitor:(id)arg1 ;
-(void)_showDockFeedbackWindowAtRectEdges:(unsigned long long)arg1 ;
-(void)_interruptFrameAnimations;
-(void)_makeSnappingInfo;
-(CGRect)unsnappedFrame;
-(void)_attemptToUndockWindowWithEvent:(id)arg1 ;
-(void)_sendWindowWillStartDragging;
-(void)_attemptToDockWindow;
-(void)_removeWindowDockingEventMonitor;
-(id)_unsnapCatchupAnimation;
-(void)_setUnsnapCatchupAnimation:(id)arg1 ;
-(void)_sendWindowDidEndDragging;
-(CGRect)_frameFromMoveData:(id)arg1 ;
-(char)_shouldSnapForEvent:(id)arg1 ;
-(void)_makeCatchupAnimationWithMoveData:(id)arg1 catchupSize:(CGSize)arg2 ;
-(void)_internalHandleWindowMovedWithEvent:(id)arg1 ;
-(void)_attemptSnapFrameWithMoveData:(id)arg1 event:(id)arg2 ;
-(void)_windowExposed:(id)arg1 ;
-(void)_hideMenu:(id)arg1 ;
-(void)_handleWindowShouldCloseEvent:(id)arg1 ;
-(void)_doDockingForWindowMovementWithEvent:(id)arg1 ;
-(void)_addWindowDockingEventMonitorIfNeeded;
-(void)_startShowingWindowDockingFeedback;
-(void)_setRectEdgesForDocking:(unsigned long long)arg1 ;
-(void)_hideDockFeedbackWindow;
-(void)_cancelShowingDockWindowFeedback;
-(void)_scheduleShowingDockWindowFeedback;
-(void)_changeJustMain;
-(id)_childWindows;
-(char)_canBecomeSecondaryKeyWindow;
-(void)_enableEnablingKeyEquivalentForDefaultButtonCell;
-(NSButtonCell *)defaultButtonCell;
-(char)_windowWillBecomeFullScreen;
-(void)_updateEventMaskDueToResigningKey;
-(void)resignMainAppearance;
-(void)_updateWindowsMenuItemIfNeeded;
-(void)acquireMainAppearance;
-(void)_changeAllAttachmentsMainState;
-(void)_setTransformForAnimation:(CGAffineTransform)arg1 anchorPoint:(CGPoint)arg2 ;
-(void)_enumerateAnimatedGlobalWindowsUsingBlock:(/*^block*/id)arg1 ;
-(long long)_orderFrontAnimationType;
-(long long)_effectiveAnimationBehaviorIfModal:(char)arg1 ;
-(void)_sendWindowChangedKeyStateIfNeeded;
-(void)_changeAllAttachmentsKeyState;
-(char)_commonPerformKeyEquivalent:(id)arg1 conditionally:(char)arg2 ;
-(char)_processKeyboardUIKey:(id)arg1 ;
-(void)_setPreferredNextWindowToSelect:(id)arg1 ;
-(void)_setIsMinimized:(char)arg1 ;
-(void)_finishClosingWindow;
-(void)_close;
-(char)_hasSiblingSpaceWhenFullScreenPrefersModal;
-(void)_miniturizeFromFullScreen;
-(char)_minimizeToDock;
-(CGRect)_standardFrameForScreen:(id)arg1 isMoveToiPad:(char)arg2 ;
-(CGRect)_adjustFrame:(CGRect)arg1 fittingRect:(CGRect)arg2 ;
-(void)_validateSizeUsingConstraints:(CGSize*)arg1 ;
-(CGRect)_tileFrameForFullScreen;
-(CGRect)_standardFrame;
-(void)_zoomToScreenEdge:(unsigned long long)arg1 ;
-(void)_revertZoomToEdge;
-(void)_enterATUWithTileOnLeft:(char)arg1 ;
-(id)_screenForMoveBack;
-(void)_zoomToFrame:(CGRect)arg1 willChangeScreens:(char)arg2 toIPad:(char)arg3 zoomState:(unsigned long long)arg4 ;
-(void)_crossfadeMoveToFrame:(CGRect)arg1 ;
-(void)_zoomToScreen:(id)arg1 isMoveToiPad:(char)arg2 ;
-(char)_prepareToZoom;
-(void)_saveCurrentZoomState;
-(CGRect)_divideFrameForEdge:(unsigned long long)arg1 ;
-(id)_sidecarMenuController;
-(id)_generateCompositedBackground;
-(id)_compositedBackground;
-(void)_updateWindowCanServerSideDrag;
-(int)_windowDepth;
-(void)_resolveAutomaticEnterFullScreenFlags;
-(id)_preferredNextWindowToSelect;
-(void)_orderOutAndCalcKeyWithCounter:(char)arg1 stillVisible:(char)arg2 docWindow:(id)arg3 ;
-(void)_setUpFirstResponder;
-(void)_postWindowWillOrderOnScreenNotification;
-(void)_postWillOrderOffScreenNotification;
-(char)_shouldReallyOrderWindow;
-(unsigned long long)_preferredPositionForTileJoin;
-(void)_enterAutomaticFullScreen;
-(char)isRestorable;
-(void)_positionWindowOnBestScreen;
-(void)_doWindowWillBeVisibleAsSheet:(char)arg1 ;
-(char)_performSpecialWindowOrderingWasEffectivelyVisible:(char)arg1 place:(long long)arg2 relativeTo:(long long)arg3 ;
-(void)_orderPanelIfActiveWithOrderingMode:(long long)arg1 otherWin:(long long)arg2 ;
-(char)_shouldParticipateInBatchOrdering:(long long)arg1 ;
-(void)_doWindowWillBecomeHidden;
-(void)_doWindowOrderOutWithWithKeyCalc:(char)arg1 forCounter:(char)arg2 orderingDone:(char)arg3 docWindow:(id)arg4 ;
-(void)_updateEventMaskDueToOrderedOut;
-(void)_doOrderOutEndedButAttachedSheets;
-(void)_reallyDoOrderWindowAboveOrBelow:(long long)arg1 relativeTo:(long long)arg2 findKey:(char)arg3 forCounter:(char)arg4 force:(char)arg5 isModal:(char)arg6 ;
-(void)_reallyDoOrderWindowOutRelativeTo:(long long)arg1 findKey:(char)arg2 forCounter:(char)arg3 force:(char)arg4 isModal:(char)arg5 ;
-(void)_windowTransformAnimationDidEnd:(id)arg1 ;
-(char)_shouldRemoveFromParentIfPossible;
-(char)_shouldEnterFullScreenModeOnOrderIn;
-(void)_removeFromParentIfPossible;
-(void)_doOrderWindowWithoutAnimation:(long long)arg1 relativeTo:(long long)arg2 findKey:(char)arg3 forCounter:(char)arg4 force:(char)arg5 isModal:(char)arg6 ;
-(void)_setRunningWindowTransformAnimation:(id)arg1 ;
-(void)_applyWindowLevelWithTagUpdateNeeded:(char)arg1 ;
-(void)_setAlwaysOnTop:(char)arg1 ;
-(void)_hideChildren;
-(void)_unhideChildren;
-(void)cacheMiniwindowTitle:(id)arg1 guess:(char)arg2 ;
-(void)_setDocumentEdited:(char)arg1 ;
-(char)_windowDidExistAtLaunch;
-(id)timeMachineDelegate;
-(void)__close;
-(void)_minimizeSucceeded:(char)arg1 ;
-(void)_changeAllAttachmentsVisibleWithoutLogin;
-(unsigned long long)_defaultCollectionBehavior;
-(char)_implicitlyAllowsFullScreenAuxiliary;
-(char)_implicitlyDisallowTiling;
-(char)_implicitlyTileable;
-(char)_allowsFullScreen;
-(char)_allowsTiling;
-(void)_cacheAndSetPropertiesForCollectionBehavior:(unsigned long long)arg1 ;
-(unsigned long long)_validateCollectionBehavior:(unsigned long long)arg1 ;
-(char)_canEnterTileModeForBehavior:(unsigned long long)arg1 ;
-(id)_topmostVisibleCanBecomeKeyAttachedSheet;
-(char)hasMainAppearance;
-(id)dataWithEPSInsideRect:(CGRect)arg1 ;
-(id)dataWithPDFInsideRect:(CGRect)arg1 ;
-(void)_invalidateWindowConstraintsMinMaxSizeCache;
-(void)_registerSidebarAdapter:(id)arg1 ;
-(void)_setSidebarTrackingAdapter:(id)arg1 ;
-(char)registerScrollViewSeparatorTrackingAdapter:(id)arg1 ;
-(void)unregisterScrollViewSeparatorTrackingAdapter:(id)arg1 ;
-(void)_setTrailingSidebarTrackingAdapter:(id)arg1 ;
-(id)_stringWithFrame:(CGRect)arg1 onScreen:(id)arg2 adjustingForToolbar:(char)arg3 ;
-(id)_stringWithSavedFrameAdjustingForToolbar:(char)arg1 ;
-(CGRect)_convertAdjustedFrameFromDefaults:(CGRect)arg1 ;
-(char)_setFrameFromString:(id)arg1 overrideTopLeft:(const CGPoint*)arg2 preferActiveDisplay:(char)arg3 constrainFullFrame:(char)arg4 force:(char)arg5 ;
-(char)_setFrameUsingName:(id)arg1 domain:(id)arg2 force:(char)arg3 ;
-(char)_wouldBeSufficientlyUnclippedOnSpace:(unsigned long long)arg1 ;
-(char)_enterFullScreenModeOnTileSpaceWithName:(id)arg1 takeOwnership:(char)arg2 ;
-(void)_enterFullScreenModeForRestoration;
-(unsigned)_minimizationSeed;
-(id)_copyTileSpaceName;
-(id)_copyWorkspaceIdentifier;
-(id)_restorableStateRepresentedURL;
-(CGRect)_fullScreenTileFrame;
-(CGRect)_enforceFullScreenRestrictionForFrame:(CGRect)arg1 ;
-(CGRect)_enforceMenuBarAvoidanceForFrame:(CGRect)arg1 onScreen:(id)arg2 ;
-(CGSize)_minFullScreenContentSizeForFrame:(CGRect)arg1 ;
-(CGSize)_tilePreferredSize;
-(void)_setTileMinSize:(CGSize)arg1 tileMaxSize:(CGSize)arg2 tilePreferredSize:(CGSize)arg3 ;
-(char)_defeatsOverrideOfFullScreenAvoidance;
-(void)_getConstrainedWindowMinSize:(CGSize*)arg1 maxSize:(CGSize*)arg2 ;
-(void)_commonMinMaxSizeChanged;
-(void)_discardWindowResizeConstraintsAndMarkAsNeedingUpdate;
-(char)_doesOwnRealWindow;
-(char)_runningDocModalOrFauxModal;
-(void)editTitle:(id)arg1 ;
-(char)_titleMightBeEditable;
-(char)_userInterfaceItemIsTemporarilyDisabled:(id)arg1 ;
-(char)_validateZoom;
-(char)_validateTile;
-(void)_beginWindowBlockingModalSessionForSheet:(id)arg1 service:(id)arg2 completionHandler:(/*^block*/id)arg3 isCritical:(char)arg4 ;
-(void)_beginSheet:(id)arg1 completionHandler:(/*^block*/id)arg2 isCritical:(char)arg3 ;
-(void)_endWindowBlockingModalSession:(NSModalSession*)arg1 returnCode:(long long)arg2 ;
-(void)_endWindowBlockingModalSessionForShownService:(id)arg1 ;
-(id)_parentWindowForAddingToMovementGroupWithProposedParent:(id)arg1 ;
-(char)_excludeFromOrderingGroup;
-(void)_willRemoveChildWindow:(id)arg1 ;
-(void)_didAddChildWindow:(id)arg1 ;
-(long long)_childWindowOrderingPriority;
-(void)_setIsRemovingFromParentWindow:(char)arg1 ;
-(void)_didRemoveChildWindow:(id)arg1 ;
-(id)animationForKeyPath:(id)arg1 ;
-(void)adjustLayoutForResolutionChangeToRetina:(char)arg1 ;
-(void)rebuildLayoutFromScratch;
-(int)_setCGColorSpace:(CGColorSpaceRef)arg1 ;
-(long long)_effectiveToolbarStyleAssumingExpandedIfHidden;
-(id)_eventMonitorForRenaming;
-(id)_savedFirstResponderForRenaming;
-(unsigned long long)_editingModeForTitle:(id)arg1 editingRange:(NSRange*)arg2 selectedRange:(NSRange*)arg3 ;
-(void)_setSavedFirstResponderForRenaming:(id)arg1 ;
-(void)_setEventMonitorForRenaming:(id)arg1 ;
-(void)_titleBarRenamingApplicationDidResignActive:(id)arg1 ;
-(void)_setRemoteRenameSession:(id)arg1 ;
-(void)_endTitlebarRenamingPrecleanup;
-(char)_canEditTitle;
-(void)_internalEditTitleWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_bindTitleToContentViewController;
-(char)isPreferenceToolbarWindow;
-(char)_hasBottomAccessoryViewController;
-(id)_initContent:(const CGRect*)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(char)arg4 screen:(id)arg5 contentView:(id)arg6 ;
-(char)_usesCustomDrawing;
-(char)_isAlertWindow;
-(id)initWithContentRect:(CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(char)arg4 screen:(id)arg5 ;
-(id)_initFromGlobalWindow:(long long)arg1 inRect:(const CGRect*)arg2 ;
-(void)_setTexturedBackground:(char)arg1 ;
-(CGRect)_pointRectInPixels:(CGRect)arg1 ;
-(CGRect)_pixelRectInPoints:(CGRect)arg1 ;
-(void)_enableScreenUpdatesIfNeeded;
-(void)_setOcclusionStateIsVisible:(char)arg1 ;
-(long long)titlebarSeparatorStyle;
-(long long)contentTitlebarSeparatorStyle;
-(void)setContentTitlebarSeparatorStyle:(long long)arg1 ;
-(char)_wantToBeModal;
-(CGAffineTransform)_layerTransformToHost;
-(char)_titleIsRepresentedFilename;
-(void)setTitleWithRepresentedFilename:(id)arg1 ;
-(CGRect)_titleFrameForEditingWithProposedFrame:(CGRect)arg1 ;
-(CGRect)_customTitleFrame;
-(void)addDocumentIconButton;
-(char)_isWindowPointInStandardWindowButtonGroup:(CGPoint)arg1 ;
-(long long)_globalWindowNum;
-(long long)_cachedGlobalWindowNum;
-(char)_tryLockViewHierarchyForWriting;
-(char)_canAddUnderTitlebarViews;
-(void)insertTitlebarAccessoryViewController:(id)arg1 atIndex:(long long)arg2 ;
-(id)_titlebarBackdropGroupName;
-(void)_setHasActiveAppearance:(char)arg1 ;
-(char)titlebarBlurFiltersDisabled;
-(void)setTitlebarBlurFiltersDisabled:(char)arg1 ;
-(void)_handleMouseDraggedEvent:(id)arg1 ;
-(CGPoint)frameTopLeftPoint;
-(void)setContentResizeIncrements:(CGSize)arg1 ;
-(CGSize)contentResizeIncrements;
-(void)setContentAspectRatio:(CGSize)arg1 ;
-(CGSize)contentAspectRatio;
-(char)_hasAtLeastOneBackdropView;
-(unsigned long long)shadowOptionsForActiveAppearance:(char)arg1 ;
-(char)_animationShouldCallFlushWindow;
-(void)_forceFlushWindowToScreen;
-(void)_disableDelayedWindowDisplay;
-(void)_enableDelayedWindowDisplay;
-(char)_delayedWindowDisplayEnabled;
-(void)useOptimizedDrawing:(char)arg1 ;
-(void)_setWasCGOrderingEnabled:(char)arg1 ;
-(char)_wasCGOrderingEnabled;
-(void)_setWasReshapingEnabled:(char)arg1 ;
-(char)_wasReshapingEnabled;
-(void)_drawKeyboardUILoopIfNeededForEvent:(id)arg1 ;
-(void)setKeyView:(id)arg1 ;
-(char)_selectAnyValidResponderOverride;
-(void)_clearAnyValidResponderOverride;
-(char)autorecalculatesKeyViewLoop;
-(void)runToolbarConfigurationPalette:(id)arg1 ;
-(void)_setNextToolbarDisplayMode:(id)arg1 ;
-(void)_setNextToolbarSizeMode:(id)arg1 ;
-(void)setShowsLockButton:(char)arg1 ;
-(void)setMouseConfinementRect:(CGRect)arg1 ;
-(void)_setAutoPositionMask:(unsigned long long)arg1 ;
-(id)_displayChangedWithoutAdjusting;
-(char)_internalHandleAppKitDefinedEvent:(id)arg1 ;
-(char)_isResigningKeyFocusOnly;
-(id)_moveOffscreen;
-(void)_moveOnscreen;
-(void)_addGlobalWindowToAnimationsWithWindowNumber:(unsigned)arg1 ;
-(void)_removeGlobalWindowFromAnimationsWithWindowNumber:(unsigned)arg1 ;
-(void)_shake;
-(void)_sendForcedWindowChangedKeyState;
-(void)_absorbDeferredNeedsDisplayRegion;
-(void)_setLastFocusRingView:(id)arg1 bleedRegion:(id)arg2 ;
-(char)_shouldCloseForTermination;
-(char)isReleasedWhenClosed;
-(char)isZoomed;
-(unsigned long long)_currentZoomState;
-(void)_revertZoomToScreen;
-(void)_moveToScreen:(id)arg1 ;
-(void)_zoomToScreen:(id)arg1 ;
-(id)_texturePattern;
-(id)_gradientImage;
-(id)_sheetDimmingParentView;
-(id)contentSeparatorColor;
-(id)contentInsetColor;
-(void)setShowsContentSeparator:(char)arg1 forEdge:(unsigned long long)arg2 ;
-(void)_setModeDisablesServerSideDrag:(char)arg1 ;
-(void)setDynamicDepthLimit:(char)arg1 ;
-(void)_setWindowDepth:(int)arg1 ;
-(void)orderBack:(id)arg1 ;
-(void)orderFrontRegardless;
-(void)_doOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(char)arg3 ;
-(void)_doOrderWindow:(long long)arg1 relativeTo:(long long)arg2 findKey:(char)arg3 forCounter:(char)arg4 force:(char)arg5 ;
-(void)_orderOutWhenAppHiddenRelativeToWindow:(id)arg1 ;
-(void)_windowTransformAnimationWillBegin:(id)arg1 ;
-(void)_setTransformDidCompleteHandler:(/*^block*/id)arg1 ;
-(char)_wantsToDestroyRealWindow;
-(void)_setWantsToDestroyRealWindow:(char)arg1 ;
-(id)_destroyRealWindowIfNotVisible:(id)arg1 ;
-(long long)_childLevel:(long long)arg1 ;
-(void)setMiniwindowImage:(NSImage *)arg1 ;
-(void)setMiniwindowTitle:(NSString *)arg1 ;
-(NSImage *)miniwindowImage;
-(char)_windowCanBeRestored;
-(id)_batchClose;
-(id)_copyMinimizeDictionary;
-(id)_batchZoom;
-(char)isOneShot;
-(char)_isTitledWindow;
-(char)_wasModalAtSometime;
-(char)_cgsWindowSaysSupportsTiling;
-(char)_avoidsActivation;
-(void)_setFullScreenSidebarUsesWithinWindowBlending:(char)arg1 ;
-(char)_fullScreenSidebarUsesWithinWindowBlending;
-(void)_setTabbedFullHeightSidebarsAreIndependent:(char)arg1 ;
-(void)_setFullScreenSidebarToolbarMaterial:(long long)arg1 ;
-(long long)_depthOfSubview:(id)arg1 ;
-(char)_shouldShowResizeCursor;
-(void)cacheImageInRect:(CGRect)arg1 ;
-(void)restoreCachedImage;
-(void)discardCachedImage;
-(void)_saveFrameUsingName:(id)arg1 domain:(id)arg2 ;
-(char)_setFrameUsingName:(id)arg1 domain:(id)arg2 ;
-(char)setFrameUsingName:(id)arg1 force:(char)arg2 ;
-(char)_enterFullScreenModeOnTileSpaceWithName:(id)arg1 ;
-(void)_setFrameSavedUsingTitle:(char)arg1 ;
-(void)invalidateShadow;
-(char)canMoveToCurrentSpaceOnScreen:(id)arg1 ;
-(void)setMinFullScreenContentSize:(CGSize)arg1 ;
-(void)setMaxFullScreenContentSize:(CGSize)arg1 ;
-(void)_setOwnsRealWindow:(char)arg1 ;
-(void)_termOneShotWindow;
-(void)setAutofill:(char)arg1 ;
-(char)autofill;
-(void)setAutofillColor:(id)arg1 ;
-(id)autofillColor;
-(double)_effectiveAlphaValue;
-(void)setShowsResizeIndicator:(char)arg1 ;
-(char)showsResizeIndicator;
-(void)_beginWindowBlockingModalSessionForShownService:(id)arg1 ;
-(void)_beginFauxModalSession;
-(void)_endFauxModalSession;
-(void)_updateMovementGroup;
-(void)_updateFirstResponderForIgnoredChildWindow:(id)arg1 ;
-(id)_orderedAttachedWindows;
-(void)addChildWindow:(id)arg1 ordered:(long long)arg2 shareKey:(char)arg3 ;
-(id)_topmostChild;
-(char)_excludedFromVisibleWindowList;
-(void)setSharingType:(unsigned long long)arg1 ;
-(unsigned long long)sharingType;
-(void)setPreferredBackingLocation:(unsigned long long)arg1 ;
-(unsigned long long)preferredBackingLocation;
-(unsigned long long)backingLocation;
-(void)setAllowsConcurrentViewDrawing:(char)arg1 ;
-(CGRect)maxTitlebarTitleRect;
-(CGRect)titlebarTitleRect;
-(id)titlebarTitleFont;
-(NSObject*<NSAppearanceCustomization>)appearanceSource;
-(char)titleHidden;
-(void)setTitleHidden:(char)arg1 ;
-(void)setTitleMode:(long long)arg1 ;
-(long long)titleMode;
-(void)setTitlebarAppearsTransparentWhenFullscreen:(char)arg1 ;
-(char)titlebarDrawsBottomDividerWhenTransparent;
-(void)setTitlebarDrawsBottomDividerWhenTransparent:(char)arg1 ;
-(void)addTabbedWindow:(id)arg1 ordered:(long long)arg2 ;
-(char)canBeVisibleOnAllSpaces;
-(void)setCanBeVisibleOnAllSpaces:(char)arg1 ;
-(double)standardWindowTitleButtonsAlphaValue;
-(void)setStandardWindowTitleButtonsAlphaValue:(double)arg1 ;
-(double)titlebarHeight;
-(void)setTitlebarHeight:(double)arg1 ;
-(CGSize)standardWindowButtonGroupOffset;
-(void)setStandardWindowButtonGroupOffset:(CGSize)arg1 ;
-(char)hasColorSensitiveUI;
-(void)setHasColorSensitiveUI:(char)arg1 ;
-(void*)windowRefWithCompositedAttribute:(char)arg1 andFrameworkScaledAttribute:(char)arg2 ;
-(id)initWithWindowRef:(void*)arg1 ;
-(CGImageRef)_cgImageScreenShot;
-(CGImageRef)_cgImageScreenShotIncludingShadow:(char)arg1 clipRect:(CGRect)arg2 visualEffectViewWithDesktopBleedOnly:(char)arg3 spaceID:(unsigned long long)arg4 ;
-(char)_hasDescendentThatSharesKeyStatusWithSelfAndHasKeyAppearanceIncludingSheets:(char)arg1 ;
-(void)_sendAcquireKeyAppearanceChangeToResponder:(id)arg1 ;
-(void)_sendResignKeyAppearanceChangeToResponder:(id)arg1 ;
-(void)_sendAcquireMainAppearanceToResponder:(id)arg1 ;
-(CGRect)_draggableFrame;
-(CGSRegionObjectRef)_regionForOpaqueViewsBlockingDraggableFrame:(CGRect)arg1 ;
-(CGSRegionObjectRef)_regionForOpaqueViewsModifiedForResizing:(CGSRegionObjectRef)arg1 ;
-(CGSRegionObjectRef)_titlebarActivationRegion;
-(CGSRegionObjectRef)_titlebarButtonsPreventingActivationRegion;
-(CGSRegionObjectRef)_titlebarCommandModifierExclusionRegion;
-(void)_getEdgeResizingRects:(CGRect*)arg1 ;
-(void)_acquireNextMinimizationSeed;
-(char)_prepareToMinimize;
-(char)dockTitleIsGuess;
-(void)_sendDockFullScreenTitle:(id)arg1 ;
-(id)showDeminiaturizedWindow;
-(void)_enterFullScreenIfNeededAfterMiniturized;
-(void)_selectWindow:(id)arg1 ;
-(char)_prepareToRestoreFromDock:(char)arg1 forceActivation:(char)arg2 wantsToBeKey:(char)arg3 ;
-(void)_prepareToRestoreRegularFromDock:(char)arg1 forceActivation:(char)arg2 wantsToBeKey:(char)arg3 ;
-(CGImageRef)_cgImageInRect:(CGRect)arg1 options:(unsigned)arg2 ;
-(void)setShadowStyle:(unsigned long long)arg1 ;
-(CGSize)_shadowOffsetForActiveAppearance:(char)arg1 ;
-(void)_setContentHasShadow:(char)arg1 ;
-(char)_contentHasShadow;
-(void)_setForceInactiveShadow:(char)arg1 ;
-(void)_setForceMainAppearance:(char)arg1 ;
-(char)_forceMainAppearance;
-(id)_viewTreeDescription;
-(id)_dumpImage;
-(CGImageRef)_cgImageScreenShotIncludingSpaceID:(unsigned long long)arg1 ;
-(char)_hasActiveAppearanceForStandardWindowButton:(unsigned long long)arg1 ;
-(id)_customImageForStandardWindowButton:(unsigned long long)arg1 state:(unsigned long long)arg2 dirty:(char)arg3 controlTint:(unsigned long long)arg4 ;
-(CGRect)_growBoxRect;
-(double)_transparency;
-(void*)_dockItem;
-(id)restoreWindowOnDockDeath;
-(id)restoreWindowOnDockReincarnation;
-(void)updateInDock;
-(const CFDictionaryRef)_createWindowsMenuEntryWithTitle:(id)arg1 enabled:(char)arg2 ;
-(void)_setDefaultButtonPaused:(char)arg1 ;
-(char)_defaultButtonPaused;
-(void)_installCocoaWindowEventHandlers;
-(OpaqueWindowPtrRef)_windowRefCreatedForCarbonApp;
-(OpaqueWindowPtrRef)_windowRefCreatedForCarbonControl;
-(void)_setFrameworkScaleFactor:(double)arg1 ;
-(double)_frameworkScaleFactor;
-(void)_setScaleFactor:(double)arg1 ;
-(id)_transformsDescription;
-(CGAffineTransform)_baseTransform;
-(void)setTimeMachineDelegate:(id)arg1 ;
-(char)_isInactiveRevisionWindow;
-(void)_setInactiveRevisionWindow:(char)arg1 ;
-(void)_dropSharedFirstResponder;
-(void)_changeVisibleWithoutLogin;
-(char)_accessibilityTitleCellRemoved;
-(void)_accessibilitySetTitleCellRemoved:(char)arg1 ;
-(id)_dumpLayer;
-(char)hostsLayersInWindowServer;
-(char)canHostLayersInWindowServer;
-(void)setCanHostLayersInWindowServer:(char)arg1 ;
-(void)_setShouldAutoFlattenLayerTree:(char)arg1 ;
-(void)_switchDragRegistrationToRemoteContext:(unsigned)arg1 ;
-(char)_accessibilityIsModal;
-(CGRect)_expandedTitleCellRect;
-(CGRect)_inlineTitleRect;
-(id)_expandedTitleCell;
-(id)_inlineTitleCell;
-(id)_inlineSubtitleCell;
-(id)_wholeAccessibilityTitleString;
-(id)_accessibilitySheetParent;
-(id)_accessibilitySubtitleCell;
-(id)accessibilitySubtitleUIElementAttribute;
-(id)_newAutoGeneratedSectionsWithSearchKeys:(id)arg1 searchDepth:(long long)arg2 existingElements:(id)arg3 ;
-(id)_sectionsForElement:(id)arg1 keys:(id)arg2 depth:(long long)arg3 allowMultiple:(char)arg4 ;
-(id)_localizedDescriptionForSectionIdentifier:(id)arg1 ;
-(void)_preliminaryUpdateSectionResult:(id)arg1 element:(id)arg2 keys:(id)arg3 ;
-(void)_filterDownPotentialSectionResult:(id)arg1 keys:(id)arg2 ;
-(void)_updateSectionSearchElements:(id)arg1 keys:(id)arg2 element:(id)arg3 ;
-(id)_largestElementInElements:(id)arg1 ;
-(id)_newSectionCandidatesForSearchElements:(id)arg1 depth:(long long)arg2 ;
-(id)_potentialCandidateKeyForSectionKey:(id)arg1 ;
-(void)_finalUpdateSectionResult:(id)arg1 withCandidates:(id)arg2 element:(id)arg3 keys:(id)arg4 allowMultiple:(char)arg5 ;
-(char)_isSearchField:(id)arg1 ;
-(CGRect)_accessibilityFrameForElement:(id)arg1 ;
-(id)_closestElementToPosition:(CGPoint)arg1 inElements:(id)arg2 ;
-(id)_accessibilitySwiftUIDelegate;
-(id)_accessibilityViewCorrectedForFieldEditor:(id)arg1 ;
-(void)accessibilityAddDeferredNotification:(id)arg1 ;
-(void)_accessibilitySetSwiftUIDelegate:(id)arg1 ;
-(void)accessibilitySetPositionAttribute:(id)arg1 ;
-(id)accessibilityMainAttribute;
-(char)accessibilityIsMainAttributeSettable;
-(void)accessibilitySetMainAttribute:(id)arg1 ;
-(id)accessibilityMinimizedAttribute;
-(char)accessibilityIsMinimizedAttributeSettable;
-(void)accessibilitySetMinimizedAttribute:(id)arg1 ;
-(id)accessibilityCloseButtonAttribute;
-(char)accessibilityIsCloseButtonAttributeSettable;
-(id)accessibilityZoomButtonAttribute;
-(char)accessibilityIsZoomButtonAttributeSettable;
-(id)accessibilityMinimizeButtonAttribute;
-(char)accessibilityIsMinimizeButtonAttributeSettable;
-(id)accessibilityToolbarButtonAttribute;
-(char)accessibilityIsToolbarButtonAttributeSettable;
-(id)accessibilityFullScreenButtonAttribute;
-(char)accessibilityIsFullScreenButtonAttributeSettable;
-(id)accessibilityFullScreenAttribute;
-(char)accessibilityIsFullScreenAttributeSettable;
-(void)accessibilitySetFullScreenAttribute:(id)arg1 ;
-(id)accessibilityProxyAttribute;
-(char)accessibilityIsProxyAttributeSettable;
-(char)accessibilityIsGrowAreaAttributeSettable;
-(id)accessibilityDefaultButtonAttribute;
-(char)accessibilityIsDefaultButtonAttributeSettable;
-(id)accessibilityCancelButtonAttribute;
-(char)accessibilityIsCancelButtonAttributeSettable;
-(id)accessibilityDocumentAttribute;
-(char)accessibilityIsDocumentAttributeSettable;
-(id)accessibilityModalAttribute;
-(char)accessibilityIsModalAttributeSettable;
-(char)accessibilityIsSectionsAttributeSettable;
-(char)hasCloseBox;
-(char)isMiniaturizable;
-(char)isModalPanel;
-(char)isZoomable;
-(long long)orderedIndex;
-(void)setIsMiniaturized:(char)arg1 ;
-(void)setIsVisible:(char)arg1 ;
-(void)setIsZoomed:(char)arg1 ;
-(void)setOrderedIndex:(long long)arg1 ;
-(id)boundsAsQDRect;
-(void)setBoundsAsQDRect:(id)arg1 ;
-(id)_beginDraggingSessionWithItems:(id)arg1 clipRect:(CGRect)arg2 event:(id)arg3 source:(id)arg4 ;
-(void)_registerDragTypes:(id)arg1 ;
-(CGRect)_windowResizeEventHandlingRectForRect:(CGRect)arg1 ;
-(void)_syncFrameMetrics;
-(void)_setWindowDepth;
-(void)_installRootMetricsHandler;
-(void)_installCarbonAppDockHandlers;
-(void)_installCarbonWindowEventHandlers;
-(void)_installCocoaWindowEventHandlersForCocoaSheetsAttachedToCarbonModalParent;
-(void)_removeCocoaWindowEventHandlersForCocoaSheetsAttachedToCarbonModalParent;
-(void)_setMouseMovedEventsEnabled:(char)arg1 ;
-(id)_sendEventToGestureRecognizers:(id)arg1 requireAcceptsFirstMouse:(char)arg2 ;
-(void)_reallySendEvent:(id)arg1 isDelayedEvent:(char)arg2 ;
-(char)_shouldSnapSizeOnDoubleClick;
-(id)_hitTestWithHysteresisCheck:(CGPoint)arg1 forEvent:(id)arg2 allowWindowDragging:(char*)arg3 ;
-(char)view:(id)arg1 acceptsFirstMouseEvent:(id)arg2 initialKeyWindow:(id)arg3 ;
-(char)_wantsMouseMoveEventsInBackground;
-(void)_setWantsMouseMoveEventsInBackground:(char)arg1 ;
-(char)_gestureRecognizersHaveDelayedEvents;
-(void)_handleMouseDownEvent:(id)arg1 isDelayedEvent:(char)arg2 ;
-(void)_setIgnoresCurrentEvent:(char)arg1 ;
-(void)_eventWasFiltered:(id)arg1 ;
-(char)_wasActiveBeforeCurrentEvent;
-(id)_gestureRecognizersStartingWithView:(id)arg1 onEvent:(id)arg2 requireAcceptsFirstMouse:(char)arg3 ;
-(void)_removeActiveGestureRecognizer:(id)arg1 ;
-(char)_gatheringActiveGestureRecognizers;
-(void)_latchView:(id)arg1 forEvent:(id)arg2 ;
-(void)_beginATUWindowDragForGreenButtonPressAtLocation:(CGPoint)arg1 ;
-(char)_firstResponderCanBeWeak;
-(void)_setViewsNeedUpdateConstraints:(char)arg1 ;
-(void)_setSidecarMenuController:(id)arg1 ;
-(id)_cursorForResizeDirection:(long long)arg1 ;
-(void)_getResizeEdgeAndCornerThicknesses:(double)arg1 ;
-(char)_windowDying;
-(char)_contentsHaveInvalidRestorableState;
-(void)_setContentsHaveInvalidRestorableState:(char)arg1 ;
-(char)_shouldRecordPersistentState;
-(char)_isSnapshotRestorationEnabled;
-(void)_invalidateRestorableStateOfContents;
-(id)_persistentUIWindow;
-(void)_markAsEverHavingInvalidRestorableState;
-(id)_persistentUIIdentifier;
-(id)_copyPersistentUIChildren;
-(void)_fromConstraintsSetWindowFrame:(CGRect)arg1 ;
-(void)exerciseAmbiguityInLayout;
-(CGRect)_frameForVisualizedConstraintsWindow:(id)arg1 ;
-(id)_visualizedConstraintsView;
-(void)_updateConstraintVisualization;
-(void)_teardownVisualizedConstraintsView;
-(void)visualizeConstraints:(id)arg1 ;
-(void)accessibilitySendDeferredNotifications;
-(void)setRemoteUIElement:(id)arg1 ;
-(unsigned long long)_resizableEdgesForGrowing:(unsigned long long*)arg1 shrinking:(unsigned long long*)arg2 ;
-(void)_getEdgeResizingRects:(CGRect*)arg1 allowedEdges:(unsigned long long)arg2 ;
-(void)_getConstrainedWindowMinSize:(CGSize*)arg1 maxSize:(CGSize*)arg2 changingOnlySlightly:(char)arg3 ;
-(void)_getExteriorResizeEdgeThicknesses:(double)arg1 ;
-(char)_snapWindowSizeInDirection:(long long)arg1 withEvent:(id)arg2 ;
-(CGRect)_frame:(CGRect)arg1 resizedFromEdge:(unsigned long long)arg2 withDelta:(CGSize)arg3 withEvent:(id)arg4 withState:(SCD_Struct_NS109*)arg5 ;
-(void)_resizeSetFrame:(CGRect)arg1 withEvent:(id)arg2 ;
-(void)_stopSnappingToFrameTimer;
-(char)_resizingShouldSnapToWindows;
-(double)_opaqueAspectDimensionForDimension:(double)arg1 isHorizontal:(char)arg2 ;
-(CGSize)_sizeForProposedSize:(CGSize)arg1 resizeEdges:(unsigned long long)arg2 ;
-(char)_wantsConstraintEngineSizeValidation;
-(CGRect)_commonValidFrameForResizeFrame:(CGRect)arg1 fromResizeEdge:(unsigned long long)arg2 ;
-(char)_allowsSizeSnapping;
-(CGRect)_doScreenSizeSnappingFromResizedEdge:(unsigned long long)arg1 frame:(CGRect)arg2 state:(SCD_Struct_NS109*)arg3 ;
-(CGRect)_sizeSnappedFrameForOppositeEdge:(unsigned long long)arg1 frame:(CGRect)arg2 state:(SCD_Struct_NS109*)arg3 ;
-(void)_startSnappingToFrameTimerAfterDelay:(double)arg1 ;
-(CGRect)_unsnapSizeFromFrame:(CGRect)arg1 fromEdge:(unsigned long long)arg2 state:(SCD_Struct_NS109*)arg3 ;
-(void)_doSnapToFrame;
-(void)_setFrameHeightDelta:(double)arg1 resizingFromTop:(char)arg2 frame:(CGRect*)arg3 ;
-(void)_setFrameWidthDelta:(double)arg1 resizingFromRight:(char)arg2 frame:(CGRect*)arg3 ;
-(CGRect)_snapWindowSizeWithFrame:(CGRect)arg1 resizeDirection:(long long)arg2 state:(SCD_Struct_NS109*)arg3 ;
-(void)_snapSizeToFrame:(CGRect)arg1 withEvent:(id)arg2 ;
-(void)_provideActuationFeedbackWithEvent:(id)arg1 ;
-(void)_setLiveResizedFrame:(CGRect)arg1 animated:(char)arg2 ;
-(char)_scrollViewIntersectsSoutheastGrowCorner:(id)arg1 ;
-(unsigned long long)liveResizeEdges;
-(char)_isConsideredSheetForResizing;
-(char)_shouldDoScreenSizeSnappingFromResizedEdge:(unsigned long long)arg1 frame:(CGRect)arg2 state:(SCD_Struct_NS109*)arg3 ;
-(char)_shouldSnapSizeWhenResizing;
-(void)_autolayoutEngagedSomewhereInWindow;
-(id)_windowResizeConstraints;
-(id)_layout_primitiveAnchorInfo;
-(id)_layout_defaultAnchorInfo;
-(id)_layout_anchorInfo;
-(void)_layout_setPrimitiveAnchorInfo:(id)arg1 ;
-(void)_setWindowResizeConstraints:(id)arg1 ;
-(void)_fromConstraintsCalculateWindowMinSize:(CGSize*)arg1 maxSize:(CGSize*)arg2 allowDynamicLayout:(char)arg3 changingOnlySlightly:(char)arg4 ;
-(id)anchorItemForOrientation:(long long)arg1 ;
-(CGPoint)_layout_anchorPoint;
-(CGPoint)_layout_anchorPointInEngine;
-(id)_nsib_candidateRedundantConstraints;
-(void)_changeWindowFrameFromConstraintsIfNecessary;
-(char)_updateConstraintsForEngineHostingViews:(id)arg1 ;
-(id)_layoutEngineIfAvailable;
-(id)_layoutEngineEngaging;
-(void)setAnchorItem:(id)arg1 forOrientation:(long long)arg2 ;
-(id)_redundantConstraints;
-(void)_cleanupToolbarFromFullScreen;
-(double)_fullScreenTitlebarMinHeight;
-(char)_shouldOpenInFullScreen;
-(char)_willBeInFullScreenSpace;
-(char)_someFullScreenInstanceHasSuppressedImplicitFullScreen;
-(void)_reacquireToolbarViewFromFullScreenWindow;
-(void)_enterFullScreenModeWithTransition:(id)arg1 ;
-(id)_fullScreenPreferredJoinRatioDefaultsKey;
-(void)_doUpdateTilingConstraintsImmediately;
-(char)_needsTilingConstraintUpdate;
-(char)_explicitlyAllowsFullScreenPrimary;
-(char)_shouldJoinActiveSpaceOnOrderIn;
-(char)_explicitlyAllowsFullScreenAuxiliary;
-(CGRect)_savedFrameForExitingFullScreen;
-(char)_isInFullScreenSpace;
-(void)_tearDownFullScreenWithoutDestroyingSpace;
-(char)_canQuitQuietlyAndSafelyWithOptionalExplanation:(id)arg1 ;
@end

