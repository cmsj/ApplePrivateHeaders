/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/AppKit-Structs.h>
#import <AppKit/NSControl.h>
#import <libobjc.A.dylib/NSTextViewDelegate.h>
#import <libobjc.A.dylib/NSUserInterfaceValidations.h>
#import <libobjc.A.dylib/NSAccessibilityNavigableStaticText.h>
#import <libobjc.A.dylib/NSTextContent.h>

@protocol _NSTextFieldHostingToolbarItem;
@class NSString, NSNumber, NSToolbarItem, CUIStyleEffectConfiguration, NSAttributedString, NSColor;

@interface NSTextField : NSControl <NSTextViewDelegate, NSUserInterfaceValidations, NSAccessibilityNavigableStaticText, NSTextContent> {

	double _maxLayoutWidth;
	long long _maximumNumberOfLines;
	char _finishedFirstConstraintsPass;
	NSNumber* _layoutEngineWidth;
	NSNumber* _cachedLayoutEngineWidth;
	CGSize _cachedIntrinsicContentSize;
	unsigned long long _textAlignmentPolicy;
	long long _updateConstraintsPassCounter;
	unsigned long long _lineBreakStrategy;
	NSEdgeInsets _cachedLanguageAwareOutsets;
	char _shouldUpdateCachedLanguageAwareOutsets;
	char _shouldCheckCurrentContentsForBoundsOutsets;
	char _contentsRequiresBoundsOutsets;
	char _passwordAutofillDisabled;
	SEL _errorAction;
	id _delegate;
	char __trackingMouseForCell;
	NSString* _contentType;
	NSToolbarItem*<_NSTextFieldHostingToolbarItem> _hostingToolbarItem;
	long long __focusRingAnimationType;

}

@property (assign) NSToolbarItem*<_NSTextFieldHostingToolbarItem> hostingToolbarItem;                                         //@synthesize hostingToolbarItem=_hostingToolbarItem - In the implementation block
@property (setter=_setFocusRingAnimationType:) long long _focusRingAnimationType;                                             //@synthesize _focusRingAnimationType=__focusRingAnimationType - In the implementation block
@property (assign) char _trackingMouseForCell;                                                                                //@synthesize _trackingMouseForCell=__trackingMouseForCell - In the implementation block
@property (assign) unsigned long long textAlignmentPolicy; 
@property (setter=_setPasswordAutofillEnabled:,getter=_isPasswordAutofillEnabled) char _passwordAutofillEnabled; 
@property (nonatomic,copy) CUIStyleEffectConfiguration * styleEffectConfiguration; 
@property (copy) NSString * placeholderString; 
@property (copy) NSAttributedString * placeholderAttributedString; 
@property (copy) NSColor * backgroundColor; 
@property (assign) char drawsBackground; 
@property (copy) NSColor * textColor; 
@property (getter=isBordered) char bordered; 
@property (getter=isBezeled) char bezeled; 
@property (getter=isEditable) char editable; 
@property (getter=isSelectable) char selectable; 
@property (__weak) id<NSTextFieldDelegate> delegate; 
@property (readonly) char acceptsFirstResponder; 
@property (assign) unsigned long long bezelStyle; 
@property (assign) double preferredMaxLayoutWidth; 
@property (assign) long long maximumNumberOfLines; 
@property (assign) char allowsDefaultTighteningForTruncation; 
@property (assign) unsigned long long lineBreakStrategy; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy) NSString * contentType;                                                                                      //@synthesize contentType=_contentType - In the implementation block
+(void)initialize;
+(id)labelWithString:(id)arg1 ;
+(Class)_classToCheckForRequiresConstraintBasedLayout;
+(id)textFieldWithString:(id)arg1 ;
+(id)wrappingLabelWithString:(id)arg1 ;
+(id)labelWithAttributedString:(id)arg1 ;
+(CFCharacterSetRef)_tooBigChars;
+(char)_shouldUseBoundsOutsetsForString:(id)arg1 ;
+(id)_fieldsContainingString:(id)arg1 ;
+(id)_newBaseLabelWithoutTitle;
+(id)wrappingTextFieldWithString:(id)arg1 preferredMaxLayoutWidth:(double)arg2 ;
+(id)textFieldWithAttributedString:(id)arg1 ;
+(id)editableTextFieldWithString:(id)arg1 ;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id<NSTextFieldDelegate>)delegate;
-(void)setDelegate:(id<NSTextFieldDelegate>)arg1 ;
-(void)setEnabled:(char)arg1 ;
-(NSString *)contentType;
-(void)setContentType:(NSString *)arg1 ;
-(void)invalidateIntrinsicContentSize;
-(void)setBackgroundColor:(NSColor *)arg1 ;
-(char)isFlipped;
-(char)wantsUpdateLayer;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)updateConstraints;
-(id)initWithFrame:(CGRect)arg1 ;
-(char)acceptsFirstResponder;
-(char)validateUserInterfaceItem:(id)arg1 ;
-(CGSize)intrinsicContentSize;
-(NSColor *)backgroundColor;
-(void)setDrawsBackground:(char)arg1 ;
-(NSEdgeInsets)alignmentRectInsets;
-(id)_preferredAppearance;
-(void)mouseDown:(id)arg1 ;
-(void)setBezelStyle:(unsigned long long)arg1 ;
-(id)makeBackingLayer;
-(unsigned long long)textAlignmentPolicy;
-(char)isBordered;
-(void)setBordered:(char)arg1 ;
-(unsigned long long)bezelStyle;
-(void)setPreferredMaxLayoutWidth:(double)arg1 ;
-(void)startSpeaking:(id)arg1 ;
-(char)mouseDownCanMoveWindow;
-(void)setAllowsEditingTextAttributes:(char)arg1 ;
-(NSColor *)textColor;
-(void)setLineBreakStrategy:(unsigned long long)arg1 ;
-(void)setAttributedStringValue:(id)arg1 ;
-(void)stopSpeaking:(id)arg1 ;
-(NSRange)accessibilityRangeForLine:(long long)arg1 ;
-(id)accessibilityStringForRange:(NSRange)arg1 ;
-(CGRect)accessibilityFrameForRange:(NSRange)arg1 ;
-(long long)accessibilityLineForIndex:(long long)arg1 ;
-(id)accessibilityValue;
-(char)isEditable;
-(void)setTextColor:(NSColor *)arg1 ;
-(void)setEditable:(char)arg1 ;
-(void)setSelectable:(char)arg1 ;
-(void)setCell:(id)arg1 ;
-(void)setTitleWithMnemonic:(id)arg1 ;
-(void)updateCell:(id)arg1 ;
-(char)acceptsFirstMouse:(id)arg1 ;
-(char)becomeFirstResponder;
-(char)drawsBackground;
-(void)setBezeled:(char)arg1 ;
-(CGPoint)_baselineOffsetsAtSize:(CGSize)arg1 ;
-(double)firstBaselineOffsetFromTop;
-(double)baselineOffsetFromBottom;
-(char)_hasExtra10_11BordersInToolbars;
-(char)isBezeled;
-(unsigned long long)_lineBreakStrategyForCurrentConfiguration;
-(char)allowsEditingTextAttributes;
-(void)setAllowsCharacterPickerTouchBarItem:(char)arg1 ;
-(void)setAutomaticTextCompletionEnabled:(char)arg1 ;
-(char)isSelectable;
-(CUIStyleEffectConfiguration *)styleEffectConfiguration;
-(char)importsGraphics;
-(void)setImportsGraphics:(char)arg1 ;
-(char)allowsDefaultTighteningForTruncation;
-(void)setAllowsDefaultTighteningForTruncation:(char)arg1 ;
-(char)textView:(id)arg1 shouldChangeTextInRange:(NSRange)arg2 replacementString:(id)arg3 ;
-(void)textDidChange:(id)arg1 ;
-(void)setStyleEffectConfiguration:(CUIStyleEffectConfiguration *)arg1 ;
-(long long)maximumNumberOfLines;
-(void)selectText:(id)arg1 ;
-(void)viewDidEndLiveResize;
-(void)setPlaceholderString:(NSString *)arg1 ;
-(char)isAutomaticTextCompletionEnabled;
-(long long)_preferredLayerContentsRedrawPolicy;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(char)shouldBeTreatedAsInkEvent:(id)arg1 ;
-(NSString *)placeholderString;
-(void)setPlaceholderAttributedString:(NSAttributedString *)arg1 ;
-(NSAttributedString *)placeholderAttributedString;
-(char)_shouldPrintByCallingDrawRect;
-(id)textView:(id)arg1 completions:(id)arg2 forPartialWordRange:(NSRange)arg3 indexOfSelectedItem:(long long*)arg4 ;
-(char)textShouldEndEditing:(id)arg1 ;
-(char)textShouldBeginEditing:(id)arg1 ;
-(void)textDidEndEditing:(id)arg1 ;
-(void)textDidBeginEditing:(id)arg1 ;
-(char)textView:(id)arg1 doCommandBySelector:(SEL)arg2 ;
-(SEL)errorAction;
-(void)setErrorAction:(SEL)arg1 ;
-(void)_setFocusRingAnimationType:(long long)arg1 ;
-(void)setHostingToolbarItem:(NSToolbarItem*<_NSTextFieldHostingToolbarItem>)arg1 ;
-(char)_trackingMouseForCell;
-(void)_invalidateEffectiveVibrantBlendingStyle;
-(void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2 ;
-(id)textView:(id)arg1 candidatesForSelectedRange:(NSRange)arg2 ;
-(id)textView:(id)arg1 candidates:(id)arg2 forSelectedRange:(NSRange)arg3 ;
-(char)textView:(id)arg1 shouldSelectCandidateAtIndex:(unsigned long long)arg2 ;
-(void)_invalidateCachedLanguageAwareOutsets;
-(char)_shouldUseBoundsOutsetsForCurrentConfig;
-(NSEdgeInsets)_languageAwareOutsetsWithFont:(id)arg1 ;
-(char)allowsCharacterPickerTouchBarItem;
-(NSToolbarItem*<_NSTextFieldHostingToolbarItem>)hostingToolbarItem;
-(double)preferredMaxLayoutWidth;
-(unsigned long long)lineBreakStrategy;
-(void)setMaximumNumberOfLines:(long long)arg1 ;
-(void)setTextAlignmentPolicy:(unsigned long long)arg1 ;
-(void)_updateLayoutDependentMetricsIfNeeded;
-(char)_hasLayoutEngine;
-(char)_performMultiPassIntrinsicSize;
-(CGSize)_intrinsicSizeWithinSize:(CGSize)arg1 ;
-(void)_deriveLineBreakModeFromAttributedString:(id)arg1 ;
-(void)displayTextLayer:(id)arg1 ;
-(void)drawForegroundOfTextLayer:(id)arg1 ;
-(NSEdgeInsets)boundsOutsetsForTextLayer:(id)arg1 ;
-(char)_isPasswordAutofillEnabled;
-(void)_setPasswordAutofillEnabled:(char)arg1 ;
-(void)_updateConstraintsFinished;
-(char)_allowRoundingToChangeSize;
-(void)textView:(id)arg1 prepareMenu:(id)arg2 forCharacterAtIndex:(unsigned long long)arg3 withEvent:(id)arg4 ;
-(long long)_focusRingAnimationType;
-(void)set_trackingMouseForCell:(char)arg1 ;
-(id)ns_widgetType;
@end

