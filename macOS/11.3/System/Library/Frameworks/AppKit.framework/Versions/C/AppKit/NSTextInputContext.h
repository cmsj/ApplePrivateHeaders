/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AppKit/AppKit-Structs.h>
@class TITextInputTraits, NSArray, NSString, NSBridgedTextTouchBarController, NSBridgedTextCorrectionController, NSBridgedTextSubstitutionController;

@interface NSTextInputContext : NSObject {

	TITextInputTraits* _tiTextInputTraits;
	id _client;
	NSArray* _inputLocales;
	void* _documentID;
	id _keyBindings;
	id _keyBindingManager;
	NSString* _commandCharacters;
	long long _documentRefcon;
	id _auxiliary;
	struct {
		unsigned _acceptsGlyphInfo : 1;
		unsigned _secureInput : 1;
		unsigned _attributedString : 1;
		unsigned _fractionOfDistance : 1;
		unsigned _baselineDelta : 1;
		unsigned _windowLevel : 1;
		unsigned _drawsVertically : 1;
		unsigned _compatibilityMode : 1;
		unsigned _hasTS : 1;
		unsigned _hasLM : 1;
		unsigned _hasTLM : 1;
		unsigned _inputLocaleGeneration : 16;
		unsigned _blockTSM : 1;
		unsigned _keyProcess : 1;
		unsigned _preflight : 1;
		unsigned _bindingFound : 1;
		unsigned _unmarkbeforeinsert : 1;
		unsigned _completionHandlingClient : 1;
	}  _ticFlags;
	NSBridgedTextTouchBarController* _bridgedTextTouchBarController;
	NSBridgedTextCorrectionController* _bridgedTextCorrectionController;
	NSBridgedTextSubstitutionController* _bridgedTextSubstitutionController;
	NSRange tiSelectedTextRange;

}

@property (readonly) TITextInputTraits * tiTextInputTraits; 
@property (readonly) NSRange tiSelectedTextRange; 
@property (assign,setter=setRTISelectedTextRange:,nonatomic) NSRange rtiSelectedTextRange; 
@property (readonly) id bridgedTextCorrectionController; 
@property (readonly) char hasActiveTextInputFunctionRowItem; 
@property (retain) TITextInputTraits * tiTextInputTraits; 
@property (assign) NSRange tiSelectedTextRange; 
@property (retain) NSBridgedTextTouchBarController * bridgedTextTouchBarController;                      //@synthesize bridgedTextTouchBarController=_bridgedTextTouchBarController - In the implementation block
@property (retain) NSBridgedTextCorrectionController * bridgedTextCorrectionController;                  //@synthesize bridgedTextCorrectionController=_bridgedTextCorrectionController - In the implementation block
@property (retain) NSBridgedTextSubstitutionController * bridgedTextSubstitutionController;              //@synthesize bridgedTextSubstitutionController=_bridgedTextSubstitutionController - In the implementation block
@property (readonly) id<NSTextInputClient> client;                                                       //@synthesize client=_client - In the implementation block
@property (assign) char acceptsGlyphInfo; 
@property (copy) NSArray * allowedInputSourceLocales; 
@property (readonly) NSArray * keyboardInputSources; 
@property (copy) NSString * selectedKeyboardInputSource; 
+(void)initialize;
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)currentInputContext;
+(void)updateInputContexts;
+(id)selectedInputSourceUcharDataForInputContext:(id)arg1 ;
+(void)cycleToNextInputScript:(id)arg1 ;
+(void)cycleToNextInputKeyboardLayout:(id)arg1 ;
+(char)processInputKeyBindings:(id)arg1 ;
+(id)inputContextWithClient:(id)arg1 ;
+(id)inputSourcesFromInputSourceLocales:(id)arg1 ;
+(/*^block*/id)handleUIKeyCommandEvent;
+(/*^block*/id)isUIKeyCommandEvent;
+(id)localeForInputSource:(id)arg1 ;
+(void)_applicationDeactivated:(id)arg1 ;
+(id)currentInputContext_withFirstResponderSync:(char)arg1 ;
+(char)isInputContextRefconValid:(const void*)arg1 ;
+(id)localizedNameForInputSource:(id)arg1 ;
+(void)setHandleUIKeyCommandEvent:(/*^block*/id)arg1 ;
+(void)setIsUIKeyCommandEvent:(/*^block*/id)arg1 ;
+(char)currentKeyboardInputSourceParticipatesInTouchBar;
+(id)keyPathsForValuesAffectingKeyboardInputSourceOverlayVisible;
+(char)_TIPropertyValueIsValid:(long long)arg1 ;
-(void)dealloc;
-(void)_invalidate;
-(id)server;
-(char)isActive;
-(id)language;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id<NSTextInputClient>)client;
-(void)activate;
-(char)validateMenuItem:(id)arg1 ;
-(id)image;
-(void)insertText:(id)arg1 replacementRange:(NSRange)arg2 ;
-(void)showGuessPanel:(id)arg1 ;
-(void)doCommandBySelector:(SEL)arg1 ;
-(void)deactivate;
-(char)hasMarkedText;
-(NSRange)selectedRange;
-(id)initWithClient:(id)arg1 ;
-(void)removeAnnotation:(id)arg1 range:(NSRange)arg2 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 replacementRange:(NSRange)arg3 ;
-(void)unmarkText;
-(NSRange)markedRange;
-(id)attributedSubstringForProposedRange:(NSRange)arg1 actualRange:(NSRange*)arg2 ;
-(id)validAttributesForMarkedText;
-(CGRect)firstRectForCharacterRange:(NSRange)arg1 actualRange:(NSRange*)arg2 ;
-(unsigned long long)characterIndexForPoint:(CGPoint)arg1 ;
-(id)attributedString;
-(double)fractionOfDistanceThroughGlyphForPoint:(CGPoint)arg1 ;
-(double)baselineDeltaForCharacterAtIndex:(unsigned long long)arg1 ;
-(long long)windowLevel;
-(char)drawsVerticallyForCharacterAtIndex:(unsigned long long)arg1 ;
-(id)candidateListTouchBarItem;
-(char)handleEvent:(id)arg1 ;
-(void)cycleToNextInputScript:(id)arg1 ;
-(void)cycleToNextInputKeyboardLayout:(id)arg1 ;
-(char)wantsToInterpretAllKeystrokes;
-(char)wantsToDelayTextChangeNotifications;
-(char)wantsToHandleMouseEvents;
-(void)markedTextAbandoned:(id)arg1 ;
-(void)markedTextSelectionChanged:(NSRange)arg1 client:(id)arg2 ;
-(id)localizedInputManagerName;
-(char)handleMouseEvent:(id)arg1 ;
-(id)keyBindingState;
-(id)keyBindingManager;
-(char)remapsArrowKeysForVerticalOrientation;
-(void)_handleText:(id)arg1 ;
-(void)_handleCommand:(SEL)arg1 ;
-(id)annotatedString;
-(void)setRTISelectedTextRange:(NSRange)arg1 ;
-(void)checkSpelling:(id)arg1 ;
-(void)toggleContinuousSpellChecking:(id)arg1 ;
-(void)toggleGrammarChecking:(id)arg1 ;
-(void)toggleAutomaticSpellingCorrection:(id)arg1 ;
-(void)changeSpelling:(id)arg1 ;
-(void)ignoreSpelling:(id)arg1 ;
-(void)toggleAutomaticQuoteSubstitution:(id)arg1 ;
-(void)toggleAutomaticDashSubstitution:(id)arg1 ;
-(void)toggleAutomaticLinkDetection:(id)arg1 ;
-(void)toggleAutomaticTextReplacement:(id)arg1 ;
-(void)replaceCharactersInRange:(NSRange)arg1 withAnnotatedString:(id)arg2 replacementRange:(NSRange)arg3 ;
-(void)prepareContextMenu:(id)arg1 ;
-(void)orderFrontSubstitutionsPanel:(id)arg1 ;
-(void)setSecureInputMode:(char)arg1 ;
-(void)discardMarkedText;
-(void)setAllowedInputSourceLocales:(NSArray *)arg1 ;
-(id)bridgedTextCorrectionController;
-(NSBridgedTextSubstitutionController *)bridgedTextSubstitutionController;
-(char)_isAsyncTextInputClient;
-(NSArray *)allowedInputSourceLocales;
-(char)acceptsGlyphInfo;
-(void)invalidateCharacterCoordinates;
-(void)uppercaseWord:(id)arg1 ;
-(void)lowercaseWord:(id)arg1 ;
-(void)capitalizeWord:(id)arg1 ;
-(void)replaceQuotesInSelection:(id)arg1 ;
-(void)replaceDashesInSelection:(id)arg1 ;
-(void)replaceTextInSelection:(id)arg1 ;
-(void)addLinksInSelection:(id)arg1 ;
-(void)convertToSimplifiedChinese:(id)arg1 ;
-(void)convertToTraditionalChinese:(id)arg1 ;
-(void)convertToFullWidth:(id)arg1 ;
-(void)convertToHalfWidth:(id)arg1 ;
-(void)setAcceptsGlyphInfo:(char)arg1 ;
-(TITextInputTraits *)tiTextInputTraits;
-(char)isCurrent;
-(void)selectedRangeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setKeyboardInputSourcePopoverTouchBar:(id)arg1 ;
-(char)_handleEvent:(id)arg1 allowingSyntheticEvent:(char)arg2 ;
-(id)keyboardInputSourcePopoverTouchBarItem;
-(void)setFunctionRowItemIdentifiers:(id)arg1 ;
-(id)characterPickerViewController;
-(void)_reflectTITraits:(id)arg1 ;
-(void)_reflectKeyboardType:(unsigned long long)arg1 ;
-(void)_reflectSecureInput:(char)arg1 ;
-(char)isSecureInputMode;
-(char)_isIOSMacClient;
-(char)_isIOSMacClientTextEditing;
-(id)auxiliary;
-(void)handleTSMEvent:(void*)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)do_HandleTSMEvent_insertFixLenTextLoop:(HandleTSMEventCompletionContext*)arg1 whileCondition:(/*^block*/id)arg2 dispatchWorkEach:(/*^block*/id)arg3 afterEachInsertText:(/*^block*/id)arg4 continuation:(/*^block*/id)arg5 ;
-(void)tryHandleTSMEvent_clearMarkedTextForAlternatives_withTest:(/*^block*/id)arg1 dispatchWork:(/*^block*/id)arg2 continuation:(/*^block*/id)arg3 ;
-(void)markedRangeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)do_HandleTSMEvent_firstRectInRangeLoop:(HandleTSMEventCompletionContext*)arg1 whileCondition:(/*^block*/id)arg2 dispatchWorkEach:(/*^block*/id)arg3 eachLoopCompletion:(/*^block*/id)arg4 continuation:(/*^block*/id)arg5 ;
-(void)hasMarkedTextWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setMarkedText:(id)arg1 selectedRange:(NSRange)arg2 replacementRange:(NSRange)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)insertText:(id)arg1 replacementRange:(NSRange)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)drawsVerticallyForCharacterAtIndex:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)_forceAttributedString;
-(NSString *)selectedKeyboardInputSource;
-(void)tryHandleTSMEvent_setMarkedText_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 setupForDispatch:(/*^block*/id)arg3 dispatchWork:(/*^block*/id)arg4 continuation:(/*^block*/id)arg5 ;
-(void)tryHandleTSMEvent_drawsVerticallyForCharacterAtIndex_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 dispatchWork:(/*^block*/id)arg3 continuation:(/*^block*/id)arg4 ;
-(void)tryHandleTSMEvent_insertFixLenText_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 setupForDispatch:(/*^block*/id)arg3 nestedWorkaroundCondition:(/*^block*/id)arg4 nestedWorkaroundDispatchWork:(/*^block*/id)arg5 loopCondition:(/*^block*/id)arg6 dispatchWorkEach:(/*^block*/id)arg7 afterEachInsertText:(/*^block*/id)arg8 continuation:(/*^block*/id)arg9 ;
-(void)tryHandleTSMEvent_HasMarkedText_withDispatchCondition:(/*^block*/id)arg1 dispatchWork:(/*^block*/id)arg2 continuation:(/*^block*/id)arg3 ;
-(void)fractionOfDistanceThroughGlyphForPoint:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)tryHandleTSMEvent_fractionOfDistanceThroughGlyphForPoint_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 furtherDispatchCondition:(/*^block*/id)arg3 dispatchWork:(/*^block*/id)arg4 continuation:(/*^block*/id)arg5 ;
-(void)tryHandleTSMEvent_markedRange_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 setupForDispatch:(/*^block*/id)arg3 furtherDispatchCondition:(/*^block*/id)arg4 dispatchWork:(/*^block*/id)arg5 continuation:(/*^block*/id)arg6 ;
-(void)characterIndexForPoint:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)attributedStringWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)tryHandleTSMEvent_attributedString_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 dispatchWork:(/*^block*/id)arg3 continuation:(/*^block*/id)arg4 ;
-(void)attributedSubstringForProposedRange:(NSRange)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)baselineDeltaForCharacterAtIndex:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)tryHandleTSMEvent_baselineDeltaForCharacterAtIndex_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 furtherDispatchCondition:(/*^block*/id)arg3 dispatchWork:(/*^block*/id)arg4 continuation:(/*^block*/id)arg5 ;
-(void)tryHandleTSMEvent_attributedSubstringForProposedRange_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 dispatchWork:(/*^block*/id)arg3 continuation:(/*^block*/id)arg4 ;
-(void)firstRectForCharacterRange:(NSRange)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)tryHandleTSMEvent_offsetToPos_markedOrSelRange_withContext:(HandleTSMEventCompletionContext*)arg1 markedOrSelRangeDispatchCondition:(/*^block*/id)arg2 markedRangeContinuation:(/*^block*/id)arg3 selectedRangeContinuation:(/*^block*/id)arg4 continuation:(/*^block*/id)arg5 ;
-(void)tryHandleTSMEvent_firstRectInRangeLoop_withContext:(HandleTSMEventCompletionContext*)arg1 setupForDispatch:(/*^block*/id)arg2 loopCondition:(/*^block*/id)arg3 dispatchWorkEach:(/*^block*/id)arg4 eachLoopCompletion:(/*^block*/id)arg5 continuation:(/*^block*/id)arg6 ;
-(void)tryHandleTSMEvent_attributedString_attributedSubstringForProposedRange_withContext:(HandleTSMEventCompletionContext*)arg1 dispatchCondition:(/*^block*/id)arg2 dispatchWork:(/*^block*/id)arg3 dispatchFurtherCondition:(/*^block*/id)arg4 dispatchFurtherWork:(/*^block*/id)arg5 continuation:(/*^block*/id)arg6 ;
-(void)setBridgedTextTouchBarController:(NSBridgedTextTouchBarController *)arg1 ;
-(void)setBridgedTextCorrectionController:(id)arg1 ;
-(void)setBridgedTextSubstitutionController:(NSBridgedTextSubstitutionController *)arg1 ;
-(unsigned long long)incrementalSearchClientGeometry;
-(void)_updateAllowedInputSources;
-(id)generateFunctionRowItemIdentifiers;
-(char)_handleEvent:(id)arg1 options:(unsigned long long)arg2 allowingSyntheticEvent:(char)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)tryDoubleSpaceSubstitution_WithDispatchCondition:(/*^block*/id)arg1 dispatchSubstitutionWork:(/*^block*/id)arg2 continuation:(/*^block*/id)arg3 ;
-(id)rtiDocumentState;
-(char)_isUIKeyCommandEvent:(id)arg1 ;
-(void)periodSubstitutionWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)wouldHandleEvent:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)_handleUIKeyCommandEvent:(id)arg1 ;
-(void)tryHandleEvent_HasMarkedText_withDispatchCondition:(/*^block*/id)arg1 dispatchWork:(/*^block*/id)arg2 continuation:(/*^block*/id)arg3 ;
-(void)tryTSMProcessRawKeyEvent_orSubstitution:(OpaqueEventRefRef)arg1 dispatchCondition:(/*^block*/id)arg2 setupForDispatch:(/*^block*/id)arg3 furtherCondition:(/*^block*/id)arg4 doubleSpaceSubstitutionCondition:(/*^block*/id)arg5 doubleSpaceSubstitutionWork:(/*^block*/id)arg6 dispatchTSMWork:(/*^block*/id)arg7 continuation:(/*^block*/id)arg8 ;
-(void)tryPeriodSubstitution_initialDispatchWork:(/*^block*/id)arg1 dispatchSelRange:(/*^block*/id)arg2 attrStringDispatchWork:(/*^block*/id)arg3 validAttrString:(/*^block*/id)arg4 attrSubstringProposedRange:(/*^block*/id)arg5 attrSubstringDispatchWork:(/*^block*/id)arg6 validProposedSubstring:(/*^block*/id)arg7 stringFromNSSpellChecker:(/*^block*/id)arg8 insertSubstitutionWork:(/*^block*/id)arg9 continuation:(/*^block*/id)arg10 ;
-(void)doCommandBySelector:(SEL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)unmarkTextWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)validAttributesForMarkedText_RTI;
-(void)doCommandBySelector_RTI:(SEL)arg1 resultHandler:(/*^block*/id)arg2 ;
-(void)setTiTextInputTraits:(TITextInputTraits *)arg1 ;
-(void)_forceReSyncCurrentAllowedInputSources;
-(char)_isIOSMacClientNonTextEditing;
-(void)setKeyBindingManager:(id)arg1 ;
-(int)handleTSMEvent:(void*)arg1 ;
-(char)_handleEvent:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(NSArray *)keyboardInputSources;
-(void)setSelectedKeyboardInputSource:(NSString *)arg1 ;
-(void)doCommandBySelector:(SEL)arg1 completionHandlerWithResult:(/*^block*/id)arg2 ;
-(NSRange)tiSelectedTextRange;
-(void)setTiSelectedTextRange:(NSRange)arg1 ;
-(NSBridgedTextTouchBarController *)bridgedTextTouchBarController;
-(void)insertText_RTI:(id)arg1 replacementRange:(NSRange)arg2 ;
-(void)doCommandBySelector_RTI:(SEL)arg1 ;
-(void)setMarkedText_RTI:(id)arg1 selectedRange:(NSRange)arg2 replacementRange:(NSRange)arg3 ;
-(void)unmarkText_RTI;
-(NSRange)selectedRange_RTI;
-(NSRange)markedRange_RTI;
-(char)hasMarkedText_RTI;
-(id)attributedSubstringForProposedRange_RTI:(NSRange)arg1 actualRange:(NSRange*)arg2 ;
-(CGRect)firstRectForCharacterRange_RTI:(NSRange)arg1 actualRange:(NSRange*)arg2 ;
-(unsigned long long)characterIndexForPoint_RTI:(CGPoint)arg1 ;
-(id)attributedString_RTI;
-(double)fractionOfDistanceThroughGlyphForPoint_RTI:(CGPoint)arg1 ;
-(double)baselineDeltaForCharacterAtIndex_RTI:(unsigned long long)arg1 ;
-(char)drawsVerticallyForCharacterAtIndex_RTI:(unsigned long long)arg1 ;
-(void)flushRTIOperations;
-(id)annotatedString_RTI;
-(void)replaceCharactersInRange_RTI:(NSRange)arg1 withAnnotatedString:(id)arg2 replacementRange:(NSRange)arg3 ;
-(void)removeAnnotation_RTI:(id)arg1 range:(NSRange)arg2 ;
-(char)doCommandBySelectorWithResult:(SEL)arg1 ;
-(NSRange)rtiSelectedTextRange;
-(void)setRTIDocumentState:(id)arg1 ;
-(NSRange)_correctRTIRangeIfRequired:(NSRange)arg1 ;
-(void)updateFunctionRowItemState;
-(id)keyboardInputSourcePopoverTouchBar;
-(void)dismissKeyboardIMTouchBarItemViewController:(id)arg1 ;
-(id)characterPickerTouchBarItem;
-(void)setCharacterPickerTouchBarItem:(id)arg1 ;
-(void)presentCharacterPickerTouchBarItemViewController:(id)arg1 ;
-(void)dismissCharacterPickerTouchBarItemViewController;
-(char)isKeyboardInputSourceOverlayVisible;
-(void)presentKeyboardIMTouchBarItemViewController:(id)arg1 ;
-(void)dismissKeyboardIMTouchBarItemViewController;
-(void)presentPressAndHoldTouchBarItemViewController:(id)arg1 ;
-(void)dismissPressAndHoldTouchBarItemViewController;
-(void)presentTrackpadHandwritingTouchBarItemViewController:(id)arg1 ;
-(void)dismissTrackpadHandwritingTouchBarItemViewController;
-(char)hasActiveTextInputFunctionRowItem;
-(void)presentKeyboardIMFunctionRowItemViewController:(id)arg1 ;
-(void)dismissKeyboardIMFunctionRowItemViewController;
-(void)presentPressAndHoldFunctionRowItemViewController:(id)arg1 ;
-(void)dismissPressAndHoldFunctionRowItemViewController;
-(void)presentCharacterPickerFunctionRowItemViewController:(id)arg1 ;
-(void)dismissCharacterPickerFunctionRowItemViewController;
-(void)presentTrackpadHandwritingFunctionRowItemViewController:(id)arg1 ;
-(void)dismissTrackpadHandwritingFunctionRowItemViewController;
-(void)handleEvent:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)handleEventByInputMethod:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)handleEventByKeyboardLayout:(id)arg1 ;
-(id)rtiSession;
-(void)setRTISession:(id)arg1 ;
-(char)onlyAllowRomanInputSources;
-(char)tsmLimitsInputSources;
-(void)_setValue:(id)arg1 forTIProperty:(long long)arg2 ;
-(id)_valueForTIProperty:(long long)arg1 ;
@end

