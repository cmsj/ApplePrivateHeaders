/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSObject, TSTCellStyle, TSWPParagraphStyle, TSTConditionalStyleSet, TSTCellBorder, TSTCellSpec, TSKFormat, TSTImportWarningSet, TSULocale, TSDCommentStorage, NSDate, NSString, TSWPStorage, TSDFill, TSCEFormulaObject, TSTStockDetails;

@interface TSTCell : NSObject <NSCopying> {

	double _valueDouble;
	unsigned _valueID;
	NSObject* _valueObject;
	TSUDecimal _valueBigNumber;
	unsigned char _conditionalStyleAppliedRule;
	unsigned short _explicitFormatFlags;
	unsigned short _cellFlags;
	int _valueType;
	unsigned _cellFormatKind;
	unsigned _cellStyleID;
	unsigned _textStyleID;
	unsigned _conditionalStyleID;
	unsigned _formulaID;
	unsigned _controlCellSpecID;
	unsigned _numberFormatID;
	unsigned _currencyFormatID;
	unsigned _dateFormatID;
	unsigned _durationFormatID;
	unsigned _textFormatID;
	unsigned _booleanFormatID;
	unsigned _commentStorageID;
	unsigned _importWarningSetID;
	TSTCellStyle* _cellStyle;
	TSWPParagraphStyle* _textStyle;
	TSTConditionalStyleSet* _conditionalStyle;
	TSTCellBorder* _cellBorder;
	TSTCellSpec* _cellSpec;
	TSKFormat* _numberFormat;
	TSKFormat* _currencyFormat;
	TSKFormat* _dateFormat;
	TSKFormat* _durationFormat;
	TSKFormat* _textFormat;
	TSKFormat* _booleanFormat;
	TSTImportWarningSet* _importWarningSet;
	TSULocale* _locale;
	TSDCommentStorage* _commentStorage;

}

@property (assign,nonatomic) int valueType;                                            //@synthesize valueType=_valueType - In the implementation block
@property (nonatomic,readonly) unsigned cellFormatKind;                                //@synthesize cellFormatKind=_cellFormatKind - In the implementation block
@property (assign,nonatomic) unsigned stringID; 
@property (assign,nonatomic) unsigned formulaSyntaxErrorID; 
@property (assign,nonatomic) unsigned richTextID; 
@property (assign,nonatomic) unsigned cellStyleID;                                     //@synthesize cellStyleID=_cellStyleID - In the implementation block
@property (assign,nonatomic) unsigned textStyleID;                                     //@synthesize textStyleID=_textStyleID - In the implementation block
@property (assign,nonatomic) unsigned conditionalStyleID;                              //@synthesize conditionalStyleID=_conditionalStyleID - In the implementation block
@property (assign,nonatomic) unsigned formulaID;                                       //@synthesize formulaID=_formulaID - In the implementation block
@property (assign,nonatomic) unsigned controlCellSpecID;                               //@synthesize controlCellSpecID=_controlCellSpecID - In the implementation block
@property (assign,nonatomic) unsigned numberFormatID;                                  //@synthesize numberFormatID=_numberFormatID - In the implementation block
@property (assign,nonatomic) unsigned currencyFormatID;                                //@synthesize currencyFormatID=_currencyFormatID - In the implementation block
@property (assign,nonatomic) unsigned dateFormatID;                                    //@synthesize dateFormatID=_dateFormatID - In the implementation block
@property (assign,nonatomic) unsigned durationFormatID;                                //@synthesize durationFormatID=_durationFormatID - In the implementation block
@property (assign,nonatomic) unsigned textFormatID;                                    //@synthesize textFormatID=_textFormatID - In the implementation block
@property (assign,nonatomic) unsigned booleanFormatID;                                 //@synthesize booleanFormatID=_booleanFormatID - In the implementation block
@property (assign,nonatomic) unsigned commentStorageID;                                //@synthesize commentStorageID=_commentStorageID - In the implementation block
@property (assign,nonatomic) unsigned importWarningSetID;                              //@synthesize importWarningSetID=_importWarningSetID - In the implementation block
@property (nonatomic,readonly) char hasNumberFormat; 
@property (nonatomic,readonly) char hasCurrencyFormat; 
@property (nonatomic,readonly) char hasDateFormat; 
@property (nonatomic,readonly) char hasDurationFormat; 
@property (nonatomic,readonly) char hasTextFormat; 
@property (nonatomic,readonly) char hasBooleanFormat; 
@property (nonatomic,retain) TSULocale * locale;                                       //@synthesize locale=_locale - In the implementation block
@property (nonatomic,readonly) char isEmptyForDataStore; 
@property (nonatomic,readonly) char isEmpty; 
@property (assign,nonatomic) double numberDoubleValue; 
@property (assign,nonatomic) double currencyDoubleValue; 
@property (nonatomic,readonly) double underlyingDoubleValue; 
@property (assign,nonatomic) char boolValue; 
@property (assign,nonatomic) double durationTimeIntervalValue; 
@property (nonatomic,retain) NSDate * dateValue; 
@property (nonatomic,retain) NSString * stringValue; 
@property (nonatomic,retain) TSWPStorage * formulaSyntaxError; 
@property (assign,nonatomic) TSUDecimal numberDecimalValue; 
@property (assign,nonatomic) TSUDecimal currencyDecimalValue; 
@property (nonatomic,readonly) TSUDecimal underlyingDecimalValue; 
@property (nonatomic,retain) TSWPStorage * richTextValue; 
@property (nonatomic,readonly) char hasFormulaSyntaxError; 
@property (nonatomic,readonly) char hasRichText; 
@property (nonatomic,readonly) char mightBeInterestedInMigration; 
@property (nonatomic,readonly) NSString * formulaSyntaxErrorString; 
@property (nonatomic,readonly) NSString * formattedValue; 
@property (nonatomic,readonly) NSString * stringForEditing; 
@property (nonatomic,readonly) NSString * stringForUnderlyingValue; 
@property (nonatomic,readonly) TSWPStorage * richTextStorageForLayout; 
@property (nonatomic,readonly) char valueIsText; 
@property (nonatomic,readonly) char valueIsStringOrNumber; 
@property (nonatomic,readonly) char valueIsNumberOrTime; 
@property (nonatomic,readonly) char valueRepresentsDateWithoutTime; 
@property (nonatomic,readonly) char hasValueOrError; 
@property (nonatomic,readonly) char hasContentBreakingMergeFragment; 
@property (nonatomic,readonly) char dataIsReplaceable; 
@property (nonatomic,retain) TSTCellStyle * cellStyle;                                 //@synthesize cellStyle=_cellStyle - In the implementation block
@property (nonatomic,retain) TSWPParagraphStyle * textStyle;                           //@synthesize textStyle=_textStyle - In the implementation block
@property (nonatomic,retain) TSTConditionalStyleSet * conditionalStyle;                //@synthesize conditionalStyle=_conditionalStyle - In the implementation block
@property (assign,nonatomic) unsigned char conditionalStyleAppliedRule;                //@synthesize conditionalStyleAppliedRule=_conditionalStyleAppliedRule - In the implementation block
@property (nonatomic,retain) TSTCellBorder * cellBorder;                               //@synthesize cellBorder=_cellBorder - In the implementation block
@property (nonatomic,readonly) char hasCellStyle; 
@property (nonatomic,readonly) char hasTextStyle; 
@property (nonatomic,readonly) char hasConditionalStyle; 
@property (nonatomic,readonly) TSWPParagraphStyle * effectiveTextStyle; 
@property (nonatomic,readonly) int writingDirection; 
@property (nonatomic,readonly) TSDFill * cellFill; 
@property (nonatomic,readonly) unsigned interactionType; 
@property (nonatomic,retain) TSTCellSpec * cellSpec;                                   //@synthesize cellSpec=_cellSpec - In the implementation block
@property (nonatomic,retain) TSCEFormulaObject * formulaObject; 
@property (nonatomic,readonly) char hasCellSpec; 
@property (nonatomic,readonly) char hasFormula; 
@property (nonatomic,readonly) char hasStockFormulaForStockUI; 
@property (nonatomic,readonly) TSTStockDetails * stockDetails; 
@property (nonatomic,readonly) TSTCellSpec * cellSpecForDiff; 
@property (nonatomic,readonly) char hasFormulaAnyError; 
@property (nonatomic,readonly) char hasFormulaEvaluationError; 
@property (nonatomic,readonly) char hasControl; 
@property (nonatomic,readonly) unsigned long long popupChoiceIndex; 
@property (assign,nonatomic) unsigned short explicitFormatFlags;                       //@synthesize explicitFormatFlags=_explicitFormatFlags - In the implementation block
@property (nonatomic,readonly) unsigned formatType; 
@property (nonatomic,readonly) TSKFormat * currentFormat; 
@property (nonatomic,readonly) TSKFormat * numberFormat;                               //@synthesize numberFormat=_numberFormat - In the implementation block
@property (nonatomic,readonly) TSKFormat * currencyFormat;                             //@synthesize currencyFormat=_currencyFormat - In the implementation block
@property (nonatomic,readonly) TSKFormat * dateFormat;                                 //@synthesize dateFormat=_dateFormat - In the implementation block
@property (nonatomic,readonly) TSKFormat * durationFormat;                             //@synthesize durationFormat=_durationFormat - In the implementation block
@property (nonatomic,readonly) TSKFormat * textFormat;                                 //@synthesize textFormat=_textFormat - In the implementation block
@property (nonatomic,readonly) TSKFormat * booleanFormat;                              //@synthesize booleanFormat=_booleanFormat - In the implementation block
@property (nonatomic,readonly) char hasCurrentFormat; 
@property (nonatomic,readonly) char currentFormatIsExplicit; 
@property (nonatomic,readonly) char currentFormatIsExplicitForCalcEngine; 
@property (nonatomic,readonly) char currencyIsMostRecentlySet; 
@property (nonatomic,readonly) char currentFormatUsesAccountingStyle; 
@property (nonatomic,readonly) int currentFormatNegativeStyle; 
@property (nonatomic,readonly) char hasAnyFormats; 
@property (nonatomic,readonly) char isMostRecentlyExplicitPercent; 
@property (nonatomic,readonly) NSString * customFormatString; 
@property (nonatomic,readonly) char hasAnyCustomFormat; 
@property (nonatomic,readonly) char hasMismatchedFormatAndValue; 
@property (nonatomic,readonly) char hasAnyWarning; 
@property (nonatomic,readonly) char hasImportWarningSet; 
@property (nonatomic,retain) TSTImportWarningSet * importWarningSet;                   //@synthesize importWarningSet=_importWarningSet - In the implementation block
@property (assign,nonatomic) unsigned short cellFlags;                                 //@synthesize cellFlags=_cellFlags - In the implementation block
@property (nonatomic,retain) TSDCommentStorage * commentStorage;                       //@synthesize commentStorage=_commentStorage - In the implementation block
@property (nonatomic,readonly) char hasCommentStorage; 
+(char)mismatchBetweenValueType:(int)arg1 andFormatType:(unsigned)arg2 ;
+(id)stringForCellValueType:(int)arg1 ;
+(char)formatType:(unsigned)arg1 isSameCellFormatKindAs:(unsigned)arg2 ;
+(unsigned)p_cellFormatKindForValueType:(int)arg1 ;
+(char)formatType:(unsigned)arg1 isSameCellFormatKindAs:(unsigned)arg2 allowNumberCurrencyMismatch:(char)arg3 ;
+(char)p_mismatchBetweenValueType:(int)arg1 andCellFormatKind:(unsigned)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)description;
-(char)isEmpty;
-(char)boolValue;
-(NSString *)stringValue;
-(void)setLocale:(TSULocale *)arg1 ;
-(TSULocale *)locale;
-(NSDate *)dateValue;
-(TSKFormat *)dateFormat;
-(id)initWithLocale:(id)arg1 ;
-(void)clear;
-(void)setStringValue:(NSString *)arg1 ;
-(void)setDateValue:(NSDate *)arg1 ;
-(TSWPParagraphStyle *)textStyle;
-(void)setTextStyle:(TSWPParagraphStyle *)arg1 ;
-(unsigned)interactionType;
-(int)valueType;
-(void)setBoolValue:(char)arg1 ;
-(void)setValueType:(int)arg1 ;
-(TSKFormat *)currentFormat;
-(NSString *)formattedValue;
-(void)setCellStyle:(TSTCellStyle *)arg1 ;
-(TSTCellStyle *)cellStyle;
-(TSKFormat *)numberFormat;
-(unsigned)formatType;
-(int)writingDirection;
-(char)hasControl;
-(void)clearValue;
-(char)hasRichText;
-(void)inflateFromStorageRef:(TSTCellStorage*)arg1 dataStore:(id)arg2 ;
-(id)initWithStorageRef:(TSTCellStorage*)arg1 dataStore:(id)arg2 ;
-(TSCEFormulaObject *)formulaObject;
-(char)hasFormula;
-(TSKFormat *)currencyFormat;
-(char)currentFormatIsExplicit;
-(void)setCurrentFormat:(id)arg1 isExplicit:(char)arg2 ;
-(char)hasExplicitFormatOfType:(unsigned)arg1 allowMismatchedSpare:(char)arg2 ;
-(void)setFormat:(id)arg1 isExplicit:(char)arg2 ;
-(double)underlyingDoubleValue;
-(void)setNumberDoubleValue:(double)arg1 ;
-(void)setCurrencyDoubleValue:(double)arg1 ;
-(TSTCellSpec *)cellSpec;
-(void)setCellSpec:(TSTCellSpec *)arg1 ;
-(unsigned)formulaID;
-(TSKFormat *)booleanFormat;
-(TSKFormat *)durationFormat;
-(TSKFormat *)textFormat;
-(void)clearDataListIDs;
-(char)hasFormulaSyntaxError;
-(TSWPStorage *)formulaSyntaxError;
-(void)setFormulaSyntaxError:(TSWPStorage *)arg1 ;
-(TSWPStorage *)richTextValue;
-(void)setRichTextValue:(TSWPStorage *)arg1 ;
-(char)hasCommentStorage;
-(TSDCommentStorage *)commentStorage;
-(void)setCommentStorage:(TSDCommentStorage *)arg1 ;
-(void)setFormulaObject:(TSCEFormulaObject *)arg1 ;
-(char)hasConditionalStyle;
-(TSTConditionalStyleSet *)conditionalStyle;
-(void)setConditionalStyle:(TSTConditionalStyleSet *)arg1 ;
-(void)inflateFromStorageRef:(TSTCellStorage*)arg1 dataStore:(id)arg2 suppressingTransmutation:(char)arg3 ;
-(char)hasMismatchedFormatAndValue;
-(void)setDefaultFormatForValue;
-(void)clearFormatOfType:(unsigned)arg1 ;
-(void)processCustomFormatsWithBlock:(/*^block*/id)arg1 ;
-(char)removeControlCellSpec;
-(TSUDecimal)numberDecimalValue;
-(void)setNumberDecimalValue:(TSUDecimal)arg1 ;
-(TSUDecimal)currencyDecimalValue;
-(void)setCurrencyDecimalValue:(TSUDecimal)arg1 ;
-(char)validateAndRepair;
-(void)setCellBorder:(TSTCellBorder *)arg1 ;
-(char)isEmptyForDataStore;
-(TSTCellBorder *)cellBorder;
-(char)currentFormatIsExplicitForCalcEngine;
-(double)durationTimeIntervalValue;
-(unsigned char)conditionalStyleAppliedRule;
-(double)numberDoubleValue;
-(double)currencyDoubleValue;
-(void)bakeFormulaToValue;
-(unsigned)conditionalStyleID;
-(void)setConditionalStyleAppliedRule:(unsigned char)arg1 ;
-(void)updateCustomFormatFromPaste:(id)arg1 ;
-(char)hasFormulaEvaluationError;
-(void)adoptStylesheet:(id)arg1 withMapper:(id)arg2 supportsInlineAttachments:(char)arg3 ;
-(void)copyToCell:(id)arg1 ;
-(char)hasEqualContentToCell:(id)arg1 ;
-(char)hasAnyCustomFormat;
-(char)hasCellStyle;
-(char)hasTextStyle;
-(unsigned short)cellFlags;
-(void)setCellFlags:(unsigned short)arg1 ;
-(char)hasEqualContentToCell:(id)arg1 usingRichTextStyleComparisonBlock:(/*^block*/id)arg2 ;
-(TSWPParagraphStyle *)effectiveTextStyle;
-(char)currentFormatUsesAccountingStyle;
-(id)reorganizeValueForSorting;
-(void)copyJustStrokesToCell:(id)arg1 ;
-(char)hasValueOrError;
-(char)valueIsText;
-(id)cellByApplyingCellDiff:(id)arg1 toTable:(id)arg2 andUpdateInverse:(id)arg3 optionalConcurrentStylesheet:(id)arg4 ;
-(void)setDurationTimeIntervalValue:(double)arg1 ;
-(void)setRichTextValueWithoutPlaintextCollapse:(id)arg1 ;
-(void)suggestCellFormatKind:(unsigned)arg1 ;
-(unsigned)cellFormatKind;
-(unsigned short)explicitFormatFlags;
-(TSTStockDetails *)stockDetails;
-(char)hasNumberFormat;
-(char)hasCurrencyFormat;
-(char)hasDateFormat;
-(char)hasDurationFormat;
-(char)hasTextFormat;
-(char)hasBooleanFormat;
-(char)hasImportWarningSet;
-(unsigned)stringID;
-(unsigned)richTextID;
-(unsigned)cellStyleID;
-(unsigned)textStyleID;
-(unsigned)controlCellSpecID;
-(unsigned)formulaSyntaxErrorID;
-(unsigned)numberFormatID;
-(unsigned)currencyFormatID;
-(unsigned)dateFormatID;
-(unsigned)durationFormatID;
-(unsigned)textFormatID;
-(unsigned)booleanFormatID;
-(unsigned)commentStorageID;
-(unsigned)importWarningSetID;
-(void)setExplicitFormatFlags:(unsigned short)arg1 ;
-(void)setCurrencyDecimalValue:(TSUDecimal)arg1 roundToDoublePrecision:(char)arg2 ;
-(void)setNumberDecimalValue:(TSUDecimal)arg1 roundToDoublePrecision:(char)arg2 ;
-(void)setStringID:(unsigned)arg1 ;
-(void)setRichTextID:(unsigned)arg1 ;
-(void)setCellStyleID:(unsigned)arg1 ;
-(void)setTextStyleID:(unsigned)arg1 ;
-(void)setConditionalStyleID:(unsigned)arg1 ;
-(void)setFormulaID:(unsigned)arg1 ;
-(void)setControlCellSpecID:(unsigned)arg1 ;
-(void)setFormulaSyntaxErrorID:(unsigned)arg1 ;
-(void)setNumberFormatID:(unsigned)arg1 ;
-(void)setCurrencyFormatID:(unsigned)arg1 ;
-(void)setDateFormatID:(unsigned)arg1 ;
-(void)setDurationFormatID:(unsigned)arg1 ;
-(void)setTextFormatID:(unsigned)arg1 ;
-(void)setBooleanFormatID:(unsigned)arg1 ;
-(void)setCommentStorageID:(unsigned)arg1 ;
-(void)setImportWarningSetID:(unsigned)arg1 ;
-(char)hasFormulaAnyError;
-(char)hasAnyFormats;
-(unsigned)formatIDForStorageFlag:(unsigned)arg1 ;
-(TSTImportWarningSet *)importWarningSet;
-(TSWPStorage *)richTextStorageForLayout;
-(char)valueIsNumberOrTime;
-(void)shallowCopyToCell:(id)arg1 ;
-(void)setProvidedValueTypeBeforeUpgrade;
-(id)cellValueTypeDescription;
-(void)setImportWarningSet:(TSTImportWarningSet *)arg1 ;
-(char)hasCellSpec;
-(char)p_currentFormatIsEqualToOtherCellFormat:(id)arg1 ;
-(void)setStringValue:(id)arg1 clearingID:(char)arg2 shouldWrap:(char)arg3 ;
-(void)setStringValue:(id)arg1 clearingID:(char)arg2 ;
-(void)setFormulaSyntaxError:(id)arg1 clearingID:(char)arg2 ;
-(void)setRichTextValue:(id)arg1 clearingID:(char)arg2 convertToPlaintextIfPossible:(char)arg3 ;
-(NSString *)stringForEditing;
-(void)setCellStyle:(id)arg1 clearingID:(char)arg2 ;
-(void)setTextStyle:(id)arg1 clearingID:(char)arg2 ;
-(void)setConditionalStyle:(id)arg1 clearingID:(char)arg2 ;
-(TSDFill *)cellFill;
-(void)p_setFormatFlags:(unsigned short)arg1 explicit:(char)arg2 ;
-(void)setCellSpec:(id)arg1 clearingID:(char)arg2 ;
-(void)applyPopupChoiceIndex:(unsigned long long)arg1 ;
-(void)setFormat:(id)arg1 shouldSetExplFlags:(char)arg2 isExplicit:(char)arg3 makeCurrent:(char)arg4 clearingID:(char)arg5 ;
-(void)setCommentStorage:(id)arg1 clearingID:(char)arg2 ;
-(void)setImportWarningSet:(id)arg1 clearingID:(char)arg2 ;
-(id)cellValueDescription;
-(NSString *)formulaSyntaxErrorString;
-(NSString *)stringForUnderlyingValue;
-(char)valueIsStringOrNumber;
-(char)dataIsReplaceable;
-(char)hasEqualValueToCell:(id)arg1 ;
-(void)copyJustStyleAndStrokesToCell:(id)arg1 ;
-(void)clearStrokes;
-(id)cellFillComparedToDefault:(id)arg1 suppressCS:(char)arg2 isDefault:(char*)arg3 ;
-(TSTCellSpec *)cellSpecForDiff;
-(void)setCurrentFormat:(id)arg1 flags:(unsigned short)arg2 ;
-(void)p_setFormatForFormulaResult:(id)arg1 propagation:(char)arg2 ;
-(void)clearAllFormats;
-(void)copyAllFormatsToCell:(id)arg1 ;
-(char)hasCurrentFormat;
-(char)hasFormatOfType:(unsigned)arg1 allowMismatchedSpare:(char)arg2 ;
-(NSString *)customFormatString;
-(int)currentFormatNegativeStyle;
-(char)isMostRecentlyExplicitPercent;
-(void)copyJustValueToCell:(id)arg1 ;
-(id)formatOfCellFormatKind:(unsigned)arg1 isExplicit:(char*)arg2 ;
-(char)currencyIsMostRecentlySet;
-(unsigned long long)popupChoiceIndex;
-(void)applyFormulaResult:(const TSCEValue*)arg1 context:(id)arg2 hasWarnings:(char)arg3 outWriteDidBeginOrEndWithTextCell:(char*)arg4 propagateCheckboxesAndRatings:(char)arg5 ;
-(id)formatOfType:(unsigned)arg1 allowMismatchedSpare:(char)arg2 ;
-(void)p_setFormatExplicit:(char)arg1 fromCellFormatKind:(unsigned)arg2 setMostRecentlySet:(char)arg3 ;
-(void)copyValueAndFormatToCell:(id)arg1 ;
-(void)applyFormulaResult:(const TSCEValue*)arg1 ;
-(void)setCurrencyOrNumberDoubleValue:(double)arg1 ;
-(char)coerceToFormatType:(unsigned)arg1 ;
-(char)coerceToBaseFormat:(id)arg1 ;
-(char)coerceTextCellToBestNumberFormatUsingLimitedParsing:(char)arg1 ;
-(char)coerceCellToFormatTypeUsingSpares:(unsigned)arg1 ;
-(void)replaceContentWithParsableString:(id)arg1 tableInfo:(id)arg2 cellID:(TSUCellCoord)arg3 flags:(unsigned long long)arg4 outControlWasRemoved:(char*)arg5 ;
-(char)valueRepresentsDateWithoutTime;
-(void)setFormulaObject:(id)arg1 clearingID:(char)arg2 ;
-(id)p_formatOfCellFormatKind:(unsigned)arg1 create:(char)arg2 created:(char*)arg3 ;
-(char)_validateCustomFormatWrapper:(id)arg1 ;
-(char)p_formatTypeIsANumberFormatTypeForMostRecentlySet:(unsigned)arg1 ;
-(void)p_clearFormatOfCellFormatKind:(unsigned)arg1 ;
-(char)p_clearIfImplicitAndNotCurrentForKind:(unsigned)arg1 format:(id)arg2 explicitFormatMask:(unsigned short)arg3 ;
-(void)p_TSTCellSetMostRecentlySetNumberFormatWithCurrencyFlag:(char)arg1 ;
-(char)p_hasExplicitFormatOfCellFormatKind:(unsigned)arg1 ;
-(TSUDecimal)underlyingDecimalValue;
-(void)setCurrencyOrNumberDecimalValue:(const TSUDecimal*)arg1 ;
-(char)mightBeInterestedInMigration;
-(char)hasContentBreakingMergeFragment;
-(char)hasStockFormulaForStockUI;
-(void)setCurrentFormat:(id)arg1 isExplicit:(char)arg2 forExcel:(char)arg3 ;
-(id)candidateFormatForSliderStepperControlWithIsCurrent:(char*)arg1 ;
-(void)setFormatID:(unsigned)arg1 forStorageFlag:(unsigned)arg2 ;
-(id)formatForStorageFlag:(unsigned)arg1 ;
-(char)hasAnyWarning;
@end

