/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCharts.framework/Versions/A/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCharts/TSCharts-Structs.h>
@interface TSCH3DExtrusionDoubleBevelGenerator : NSObject {

	vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>>* _inputSpinePoints;
	vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>>* _spinePoints;
	vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>>* _scaleValues;
	float _bevelHeight;
	long long _bevelSlices;
	char _enableBevelEdges;

}

@property (assign,nonatomic) float bevelHeight;                                 //@synthesize bevelHeight=_bevelHeight - In the implementation block
@property (assign,nonatomic) long long bevelSlices;                             //@synthesize bevelSlices=_bevelSlices - In the implementation block
@property (assign,nonatomic) char enableBevelEdges;                             //@synthesize enableBevelEdges=_enableBevelEdges - In the implementation block
@property (nonatomic,readonly) long long bottomNonBevelStartIndex; 
@property (nonatomic,readonly) long long bottomBevelStartIndex; 
+(id)generator;
+(id)namedBevelInterpolationShaderFunction;
-(id)init;
-(void)generate;
-(long long)bottomNonBevelStartIndex;
-(vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>>*)inputSpinePoints;
-(void)setBevelHeight:(float)arg1 ;
-(void)setBevelSlices:(long long)arg1 ;
-(void)setEnableBevelEdges:(char)arg1 ;
-(const vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>>*)spinePoints;
-(const vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>>*)scaleValues;
-(void)createSpinePointArray;
-(void)generateTop;
-(void)generateBottom;
-(void)adjustBottomOffset;
-(void)resetAllScales;
-(void)adjustTopScales;
-(void)adjustBottomScales;
-(long long)bottomSlices;
-(long long)topSlices;
-(long long)topBevelStartIndex;
-(float)spineUValueAtIndex:(long long)arg1 ;
-(long long)bottomBevelStartIndex;
-(tvec3<float>)bottomDirection;
-(float)scaleUValueAtIndex:(long long)arg1 ;
-(float)bevelHeight;
-(long long)bevelSlices;
-(char)enableBevelEdges;
@end

