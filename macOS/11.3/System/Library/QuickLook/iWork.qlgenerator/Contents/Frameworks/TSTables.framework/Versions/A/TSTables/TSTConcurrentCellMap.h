/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSPersistence/TSPObject.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <TSTables/TSTCellMapChangeDescriptorDelivering.h>

@class NSMutableArray;

@interface TSTConcurrentCellMap : TSPObject <NSCopying, TSTCellMapChangeDescriptorDelivering> {

	char _uidBased;
	char _mayModifyFormulasInCells;
	char _mayModifyValuesReferencedByFormulas;
	char _applyingToTable;
	NSMutableArray* _mergeActions;
	NSMutableArray* _cellLists;
	NSMutableArray* _inverseMergeActions;
	TSKUIDStructVectorTemplate<TSKUIDStruct>* _cachedRowUIDs;
	TSKUIDStructVectorTemplate<TSKUIDStruct>* _cachedColumnUIDs;

}

@property (assign,getter=isUIDBased,nonatomic) char uidBased;                                         //@synthesize uidBased=_uidBased - In the implementation block
@property (nonatomic,retain) NSMutableArray * cellLists;                                              //@synthesize cellLists=_cellLists - In the implementation block
@property (nonatomic,retain) NSMutableArray * mergeActions;                                           //@synthesize mergeActions=_mergeActions - In the implementation block
@property (nonatomic,retain) NSMutableArray * inverseMergeActions;                                    //@synthesize inverseMergeActions=_inverseMergeActions - In the implementation block
@property (assign,nonatomic) TSKUIDStructVectorTemplate<TSKUIDStruct>* cachedRowUIDs;                 //@synthesize cachedRowUIDs=_cachedRowUIDs - In the implementation block
@property (assign,nonatomic) TSKUIDStructVectorTemplate<TSKUIDStruct>* cachedColumnUIDs;              //@synthesize cachedColumnUIDs=_cachedColumnUIDs - In the implementation block
@property (assign,nonatomic) char applyingToTable;                                                    //@synthesize applyingToTable=_applyingToTable - In the implementation block
@property (assign,nonatomic) char mayModifyFormulasInCells;                                           //@synthesize mayModifyFormulasInCells=_mayModifyFormulasInCells - In the implementation block
@property (assign,nonatomic) char mayModifyValuesReferencedByFormulas;                                //@synthesize mayModifyValuesReferencedByFormulas=_mayModifyValuesReferencedByFormulas - In the implementation block
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)initWithContext:(id)arg1 ;
-(unsigned long long)cellCount;
-(char)mayModifyFormulasInCells;
-(char)mayModifyValuesReferencedByFormulas;
-(void)setMayModifyValuesReferencedByFormulas:(char)arg1 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(id)initWithContext:(id)arg1 uidBased:(char)arg2 ;
-(id)changeDescriptorsForTable:(id)arg1 ;
-(void)clearDataListIDs;
-(void)appendCellLists:(id)arg1 ;
-(char)hasCells;
-(void)convertToUuidBasedCellMapUsingTableInfo:(id)arg1 pruneCategorizedCells:(char)arg2 ;
-(void)willApplyToTable:(id)arg1 ;
-(char)containsCellBorderChanges;
-(char)isUIDBased;
-(void)accumulateCurrentCellsConcurrentlyUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateCellsAddedAndRemovedOfType:(long long)arg1 withOptions:(unsigned long long)arg2 usingBlock:(/*^block*/id)arg3 ;
-(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)columnUIDs;
-(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)rowUIDs;
-(void)addMergeAction:(id)arg1 ;
-(char)containsMergeChanges;
-(void)p_cacheRowColumnUIDs;
-(id)cellRegionWithTableInfo:(id)arg1 ;
-(NSMutableArray *)mergeActions;
-(vector<TSKUIDStructTract, std::__1::allocator<TSKUIDStructTract>>*)cellUIDRanges;
-(vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>>*)viewCellRects;
-(void)p_enumerateNewAndOldCellsSeriallyUsingBlock:(/*^block*/id)arg1 ;
-(void)p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:(/*^block*/id)arg1 ;
-(void)p_enumerateCellsAddedAndRemovedForFormatsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(NSMutableArray *)cellLists;
-(void)setCellLists:(NSMutableArray *)arg1 ;
-(void)setUidBased:(char)arg1 ;
-(void)setMergeActions:(NSMutableArray *)arg1 ;
-(char)containsCellChanges;
-(char)hasMultipleCells;
-(void)appendCellList:(id)arg1 ;
-(id)affectedBaseColumnAndRowIndexes;
-(id)cellRegionWithTableInfo:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(void)enumerateSeriallyUsingBlock:(/*^block*/id)arg1 ;
-(void)gatherRowState:(/*^block*/id)arg1 ;
-(void)enumerateRowsOfCellsConcurrentlyUsingBlock:(/*^block*/id)arg1 ;
-(void)updateDataListsConcurrentlyUsingCommentStorageBlock:(/*^block*/id)arg1 conditionalStyleSetBlock:(/*^block*/id)arg2 controlCellSpecBlock:(/*^block*/id)arg3 formulaBlock:(/*^block*/id)arg4 formulaErrorBlock:(/*^block*/id)arg5 importWarningSetBlock:(/*^block*/id)arg6 richTextBlock:(/*^block*/id)arg7 stringBlock:(/*^block*/id)arg8 styleBlock:(/*^block*/id)arg9 customFormatBlock:(/*^block*/id)arg10 formatBlock:(/*^block*/id)arg11 preBNCBlock:(/*^block*/id)arg12 ;
-(void)enumerateColumnCellCountDiffUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateRowCellCountDiffUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateCustomFormatsBeingAddedUsingReplacementBlock:(/*^block*/id)arg1 ;
-(void)convertToInverseCellMap;
-(void)addMergeActions:(id)arg1 ;
-(void)pushInverseMergeAction:(id)arg1 ;
-(void)clearMerges;
-(void)setMayModifyFormulasInCells:(char)arg1 ;
-(NSMutableArray *)inverseMergeActions;
-(void)setInverseMergeActions:(NSMutableArray *)arg1 ;
-(TSKUIDStructVectorTemplate<TSKUIDStruct>*)cachedRowUIDs;
-(void)setCachedRowUIDs:(TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg1 ;
-(TSKUIDStructVectorTemplate<TSKUIDStruct>*)cachedColumnUIDs;
-(void)setCachedColumnUIDs:(TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg1 ;
-(char)applyingToTable;
-(void)setApplyingToTable:(char)arg1 ;
@end

