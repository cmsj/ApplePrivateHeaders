/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/NumbersQuicklook.framework/Versions/A/NumbersQuicklook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NumbersQuicklook/NumbersQuicklook-Structs.h>
#import <TSCharts/TSCHChartMediator.h>
#import <libobjc.A.dylib/TSCECalculationEngineRegistration.h>
#import <libobjc.A.dylib/TSCEFormulaOwning.h>

@class TNChartFormulaStorage, TNMutableChartFormulaStorage, NSCondition, TSUIntToIntDictionary, NSDictionary, TSCECalculationEngine, NSString;

@interface TNChartMediator : TSCHChartMediator <TSCECalculationEngineRegistration, TSCEFormulaOwning> {

	TSKUIDStruct _entityUID;
	TNChartFormulaStorage* _formulaStorage;
	TNChartFormulaStorage* _cleanFormulaStorage;
	unordered_set<TSUCellCoord, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<TSUCellCoord>>* _formulasToRecalculate;
	int _scatterFormat;
	char _isRegisteredWithCalcEngine;
	char _isEditing;
	char _editingHasIsPhantomOverride;
	char _editingIsPhantomOverride;
	TNChartFormulaStorage* _editingStorageOverride;
	TNMutableChartFormulaStorage* _editingAccumulatedFormulas;
	TNMutableChartFormulaStorage* _editingActiveFormulas;
	NSCondition* _importUpgradeCondition;
	char _hasBlittedSinceConditionVarSet;
	char _shouldFixAreaFormula;
	TSUIntToIntDictionary* _formulaIndexToGridIndex;
	NSDictionary* _tableUidToHeaderRowRangesInPrecedents;
	char _shouldResetFormulas;

}

@property (nonatomic,readonly) TNChartFormulaStorage * formulaStorage; 
@property (retain) TNChartFormulaStorage * rawFormulaStorage;                          //@synthesize formulaStorage=_formulaStorage - In the implementation block
@property (nonatomic,readonly) TSKUIDStruct entityUID;                                 //@synthesize entityUID=_entityUID - In the implementation block
@property (nonatomic,readonly) int scatterFormat; 
@property (nonatomic,readonly) TSCECalculationEngine * calculationEngine; 
@property (nonatomic,readonly) int direction; 
@property (nonatomic,readonly) char labelFormulasAreAllStatic; 
@property (nonatomic,readonly) char seriesLabelFormulasAreAllStatic; 
@property (nonatomic,readonly) char categoryLabelFormulasAreAllStatic; 
@property (assign,nonatomic) char isEditing;                                           //@synthesize isEditing=_isEditing - In the implementation block
@property (nonatomic,readonly) char hasBlittedSinceConditionVarSet;                    //@synthesize hasBlittedSinceConditionVarSet=_hasBlittedSinceConditionVarSet - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)propertiesThatInvalidateMediator;
+(id)defaultErrorBarFormulaWrapper;
-(id)copyWithZone:(NSZone*)arg1 ;
-(int)direction;
-(char)isEditing;
-(char)isPhantom;
-(TSKUIDStruct)entityUID;
-(void)setIsEditing:(char)arg1 ;
-(long long)evaluationMode;
-(void)willBeRemovedFromDocumentRoot:(id)arg1 ;
-(void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2 ;
-(void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2 ;
-(TSCECalculationEngine *)calculationEngine;
-(void)saveToArchive:(ChartMediatorArchive*)arg1 archiver:(id)arg2 ;
-(id)initFromArchive:(const ChartMediatorArchive*)arg1 unarchiver:(id)arg2 ;
-(void)registerWithCalcEngineForDocumentLoad:(id)arg1 ;
-(void)unregisterFromCalcEngine:(id)arg1 ;
-(id)formulaOwner;
-(TSKUIDStruct)formulaOwnerUID;
-(id)objectToArchiveInDependencyTracker;
-(char)registerLast;
-(id)initWithChartInfo:(id)arg1 ;
-(id)formulaStorageFromTable:(id)arg1 selection:(id)arg2 direction:(int)arg3 ;
-(id)initWithChartInfo:(id)arg1 withTable:(id)arg2 selection:(id)arg3 direction:(int)arg4 ;
-(TNChartFormulaStorage *)formulaStorage;
-(char)labelFormulasAreAllStaticInFormulaStorage:(id)arg1 ;
-(int)scatterFormat;
-(id)formulaStorageFromCatTable:(id)arg1 selection:(id)arg2 direction:(int)arg3 ;
-(id)p_untitledLabelWithIndex:(unsigned long long)arg1 ;
-(void)p_copyValuesIntoToChartModel:(id)arg1 formulaMap:(id)arg2 ;
-(void)synchronizeModelFromFormulaStorage;
-(id)labelFormulasForType:(unsigned long long)arg1 ;
-(id)commandToChangeLabelFormulas:(id)arg1 forType:(unsigned long long)arg2 modelUpdateDataType:(int)arg3 ;
-(unsigned long long)formulaTypeFromDataType:(int)arg1 ;
-(id)p_tstFormulaFromForumulaWrapper:(id)arg1 ;
-(unsigned long long)formulaIndexForSeriesDimension:(id)arg1 ;
-(void)p_removeDeletedFormulas:(id)arg1 ;
-(void)repairMissingSeriesLabelsInMap:(id)arg1 ;
-(void)repairMissingCategoryLabelsInMap:(id)arg1 ;
-(void)p_unregisterAllFormulaeFromCalcEngine:(id)arg1 ;
-(void)p_registerFormulaeWithCalcEngine:(id)arg1 ;
-(void)setFormulaStorage:(id)arg1 doRegistration:(char)arg2 ;
-(void)synchronizeModelFromFormulaStorage:(id)arg1 ;
-(unsigned long long)p_formulaComponentsInMap:(id)arg1 ofType:(unsigned long long)arg2 ;
-(void)resetFormulasForCellRefs:(const TSCECellRefSet*)arg1 calcEngine:(id)arg2 ;
-(TNChartFormulaStorage *)rawFormulaStorage;
-(id)referencedEntities;
-(TSKUIDStruct)ownerUID;
-(TSCERangeRef)p_headerRowRangeRefForTableInfo:(id)arg1 ;
-(char)p_didHeaderRowRangesChangeForCalcEngine:(id)arg1 ;
-(void)p_signalImportUpgradeCondition;
-(void)clearFormulasToRecalculate;
-(id)hubFormulaPrecedentsWithCalcEngine:(id)arg1 hostOwnerUID:(const TSKUIDStruct*)arg2 ;
-(void)p_registerAreaFormulaForMap:(id)arg1 withCalcEngine:(id)arg2 ;
-(void)p_registerHubFormulaWithCalcEngine:(id)arg1 ;
-(char)p_tabularCategoryLabelsAppearRegularInMap:(id)arg1 ;
-(char)interestedInRewrite:(id)arg1 ;
-(void)updateForTableIDHistoryWithCalcEngine:(id)arg1 ;
-(void)p_reregister:(char)arg1 withCalculationEngine:(id)arg2 ;
-(id)p_commandToSetSeriesNameFormulaWrapper:(id)arg1 seriesIndex:(unsigned long long)arg2 ;
-(char)p_isScatterOrBubble;
-(unsigned long long)labelIndexForSeriesNameSeriesIndex:(unsigned long long)arg1 ;
-(id)p_formulaWrapperFromTSTFormula:(id)arg1 ;
-(unsigned long long)p_formulaComponents:(id)arg1 ;
-(vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>>*)expandSingleRangeForLabels:(const TSCERangeRef*)arg1 formulaType:(unsigned long long)arg2 ;
-(id)p_newStaticNameForCategoryAvoidingExistingNames:(id)arg1 runningCount:(unsigned long long*)arg2 ;
-(char)p_labelsAreStaticInMap:(id)arg1 ofType:(unsigned long long)arg2 ;
-(char)p_tableHasBaseRange:(TSCERangeRef)arg1 withCalcEngine:(id)arg2 ;
-(void)p_disconnectLabelsInMap:(id)arg1 ofType:(unsigned long long)arg2 ;
-(unsigned long long)p_numberOfLabelsFromExpandedGeometricRangeRefsWithFormulas:(id)arg1 formulaType:(unsigned long long)arg2 ;
-(void)p_repairMissingTabularCategoryLabelsIrregularInMap:(id)arg1 ;
-(void)p_repairMissingStaticCategoryLabelsInMap:(id)arg1 ;
-(void)p_repairCategorizedCategoryLabelsInMap:(id)arg1 ;
-(void)p_promoteSpanningCategorizedCategoryLabelsInMap:(id)arg1 ;
-(void)p_repairMissingTabularCategoryLabelsRegularInMap:(id)arg1 ;
-(void)p_repairMissingCategoryLabelsInMap:(id)arg1 ;
-(void)repairMissingCategoryLabelsInMap:(id)arg1 ignoringNonVisibleLabels:(char)arg2 ;
-(vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>>*)p_expandSingleRangeForLabels:(const TSCERangeRef*)arg1 iterateOverRowsNotColumns:(char)arg2 ;
-(void)setFormulaStorage:(TNChartFormulaStorage *)arg1 ;
-(unsigned short)ownerKind;
-(id)linkedResolver;
-(void)writeResultsForCalcEngine:(id)arg1 ;
-(void)invalidateForCalcEngine:(id)arg1 ;
-(TSCERecalculationState)evaluateFormulaAt:(TSUCellCoord)arg1 withCalcEngine:(id)arg2 recalcOptions:(TSCERecalculationState)arg3 ;
-(TSCERecalculationState)multiEvaluateFormulasAt:(const TSCECellCoordSet*)arg1 withCalcEngine:(id)arg2 recalcOptions:(TSCERecalculationState)arg3 ;
-(void)setFormulaOwnerUID:(const TSKUIDStruct*)arg1 ;
-(id)ownerUIDMapper;
-(id)initWithChartInfo:(id)arg1 withTable:(id)arg2 direction:(int)arg3 ;
-(char)labelFormulasAreAllStatic;
-(char)seriesLabelFormulasAreAllStatic;
-(char)categoryLabelFormulasAreAllStatic;
-(void)pauseCalculationEngine;
-(void)resumeCalculationEngine;
-(void)setEditingIsPhantomOverride:(char)arg1 ;
-(void)clearEditingIsPhantomOverride;
-(void)setEditingStorageOverride:(id)arg1 ;
-(void)invalidateAndSynchronizeMediator;
-(id)commandToSetChartGridDirection:(int)arg1 documentRoot:(id)arg2 ;
-(id)p_chartFormulaStorageForEditingOverride;
-(id)seriesDimensionForFormulaIndex:(unsigned long long)arg1 ;
-(id)categoryLabelFormulas;
-(id)commandToChangeCategoryLabelFormulas:(id)arg1 ;
-(id)errorBarCustomFormulaForSeriesIndex:(unsigned long long)arg1 dataType:(int)arg2 ;
-(id)commandToSetErrorBarCustomFormula:(id)arg1 seriesIndex:(unsigned long long)arg2 dataType:(int)arg3 ;
-(id)commandToSetSeriesDataFormula:(id)arg1 seriesDimension:(id)arg2 ;
-(id)seriesDataFormulaForSeriesDimension:(id)arg1 ;
-(void)p_hackSetCalcEngineLegacyGlobalID;
-(char)hasCategoryReferences;
-(char)hasTractReference;
-(id)untitledLabelOfType:(unsigned long long)arg1 formulaMap:(id)arg2 existingLabels:(id)arg3 runningIndex:(unsigned long long*)arg4 ;
-(void)p_detectAndRepairInsertedCategoryConditionFromPreviousState:(id)arg1 andEditingState:(id)arg2 rewriteSpec:(id)arg3 ;
-(void)p_detectAndRepairInsertedSeriesConditionFromPreviousState:(id)arg1 andEditingState:(id)arg2 rewriteSpec:(id)arg3 ;
-(char)repairBadRefsInFormulas:(id)arg1 ;
-(void)prepareRewriteSpec:(id)arg1 withPreCellRefs:(const TSCECellRefSet*)arg2 calcEngine:(id)arg3 ;
-(void)amendRewriteSpec:(id)arg1 withPostCellRefs:(const TSCECellRefSet*)arg2 calcEngine:(id)arg3 ;
-(void)copyValuesIntoChartModelOutOfBandUsingCalcEngine:(id)arg1 formulaMap:(id)arg2 ;
-(void)setImportUpgradeCondition:(id)arg1 ;
-(id)commandSetSeriesName:(id)arg1 forSeriesIndex:(unsigned long long)arg2 ;
-(id)seriesNameFormulaForSeriesIndex:(unsigned long long)arg1 ;
-(id)commandToSetSeriesNameFormula:(id)arg1 seriesIndex:(unsigned long long)arg2 ;
-(id)commandSetCategoryName:(id)arg1 forCategoryIndex:(unsigned long long)arg2 ;
-(id)commandToSetNewSeriesIndex:(unsigned long long)arg1 forSeriesIndex:(unsigned long long)arg2 ;
-(void)p_transposeSeriesAndCategoryLabelsInMap:(id)arg1 ;
-(vector<TSCERangeRef, std::__1::allocator<TSCERangeRef>>*)expandSingleTractForProposedCategoryLabels:(id)arg1 byRow:(char)arg2 ;
-(char)p_tableHasBaseCell:(TSCECellRef)arg1 withCalcEngine:(id)arg2 ;
-(id)dataFormulas;
-(int)formulasDirection;
-(id)rowFormulas;
-(id)columnFormulas;
-(id)customPosFormulas;
-(id)customNegFormulas;
-(id)customPosScatterXFormulas;
-(id)customNegScatterXFormulas;
-(void)localizeFormulaLiteralsWithTemplateBundle:(id)arg1 locale:(id)arg2 ;
-(char)hasBlittedSinceConditionVarSet;
-(void)setRawFormulaStorage:(TNChartFormulaStorage *)arg1 ;
-(id)nonDefaultDataFormatterForSeries:(id)arg1 index:(unsigned long long)arg2 axisType:(int)arg3 documentRoot:(id)arg4 ;
-(id)dataFormatterFromFormatStruct:(SCD_Struct_TN24)arg1 in:(id)arg2 ;
-(id)dataFormatterForAxis:(id)arg1 documentRoot:(id)arg2 ;
-(id)dataFormatterForSeries:(id)arg1 index:(unsigned long long)arg2 axisType:(int)arg3 documentRoot:(id)arg4 ;
@end

