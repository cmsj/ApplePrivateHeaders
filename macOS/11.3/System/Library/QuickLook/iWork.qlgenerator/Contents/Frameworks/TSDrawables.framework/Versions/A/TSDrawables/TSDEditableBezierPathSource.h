/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSDPathSource.h>
#import <TSDrawables/TSDRealignablePathSource.h>
#import <TSDrawables/TSDMixing.h>

@class NSArray, TSDBezierNode;

@interface TSDEditableBezierPathSource : TSDPathSource <TSDRealignablePathSource, TSDMixing> {

	NSArray* mSubpaths;
	unsigned long long mActiveSubpath;
	char mHasLockedFlipTransform;
	CGAffineTransform mLockedFlipTransform;

}

@property (nonatomic,copy) NSArray * subpaths; 
@property (nonatomic,copy) NSArray * nodes; 
@property (nonatomic,retain) NSArray * nodeTypes; 
@property (nonatomic,readonly) TSDBezierNode * firstNode; 
@property (nonatomic,readonly) TSDBezierNode * lastNode; 
@property (assign,getter=isClosed,nonatomic) char closed; 
@property (nonatomic,readonly) char isOpen; 
@property (nonatomic,readonly) char closeIfEndpointsAreEqual; 
@property (nonatomic,readonly) char hasSelectedNode; 
@property (nonatomic,readonly) char allNodesSelected; 
@property (nonatomic,readonly) char canDeleteSelectedNodes; 
@property (nonatomic,readonly) char deletingSelectedNodesWillDeleteShape; 
@property (nonatomic,readonly) CGRect nodeBounds; 
@property (nonatomic,readonly) char isCompound; 
@property (nonatomic,readonly) const CGPathRef subpathForSelection; 
@property (assign,nonatomic) unsigned long long activeSubpath; 
@property (nonatomic,readonly) const CGPathRef pathWithoutFlips; 
+(id)editableBezierPathSourceWithPathSource:(id)arg1 ;
+(id)editableBezierPathSourceWithBezierPath:(id)arg1 ;
+(id)editableBezierPathSource;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(NSArray *)subpaths;
-(char)isOpen;
-(void)transformUsingAffineTransform:(CGAffineTransform)arg1 ;
-(void)lineToPoint:(CGPoint)arg1 ;
-(void)moveToPoint:(CGPoint)arg1 ;
-(void)closePath;
-(void)curveToPoint:(CGPoint)arg1 controlPoint1:(CGPoint)arg2 controlPoint2:(CGPoint)arg3 ;
-(char)isClosed;
-(char)isRectangular;
-(void)setClosed:(char)arg1 ;
-(NSArray *)nodes;
-(void)setNodes:(NSArray *)arg1 ;
-(CGSize)naturalSize;
-(void)setNaturalSize:(CGSize)arg1 ;
-(void)removeNode:(id)arg1 ;
-(void)addNode:(id)arg1 ;
-(TSDBezierNode *)firstNode;
-(char)isCircular;
-(id)initWithArchive:(const PathSourceArchive*)arg1 ;
-(void)saveToArchive:(PathSourceArchive*)arg1 ;
-(TSDBezierNode *)lastNode;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(id)bezierPathWithoutFlips;
-(CGAffineTransform)pathFlipTransform;
-(const CGPathRef)pathWithoutFlips;
-(void)alignToOrigin;
-(char)isCompound;
-(void)setBezierPath:(id)arg1 ;
-(id)nodePriorToNode:(id)arg1 ;
-(id)nodeAfterNode:(id)arg1 ;
-(void)removeLastNode;
-(void)reverseDirection;
-(void)offsetSelectedNodesByDelta:(CGPoint)arg1 ;
-(void)offsetSelectedEdgesByDelta:(CGPoint)arg1 ;
-(char)allNodesSelected;
-(char)hasSelectedNode;
-(char)canDeleteSelectedNodes;
-(void)deleteSelectedNodes;
-(void)selectAllNodes;
-(void)deselectAllNodes;
-(id)bezierNodeUnderPoint:(CGPoint)arg1 withTransform:(CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long*)arg4 ;
-(CGRect)nodeBounds;
-(void)sharpenAllNodes;
-(void)smoothNode:(id)arg1 ;
-(char)closeIfEndpointsAreEqual;
-(void)convertToHobby;
-(void)setSubpaths:(NSArray *)arg1 ;
-(void)deleteSelectedNodesForced:(char)arg1 ;
-(void)toggleNode:(id)arg1 toType:(int)arg2 prevNode:(id)arg3 nextNode:(id)arg4 ;
-(void)smoothAllNodes;
-(id)subpathsForConnectingUsingFirstSubpathFirstNode:(char*)arg1 andSecondPathFirstNode:(char*)arg2 ;
-(id)splitEdge:(long long)arg1 at:(double)arg2 fromSubpath:(long long)arg3 ;
-(void)setLockedFlipTransform:(char)arg1 ;
-(Class)preferredRepClass;
-(char)deletingSelectedNodesWillDeleteShape;
-(double)distanceToPoint:(CGPoint)arg1 subpathIndex:(unsigned long long*)arg2 elementIndex:(unsigned long long*)arg3 tValue:(double*)arg4 threshold:(double)arg5 ;
-(void)toggleSelectedNodesToType:(int)arg1 ;
-(void)selectSubpathForNode:(id)arg1 toggle:(char)arg2 ;
-(char)canConnectSelectedNodes;
-(void)connectSelectedNodes;
-(char)canCloseSelectedNodes;
-(void)closeSelectedNodes;
-(void)deleteSelectedEdges;
-(void)splitSelectedEdges;
-(void)splitSelectedNodes;
-(char)canCutAtSelectedNodes;
-(void)cutAtSelectedNodes;
-(const CGPathRef)subpathForSelection;
-(NSArray *)nodeTypes;
-(void)setNodeTypes:(NSArray *)arg1 ;
-(void)smoothCurveToPoint:(CGPoint)arg1 controlPoint1:(CGPoint)arg2 controlPoint2:(CGPoint)arg3 ;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(char)isEqualWithStrictComparison:(id)arg1 ;
-(id)inferredAccessibilityDescription;
-(void)beginNewSubpath;
-(unsigned long long)activeSubpath;
-(void)setActiveSubpath:(unsigned long long)arg1 ;
@end

