/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSArray, NSIndexSet;

@interface TSTTableSortOrder : NSObject <NSCopying> {

	int _type;
	NSArray* _rules;
	NSIndexSet* _cachedIndexes;

}

@property (nonatomic,retain) NSIndexSet * cachedIndexes;                    //@synthesize cachedIndexes=_cachedIndexes - In the implementation block
@property (nonatomic,readonly) NSArray * rules;                             //@synthesize rules=_rules - In the implementation block
@property (nonatomic,readonly) int type;                                    //@synthesize type=_type - In the implementation block
@property (nonatomic,readonly) NSIndexSet * baseColumnIndices; 
@property (nonatomic,readonly) char empty; 
@property (nonatomic,readonly) unsigned long long ruleCount; 
+(id)sortOrderWithRules:(id)arg1 type:(int)arg2 ;
+(id)sortOrderWithBaseColumn:(TSUModelColumnIndex)arg1 direction:(int)arg2 type:(int)arg3 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(int)type;
-(char)empty;
-(NSArray *)rules;
-(unsigned long long)ruleCount;
-(void)encodeToArchive:(TableSortOrderArchive*)arg1 ;
-(id)initFromArchive:(const TableSortOrderArchive*)arg1 ;
-(id)initWithRules:(id)arg1 type:(int)arg2 ;
-(NSIndexSet *)baseColumnIndices;
-(id)sortOrderByChangingTypeTo:(int)arg1 ;
-(id)sortOrderByAddingRule:(id)arg1 ;
-(id)sortOrderByRemovingRuleAtIndex:(unsigned long long)arg1 ;
-(id)sortOrderByReplacingRuleAtIndex:(unsigned long long)arg1 withRule:(id)arg2 ;
-(id)sortOrderByReplacingRulesWithRules:(id)arg1 ;
-(id)sortOrderByRemovingBaseColumnIndices:(id)arg1 ;
-(char)containsAnyRulesInBaseColumns:(id)arg1 ;
-(NSIndexSet *)cachedIndexes;
-(void)setCachedIndexes:(NSIndexSet *)arg1 ;
@end

