/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSDMixing.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>

@interface TSDInfoGeometry : NSObject <TSDMixing, NSCopying, NSMutableCopying> {

	CGPoint _position;
	CGSize _size;
	struct {
		unsigned widthValid : 1;
		unsigned heightValid : 1;
		unsigned horizontalFlip : 1;
		unsigned verticalFlip : 1;
	}  _flags;
	double _angle;

}

@property (nonatomic,readonly) CGPoint position;                                     //@synthesize position=_position - In the implementation block
@property (nonatomic,readonly) CGSize size;                                          //@synthesize size=_size - In the implementation block
@property (nonatomic,readonly) char widthValid; 
@property (nonatomic,readonly) char heightValid; 
@property (nonatomic,readonly) char horizontalFlip; 
@property (nonatomic,readonly) char verticalFlip; 
@property (nonatomic,readonly) double angle;                                         //@synthesize angle=_angle - In the implementation block
@property (nonatomic,readonly) CGRect boundsBeforeRotation; 
@property (nonatomic,readonly) CGPoint center; 
@property (nonatomic,readonly) CGAffineTransform transform; 
@property (nonatomic,readonly) CGAffineTransform transformWithoutFlips; 
@property (nonatomic,readonly) CGRect transformedBounds; 
@property (nonatomic,readonly) CGPoint transformedBoundsOrigin; 
@property (nonatomic,readonly) CGAffineTransform fullTransform; 
@property (nonatomic,readonly) char allValuesValidNumbers; 
+(id)geometryFromFullTransform:(CGAffineTransform)arg1 ;
+(id)geometryFromFullTransform:(CGAffineTransform)arg1 widthValid:(char)arg2 heightValid:(char)arg3 ;
+(id)geometryFromTransform:(CGAffineTransform)arg1 withSize:(CGSize)arg2 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(CGSize)size;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(CGAffineTransform)transform;
-(CGPoint)position;
-(id)initWithSize:(CGSize)arg1 ;
-(CGPoint)center;
-(id)initWithWidth:(double)arg1 ;
-(double)angle;
-(id)initWithHeight:(double)arg1 ;
-(id)initWithArchive:(const GeometryArchive*)arg1 ;
-(id)initWithPosition:(CGPoint)arg1 size:(CGSize)arg2 ;
-(char)isEqualExceptForPosition:(id)arg1 ;
-(char)widthValid;
-(char)heightValid;
-(CGAffineTransform)fullTransform;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(id)initWithPosition:(CGPoint)arg1 size:(CGSize)arg2 widthValid:(char)arg3 heightValid:(char)arg4 horizontalFlip:(char)arg5 verticalFlip:(char)arg6 angle:(double)arg7 ;
-(id)initWithTransformedBoundsOrigin:(CGPoint)arg1 size:(CGSize)arg2 horizontalFlip:(char)arg3 verticalFlip:(char)arg4 angle:(double)arg5 ;
-(CGPoint)transformedBoundsOrigin;
-(CGRect)boundsBeforeRotation;
-(CGAffineTransform)transformBasedOnRect:(CGRect)arg1 ;
-(CGAffineTransform)transformBasedOnPoint:(CGPoint)arg1 centeredAtPoint:(CGPoint)arg2 ;
-(CGAffineTransform)transformBasedOnPoint:(CGPoint)arg1 centeredAtPoint:(CGPoint)arg2 withFlips:(char)arg3 ;
-(char)horizontalFlip;
-(char)verticalFlip;
-(CGRect)transformedBounds;
-(id)initWithFullTransform:(CGAffineTransform)arg1 widthValid:(char)arg2 heightValid:(char)arg3 ;
-(id)initWithPosition:(CGPoint)arg1 size:(CGSize)arg2 angle:(double)arg3 ;
-(id)initWithCenter:(CGPoint)arg1 size:(CGSize)arg2 ;
-(id)initWithTransformedBoundsOrigin:(CGPoint)arg1 size:(CGSize)arg2 angle:(double)arg3 ;
-(CGAffineTransform)transformWithoutFlips;
-(id)initWithTransform:(CGAffineTransform)arg1 size:(CGSize)arg2 ;
-(id)geometryByAppendingTransform:(CGAffineTransform)arg1 ;
-(id)geometryWithParentGeometry:(id)arg1 ;
-(id)geometryRelativeToGeometry:(id)arg1 ;
-(id)geometryWithNewBounds:(CGRect)arg1 ;
-(id)normalizedGeometry;
-(void)saveToArchive:(GeometryArchive*)arg1 archiver:(id)arg2 ;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(char)allValuesValidNumbers;
-(id)initWithLayoutGeometry:(id)arg1 ;
-(id)geometryWithValidNumbers;
@end

