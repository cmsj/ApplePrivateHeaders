/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:01 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSText.framework/Versions/A/TSText
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSText/TSText-Structs.h>
@interface TSWPRangeMap : NSObject {

	NSRange _subRange;
	vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>>* _unmappedIndexes;
	vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>>* _mappedIndexes;

}

@property (assign,nonatomic) NSRange subRange;                                              //@synthesize subRange=_subRange - In the implementation block
@property (assign,nonatomic) vector<_TSWPCharIndexAndAffinity unmappedIndexes;              //@synthesize unmappedIndexes=_unmappedIndexes - In the implementation block
@property (assign,nonatomic) vector<_TSWPCharIndexAndAffinity mappedIndexes;                //@synthesize mappedIndexes=_mappedIndexes - In the implementation block
-(id)initWithSubRange:(NSRange)arg1 unmappedPairIndexes:(const vector<unsigned long, std::__1::allocator<unsigned long>>*)arg2 ;
-(id)initWithSubRange:(NSRange)arg1 unmappedIndexes:(const vector<unsigned long, std::__1::allocator<unsigned long>>*)arg2 affinity:(int)arg3 ;
-(NSRange)unmappedCharRange:(NSRange)arg1 ;
-(unsigned long long)unmappedCharIndex:(unsigned long long)arg1 ;
-(NSRange)mappedCharRange:(NSRange)arg1 ;
-(unsigned long long)mappedCharIndex:(unsigned long long)arg1 ;
-(unsigned long long)p_extendLeftMappedIndex:(unsigned long long)arg1 ;
-(unsigned long long)p_extendRightMappedIndex:(unsigned long long)arg1 ;
-(id)initWithSubRange:(NSRange)arg1 unmappedIndexes:(const vector<unsigned long, std::__1::allocator<unsigned long>>*)arg2 isBackwardAffinities:(const vector<bool, std::__1::allocator<bool>>*)arg3 ;
-(void)adjustByDelta:(long long)arg1 startingAt:(unsigned long long)arg2 ;
-(NSRange)subRange;
-(void)setSubRange:(NSRange)arg1 ;
-(vector<_TSWPCharIndexAndAffinity)unmappedIndexes;
-(void)setUnmappedIndexes:(vector<_TSWPCharIndexAndAffinity)arg1 ;
-(vector<_TSWPCharIndexAndAffinity)mappedIndexes;
-(void)setMappedIndexes:(vector<_TSWPCharIndexAndAffinity)arg1 ;
@end

