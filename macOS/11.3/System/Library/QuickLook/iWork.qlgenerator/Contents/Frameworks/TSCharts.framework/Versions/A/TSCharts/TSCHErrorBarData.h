/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCharts.framework/Versions/A/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCharts/TSCharts-Structs.h>
@class TSCHChartSeries;

@interface TSCHErrorBarData : NSObject {

	TSCHChartSeries* _series;
	char _supportsXAxisBars;
	double _maxValue;
	double _minValue;
	long long _maxValueGroupIndex;
	long long _minValueGroupIndex;
	double _maxValueScatterX;
	double _minValueScatterX;
	double _standardError;
	double _standardDeviation;
	double _standardDeviationMean;
	double _standardErrorScatterX;
	double _standardDeviationScatterX;
	double _standardDeviationMeanScatterX;
	char _errorBarsInvalid;

}

@property (nonatomic,readonly) long long maxValueGroupIndex;              //@synthesize maxValueGroupIndex=_maxValueGroupIndex - In the implementation block
@property (nonatomic,readonly) long long minValueGroupIndex;              //@synthesize minValueGroupIndex=_minValueGroupIndex - In the implementation block
+(char)hasErrorBarsForSeries:(id)arg1 ;
+(long long)p_errorBarSettingForSeries:(id)arg1 useXAxis:(char)arg2 axisID:(id)arg3 ;
+(long long)errorBarTypeForAxisID:(id)arg1 series:(id)arg2 ;
+(char)errorBarIsVerticalForAxisID:(id)arg1 series:(id)arg2 ;
-(void)updateIfNeeded;
-(void)invalidateData;
-(id)initWithSeries:(id)arg1 ;
-(double)minValueForAxisID:(id)arg1 ;
-(double)maxValueForAxisID:(id)arg1 ;
-(char)showErrorBarsForAxisID:(id)arg1 ;
-(long long)minValueGroupIndex;
-(long long)maxValueGroupIndex;
-(float)opacityForAxisID:(id)arg1 ;
-(id)shadowForAxisID:(id)arg1 ;
-(id)strokeForAxisID:(id)arg1 ;
-(CGPoint)p_getValuePointForGroupIndex:(unsigned long long)arg1 inputAxis:(id)arg2 inputAxisContinuous:(char)arg3 outputAxis:(id)arg4 barVertical:(char)arg5 ;
-(long long)p_errorBarSettingForAxisID:(id)arg1 value:(double)arg2 barType:(long long)arg3 ;
-(double)p_positiveErrorForValue:(double*)arg1 onAxisID:(id)arg2 valueIndex:(unsigned long long)arg3 ;
-(double)p_negativeErrorForValue:(double*)arg1 onAxisID:(id)arg2 valueIndex:(unsigned long long)arg3 ;
-(void)p_clearData;
-(void)p_updateDataForAxisID:(id)arg1 ;
-(unsigned long long)p_stripBadValuesInArray:(double*)arg1 numberOfModelValues:(unsigned long long)arg2 ;
-(double)p_stdDevFactorForAxisID:(id)arg1 ;
-(long long)p_errorBarTypeForAxisID:(id)arg1 ;
-(double)p_fixedErrorForAxisID:(id)arg1 ;
-(double)p_percentageErrorForAxisID:(id)arg1 ;
-(double)p_stdErrorErrorForAxisID:(id)arg1 ;
-(double)p_stdDevErrorForAxisID:(id)arg1 ;
-(double)p_stdDevMeanForAxisID:(id)arg1 ;
-(double)p_customErrorForAxisID:(id)arg1 valueIndex:(unsigned long long)arg2 positive:(char)arg3 ;
-(double)p_errorForValue:(double*)arg1 onAxisID:(id)arg2 valueIndex:(unsigned long long)arg3 positive:(char)arg4 ;
-(double*)p_createArrayOfSeriesValuesForAxisID:(id)arg1 count:(unsigned long long)arg2 ;
-(double*)p_createArrayOfSeriesOffsetsForAxisID:(id)arg1 count:(unsigned long long)arg2 ;
-(void)p_updateStdErrorForAxisID:(id)arg1 forValues:(double*)arg2 withOffsets:(double*)arg3 numberOfModelValues:(unsigned long long)arg4 ;
-(void)p_updateMinMaxForAxisID:(id)arg1 forValues:(double*)arg2 withOffsets:(double*)arg3 numberOfModelValues:(unsigned long long)arg4 ;
-(void)p_updateStdDeviationForAxisID:(id)arg1 forValues:(double*)arg2 withOffsets:(double*)arg3 numberOfModelValues:(unsigned long long)arg4 ;
-(void)p_updateMinMaxForStackedPercentageAxis:(id)arg1 forValues:(double*)arg2 withOffsets:(double*)arg3 numberOfModelValues:(unsigned long long)arg4 ;
-(id)lineEndForAxisID:(id)arg1 ;
-(char)hasErrorDataForInputAxis:(id)arg1 outputAxis:(id)arg2 inputAxisContinuous:(char)arg3 outputAxisContinuous:(char)arg4 groupIndex:(unsigned long long)arg5 groupsCount:(unsigned long long)arg6 barVertical:(char)arg7 barType:(long long)arg8 outUnitValue:(CGPoint*)arg9 outUnitPositive:(CGPoint*)arg10 outUnitNegative:(CGPoint*)arg11 ;
@end

