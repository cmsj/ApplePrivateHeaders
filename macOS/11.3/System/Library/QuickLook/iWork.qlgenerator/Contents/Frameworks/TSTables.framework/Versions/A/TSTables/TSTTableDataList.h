/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSPersistence/TSPObject.h>
#import <TSTables/TSPCopying.h>
#import <TSTables/TSTCompatibilityVersionProviding.h>

@protocol TSDContainerInfoTSWPStorageParent;
@class NSMutableArray, NSMutableIndexSet, NSObject, TSTTableDataListSegment;

@interface TSTTableDataList : TSPObject <TSPCopying, TSTCompatibilityVersionProviding> {

	NSMutableArray* _segments;
	unordered_map<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::__1::allocator<std::__1::pair<NSObject<TSTTableDataPayloadHashing> *const, TSTTableDataObject *>>>* _payloadToObjectMap;
	NSMutableIndexSet* _unusedKeySet;
	char _isNewForBraveNewCell;
	char _useReverseMap;
	int _listType;
	unsigned _nextID;
	NSObject*<TSDContainerInfo>*<TSWPStorageParent> _richTextParentInfo;
	TSTTableDataListSegment* _cachedSegment;

}

@property (assign,nonatomic) int listType;                                                                    //@synthesize listType=_listType - In the implementation block
@property (assign,nonatomic) unsigned nextID;                                                                 //@synthesize nextID=_nextID - In the implementation block
@property (nonatomic,readonly) char useReverseMap;                                                            //@synthesize useReverseMap=_useReverseMap - In the implementation block
@property (assign,nonatomic) TSTTableDataListSegment * cachedSegment;                                         //@synthesize cachedSegment=_cachedSegment - In the implementation block
@property (assign,nonatomic) char isNewForBraveNewCell;                                                       //@synthesize isNewForBraveNewCell=_isNewForBraveNewCell - In the implementation block
@property (assign,nonatomic) NSObject*<TSDContainerInfo>*<TSWPStorageParent> richTextParentInfo;              //@synthesize richTextParentInfo=_richTextParentInfo - In the implementation block
@property (nonatomic,readonly) unsigned long long archivingCompatibilityVersion; 
+(Class)classForUnarchiver:(id)arg1 ;
+(id)stringForListType:(int)arg1 ;
-(unsigned long long)count;
-(void)removeObjectForKey:(unsigned)arg1 ;
-(id)stringForKey:(unsigned)arg1 ;
-(id)initWithType:(int)arg1 context:(id)arg2 ;
-(void)setListType:(int)arg1 ;
-(int)listType;
-(unsigned)nextID;
-(void)setNextID:(unsigned)arg1 ;
-(id)copyWithContext:(id)arg1 ;
-(id)p_objectForKey:(unsigned)arg1 ;
-(id)packageLocator;
-(void)p_setupWithType:(int)arg1 nextKeyID:(unsigned)arg2 ;
-(void)loadFromUnarchiver:(id)arg1 ;
-(void)saveToArchiver:(id)arg1 ;
-(id)allRichTextStorages;
-(char)repairStyleDatalistStylesheetIfNecessary;
-(void)upgradeConditionalStylesToLinkedRefWithTableUID:(const TSKUIDStruct*)arg1 ;
-(unsigned long long)archivingCompatibilityVersion;
-(void)replaceFormulasUsingBlock:(/*^block*/id)arg1 ;
-(void)replaceConditionalStyleSetsUsingBlock:(/*^block*/id)arg1 ;
-(char)containsFormulas;
-(void)upgradeCellFormatsU2_0;
-(char)containsControlCellSpecs;
-(char)p_shouldUseReverseMap;
-(void)p_addInitialSegment;
-(void)p_enumerateDataObjectsUsingBlock:(/*^block*/id)arg1 ;
-(char)isNewForBraveNewCell;
-(id)p_segmentForKey:(unsigned)arg1 ;
-(NSObject*<TSDContainerInfo>*<TSWPStorageParent>)richTextParentInfo;
-(id)p_objectForPayload:(id)arg1 ;
-(unsigned)p_nextAvailableKey;
-(id)wrappedObjectForPayload:(id)arg1 ;
-(void)p_setObject:(id)arg1 atKey:(unsigned)arg2 updateReverseMap:(char)arg3 ;
-(id)listTypeString;
-(id)p_setPayload:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(void)p_clearReverseMapForObject:(id)arg1 atKey:(unsigned)arg2 ;
-(unsigned long long)p_objectCount;
-(void)takeReferences:(unsigned)arg1 forKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(void)dropReferences:(unsigned)arg1 forKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(void)setRichTextParentInfo:(NSObject*<TSDContainerInfo>*<TSWPStorageParent>)arg1 ;
-(void)p_replaceObjectAtKey:(unsigned)arg1 withObject:(id)arg2 ;
-(void)enumerateFormatsUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateCustomFormatsUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateKeysAndCountsUsingBlock:(/*^block*/id)arg1 ;
-(unsigned)refCountForKey:(unsigned)arg1 ;
-(void)takeReferenceForKey:(unsigned)arg1 callWillModify:(char)arg2 ;
-(void)dropReferenceForKey:(unsigned)arg1 callWillModify:(char)arg2 ;
-(void)setIsNewForBraveNewCell:(char)arg1 ;
-(char)useReverseMap;
-(TSTTableDataListSegment *)cachedSegment;
-(void)setCachedSegment:(TSTTableDataListSegment *)arg1 ;
-(unsigned)addCellFormat:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addCommentStorage:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addConditionalStyleSet:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addFormula:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addControlCellSpec:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addFormulaError:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addImportWarningSet:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addMultipleChoiceListFormat:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addRichText:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addString:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(unsigned)addStyle:(id)arg1 atSuggestedKey:(unsigned)arg2 callWillModify:(char)arg3 ;
-(id)cellFormatForKey:(unsigned)arg1 ;
-(id)commentStorageForKey:(unsigned)arg1 ;
-(id)conditionalStyleSetForKey:(unsigned)arg1 ;
-(id)formulaForKey:(unsigned)arg1 ;
-(id)controlCellSpecForKey:(unsigned)arg1 ;
-(id)formulaErrorForKey:(unsigned)arg1 ;
-(id)importWarningSetForKey:(unsigned)arg1 ;
-(id)multipleChoiceListFormatForKey:(unsigned)arg1 ;
-(id)richTextForKey:(unsigned)arg1 ;
-(id)stringForKey:(unsigned)arg1 shouldWrap:(char*)arg2 ;
-(id)styleForKey:(unsigned)arg1 ;
-(char)hasDuplicatedElements;
-(id)reassignCustomFormatUIDForPaste:(id)arg1 ;
-(id)getRefCountsFromDataList;
@end

