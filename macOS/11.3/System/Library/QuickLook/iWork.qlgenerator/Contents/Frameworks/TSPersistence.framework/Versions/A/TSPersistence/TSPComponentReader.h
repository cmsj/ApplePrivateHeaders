/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSPersistence.framework/Versions/A/TSPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSPersistence/TSPersistence-Structs.h>
#import <TSPersistence/TSPReader.h>
#import <TSPersistence/TSPComponentParserDelegate.h>

@protocol TSUStreamReadChannel;
@class NSString;

@interface TSPComponentReader : TSPReader <TSPComponentParserDelegate> {

	id<TSUStreamReadChannel> _readChannel;
	struct {
		unsigned isReadingFromDocument : 1;
		unsigned ignoreUnknownContent : 1;
		unsigned ignoreVersionChecking : 1;
		unsigned hasIncompatibleVersion : 1;
		unsigned acceptUnknownDocumentObject : 1;
	}  _flags;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)initWithComponent:(id)arg1 finalizeHandlerQueue:(id)arg2 delegate:(id)arg3 readChannel:(id)arg4 ;
-(char)shouldProceedParsingOnFailure;
-(id)newUnarchiverWithObjectIdentifier:(long long)arg1 messageInfo:(const MessageInfo*)arg2 unarchiveClass:(Class)arg3 message:(unique_ptr<google::protobuf::Message, std::__1::default_delete<google::protobuf::Message>>*)arg4 messageVersion:(unsigned long long)arg5 strongReferences:(unique_ptr<TSP::IdentifierMap<bool>, std::__1::default_delete<TSP::IdentifierMap<bool>>>*)arg6 unknownContent:(id)arg7 hasAlternateMessages:(char)arg8 ;
-(id)unknownObjectUnarchiverWithArchiveInfo:(const ArchiveInfo*)arg1 stream:(DispatchDataInputStream*)arg2 ignoreMessageData:(char)arg3 hasAlternateMessages:(char)arg4 ;
-(id)initWithComponent:(id)arg1 finalizeHandlerQueue:(id)arg2 delegate:(id)arg3 readChannel:(id)arg4 ignoreUnknownContent:(char)arg5 ignoreVersionChecking:(char)arg6 ;
-(id)initWithComponent:(id)arg1 finalizeHandlerQueue:(id)arg2 delegate:(id)arg3 ;
-(id)newUnarchiverWithArchiveInfo:(const ArchiveInfo*)arg1 stream:(DispatchDataInputStream*)arg2 isUnknownObject:(char*)arg3 ;
-(const MessageInfo*)unknownObjectMessageInfo;
-(id)unknownMessageFromMessageInfo:(const MessageInfo*)arg1 stream:(DispatchDataInputStream*)arg2 ;
-(char)componentParser:(id)arg1 didReadArchiveInfo:(const ArchiveInfo*)arg2 stream:(DispatchDataInputStream*)arg3 error:(id*)arg4 ;
-(void)beginReadingWithCompletionQueue:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)didUnarchiveObject:(id)arg1 withUnarchiver:(id)arg2 ;
@end

