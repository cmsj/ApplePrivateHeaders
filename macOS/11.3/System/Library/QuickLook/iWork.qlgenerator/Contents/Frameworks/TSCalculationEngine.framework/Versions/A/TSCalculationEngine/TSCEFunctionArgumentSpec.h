/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCalculationEngine.framework/Versions/A/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
@interface TSCEFunctionArgumentSpec : NSObject {

	TSCEFunctionArgSpec* _argSpec;

}
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 minValue:(double)arg4 minInclusive:(char)arg5 maxValue:(double)arg6 maxInclusive:(char)arg7 disallowedTypes:(const unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>>*)arg8 disallowDuration:(char)arg9 disallowCurrency:(char)arg10 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 argumentContext:(int)arg4 minValue:(double)arg5 minInclusive:(char)arg6 maxValue:(double)arg7 maxInclusive:(char)arg8 isInteger:(char)arg9 disallowedTypes:(const unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>>*)arg10 disallowDuration:(char)arg11 disallowCurrency:(char)arg12 modeValues:(const vector<TSCEValue, std::__1::allocator<TSCEValue>>*)arg13 defaultModeIndex:(short)arg14 referenceForGeometryOnly:(char)arg15 forceArrayMode:(char)arg16 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 disallowedTypes:(const unordered_set<TSCEArgumentType, std::__1::hash<TSCEArgumentType>, std::__1::equal_to<TSCEArgumentType>, std::__1::allocator<TSCEArgumentType>>*)arg4 disallowDuration:(char)arg5 disallowCurrency:(char)arg6 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 modeValues:(const vector<TSCEValue, std::__1::allocator<TSCEValue>>*)arg4 defaultModeIndex:(short)arg5 ;
+(TSCEFunctionArgSpec*)argSpecWithType:(int)arg1 accessorMode:(int)arg2 rangeContext:(unsigned char)arg3 argumentContext:(int)arg4 ;
@end

