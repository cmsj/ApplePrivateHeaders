/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSTables/TSTTableHiddenRowColumnProviding.h>
#import <TSTables/TSTTableInternalGeometryProviding.h>
#import <TSTables/TSTTableMergeRangeProviding.h>

@protocol OS_dispatch_group, OS_dispatch_queue, TSTLayoutDynamicContentProtocol, TSTLayoutDynamicCellFillProtocol;
@class NSObject, TSTTableInfo, TSKChangeNotifier, TSTStrokeDefaultVendor, TSTWPColumnCache, TSTDupContentCache, TSTWidthHeightCache, TSTHiddenRowsColumnsCache, TSDFill, TSUColor, TSDInfoGeometry, TSDLayoutGeometry, TSTCellSelection, NSMutableArray, TSTMergeRangeSortedSet, TSTFontInfoCache, TSUWidthLimitedQueue, NSPointerArray, TSTConcurrentMutableIndexSet, TSTCellRegion, TSTStrokeWidthCache, TSTRWRetainedPointerKeyDictionary, NSMutableSet, NSCountedSet, TSTLayout, TSTLayoutDynamicResizeInfo, TSWPColumnStyle, NSIndexSet, NSString;

@interface TSTLayoutEngine : NSObject <TSTTableHiddenRowColumnProviding, TSTTableInternalGeometryProviding, TSTTableMergeRangeProviding> {

	double _tableDefaultFontHeightForArea[15];
	NSObject*<OS_dispatch_group> _layoutInFlight;
	opaque_pthread_rwlock_t _strokesRWLock;
	opaque_pthread_rwlock_t _contentRWLock;
	os_unfair_lock_s _dynamicModeUnfairLock;
	char _inDynamicLayoutMode;
	char _dynamicBandedFill;
	char _dynamicBandedFillSetting;
	char _dynamicRepResize;
	char _dynamicRepResizeSessionInProgress;
	char _dynamicResizingColumns;
	char _dynamicResizingRows;
	char _processHiddenRowsForExport;
	char _tableNameEnabled;
	char _headerColumnsFrozen;
	char _headerRowsFrozen;
	char _headerColumnsRepeat;
	char _headerRowsRepeat;
	char _tableNameHeightValid;
	char _bandedFillIsValid;
	char _useBandedFill;
	char _tableDefaultFontHeightsAreValid;
	char _emptyFilteredTable;
	char _isGrouped;
	char _dynamicRepressFrozenHeaderRows;
	char _dynamicRepressFrozenHeaderColumns;
	unsigned _maxConcurrentTasks;
	unsigned _numCellsPerTask;
	int _tableEnvironment;
	int _tableRowsBehavior;
	int _dynamicColumnAdjustment;
	int _dynamicRowAdjustment;
	unsigned _cachedNumberOfColumns;
	unsigned _cachedNumberOfRows;
	unsigned _cachedNumberOfHeaderColumns;
	unsigned _cachedNumberOfHeaderRows;
	unsigned _cachedNumberOfFooterRows;
	TSTTableInfo* _tableInfo;
	TSKChangeNotifier* _changeNotifier;
	TSTStrokeDefaultVendor* _strokesDefaultVendor;
	TSTWPColumnCache* _cellIDToWPColumnCache;
	TSTDupContentCache* _dupContentCache;
	TSTWPColumnCache* _tempWPColumnCache;
	TSTWidthHeightCache* _widthHeightCache;
	TSTHiddenRowsColumnsCache* _hiddenRowsColumnsCache;
	TSDFill* _bandedFillObject;
	double _dynamicAddOrRemoveColumnElementSize;
	double _dynamicAddOrRemoveRowElementSize;
	double _dynamicColumnTabSize;
	TSUColor* _dynamicFontColor;
	TSDInfoGeometry* _dynamicInfoGeometry;
	double _dynamicWidthResize;
	double _dynamicHeightResize;
	double _dynamicResizingColumnAdjustment;
	double _dynamicResizingRowAdjustment;
	double _dynamicRowTabSize;
	TSDLayoutGeometry* _dynamicSavedLayoutGeometry;
	TSTCellSelection* _dynamicSelection;
	double _dynamicTableNameResize;
	TSUCellCoord _dynamicSuppressingConditionalStylesCellID;
	double _dynamicFooterHeight;
	NSMutableArray* _changeDescriptors;
	TSTMergeRangeSortedSet* _mergeRangesForLayoutPass;
	TSTFontInfoCache* _fontInfoCache;
	TSUWidthLimitedQueue* _layoutValidateQueue;
	TSUWidthLimitedQueue* _layoutMeasureQueue;
	NSObject*<OS_dispatch_queue> _layoutConcurrentQueue;
	NSPointerArray* _topRowStrokes;
	NSPointerArray* _bottomRowStrokes;
	NSPointerArray* _leftColumnStrokes;
	NSPointerArray* _rightColumnStrokes;
	TSTConcurrentMutableIndexSet* _spillStrokeColumns;
	TSTCellRegion* _cellRegionForClearedMergeStrokes;
	TSTStrokeWidthCache* _columnToStrokeWidthCache;
	TSTStrokeWidthCache* _rowToStrokeHeightCache;
	TSTRWRetainedPointerKeyDictionary* _paraStyleToHeightCache;
	double _cachedTableNameHeight;
	unsigned long long _cachedMaxNumberOfColumns;
	unsigned long long _cachedMaxNumberOfRows;
	NSMutableSet* _contentReadingThreads;
	NSCountedSet* _dynamicLayoutParticipants;
	TSTLayout* _dynamicLayout;
	id<TSTLayoutDynamicContentProtocol> _dynamicContentDelegate;
	long long _dynamicHidingRowsColsDirection;
	TSTLayoutDynamicResizeInfo* _dynamicResizeInfo;
	long long _dynamicRevealingRowsColsDirection;
	id<TSTLayoutDynamicCellFillProtocol> _dynamicCellFillDelegate;
	TSWPColumnStyle* _defaultColumnStyle;
	TSUCellRect _dynamicFontColorCellRange;
	TSUCellRect _dynamicResizingColumnRange;
	TSUCellRect _dynamicResizingRowRange;
	TSUCellRect _dynamicHidingContent;
	TSUCellRect _dynamicHidingRowsCols;
	TSUCellRect _dynamicHidingText;
	TSUCellRect _dynamicRemovingText;
	TSUCellRect _dynamicRevealingRowsCols;
	CGRect _tableNameBounds;

}

@property (nonatomic,retain) TSTWPColumnCache * cellIDToWPColumnCache;                                  //@synthesize cellIDToWPColumnCache=_cellIDToWPColumnCache - In the implementation block
@property (nonatomic,retain) TSTDupContentCache * dupContentCache;                                      //@synthesize dupContentCache=_dupContentCache - In the implementation block
@property (nonatomic,retain) TSTWPColumnCache * tempWPColumnCache;                                      //@synthesize tempWPColumnCache=_tempWPColumnCache - In the implementation block
@property (nonatomic,retain) TSTWidthHeightCache * widthHeightCache;                                    //@synthesize widthHeightCache=_widthHeightCache - In the implementation block
@property (nonatomic,retain) TSTHiddenRowsColumnsCache * hiddenRowsColumnsCache;                        //@synthesize hiddenRowsColumnsCache=_hiddenRowsColumnsCache - In the implementation block
@property (nonatomic,retain) TSTFontInfoCache * fontInfoCache;                                          //@synthesize fontInfoCache=_fontInfoCache - In the implementation block
@property (nonatomic,retain) TSUWidthLimitedQueue * layoutValidateQueue;                                //@synthesize layoutValidateQueue=_layoutValidateQueue - In the implementation block
@property (nonatomic,retain) TSUWidthLimitedQueue * layoutMeasureQueue;                                 //@synthesize layoutMeasureQueue=_layoutMeasureQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> layoutConcurrentQueue;                        //@synthesize layoutConcurrentQueue=_layoutConcurrentQueue - In the implementation block
@property (nonatomic,retain) TSTStrokeDefaultVendor * strokesDefaultVendor;                             //@synthesize strokesDefaultVendor=_strokesDefaultVendor - In the implementation block
@property (nonatomic,retain) NSPointerArray * topRowStrokes;                                            //@synthesize topRowStrokes=_topRowStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * bottomRowStrokes;                                         //@synthesize bottomRowStrokes=_bottomRowStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * leftColumnStrokes;                                        //@synthesize leftColumnStrokes=_leftColumnStrokes - In the implementation block
@property (nonatomic,retain) NSPointerArray * rightColumnStrokes;                                       //@synthesize rightColumnStrokes=_rightColumnStrokes - In the implementation block
@property (nonatomic,retain) TSTConcurrentMutableIndexSet * spillStrokeColumns;                         //@synthesize spillStrokeColumns=_spillStrokeColumns - In the implementation block
@property (nonatomic,retain) TSTCellRegion * cellRegionForClearedMergeStrokes;                          //@synthesize cellRegionForClearedMergeStrokes=_cellRegionForClearedMergeStrokes - In the implementation block
@property (nonatomic,retain) TSTStrokeWidthCache * columnToStrokeWidthCache;                            //@synthesize columnToStrokeWidthCache=_columnToStrokeWidthCache - In the implementation block
@property (nonatomic,retain) TSTStrokeWidthCache * rowToStrokeHeightCache;                              //@synthesize rowToStrokeHeightCache=_rowToStrokeHeightCache - In the implementation block
@property (nonatomic,retain) TSTRWRetainedPointerKeyDictionary * paraStyleToHeightCache;                //@synthesize paraStyleToHeightCache=_paraStyleToHeightCache - In the implementation block
@property (assign,nonatomic) char headerColumnsFrozen;                                                  //@synthesize headerColumnsFrozen=_headerColumnsFrozen - In the implementation block
@property (assign,nonatomic) char headerRowsFrozen;                                                     //@synthesize headerRowsFrozen=_headerRowsFrozen - In the implementation block
@property (assign,nonatomic) char headerColumnsRepeat;                                                  //@synthesize headerColumnsRepeat=_headerColumnsRepeat - In the implementation block
@property (assign,nonatomic) char headerRowsRepeat;                                                     //@synthesize headerRowsRepeat=_headerRowsRepeat - In the implementation block
@property (assign,nonatomic) CGRect tableNameBounds;                                                    //@synthesize tableNameBounds=_tableNameBounds - In the implementation block
@property (assign,nonatomic) double cachedTableNameHeight;                                              //@synthesize cachedTableNameHeight=_cachedTableNameHeight - In the implementation block
@property (assign,nonatomic) char tableNameHeightValid;                                                 //@synthesize tableNameHeightValid=_tableNameHeightValid - In the implementation block
@property (assign,nonatomic) unsigned cachedNumberOfColumns;                                            //@synthesize cachedNumberOfColumns=_cachedNumberOfColumns - In the implementation block
@property (assign,nonatomic) unsigned cachedNumberOfRows;                                               //@synthesize cachedNumberOfRows=_cachedNumberOfRows - In the implementation block
@property (assign,nonatomic) unsigned cachedNumberOfHeaderColumns;                                      //@synthesize cachedNumberOfHeaderColumns=_cachedNumberOfHeaderColumns - In the implementation block
@property (assign,nonatomic) unsigned cachedNumberOfHeaderRows;                                         //@synthesize cachedNumberOfHeaderRows=_cachedNumberOfHeaderRows - In the implementation block
@property (assign,nonatomic) unsigned cachedNumberOfFooterRows;                                         //@synthesize cachedNumberOfFooterRows=_cachedNumberOfFooterRows - In the implementation block
@property (assign,nonatomic) unsigned long long cachedMaxNumberOfColumns;                               //@synthesize cachedMaxNumberOfColumns=_cachedMaxNumberOfColumns - In the implementation block
@property (assign,nonatomic) unsigned long long cachedMaxNumberOfRows;                                  //@synthesize cachedMaxNumberOfRows=_cachedMaxNumberOfRows - In the implementation block
@property (assign,nonatomic) char bandedFillIsValid;                                                    //@synthesize bandedFillIsValid=_bandedFillIsValid - In the implementation block
@property (assign,nonatomic) char useBandedFill;                                                        //@synthesize useBandedFill=_useBandedFill - In the implementation block
@property (nonatomic,retain) TSDFill * bandedFillObject;                                                //@synthesize bandedFillObject=_bandedFillObject - In the implementation block
@property (assign,nonatomic) int tableRowsBehavior;                                                     //@synthesize tableRowsBehavior=_tableRowsBehavior - In the implementation block
@property (assign,nonatomic) char tableDefaultFontHeightsAreValid;                                      //@synthesize tableDefaultFontHeightsAreValid=_tableDefaultFontHeightsAreValid - In the implementation block
@property (nonatomic,retain) NSMutableSet * contentReadingThreads;                                      //@synthesize contentReadingThreads=_contentReadingThreads - In the implementation block
@property (assign,nonatomic) char emptyFilteredTable;                                                   //@synthesize emptyFilteredTable=_emptyFilteredTable - In the implementation block
@property (nonatomic,retain) NSMutableArray * changeDescriptors;                                        //@synthesize changeDescriptors=_changeDescriptors - In the implementation block
@property (assign,nonatomic) char isGrouped;                                                            //@synthesize isGrouped=_isGrouped - In the implementation block
@property (assign,getter=isInDynamicLayoutMode,nonatomic) char inDynamicLayoutMode;                     //@synthesize inDynamicLayoutMode=_inDynamicLayoutMode - In the implementation block
@property (nonatomic,retain) NSCountedSet * dynamicLayoutParticipants;                                  //@synthesize dynamicLayoutParticipants=_dynamicLayoutParticipants - In the implementation block
@property (nonatomic,retain) TSTLayout * dynamicLayout;                                                 //@synthesize dynamicLayout=_dynamicLayout - In the implementation block
@property (assign,nonatomic) double dynamicAddOrRemoveColumnElementSize;                                //@synthesize dynamicAddOrRemoveColumnElementSize=_dynamicAddOrRemoveColumnElementSize - In the implementation block
@property (assign,nonatomic) double dynamicAddOrRemoveRowElementSize;                                   //@synthesize dynamicAddOrRemoveRowElementSize=_dynamicAddOrRemoveRowElementSize - In the implementation block
@property (assign,nonatomic) char dynamicBandedFill;                                                    //@synthesize dynamicBandedFill=_dynamicBandedFill - In the implementation block
@property (assign,nonatomic) char dynamicBandedFillSetting;                                             //@synthesize dynamicBandedFillSetting=_dynamicBandedFillSetting - In the implementation block
@property (assign,nonatomic) int dynamicColumnAdjustment;                                               //@synthesize dynamicColumnAdjustment=_dynamicColumnAdjustment - In the implementation block
@property (assign,nonatomic) double dynamicColumnTabSize;                                               //@synthesize dynamicColumnTabSize=_dynamicColumnTabSize - In the implementation block
@property (nonatomic,retain) id<TSTLayoutDynamicContentProtocol> dynamicContentDelegate;                //@synthesize dynamicContentDelegate=_dynamicContentDelegate - In the implementation block
@property (nonatomic,retain) TSUColor * dynamicFontColor;                                               //@synthesize dynamicFontColor=_dynamicFontColor - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicFontColorCellRange;                                     //@synthesize dynamicFontColorCellRange=_dynamicFontColorCellRange - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicHidingContent;                                          //@synthesize dynamicHidingContent=_dynamicHidingContent - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicHidingRowsCols;                                         //@synthesize dynamicHidingRowsCols=_dynamicHidingRowsCols - In the implementation block
@property (assign,nonatomic) long long dynamicHidingRowsColsDirection;                                  //@synthesize dynamicHidingRowsColsDirection=_dynamicHidingRowsColsDirection - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicHidingText;                                             //@synthesize dynamicHidingText=_dynamicHidingText - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicRemovingText;                                           //@synthesize dynamicRemovingText=_dynamicRemovingText - In the implementation block
@property (nonatomic,retain) TSDInfoGeometry * dynamicInfoGeometry;                                     //@synthesize dynamicInfoGeometry=_dynamicInfoGeometry - In the implementation block
@property (assign,nonatomic) char dynamicRepressFrozenHeaderRows;                                       //@synthesize dynamicRepressFrozenHeaderRows=_dynamicRepressFrozenHeaderRows - In the implementation block
@property (assign,nonatomic) char dynamicRepressFrozenHeaderColumns;                                    //@synthesize dynamicRepressFrozenHeaderColumns=_dynamicRepressFrozenHeaderColumns - In the implementation block
@property (nonatomic,retain) TSTLayoutDynamicResizeInfo * dynamicResizeInfo;                            //@synthesize dynamicResizeInfo=_dynamicResizeInfo - In the implementation block
@property (assign,nonatomic) char dynamicResizingColumns;                                               //@synthesize dynamicResizingColumns=_dynamicResizingColumns - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicResizingColumnRange;                                    //@synthesize dynamicResizingColumnRange=_dynamicResizingColumnRange - In the implementation block
@property (assign,nonatomic) double dynamicResizingColumnAdjustment;                                    //@synthesize dynamicResizingColumnAdjustment=_dynamicResizingColumnAdjustment - In the implementation block
@property (assign,nonatomic) char dynamicResizingRows;                                                  //@synthesize dynamicResizingRows=_dynamicResizingRows - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicResizingRowRange;                                       //@synthesize dynamicResizingRowRange=_dynamicResizingRowRange - In the implementation block
@property (assign,nonatomic) double dynamicResizingRowAdjustment;                                       //@synthesize dynamicResizingRowAdjustment=_dynamicResizingRowAdjustment - In the implementation block
@property (assign,nonatomic) TSUCellRect dynamicRevealingRowsCols;                                      //@synthesize dynamicRevealingRowsCols=_dynamicRevealingRowsCols - In the implementation block
@property (assign,nonatomic) long long dynamicRevealingRowsColsDirection;                               //@synthesize dynamicRevealingRowsColsDirection=_dynamicRevealingRowsColsDirection - In the implementation block
@property (assign,nonatomic) int dynamicRowAdjustment;                                                  //@synthesize dynamicRowAdjustment=_dynamicRowAdjustment - In the implementation block
@property (assign,nonatomic) double dynamicRowTabSize;                                                  //@synthesize dynamicRowTabSize=_dynamicRowTabSize - In the implementation block
@property (nonatomic,retain) TSTCellSelection * dynamicSelection;                                       //@synthesize dynamicSelection=_dynamicSelection - In the implementation block
@property (assign,nonatomic) double dynamicTableNameResize;                                             //@synthesize dynamicTableNameResize=_dynamicTableNameResize - In the implementation block
@property (assign,nonatomic) TSUCellCoord dynamicSuppressingConditionalStylesCellID;                    //@synthesize dynamicSuppressingConditionalStylesCellID=_dynamicSuppressingConditionalStylesCellID - In the implementation block
@property (nonatomic,retain) id<TSTLayoutDynamicCellFillProtocol> dynamicCellFillDelegate;              //@synthesize dynamicCellFillDelegate=_dynamicCellFillDelegate - In the implementation block
@property (nonatomic,readonly) TSWPColumnStyle * defaultColumnStyle;                                    //@synthesize defaultColumnStyle=_defaultColumnStyle - In the implementation block
@property (assign,nonatomic) TSTTableInfo * tableInfo;                                                  //@synthesize tableInfo=_tableInfo - In the implementation block
@property (assign,nonatomic,__weak) TSKChangeNotifier * changeNotifier;                                 //@synthesize changeNotifier=_changeNotifier - In the implementation block
@property (assign,nonatomic) unsigned maxConcurrentTasks;                                               //@synthesize maxConcurrentTasks=_maxConcurrentTasks - In the implementation block
@property (assign,nonatomic) unsigned numCellsPerTask;                                                  //@synthesize numCellsPerTask=_numCellsPerTask - In the implementation block
@property (assign,nonatomic) int tableEnvironment;                                                      //@synthesize tableEnvironment=_tableEnvironment - In the implementation block
@property (assign,nonatomic) char dynamicRepResize;                                                     //@synthesize dynamicRepResize=_dynamicRepResize - In the implementation block
@property (assign,nonatomic) char dynamicRepResizeSessionInProgress;                                    //@synthesize dynamicRepResizeSessionInProgress=_dynamicRepResizeSessionInProgress - In the implementation block
@property (assign,nonatomic) double dynamicWidthResize;                                                 //@synthesize dynamicWidthResize=_dynamicWidthResize - In the implementation block
@property (assign,nonatomic) double dynamicHeightResize;                                                //@synthesize dynamicHeightResize=_dynamicHeightResize - In the implementation block
@property (nonatomic,copy) TSDLayoutGeometry * dynamicSavedLayoutGeometry;                              //@synthesize dynamicSavedLayoutGeometry=_dynamicSavedLayoutGeometry - In the implementation block
@property (nonatomic,readonly) double dynamicFooterHeight;                                              //@synthesize dynamicFooterHeight=_dynamicFooterHeight - In the implementation block
@property (nonatomic,retain) TSTMergeRangeSortedSet * mergeRangesForLayoutPass;                         //@synthesize mergeRangesForLayoutPass=_mergeRangesForLayoutPass - In the implementation block
@property (assign,nonatomic) char processHiddenRowsForExport;                                           //@synthesize processHiddenRowsForExport=_processHiddenRowsForExport - In the implementation block
@property (nonatomic,readonly) unsigned short numberOfColumns; 
@property (nonatomic,readonly) unsigned numberOfRows; 
@property (assign,nonatomic) char tableNameEnabled;                                                     //@synthesize tableNameEnabled=_tableNameEnabled - In the implementation block
@property (nonatomic,readonly) TSUCellRect cellRange; 
@property (nonatomic,readonly) unsigned numberOfNonHiddenFooterRows; 
@property (nonatomic,readonly) TSUCellRect categoryColumnsCellRange; 
@property (nonatomic,readonly) TSUCellRect entireHeaderColumnsCellRange; 
@property (nonatomic,readonly) TSUCellRect entireActualHeaderColumnsCellRange; 
@property (nonatomic,readonly) TSUCellRect entireHeaderRowsCellRange; 
@property (nonatomic,readonly) TSUCellRect entireFooterRowsCellRange; 
@property (nonatomic,readonly) TSUCellRect entireBodyRowsCellRange; 
@property (nonatomic,readonly) TSUCellRect entireBodyCellRange; 
@property (nonatomic,readonly) NSIndexSet * visibleRowIndices; 
@property (nonatomic,readonly) NSIndexSet * visibleColumnIndices; 
@property (nonatomic,readonly) NSIndexSet * hiddenRowIndices; 
@property (nonatomic,readonly) NSIndexSet * hiddenColumnIndices; 
@property (nonatomic,readonly) char hasActiveFilters; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned numberOfHeaderRows; 
@property (nonatomic,readonly) unsigned numberOfFooterRows; 
@property (nonatomic,readonly) unsigned numberOfHeaderColumns; 
+(id)tableNameTextEngine:(id)arg1 ;
+(CGSize)tableNameTextSize:(id)arg1 ;
+(double)effectiveTableNameHeightForTable:(id)arg1 ;
+(int)tableRowsBehaviorForTable:(id)arg1 andEnvironment:(int)arg2 ;
-(void)dealloc;
-(NSString *)description;
-(unsigned short)numberOfColumns;
-(void)validate;
-(unsigned)numberOfRows;
-(char)isGrouped;
-(char)isCategorized;
-(TSKChangeNotifier *)changeNotifier;
-(TSWPColumnStyle *)defaultColumnStyle;
-(int)tableRowsBehavior;
-(TSTTableInfo *)tableInfo;
-(char)isDynamicallyChangingSelection;
-(char)emptyFilteredTable;
-(unsigned)numberOfHeaderRows;
-(unsigned)numberOfHeaderColumns;
-(void)beginDynamicMode:(id)arg1 ;
-(id<TSTLayoutDynamicContentProtocol>)dynamicContentDelegate;
-(char)isDynamicallyResizingTableName;
-(TSUCellRect)cellRange;
-(id)tableNameTextEngine;
-(char)useBandedFill;
-(TSUCellCoord)modelCellIDForLayoutCellID:(TSUCellCoord)arg1 ;
-(TSUCellCoord)layoutCellIDForModelCellID:(TSUCellCoord)arg1 ;
-(unsigned long long)tableAreaForCellID:(TSUCellCoord)arg1 ;
-(char)isDynamicallyChangingContent;
-(char)cell:(id*)arg1 forCellID:(TSUCellCoord)arg2 ;
-(TSUCellCoord)dynamicSuppressingConditionalStylesCellID;
-(char)shouldRowUseBandedFill:(unsigned)arg1 ;
-(TSDFill *)bandedFillObject;
-(char)dynamicRepResize;
-(char)isDynamicallyHidingRowsCols;
-(TSTWPColumnCache *)cellIDToWPColumnCache;
-(char)isDynamicallyHidingRowsColsCellID:(TSUCellCoord)arg1 ;
-(char)isDynamicallyHidingContentOfCellID:(TSUCellCoord)arg1 ;
-(char)isDynamicallyHidingTextOfCellID:(TSUCellCoord)arg1 ;
-(char)isDynamicallyChangingFontColorOfCellID:(TSUCellCoord)arg1 ;
-(id)validateCellForDrawing:(TSUCellCoord)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(char)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9 ;
-(char)isDynamicallyChangingRowCount;
-(int)dynamicRowAdjustment;
-(char)headerRowsFrozen;
-(char)headerColumnsFrozen;
-(unsigned)numberOfFooterRows;
-(char)tableNameEnabled;
-(double)tableNameHeight;
-(void)setTableNameEnabled:(char)arg1 ;
-(void)setHeaderRowsFrozen:(char)arg1 ;
-(void)setHeaderColumnsFrozen:(char)arg1 ;
-(void)setTableInfo:(TSTTableInfo *)arg1 ;
-(char)isRowUserHidden:(unsigned)arg1 ;
-(char)anyRowsUserHiddenInCellRange:(TSUCellRect)arg1 ;
-(NSIndexSet *)visibleRowIndices;
-(NSIndexSet *)visibleColumnIndices;
-(void)addChangeDescriptorWithType:(int)arg1 andCellRange:(TSUCellRect)arg2 ;
-(char)validateLayoutHint:(id)arg1 ;
-(TSTWidthHeightCache *)widthHeightCache;
-(double)calculatedTableNameHeight;
-(double)calculatedTableNameHeightIncludingDynamicResize:(char)arg1 ;
-(double)dynamicTableNameResize;
-(char)isDynamicallyChangingRowOrColumnCount;
-(TSTHiddenRowsColumnsCache *)hiddenRowsColumnsCache;
-(NSEdgeInsets)defaultPaddingForCellID:(TSUCellCoord)arg1 ;
-(NSEdgeInsets)paddingForCellID:(TSUCellCoord)arg1 ;
-(double)fontHeightOfParagraphStyle:(id)arg1 ;
-(void)invalidateBandedFill;
-(char)isDynamicallySettingBandedFill;
-(char)dynamicBandedFill;
-(char)dynamicBandedFillSetting;
-(void)setDynamicRepResize:(char)arg1 ;
-(void)setDynamicSavedLayoutGeometry:(TSDLayoutGeometry *)arg1 ;
-(unsigned)modelRowForLayoutRow:(unsigned)arg1 ;
-(char)isDynamicallyChangingColumnCount;
-(unsigned)layoutRowForModelRow:(unsigned)arg1 ;
-(char)isDynamicallyRevealingRowsCols:(long long)arg1 rowColIndex:(unsigned)arg2 ;
-(char)isDynamicallyHidingRowsCols:(long long)arg1 rowColIndex:(unsigned)arg2 ;
-(char)processHiddenRowsForExport;
-(TSTLayout *)dynamicLayout;
-(void)addChangeDescriptorWithType:(int)arg1 andCellRange:(TSUCellRect)arg2 andStrokeRange:(TSUCellRect)arg3 ;
-(void)addChangeDescriptor:(id)arg1 ;
-(NSMutableArray *)changeDescriptors;
-(void)setChangeNotifier:(TSKChangeNotifier *)arg1 ;
-(void)validateBandedFill;
-(void)validateDynamicResizeInfo;
-(void)validateChangeDescriptorQueue;
-(void)invalidateTableNameHeight;
-(void)invalidateDefaultFontHeights;
-(void)validateRowVisibility:(id)arg1 ;
-(void)validateDefaultFontHeights;
-(NSEdgeInsets)edgeInsetsFromPadding:(id)arg1 ;
-(TSTDupContentCache *)dupContentCache;
-(unsigned)numCellsPerTask;
-(TSUColor *)dynamicFontColor;
-(void)setProcessHiddenRowsForExport:(char)arg1 ;
-(id)newLayoutHint;
-(char)hintIsValid:(id)arg1 ;
-(void)resetModelHeightWidthCache;
-(void)clearModelHeightWidthCacheForCellRange:(TSUCellRect)arg1 ;
-(CGSize)tableNameTextSize;
-(char)isDynamicallyChangingInfoGeometry;
-(char)isDynamicallyRevealingRowsCols;
-(void)updateDynamicTableNameSize:(double)arg1 ;
-(char)isDynamicallyColumnTabResizing;
-(char)isDynamicallyRowTabResizing;
-(void)updateDynamicFontColor:(id)arg1 andRange:(TSUCellRect)arg2 ;
-(void)captureDynamicResizeInfo;
-(void)updateDynamicResizeInfo:(id)arg1 ;
-(void)invalidateDynamicResizeInfo;
-(void)setMaxConcurrentTasks:(unsigned)arg1 ;
-(TSTWPColumnCache *)tempWPColumnCache;
-(int)tableEnvironment;
-(void)setTableEnvironment:(int)arg1 ;
-(unsigned)maxConcurrentTasks;
-(void)setNumCellsPerTask:(unsigned)arg1 ;
-(double)dynamicAddOrRemoveColumnElementSize;
-(double)dynamicAddOrRemoveRowElementSize;
-(int)dynamicColumnAdjustment;
-(double)dynamicColumnTabSize;
-(TSUCellRect)dynamicFontColorCellRange;
-(TSDInfoGeometry *)dynamicInfoGeometry;
-(double)dynamicHeightResize;
-(void)setDynamicHeightResize:(double)arg1 ;
-(double)dynamicWidthResize;
-(void)setDynamicWidthResize:(double)arg1 ;
-(char)dynamicResizingColumns;
-(double)dynamicResizingColumnAdjustment;
-(TSUCellRect)dynamicResizingColumnRange;
-(char)dynamicResizingRows;
-(double)dynamicResizingRowAdjustment;
-(TSUCellRect)dynamicResizingRowRange;
-(double)dynamicRowTabSize;
-(TSDLayoutGeometry *)dynamicSavedLayoutGeometry;
-(char)headerRowsRepeat;
-(char)headerColumnsRepeat;
-(void)setHeaderColumnsRepeat:(char)arg1 ;
-(void)setHeaderRowsRepeat:(char)arg1 ;
-(void)iterateCellsInRange:(TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(/*^block*/id)arg4 ;
-(id)indexesForSummaryRows;
-(void)clearRenderingCaches;
-(TSUCellRect)expandCellRangeToCoverMergedCells:(TSUCellRect)arg1 ;
-(unsigned)indexOfVisibleRowAfterAndIncludingRowAtIndex:(unsigned)arg1 ;
-(unsigned)indexOfVisibleRowBeforeAndIncludingRowAtIndex:(unsigned)arg1 ;
-(unsigned short)indexOfVisibleColumnAfterAndIncludingColumnAtIndex:(unsigned short)arg1 ;
-(unsigned short)indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:(unsigned short)arg1 ;
-(char)isCategorySummaryRowCollapsed:(unsigned)arg1 ;
-(id)indexesForCategoryColumnsInRegion:(id)arg1 ;
-(id)indexesForSummaryRowsInRegion:(id)arg1 ;
-(id)indexesForLabelRowsInRegion:(id)arg1 ;
-(id)indexesForSummaryAndLabelRows;
-(char)isCategoryColumn:(unsigned short)arg1 ;
-(char)isCategorySummaryRow:(unsigned)arg1 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(id)indexesForCategoryColumns;
-(id)initWithInfo:(id)arg1 layoutEngineBundle:(id)arg2 ;
-(char)hasActiveFilters;
-(char)isCategoryGroupValueCell:(TSUCellCoord)arg1 ;
-(char)isCategoryGroupValueLabelCell:(TSUCellCoord)arg1 ;
-(char)isCategorySummaryOrLabelRow:(unsigned)arg1 ;
-(unsigned long long)tableStyleAreaForCellID:(TSUCellCoord)arg1 ;
-(unsigned short)indexOfVisibleColumnBeforeColumnAtIndex:(unsigned short)arg1 ;
-(unsigned short)indexOfVisibleColumnAfterColumnAtIndex:(unsigned short)arg1 ;
-(unsigned)indexOfVisibleRowBeforeRowAtIndex:(unsigned)arg1 ;
-(unsigned)indexOfVisibleRowAfterRowAtIndex:(unsigned)arg1 ;
-(char)hasHiddenRowAtIndex:(unsigned)arg1 ;
-(char)hasHiddenColumnAtIndex:(unsigned short)arg1 ;
-(char)anyHiddenRowsInCellRange:(TSUCellRect)arg1 ;
-(char)anyHiddenColumnsInCellRange:(TSUCellRect)arg1 ;
-(char)hasRangeSpanningRowsForCellRange:(TSUCellRect)arg1 ;
-(id)indexesForLabelRows;
-(unsigned)numberOfCategoryLevels;
-(unsigned char)categoryGroupLevelAtSummaryRow:(unsigned)arg1 ;
-(unsigned char)categoryGroupLevelAtLabelRow:(unsigned)arg1 ;
-(id)mergesIntersectingRange:(TSUCellRect)arg1 ;
-(id)mergesIntersectingCellRegion:(id)arg1 ;
-(char)isCategorySummaryCell:(TSUCellCoord)arg1 ;
-(char)isCategoryLabelCell:(TSUCellCoord)arg1 ;
-(char)isCategoryColumnUneditableCell:(TSUCellCoord)arg1 ;
-(id)cellIteratorWithRange:(TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 ;
-(void)iterateCellsAndTerminateWithIterator:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(double)dynamicFooterHeight;
-(double)widthOfColumn:(unsigned short)arg1 skipDynamicSwap:(char)arg2 returnZeroIfHidden:(char)arg3 outIsFitting:(char*)arg4 ;
-(double)heightOfRow:(unsigned)arg1 skipDynamicSwap:(char)arg2 withStrokeHeights:(char)arg3 returnZeroIfHidden:(char)arg4 clampToPartitionSize:(char)arg5 maximumPartitionSize:(CGSize)arg6 outIsFitting:(char*)arg7 ;
-(TSUCellRect)entireFooterRowsCellRange;
-(TSUCellRect)entireHeaderColumnsCellRange;
-(char)isEntireCellRangeHidden:(TSUCellRect)arg1 ;
-(TSUCellRect)entireHeaderRowsCellRange;
-(char)isDynamicallyRepressingFrozenHeaderRows;
-(char)isDynamicallyRepressingFrozenHeaderColumns;
-(char)isInDynamicLayoutMode;
-(CGSize)contentSizeForCellRange:(TSUCellRect)arg1 skipDynamicSwap:(char)arg2 ;
-(void)clearDynamicStrokesForCellRange:(TSUCellRect)arg1 ;
-(NSPointerArray *)leftColumnStrokes;
-(NSPointerArray *)rightColumnStrokes;
-(NSPointerArray *)topRowStrokes;
-(NSPointerArray *)bottomRowStrokes;
-(double)strokeHeightOfGridRow:(unsigned)arg1 inColumnRange:(TSTSimpleRange)arg2 ;
-(double)strokeWidthOfGridColumn:(unsigned)arg1 inRowRange:(TSTSimpleRange)arg2 ;
-(void)enumerateMergedStrokesForGridColumn:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateMergedStrokesForGridRow:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(double)strokeHeightOfGridRow:(unsigned)arg1 beginColumn:(unsigned)arg2 endColumn:(unsigned)arg3 ;
-(void)enumerateMergedStrokesAndCapsForGridColumn:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(double)strokeWidthOfGridColumn:(unsigned)arg1 beginRow:(unsigned)arg2 endRow:(unsigned)arg3 ;
-(void)enumerateMergedStrokesAndCapsForGridRow:(unsigned)arg1 from:(unsigned)arg2 to:(unsigned)arg3 usingBlock:(/*^block*/id)arg4 ;
-(unsigned)numberOfNonHiddenFooterRows;
-(double)strokeWidthOfGridColumn:(unsigned)arg1 atRowIndex:(unsigned)arg2 ;
-(double)strokeHeightOfGridRow:(unsigned)arg1 atColumnIndex:(unsigned)arg2 ;
-(char)isDynamicallyRemovingTextOfCellID:(TSUCellCoord)arg1 ;
-(id)customStrokeProvider;
-(void)strokesForCellID:(TSUCellCoord)arg1 top:(id*)arg2 left:(id*)arg3 bottom:(id*)arg4 right:(id*)arg5 ;
-(void)updateCellRange;
-(void)validateStrokesArrays:(id)arg1 ;
-(void)p_validateStrokesForRegion:(id)arg1 ;
-(void)verifyStrokes;
-(void)p_validateStrokeWidthCachesForRegion:(id)arg1 invalidateStrokeDefaults:(char)arg2 ;
-(char)isDynamicallyResizingForColumnRowAdd:(long long)arg1 rowColIndex:(unsigned)arg2 ;
-(double)clampRowHeightAccountingForMaximumPartitionSize:(CGSize)arg1 rowIndex:(unsigned)arg2 rowHeight:(double)arg3 ;
-(id)newTextEngineForCell:(id)arg1 atCellID:(TSUCellCoord)arg2 textStyle:(id)arg3 ;
-(id)p_strokesForGridColumn:(unsigned)arg1 isLeft:(char)arg2 takeStrokeWriteLock:(char)arg3 ;
-(id)p_strokesForGridRow:(unsigned)arg1 isTop:(char)arg2 takeStrokeWriteLock:(char)arg3 ;
-(char)adjustGridColumnForVisibility:(unsigned*)arg1 isLeft:(char)arg2 ;
-(char)adjustGridRowForVisibility:(unsigned*)arg1 isTop:(char)arg2 ;
-(void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridRow:(unsigned)arg3 isTop:(char)arg4 beginColumn:(unsigned)arg5 endColumn:(unsigned)arg6 ;
-(void)p_setDynamicStroke:(id)arg1 strokeOrder:(int)arg2 forGridColumn:(unsigned)arg3 isLeft:(char)arg4 beginRow:(unsigned)arg5 endRow:(unsigned)arg6 ;
-(id)mergedStrokesForGridRow:(unsigned)arg1 ;
-(id)mergedStrokesForGridColumn:(unsigned)arg1 ;
-(void)setClearedStrokeForGridColumn:(unsigned)arg1 beginRow:(unsigned)arg2 endRow:(unsigned)arg3 ;
-(void)setClearedStrokeForGridRow:(unsigned)arg1 beginColumn:(unsigned)arg2 endColumn:(unsigned)arg3 ;
-(double)contentWidthForCellRange:(TSUCellRect)arg1 skipDynamicSwap:(char)arg2 ;
-(double)contentHeightForCellRange:(TSUCellRect)arg1 skipDynamicSwap:(char)arg2 maximumPartitionSize:(CGSize)arg3 ;
-(double)p_contentWidthForCellRange:(TSUCellRect)arg1 skipDynamicSwap:(char)arg2 validationBundle:(id)arg3 ;
-(void)invalidateStrokeDefaults;
-(void)invalidateStrokeSpills;
-(NSIndexSet *)hiddenColumnIndices;
-(NSIndexSet *)hiddenRowIndices;
-(void)p_invalidateClearedStrokesForCellRegion:(id)arg1 ;
-(void)p_clearStrokesForMergesInCellRegion:(id)arg1 ;
-(TSTStrokeDefaultVendor *)strokesDefaultVendor;
-(void)measureWithLayoutState:(id)arg1 ;
-(void)p_setDefaultFontHeight:(double)arg1 forTableStyleArea:(unsigned long long)arg2 ;
-(unsigned short)modelColumnForLayoutColumn:(unsigned short)arg1 ;
-(unsigned short)layoutColumnForModelColumn:(unsigned short)arg1 ;
-(unsigned)nonUserHiddenRowAfterAndIncludingRow:(unsigned)arg1 ;
-(TSUCellRect)entireBodyRowsCellRange;
-(NSCountedSet *)dynamicLayoutParticipants;
-(void)validateTableNameHeight;
-(void)modifySafelyUsingBlock:(/*^block*/id)arg1 ;
-(void)p_validateCellIDToWPColumnCacheForChangeDescriptors:(id)arg1 ;
-(void)validateLayoutEngineForChangeDescriptors:(id)arg1 ;
-(void)validateStrokesForChangeDescriptors:(id)arg1 ;
-(id)validateFittingRegionForChangeDescriptors:(id)arg1 ;
-(id)validateFittingInfoForValidationRegion:(id)arg1 rowsNeedingFittingInfo:(id)arg2 ;
-(void)waitForLayoutToComplete:(id)arg1 ;
-(void)finalizeLayoutPassWithRowsNeedingFittingInfo:(id)arg1 ;
-(void)queueCellForValidation:(TSUCellRect)arg1 cell:(id)arg2 textStyle:(id)arg3 modelMergeRange:(TSUCellRect)arg4 wrap:(char)arg5 verticalAlignment:(int)arg6 padding:(id)arg7 prop:(char)arg8 layoutCacheFlags:(int)arg9 validationBundle:(id)arg10 layoutTask:(id)arg11 ;
-(void)p_addFittingInfoForEmptyMergeRange:(TSUCellRect)arg1 ;
-(TSUCellCoord)p_validateFittingInfoForEmptyCellsBetween:(TSUCellCoord)arg1 andCellID:(TSUCellCoord)arg2 inRange:(TSUCellRect)arg3 widthHeightCollection:(id)arg4 ;
-(void)validateFittingInfoForCell:(id)arg1 cellID:(TSUCellCoord)arg2 mergeRange:(TSUCellRect)arg3 setFitting:(char)arg4 layoutTask:(id)arg5 widthHeightCollection:(id)arg6 validationBundle:(id)arg7 ;
-(void)processLayoutTask:(id)arg1 validationBundle:(id)arg2 ;
-(void)p_validateFittingInfoWithCellRangeWorker:(TSUCellRect)arg1 widthHeightCollection:(id)arg2 containsMerges:(char)arg3 validationBundle:(id)arg4 ;
-(void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(TSUCellCoord)arg1 andEndCellID:(TSUCellCoord)arg2 widthHeightCollection:(id)arg3 ;
-(id)mergeRangesProppingRowHeightsInRegion:(id)arg1 ;
-(char)p_containsGradientThatFillsContainerInStyle:(id)arg1 ;
-(void)p_validationFittingCellRegionForColumnsDeleted:(id)arg1 cellRegionGatherer:(id)arg2 ;
-(void)p_validationFittingCellRegionForColumnsInserted:(id)arg1 cellRegionGatherer:(id)arg2 ;
-(void)p_validationFittingCellRegionForColumnsVisibility:(id)arg1 cellRegionGatherer:(id)arg2 ;
-(void)p_validationFittingCellRegionForColumnsMovedFrom:(id)arg1 toColumnIndex:(unsigned short)arg2 cellRegionGatherer:(id)arg3 ;
-(void)p_validationFittingCellRegionForRowsDeleted:(id)arg1 cellRegionGatherer:(id)arg2 ;
-(void)p_validationFittingCellRegionForRowsInserted:(id)arg1 cellRegionGatherer:(id)arg2 ;
-(void)p_validationFittingCellRegionForRowsMovedFrom:(id)arg1 toRowIndex:(unsigned)arg2 cellRegionGatherer:(id)arg3 ;
-(void)p_validationFittingCellRegionForRangeMergeUnmerge:(id)arg1 cellRegionGatherer:(id)arg2 ;
-(void)p_validationFittingCellRegionForStrokesChanged:(id)arg1 cellRegionGatherer:(id)arg2 ;
-(void)p_validationFittingForChangeDescriptorType:(int)arg1 regionFromChangeDescriptor:(id)arg2 cellRegionGatherer:(id)arg3 ;
-(id)p_validationBundleForRegionToValidate:(id)arg1 ;
-(void)validateFittingInfoWithCellRange:(TSUCellRect)arg1 validationBundle:(id)arg2 ;
-(char)p_containsGradientFillThatFillsContainerInCell:(id)arg1 cellContents:(id)arg2 ;
-(double)contentWidthForCellRange:(TSUCellRect)arg1 validationBundle:(id)arg2 ;
-(id)p_resolvedTextStyleForCell:(id)arg1 atCellID:(TSUCellCoord)arg2 textStyle:(id)arg3 outNaturalAlignment:(int*)arg4 outCellDirection:(int*)arg5 ;
-(id)newTextEngineForCell:(id)arg1 atCellID:(TSUCellCoord)arg2 textStyle:(id)arg3 naturalAlignment:(int)arg4 cellDirection:(int)arg5 ;
-(double)unwrappedFittingWidthsForColumnInCellRegionWorker:(id)arg1 ;
-(id)formattedDataParagraphStylePropertyMapForCell:(id)arg1 atCellID:(TSUCellCoord)arg2 ;
-(id)tableStrokeProvider;
-(TSUCellRect)categoryColumnsCellRange;
-(TSUCellRect)entireActualHeaderColumnsCellRange;
-(TSUCellRect)entireBodyCellRange;
-(double)heightOfRowIgnoringFitting:(unsigned)arg1 withStrokeHeights:(char)arg2 ;
-(void)setStrokeSpillForRightGridColumn:(unsigned)arg1 leftGridColumn:(unsigned)arg2 inRow:(unsigned)arg3 ;
-(char)hasStrokeSpillForLeftGridColumn:(unsigned)arg1 inRow:(unsigned)arg2 ;
-(void)setDynamicCellBorder:(id)arg1 forCellID:(TSUCellCoord)arg2 ;
-(void)endDynamicMode:(id)arg1 ;
-(id)modelCellRegionForLayoutCellRegion:(id)arg1 ;
-(id)layoutCellRegionForModelCellRegion:(id)arg1 ;
-(char)isDynamicallyResizingForColumnRowAdd:(long long)arg1 ;
-(char)isDynamicallyResizingCellIDForColumnRowAdd:(TSUCellCoord)arg1 ;
-(TSUCellRect)expandCellRangeToVisibleNeighbors:(TSUCellRect)arg1 ;
-(unsigned)firstEmptyBodyRow;
-(char)containsAnyContentInRange:(TSUCellRect)arg1 ;
-(id<TSTLayoutDynamicCellFillProtocol>)dynamicCellFillDelegate;
-(char)isDynamicallyChangingCellFill;
-(id)fittingWidthsMapForColumns:(id)arg1 includeStrokes:(char)arg2 ;
-(id)unwrappedFittingWidthsForColumnsInCellRegion:(id)arg1 ;
-(char)isCategoryLastSummaryRowCollapsed;
-(char)isLastVisibleBodyRowCategorySummaryOrLabelRow;
-(void)readSafelyUsingBlock:(/*^block*/id)arg1 ;
-(void)setStrokesDefaultVendor:(TSTStrokeDefaultVendor *)arg1 ;
-(void)setCellIDToWPColumnCache:(TSTWPColumnCache *)arg1 ;
-(void)setDupContentCache:(TSTDupContentCache *)arg1 ;
-(void)setTempWPColumnCache:(TSTWPColumnCache *)arg1 ;
-(void)setWidthHeightCache:(TSTWidthHeightCache *)arg1 ;
-(void)setHiddenRowsColumnsCache:(TSTHiddenRowsColumnsCache *)arg1 ;
-(void)setBandedFillObject:(TSDFill *)arg1 ;
-(void)setTableRowsBehavior:(int)arg1 ;
-(void)setInDynamicLayoutMode:(char)arg1 ;
-(void)setDynamicAddOrRemoveColumnElementSize:(double)arg1 ;
-(void)setDynamicAddOrRemoveRowElementSize:(double)arg1 ;
-(void)setDynamicBandedFill:(char)arg1 ;
-(void)setDynamicBandedFillSetting:(char)arg1 ;
-(void)setDynamicColumnAdjustment:(int)arg1 ;
-(void)setDynamicColumnTabSize:(double)arg1 ;
-(void)setDynamicFontColor:(TSUColor *)arg1 ;
-(void)setDynamicFontColorCellRange:(TSUCellRect)arg1 ;
-(char)dynamicRepResizeSessionInProgress;
-(void)setDynamicRepResizeSessionInProgress:(char)arg1 ;
-(void)setDynamicInfoGeometry:(TSDInfoGeometry *)arg1 ;
-(void)setDynamicResizingColumns:(char)arg1 ;
-(void)setDynamicResizingColumnRange:(TSUCellRect)arg1 ;
-(void)setDynamicResizingColumnAdjustment:(double)arg1 ;
-(void)setDynamicResizingRows:(char)arg1 ;
-(void)setDynamicResizingRowRange:(TSUCellRect)arg1 ;
-(void)setDynamicResizingRowAdjustment:(double)arg1 ;
-(void)setDynamicRowAdjustment:(int)arg1 ;
-(void)setDynamicRowTabSize:(double)arg1 ;
-(TSTCellSelection *)dynamicSelection;
-(void)setDynamicSelection:(TSTCellSelection *)arg1 ;
-(void)setDynamicTableNameResize:(double)arg1 ;
-(void)setDynamicSuppressingConditionalStylesCellID:(TSUCellCoord)arg1 ;
-(void)setChangeDescriptors:(NSMutableArray *)arg1 ;
-(TSTMergeRangeSortedSet *)mergeRangesForLayoutPass;
-(void)setMergeRangesForLayoutPass:(TSTMergeRangeSortedSet *)arg1 ;
-(TSTFontInfoCache *)fontInfoCache;
-(void)setFontInfoCache:(TSTFontInfoCache *)arg1 ;
-(TSUWidthLimitedQueue *)layoutValidateQueue;
-(void)setLayoutValidateQueue:(TSUWidthLimitedQueue *)arg1 ;
-(TSUWidthLimitedQueue *)layoutMeasureQueue;
-(void)setLayoutMeasureQueue:(TSUWidthLimitedQueue *)arg1 ;
-(NSObject*<OS_dispatch_queue>)layoutConcurrentQueue;
-(void)setLayoutConcurrentQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setTopRowStrokes:(NSPointerArray *)arg1 ;
-(void)setBottomRowStrokes:(NSPointerArray *)arg1 ;
-(void)setLeftColumnStrokes:(NSPointerArray *)arg1 ;
-(void)setRightColumnStrokes:(NSPointerArray *)arg1 ;
-(TSTConcurrentMutableIndexSet *)spillStrokeColumns;
-(void)setSpillStrokeColumns:(TSTConcurrentMutableIndexSet *)arg1 ;
-(TSTCellRegion *)cellRegionForClearedMergeStrokes;
-(void)setCellRegionForClearedMergeStrokes:(TSTCellRegion *)arg1 ;
-(TSTStrokeWidthCache *)columnToStrokeWidthCache;
-(void)setColumnToStrokeWidthCache:(TSTStrokeWidthCache *)arg1 ;
-(TSTStrokeWidthCache *)rowToStrokeHeightCache;
-(void)setRowToStrokeHeightCache:(TSTStrokeWidthCache *)arg1 ;
-(TSTRWRetainedPointerKeyDictionary *)paraStyleToHeightCache;
-(void)setParaStyleToHeightCache:(TSTRWRetainedPointerKeyDictionary *)arg1 ;
-(CGRect)tableNameBounds;
-(void)setTableNameBounds:(CGRect)arg1 ;
-(double)cachedTableNameHeight;
-(void)setCachedTableNameHeight:(double)arg1 ;
-(char)tableNameHeightValid;
-(void)setTableNameHeightValid:(char)arg1 ;
-(unsigned)cachedNumberOfColumns;
-(void)setCachedNumberOfColumns:(unsigned)arg1 ;
-(unsigned)cachedNumberOfRows;
-(void)setCachedNumberOfRows:(unsigned)arg1 ;
-(unsigned)cachedNumberOfHeaderColumns;
-(void)setCachedNumberOfHeaderColumns:(unsigned)arg1 ;
-(unsigned)cachedNumberOfHeaderRows;
-(void)setCachedNumberOfHeaderRows:(unsigned)arg1 ;
-(unsigned)cachedNumberOfFooterRows;
-(void)setCachedNumberOfFooterRows:(unsigned)arg1 ;
-(unsigned long long)cachedMaxNumberOfColumns;
-(void)setCachedMaxNumberOfColumns:(unsigned long long)arg1 ;
-(unsigned long long)cachedMaxNumberOfRows;
-(void)setCachedMaxNumberOfRows:(unsigned long long)arg1 ;
-(char)bandedFillIsValid;
-(void)setBandedFillIsValid:(char)arg1 ;
-(void)setUseBandedFill:(char)arg1 ;
-(char)tableDefaultFontHeightsAreValid;
-(void)setTableDefaultFontHeightsAreValid:(char)arg1 ;
-(NSMutableSet *)contentReadingThreads;
-(void)setContentReadingThreads:(NSMutableSet *)arg1 ;
-(void)setEmptyFilteredTable:(char)arg1 ;
-(void)setIsGrouped:(char)arg1 ;
-(void)setDynamicLayoutParticipants:(NSCountedSet *)arg1 ;
-(void)setDynamicLayout:(TSTLayout *)arg1 ;
-(void)setDynamicContentDelegate:(id<TSTLayoutDynamicContentProtocol>)arg1 ;
-(TSUCellRect)dynamicHidingContent;
-(void)setDynamicHidingContent:(TSUCellRect)arg1 ;
-(TSUCellRect)dynamicHidingRowsCols;
-(void)setDynamicHidingRowsCols:(TSUCellRect)arg1 ;
-(long long)dynamicHidingRowsColsDirection;
-(void)setDynamicHidingRowsColsDirection:(long long)arg1 ;
-(TSUCellRect)dynamicHidingText;
-(void)setDynamicHidingText:(TSUCellRect)arg1 ;
-(TSUCellRect)dynamicRemovingText;
-(void)setDynamicRemovingText:(TSUCellRect)arg1 ;
-(char)dynamicRepressFrozenHeaderRows;
-(void)setDynamicRepressFrozenHeaderRows:(char)arg1 ;
-(char)dynamicRepressFrozenHeaderColumns;
-(void)setDynamicRepressFrozenHeaderColumns:(char)arg1 ;
-(TSTLayoutDynamicResizeInfo *)dynamicResizeInfo;
-(void)setDynamicResizeInfo:(TSTLayoutDynamicResizeInfo *)arg1 ;
-(TSUCellRect)dynamicRevealingRowsCols;
-(void)setDynamicRevealingRowsCols:(TSUCellRect)arg1 ;
-(long long)dynamicRevealingRowsColsDirection;
-(void)setDynamicRevealingRowsColsDirection:(long long)arg1 ;
-(void)setDynamicCellFillDelegate:(id<TSTLayoutDynamicCellFillProtocol>)arg1 ;
@end

