/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCharts.framework/Versions/A/TSCharts
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCharts/TSCharts-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class TSCH3DLens;

@interface TSCH3DCamera : NSObject <NSCopying> {

	TSCH3DLens* _lens;
	float _viewportScale;
	float _viewportSamples;
	box<glm::detail::tvec2<int>> _viewport;
	tvec2<float> _containingViewportOffset;
	tmat4x4<float> _transform;

}

@property (assign,nonatomic) float viewportScale;                                         //@synthesize viewportScale=_viewportScale - In the implementation block
@property (assign,nonatomic) float viewportSamples;                                       //@synthesize viewportSamples=_viewportSamples - In the implementation block
@property (assign,nonatomic) box<glm::detail::tvec2<int>> viewport;                       //@synthesize viewport=_viewport - In the implementation block
@property (assign,nonatomic) tvec2<float> containingViewportOffset;                       //@synthesize containingViewportOffset=_containingViewportOffset - In the implementation block
@property (nonatomic,retain) TSCH3DLens * lens;                                           //@synthesize lens=_lens - In the implementation block
@property (nonatomic,readonly) tvec3<float> position; 
@property (nonatomic,readonly) tvec3<float> direction; 
@property (assign,nonatomic) tmat4x4<float> transform;                                    //@synthesize transform=_transform - In the implementation block
@property (nonatomic,readonly) tmat4x4<float> space; 
@property (nonatomic,readonly) tmat4x4<float> projection; 
@property (nonatomic,readonly) tmat4x4<float> normalizedProjection; 
@property (nonatomic,readonly) tmat4x4<float> viewportProjection; 
@property (nonatomic,readonly) tmat4x4<float> modelViewProjection; 
@property (nonatomic,readonly) tmat4x4<float> modelViewNormalizedProjection; 
+(id)perspective;
+(id)orthographicPerPixelWithBounds:(box<glm::detail::tvec2<int>>*)arg1 ;
+(id)orthographicWithSize:(tvec2<int>*)arg1 ;
+(id)perspectiveWithSize:(tvec2<int>*)arg1 ;
+(id)cameraWithLens:(id)arg1 size:(tvec2<int>*)arg2 ;
+(id)orthographicPerPixelWithSize:(tvec2<int>*)arg1 ;
+(id)orthographic;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)description;
-(void)setViewport:(box<glm::detail::tvec2<int>>)arg1 ;
-(box<glm::detail::tvec2<int>>)viewport;
-(tmat4x4<float>)transform;
-(tvec3<float>)position;
-(void)setPosition:(tvec3<float>)arg1 ;
-(tmat4x4<float>)space;
-(tvec3<float>)direction;
-(void)setTransform:(tmat4x4<float>)arg1 ;
-(void)setDirection:(tvec3<float>)arg1 ;
-(tmat4x4<float>)projection;
-(TSCH3DLens *)lens;
-(void)setContainingViewportSize:(const tvec2<int>*)arg1 ;
-(tmat4x4<float>)modelViewNormalizedProjection;
-(void)calculateCullingPlanes:(vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>>*)arg1 ;
-(id)narrowByNormalizedBounds:(box<glm::detail::tvec2<float>>*)arg1 ;
-(id)narrowedByNormalizedBounds:(box<glm::detail::tvec2<float>>*)arg1 ;
-(id)matrixDescription;
-(id)initWithLens:(id)arg1 size:(tvec2<int>*)arg2 ;
-(id)frustumSliceAtDistance:(float)arg1 ;
-(tmat4x4<float>)normalizedProjection;
-(void)setLens:(TSCH3DLens *)arg1 ;
-(id)shiftByPixels:(tvec2<float>*)arg1 ;
-(void)setViewportScale:(float)arg1 ;
-(void)setContainingViewportOffset:(tvec2<float>)arg1 ;
-(void)setViewportSamples:(float)arg1 ;
-(tvec3<float>)projectNormalizedPoint:(tvec2<float>*)arg1 planeDistance:(float)arg2 ;
-(tvec3<float>)fastProjectNormalizedPoint:(tvec2<float>*)arg1 planeDistance:(float)arg2 ;
-(tvec3<float>)backProjectCameraSpacePoint:(const tvec3<float>*)arg1 ;
-(tmat4x4<float>)viewportProjection;
-(tmat4x4<float>)modelViewProjection;
-(tmat4x4<float>)modelViewViewportProjectionWithViewportScale:(float)arg1 ;
-(id)narrowedByViewport:(box<glm::detail::tvec2<int>>*)arg1 ;
-(id)shiftedByPixels:(tvec2<float>*)arg1 ;
-(id)pixelAlignedForScaledViewport:(const box<glm::detail::tvec2<float>>*)arg1 viewportScale:(float)arg2 samples:(float)arg3 correspondingNoramlizedBounds:(const box<glm::detail::tvec2<float>>*)arg4 ;
-(id)narrowedByViewport:(const box<glm::detail::tvec2<int>>*)arg1 samples:(long long)arg2 ;
-(float)viewportScale;
-(float)viewportSamples;
-(tvec2<float>)containingViewportOffset;
@end

