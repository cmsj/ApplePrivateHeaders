/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSDRep.h>
#import <libobjc.A.dylib/CALayerDelegate.h>

@class TSDReflection, TSDShadow, TSDStyledInfo, TSDStyledLayout, NSString;

@interface TSDStyledRep : TSDRep <CALayerDelegate> {

	struct {
		unsigned shadowInvalid : 1;
	}  mFlags;

}

@property (nonatomic,readonly) TSDReflection * reflection; 
@property (nonatomic,readonly) double opacity; 
@property (nonatomic,readonly) TSDShadow * shadow; 
@property (nonatomic,readonly) TSDStyledInfo * styledInfo; 
@property (nonatomic,readonly) TSDStyledLayout * styledLayout; 
@property (nonatomic,readonly) CGRect reflectionFrameInRootForClipping; 
@property (nonatomic,copy,readonly) id blockToExcludeCaptionsAndDescendantsOfCaptions; 
@property (nonatomic,readonly) char shouldShowShadow; 
@property (nonatomic,readonly) char shouldShowReflection; 
@property (nonatomic,readonly) char isInvisible; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(NSString *)description;
-(TSDReflection *)reflection;
-(TSDShadow *)shadow;
-(void)drawInContext:(CGContextRef)arg1 ;
-(id)actionForLayer:(id)arg1 forKey:(id)arg2 ;
-(double)opacity;
-(CGRect)clipRect;
-(char)isInvisible;
-(char)shouldShowShadow;
-(char)canDrawShadowInOneStepWithChildren:(char)arg1 ;
-(TSDStyledLayout *)styledLayout;
-(char)shouldShowReflection;
-(void)drawGradientWithAlphaOverReflection:(CGContextRef)arg1 applyingOpacity:(char)arg2 reflectionSize:(CGSize)arg3 ;
-(TSDStyledInfo *)styledInfo;
-(CGRect)clipRectWithoutEffects;
-(CGRect)rectWithEffectsAppliedToRect:(CGRect)arg1 ;
-(void)drawReflectionIntoReflectionFrameInContext:(CGContextRef)arg1 withTransparencyLayer:(char)arg2 applyingOpacity:(char)arg3 drawChildren:(char)arg4 ;
-(void)p_drawReflectionInContext:(CGContextRef)arg1 ;
-(CGImageRef)newShadowImageWithSize:(CGSize)arg1 unflipped:(char)arg2 withChildren:(char)arg3 ;
-(void)drawInContextWithoutEffectsForAlphaOnly:(CGContextRef)arg1 ;
-(void)drawInContextWithoutEffectsOrChildrenForAlphaOnly:(CGContextRef)arg1 ;
-(CGImageRef)newShadowImageWithSize:(CGSize)arg1 shadow:(id)arg2 drawSelector:(SEL)arg3 unflipped:(char)arg4 ;
-(void)p_drawReflectionIntoReflectionFrameInContext:(CGContextRef)arg1 withTransparencyLayer:(char)arg2 applyingOpacity:(char)arg3 shouldClipGradient:(char)arg4 withBlock:(/*^block*/id)arg5 ;
-(CGImageRef)p_newReflectionImageWithSize:(CGSize)arg1 applyOpacity:(char)arg2 viewScale:(double)arg3 withBlock:(/*^block*/id)arg4 ;
-(void)drawReflectionInContext:(CGContextRef)arg1 withTransparencyLayer:(char)arg2 applyingOpacity:(char)arg3 shouldClipGradient:(char)arg4 withBlock:(/*^block*/id)arg5 ;
-(void)drawShadowInContext:(CGContextRef)arg1 withChildren:(char)arg2 withDrawableOpacity:(char)arg3 ;
-(void)drawReflectionInContext:(CGContextRef)arg1 drawChildren:(char)arg2 ;
-(void)drawInContextWithoutEffects:(CGContextRef)arg1 ;
-(void)drawInContextWithoutEffectsOrChildren:(CGContextRef)arg1 ;
-(id)textureForDescription:(id)arg1 ;
-(void)setTextureAttributes:(id)arg1 textureBounds:(CGRect)arg2 ;
-(id)blockToExcludeCaptionsAndDescendantsOfCaptions;
-(void)drawInContextWithoutEffects:(CGContextRef)arg1 withContent:(char)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(char)arg4 forAlphaOnly:(char)arg5 drawChildren:(char)arg6 keepingChildrenPassingTest:(/*^block*/id)arg7 ;
-(CGRect)strokeBoundsWithOptions:(unsigned long long)arg1 fallbackBounds:(CGRect)arg2 ;
-(CGRect)p_rectWithEffectsAppliedToRect:(CGRect)arg1 additionalTransform:(CGAffineTransform)arg2 includeShadow:(char)arg3 includeReflection:(char)arg4 ;
-(CGRect)p_baseReflectionFrameInRootForClipping;
-(CGRect)p_reflectionRenderableFrameInRoot;
-(CGRect)reflectionFrameInRootForClipping;
-(CGRect)p_clipRectInRootForTransform:(CGAffineTransform)arg1 includeShadow:(char)arg2 includeReflection:(char)arg3 ;
-(void)calculateTextureClipBounds:(CGRect*)arg1 andOffset:(CGPoint*)arg2 withTransform:(CGAffineTransform*)arg3 andRectOnCanvas:(CGRect*)arg4 textureDescription:(id)arg5 isUsingImageTexture:(char)arg6 ;
-(CGImageRef)newFrameMaskForViewScale:(double)arg1 frameRect:(CGRect*)arg2 ;
@end

