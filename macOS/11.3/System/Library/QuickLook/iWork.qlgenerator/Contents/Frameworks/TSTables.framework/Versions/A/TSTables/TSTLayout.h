/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSText/TSWPTextHostLayout.h>
#import <TSTables/TSWPColumnMetrics.h>
#import <TSTables/TSWPLayoutParent.h>
#import <TSTables/TSWPStorageObserver.h>

@class TSWPPadding, TSTLayoutEngine, TSTLayoutHint, TSTLayoutSpaceBundle, TSWPLayout, TSUPointerKeyDictionary, TSTTableInfo, NSString;

@interface TSTLayout : TSWPTextHostLayout <TSWPColumnMetrics, TSWPLayoutParent, TSWPStorageObserver> {

	TSTLayoutEngine* _layoutEngine;
	TSTLayoutHint* mLayoutHint;
	CGRect mCanvasVisibleRect;
	CGRect mCanvasSafeRect;
	CGRect mPreviousVisibleStrokeFrame;
	char mProcessChangesFiltering;
	char mTabsVisible;
	char mTableNameVisibilityIsValid;
	char mTableNameVisible;
	char mNewCanvasRevealedHorizontally;
	char mNewCanvasRevealedVertically;
	char mLayoutDirectionIsLeftToRight;
	TSTLayoutSpaceBundle* mSpaceBundle;
	SCD_Struct_TS113 mCached;
	CGRect mRenderingFrameForLayoutGeometryFromInfo;
	TSWPLayout* mContainedTextEditingLayout;
	NSEdgeInsets mCachedPaddingForEditingCell;
	CGRect mComputedEditingCellContentFrame;
	int mCachedVerticalAlignmentForEditingCell;
	CGSize mAdjustableTableSize;
	CGSize mFixedTableSize;
	CGSize mCapturedStrokeFrameSizeForInline;
	TSUCellRect mEditingSpillingTextRange;
	TSUCellRect mPrevEditingSpillingTextRange;
	int mContainedTextEditorParagraphAlignment;
	char mContainedTextEditorTextWraps;
	char mRemovingContainedTextEditorLayout;
	char mContainedTextEditorSpills;
	CGSize mSpillingTextSize;
	int mCoordinatesChangedMaskForChrome;
	char mShouldUpdateAttachmentChildren;
	unsigned long long mPageCount;
	unsigned long long mPageNumber;
	TSUPointerKeyDictionary* _attachmentCellStorageToLayoutMap;
	CGRect _cellRangeVisibleRect;

}

@property (readonly) TSUPointerKeyDictionary * attachmentCellStorageToLayoutMap;              //@synthesize attachmentCellStorageToLayoutMap=_attachmentCellStorageToLayoutMap - In the implementation block
@property (nonatomic,readonly) TSTTableInfo * tableInfo; 
@property (nonatomic,retain) TSTLayoutEngine * layoutEngine;                                  //@synthesize layoutEngine=_layoutEngine - In the implementation block
@property (nonatomic,retain) TSTLayoutHint * layoutHint; 
@property (nonatomic,retain) TSTLayoutSpaceBundle * spaceBundle; 
@property (assign,nonatomic) char processChangesFiltering; 
@property (assign,nonatomic) char newCanvasRevealedHorizontally; 
@property (assign,nonatomic) char newCanvasRevealedVertically; 
@property (nonatomic,readonly) char layoutDirectionIsLeftToRight; 
@property (assign,nonatomic) CGSize scaleToFit; 
@property (nonatomic,retain) TSWPLayout * containedTextEditingLayout; 
@property (nonatomic,readonly) NSEdgeInsets paddingForEditingCell; 
@property (nonatomic,readonly) CGRect computedEditingCellContentFrame; 
@property (nonatomic,readonly) TSUCellRect editingSpillingTextRange; 
@property (assign,nonatomic) TSUCellRect prevEditingSpillingTextRange; 
@property (nonatomic,readonly) char containedTextEditorSpills; 
@property (nonatomic,readonly) char containedTextEditorWraps; 
@property (nonatomic,readonly) CGSize scaleToFitParent; 
@property (assign,nonatomic) CGRect cellRangeVisibleRect;                                     //@synthesize cellRangeVisibleRect=_cellRangeVisibleRect - In the implementation block
@property (nonatomic,readonly) unsigned long long pageNumber; 
@property (nonatomic,readonly) unsigned long long pageCount; 
@property (nonatomic,readonly) TSWPPadding * layoutMargins; 
@property (nonatomic,readonly) unsigned long long columnCount; 
@property (nonatomic,readonly) char alwaysStartsNewTarget; 
@property (nonatomic,readonly) char shrinkTextToFit; 
@property (nonatomic,readonly) char columnsAreLeftToRight; 
@property (nonatomic,readonly) double textScaleFactor; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)findLayoutIfAvailableInSet:(id)arg1 intersectingRow:(unsigned)arg2 ;
-(id)textWrapper;
-(void)dealloc;
-(void)invalidate;
-(id)initWithInfo:(id)arg1 ;
-(unsigned long long)columnCount;
-(void)validate;
-(void)setNeedsDisplayInRect:(CGRect)arg1 ;
-(void)setNeedsDisplay;
-(unsigned long long)pageCount;
-(char)isDraggable;
-(TSWPPadding *)layoutMargins;
-(unsigned long long)pageNumber;
-(TSTLayoutHint *)layoutHint;
-(char)shouldShowCaption;
-(TSTLayoutEngine *)layoutEngine;
-(void)setLayoutEngine:(TSTLayoutEngine *)arg1 ;
-(CGSize)scaleToFit;
-(unsigned long long)autosizeFlagsForTextLayout:(id)arg1 ;
-(int)verticalAlignmentForTextLayout:(id)arg1 ;
-(void)invalidateForAutosizingTextLayout:(id)arg1 ;
-(CGRect)nonAutosizedFrameForTextLayout:(id)arg1 ;
-(CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(CGSize)arg2 ;
-(id)dependentsOfTextLayout:(id)arg1 ;
-(Class)repClassForTextLayout:(id)arg1 ;
-(CGRect)maskRectForTextLayout:(id)arg1 ;
-(int)naturalAlignmentForTextLayout:(id)arg1 ;
-(CGSize)initialTextSize;
-(double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 ;
-(double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 ;
-(char)alwaysStartsNewTarget;
-(char)shrinkTextToFit;
-(char)columnsAreLeftToRight;
-(id)computeLayoutGeometry;
-(void)invalidateSize;
-(void)invalidatePosition;
-(char)inPrintPreviewMode;
-(void)updateChildrenFromInfo;
-(int)wrapFitType;
-(char)textIsVertical;
-(CGPoint)capturedInfoPositionForAttachment;
-(id)layoutGeometryFromInfo;
-(char)inFindReplaceMode;
-(char)isBeingManipulated;
-(char)orderedBefore:(id)arg1 ;
-(char)supportsRotation;
-(id)dependentLayouts;
-(CGRect)alignmentFrame;
-(CGSize)maximumFrameSizeForChild:(id)arg1 ;
-(CGPoint)calculatePointFromSearchReference:(id)arg1 ;
-(char)resizeMayChangeAspectRatio;
-(char)canAspectRatioLockBeChangedByUser;
-(id)initialInfoGeometry;
-(id)inspectorGeometry;
-(void)offsetGeometryBy:(CGPoint)arg1 ;
-(char)canRotateChildLayout:(id)arg1 ;
-(TSTTableInfo *)tableInfo;
-(TSUCellRect)editingSpillingTextRange;
-(char)newCanvasRevealedVertically;
-(void)setNewCanvasRevealedVertically:(char)arg1 ;
-(char)newCanvasRevealedHorizontally;
-(void)setNewCanvasRevealedHorizontally:(char)arg1 ;
-(TSTLayoutSpaceBundle *)spaceBundle;
-(char)layoutDirectionIsLeftToRight;
-(char)p_getLayoutDirectionLeftToRight;
-(void)setScaleToFit:(CGSize)arg1 ;
-(id)initWithInfo:(id)arg1 layoutHint:(id)arg2 ;
-(void)removeContainedTextEditingLayout;
-(void)validateTableNameVisibility;
-(TSWPLayout *)containedTextEditingLayout;
-(void)setupContainedTextEditingLayout:(TSUCellCoord)arg1 ;
-(void)p_updateCachedStyleInformationFromCellID:(TSUCellCoord)arg1 ;
-(int)p_defaultAlignmentForTableWritingDirection;
-(CGRect)computedEditingCellContentFrame;
-(char)p_layoutWhollyContainsGridRange:(SCD_Struct_TS115)arg1 ;
-(CGSize)p_rangeUpAndLeftOfIntersectionRangeOfGridRange:(SCD_Struct_TS115)arg1 ;
-(void)invalidateTableNameVisibility;
-(void)setLayoutHint:(TSTLayoutHint *)arg1 ;
-(int)reapCoordinatesChangedMaskForChrome;
-(void)setContainedTextEditingLayout:(TSWPLayout *)arg1 ;
-(NSEdgeInsets)paddingForEditingCell;
-(void)setSpaceBundle:(TSTLayoutSpaceBundle *)arg1 ;
-(char)processChangesFiltering;
-(void)setProcessChangesFiltering:(char)arg1 ;
-(char)descendersCannotClip;
-(double)maxAutoGrowLineWidthForTextLayout:(id)arg1 ;
-(CGRect)adjustRect:(CGRect)arg1 forScrollingToSelectionPath:(id)arg2 forZoom:(char)arg3 ;
-(double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double*)arg4 outGap:(double*)arg5 ;
-(CGSize)adjustedInsetsForTarget:(id)arg1 ;
-(void)iterateCellsInRange:(TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 usingBlock:(/*^block*/id)arg4 ;
-(double)viewScaleForZoomingToSelectionPath:(id)arg1 targetPointSize:(double)arg2 ;
-(CGPoint)activityLineUnscaledEndPointForSearchReference:(id)arg1 ;
-(id)unscaledCommentFlagAnchorInfoForSearchReference:(id)arg1 ;
-(id)childInfosForChildLayouts;
-(CGRect)frameForCaptionPositioning;
-(id)computeInfoGeometryFromPureLayoutGeometry:(id)arg1 ;
-(NSEdgeInsets)captionEdgeInsets;
-(char)canvasShouldScrollForSelectionPath:(id)arg1 ;
-(id)cellIteratorWithRange:(TSUCellRect)arg1 flags:(unsigned long long)arg2 searchFlags:(unsigned long long)arg3 ;
-(void)iterateCellsAndTerminateWithIterator:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)removeAttachmentCellLayouts;
-(void)invalidateLayoutSpaceTableOffsets;
-(void)invalidateLayoutSpaceCoordinates;
-(void)validatePageNumberCount;
-(void)invalidateLayoutSpaceCoordinatesAfterColumn:(unsigned short)arg1 ;
-(void)invalidateLayoutSpaceCoordinatesAfterRow:(unsigned)arg1 ;
-(CGRect)alignedStrokeFrame;
-(double)tabsRowWidthAndOptionalLeftGap:(out double*)arg1 ;
-(char)suppressFrozenHeadersForEditing;
-(char)isStrokeEditing;
-(TSUCellRect)_floatingCellRangeAtRect:(CGRect)arg1 inLayoutSpace:(id)arg2 withTransform:(CGAffineTransform)arg3 ;
-(CGRect)cellRangeVisibleRect;
-(CGRect)alignedStrokeFrameForGridRange:(SCD_Struct_TS115)arg1 ;
-(id)alignedStrokeFramePathForGridRange:(SCD_Struct_TS115)arg1 frameType:(int)arg2 viewScale:(double)arg3 inset:(double)arg4 reoriginToZero:(char)arg5 clipToVisibleRect:(char)arg6 cornerRadius:(double)arg7 outMaskPath:(id*)arg8 ;
-(id)alignedStrokeFramePathForRange:(TSUCellRect)arg1 frameType:(int)arg2 viewScale:(double)arg3 inset:(double)arg4 reoriginToZero:(char)arg5 clipToVisibleRect:(char)arg6 cornerRadius:(double)arg7 outMaskPath:(id*)arg8 ;
-(int)naturalAlignmentForCellID:(TSUCellCoord)arg1 ;
-(TSUCellRect)extendedPartitionRangeSingleSpaceIntersectionWithCellRange:(TSUCellRect)arg1 ;
-(TSUCellRect)p_maximumSpillRangeForCellID:(TSUCellCoord)arg1 ;
-(TSUCellRect)p_spillRangeToRightForCellID:(TSUCellCoord)arg1 ;
-(void)p_prepareAttachmentCellsIfNeeded;
-(CGRect)p_nonAutosizedFrameForTextEditingLayout:(id)arg1 ;
-(CGRect)p_nonAutosizedFrameForRichTextLayout:(id)arg1 ;
-(CGRect)p_autosizedFrameForTextEditingLayout:(id)arg1 textSize:(CGSize)arg2 ;
-(CGRect)p_autosizedFrameForRichTextLayout:(id)arg1 textSize:(CGSize)arg2 ;
-(CGRect)p_maskRectForTextEditingLayout:(id)arg1 ;
-(CGRect)p_maskRectForRichTextLayout:(id)arg1 ;
-(TSUCellRect)p_spillRangeForMaskingRichTextLayout:(id)arg1 ;
-(CGSize)scaleToFitParent;
-(void)setCellRangeVisibleRect:(CGRect)arg1 ;
-(TSUCellRect)floatingHeaderRowRangeAtRect:(CGRect)arg1 ;
-(TSUCellRect)floatingHeaderColumnRangeAtRect:(CGRect)arg1 ;
-(CGRect)alignedStrokeFrameForRange:(TSUCellRect)arg1 ;
-(void)bezierPathsForCellRegion:(id)arg1 selectionMask:(unsigned)arg2 transform:(CGAffineTransform)arg3 viewScale:(double)arg4 inset:(double)arg5 clipToVisibleRect:(char)arg6 cornerRadius:(double)arg7 block:(/*^block*/id)arg8 ;
-(id)attachmentCellLayoutForCellID:(TSUCellCoord)arg1 optionalCell:(id)arg2 ;
-(CGPoint)calculatePointFromSearchReferenceWithoutValidation:(id)arg1 ;
-(CGRect)p_textFrameForWrappingCell:(TSUCellCoord)arg1 defaultRowHeight:(char*)arg2 ;
-(TSUCellCoord)p_cellIDForWPLayout:(id)arg1 ;
-(CGRect)p_computeSpillingTextFrameForEditingLayout:(id)arg1 textSize:(CGSize)arg2 editingSpillRange:(TSUCellRect*)arg3 ;
-(char)containedTextEditorSpills;
-(char)containedTextEditorWraps;
-(TSUCellRect)prevEditingSpillingTextRange;
-(void)setPrevEditingSpillingTextRange:(TSUCellRect)arg1 ;
-(TSUPointerKeyDictionary *)attachmentCellStorageToLayoutMap;
@end

