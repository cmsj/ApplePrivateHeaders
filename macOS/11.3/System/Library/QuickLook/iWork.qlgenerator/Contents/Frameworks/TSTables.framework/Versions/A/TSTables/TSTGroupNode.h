/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:59 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSTables/TSTUidReturning.h>

@class TSCECellValue, NSMutableDictionary, TSCEMutableUIDSet, TSTGroupNodeFormatManager, TSTGroupValueTuple, TSCEUIDSet;

@interface TSTGroupNode : NSObject <TSTUidReturning> {

	TSKUIDStruct _groupUid;
	TSCECellValue* _groupCellValue;
	unsigned char _groupLevel;
	unordered_map<TSKUIDStruct, TSTAggNode *, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, TSTAggNode *>>>* _aggNodes;
	NSMutableDictionary* _children;
	os_unfair_lock_s _childrenLock;
	TSCEMutableUIDSet* _rowUids;
	TSTGroupNode* _parentNode;
	TSTGroupNodeFormatManager* _formatManager;
	unordered_map<TSKUIDStruct, TSTGroupNode *, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, TSTGroupNode *>>>* _childNodesByRowUid;

}

@property (readonly) TSKUIDStruct groupUid;                                           //@synthesize groupUid=_groupUid - In the implementation block
@property (readonly) TSKUIDStruct labelUid; 
@property (nonatomic,readonly) TSTGroupValueTuple * groupValueTuple; 
@property (nonatomic,retain,readonly) TSCECellValue * groupCellValue;                 //@synthesize groupCellValue=_groupCellValue - In the implementation block
@property (nonatomic,readonly) unsigned char groupLevel;                              //@synthesize groupLevel=_groupLevel - In the implementation block
@property (nonatomic,retain,readonly) TSCEUIDSet * rowUids;                           //@synthesize rowUids=_rowUids - In the implementation block
@property (assign,nonatomic) TSTGroupNode * parentNode;                               //@synthesize parentNode=_parentNode - In the implementation block
@property (nonatomic,retain,readonly) TSCEUIDSet * childGroupUids; 
@property (nonatomic,retain,readonly) TSCEUIDSet * directChildGroupUids; 
@property (nonatomic,readonly) char isLeaf; 
@property (nonatomic,readonly) char isBlankNode; 
@property (nonatomic,readonly) char isErrorNode; 
@property (nonatomic,readonly) unordered_map<TSKUIDStruct* aggNodes; 
+(id)keyStringForCellValue:(id)arg1 ;
+(id)normalizedStringForCompare:(id)arg1 ;
+(id)localizedStringForCellValue:(id)arg1 categoryLevel:(unsigned char)arg2 groupBy:(id)arg3 ;
+(char)needFormulasForAggregateType:(unsigned char)arg1 ;
-(void)dealloc;
-(TSTGroupNode *)parentNode;
-(void)setParentNode:(TSTGroupNode *)arg1 ;
-(char)isLeaf;
-(TSKUIDStruct)groupUid;
-(void)addChild:(id)arg1 withKey:(id)arg2 ;
-(void)encodeToArchive:(CategoryOwnerArchive_GroupByArchive_GroupNodeArchive*)arg1 ;
-(id)groupNodeForGroupUid:(const TSKUIDStruct*)arg1 ;
-(void)enumerateGroupsAtLevel:(unsigned char)arg1 withBlock:(/*^block*/id)arg2 ;
-(unsigned char)groupLevel;
-(TSCEUIDSet *)rowUids;
-(TSTGroupValueTuple *)groupValueTuple;
-(id)initWithGroupCellValue:(id)arg1 atLevel:(unsigned char)arg2 groupUid:(TSKUIDStruct)arg3 children:(id)arg4 ;
-(id)groupValueAtLevel:(unsigned char)arg1 ;
-(void)addRowUid:(const TSKUIDStruct*)arg1 ;
-(id)initWithArchive:(const CategoryOwnerArchive_GroupByArchive_GroupNodeArchive*)arg1 forGroupBy:(id)arg2 atLevel:(unsigned char)arg3 ;
-(TSCECellValue *)groupCellValue;
-(void)addAggNode:(id)arg1 ;
-(id)safeChildren;
-(unordered_map<TSKUIDStruct*)aggNodes;
-(void)updateWithDocumentRoot:(id)arg1 ;
-(void)p_addChildGroupUidsIntoSet:(id)arg1 recursively:(char)arg2 ;
-(id)findGroupNodeForValue:(id)arg1 atLevel:(unsigned char)arg2 locale:(id)arg3 ;
-(id)findGroupNodeForDisplayValuesFromSplitter:(id)arg1 atLevel:(unsigned char)arg2 groupBy:(id)arg3 startAtComponent:(unsigned long long)arg4 startAtWord:(unsigned long long)arg5 preserveFlags:(TSUPreserveFlags*)arg6 ;
-(void)addChangesTo:(id)arg1 forReplacingValue:(id)arg2 atLevel:(unsigned char)arg3 ;
-(void)addChangesTo:(id)arg1 forRemovingValueAtLevel:(unsigned char)arg2 ;
-(void)addChangesTo:(id)arg1 forPromotingValueAtLevel:(unsigned char)arg2 toLevel:(unsigned char)arg3 ;
-(void)addChangesTo:(id)arg1 forDemotingValueAtLevel:(unsigned char)arg2 toLevel:(unsigned char)arg3 ;
-(void)p_refreshGroupValue;
-(id)insertRowUid:(const TSKUIDStruct*)arg1 forGroupValueTuple:(id)arg2 atLevel:(unsigned char)arg3 forGroupBy:(id)arg4 withLocale:(id)arg5 ;
-(void)rebuildFormulasForAggNode:(id)arg1 forGroupBy:(id)arg2 ;
-(void)removeRowUid:(const TSKUIDStruct*)arg1 forGroupValueTuple:(id)arg2 atLevel:(unsigned char)arg3 forGroupBy:(id)arg4 withLocale:(id)arg5 ;
-(void)removeChildForKey:(id)arg1 ;
-(void)clearWithGroupBy:(id)arg1 ;
-(void)removeRowUids:(id)arg1 forGroupBy:(id)arg2 ;
-(id)aggNodeForColumnUid:(const TSKUIDStruct*)arg1 ;
-(void)enumerateDirectChildren:(/*^block*/id)arg1 ;
-(void)removeAllRowUids;
-(void)clearEmptyNodesWithGroupBy:(id)arg1 ;
-(id)groupValueHierarchyStringWithDelimiterString:(id)arg1 groupBy:(id)arg2 namingContext:(id)arg3 ;
-(void)enumerateAllGroupsWithBlock:(/*^block*/id)arg1 ;
-(id)groupNodeForRowUid:(const TSKUIDStruct*)arg1 atLevel:(unsigned char)arg2 ;
-(TSKUIDStruct)uidReturn;
-(TSKUIDStruct)labelUid;
-(id)initAsRootNode;
-(char)isBlankNode;
-(char)isErrorNode;
-(TSCEUIDSet *)childGroupUids;
-(TSCEUIDSet *)directChildGroupUids;
-(TSCECategoryRef)aggregateRefForType:(unsigned char)arg1 atLevel:(unsigned char)arg2 forGroupBy:(id)arg3 forColumnUid:(const TSKUIDStruct*)arg4 ;
-(TSCECategoryRef)groupValueRefAtLevel:(unsigned char)arg1 forGroupBy:(id)arg2 ;
-(TSCECategoryRef)groupValueHierarchyRefAtLevel:(unsigned char)arg1 forGroupBy:(id)arg2 ;
-(char)updateGroupCellValueIfKeyMatches:(id)arg1 ;
-(void)markAsDirtyWithCalcEngine:(id)arg1 ;
-(void)markDependentsAsDirtyWithCalcEngine:(id)arg1 ;
-(char)containsRowUid:(const TSKUIDStruct*)arg1 ;
-(id)groupValueHierarchyForChart:(char)arg1 groupBy:(id)arg2 ;
-(id)groupValueHierarchyStringWithDelimiterString:(id)arg1 ;
-(id)descriptionWithGroupBy:(id)arg1 ;
-(TSKUIDStructVectorTemplate<TSKUIDStruct>*)nodePath;
@end

