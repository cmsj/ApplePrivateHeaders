/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol TSDCanvasDelegate, OS_dispatch_queue;
#import <TSDrawables/TSDrawables-Structs.h>
@class TSDInteractiveCanvasController, NSArray, NSSet, TSUPointerKeyDictionary, TSDLayoutController, NSMutableArray, NSObject, NSHashTable, TSUColor, TSKDocumentRoot, TSPObjectContext, TSKChangeNotifier, TSKAccessController;

@interface TSDCanvas : NSObject {

	id<TSDCanvasDelegate> mDelegate;
	TSDInteractiveCanvasController* mCanvasController;
	NSArray* mInfos;
	NSArray* mTopLevelReps;
	NSSet* mAllReps;
	NSArray* mAllRepsOrdered;
	TSUPointerKeyDictionary* mRepsByLayout;
	TSDLayoutController* mLayoutController;
	char mIsTemporaryForLayout;
	CGSize mUnscaledSize;
	double mViewScale;
	double mContentsScale;
	char mWideGamut;
	char mIsAnchoredAtRight;
	struct {
		unsigned layout : 1;
		unsigned reps : 1;
		unsigned visibleBounds : 1;
		unsigned layers : 1;
	}  mInvalidFlags;
	char mShouldUpdateLayersDuringLayout;
	char mInLayout;
	NSArray* mPreviouslyVisibleLayouts;
	NSMutableArray* mBlocksToPerform;
	NSObject*<OS_dispatch_queue> mBlocksToPerformAccessQueue;
	NSHashTable* mCanvasLayoutObservers;
	char mIgnoringClickThrough;
	TSUColor* mBackgroundColor;
	NSEdgeInsets mContentInset;
	char mAllowsFontSubpixelQuantization;
	char mSuppressesShadowsAndReflections;
	char mEnableInstructionalText;
	char mSuppressesShapeText;
	char mShouldRenderInvisibleContentForNonInteractiveCanvas;
	double i_viewScaleForAudioObjectsInNonInteractiveCanvas;

}

@property (assign,nonatomic) double i_viewScaleForAudioObjectsInNonInteractiveCanvas; 
@property (nonatomic,readonly) char isLayoutComplete; 
@property (assign,nonatomic,__weak) id<TSDCanvasDelegate> delegate; 
@property (nonatomic,readonly) TSKDocumentRoot * documentRoot; 
@property (nonatomic,readonly) TSPObjectContext * objectContext; 
@property (nonatomic,readonly) TSKChangeNotifier * changeNotifier; 
@property (nonatomic,readonly) TSKAccessController * accessController; 
@property (nonatomic,readonly) TSDInteractiveCanvasController * canvasController; 
@property (nonatomic,readonly) char supportsAdaptiveLayout; 
@property (assign,nonatomic) char isAnchoredAtRight; 
@property (assign,nonatomic) char enableInstructionalText; 
@property (assign,nonatomic) char allowsFontSubpixelQuantization; 
@property (assign,nonatomic) char suppressesShadowsAndReflections; 
@property (assign,nonatomic) char suppressesShapeText; 
@property (nonatomic,readonly) double contentsScale; 
@property (nonatomic,readonly) char canvasIsWideGamut; 
@property (nonatomic,copy) TSUColor * backgroundColor; 
@property (assign,nonatomic) NSEdgeInsets contentInset; 
@property (nonatomic,copy) NSArray * infosToDisplay; 
@property (nonatomic,readonly) NSArray * topLevelReps; 
@property (nonatomic,readonly) NSSet * allReps; 
@property (nonatomic,readonly) NSArray * allRepsOrdered; 
@property (nonatomic,readonly) CGRect unscaledRectOfLayouts; 
@property (nonatomic,readonly) TSDLayoutController * layoutController; 
@property (nonatomic,readonly) char isTemporaryForLayout; 
@property (nonatomic,readonly) char isCanvasInteractive; 
@property (assign,nonatomic) CGSize unscaledSize; 
@property (assign,nonatomic) double viewScale; 
@property (assign,nonatomic) char shouldRenderInvisibleContentForNonInteractiveCanvas; 
+(void)p_recursivelyAddOrderedChildrenOfRep:(id)arg1 toArray:(id)arg2 ;
-(id)textRendererForLayer:(id)arg1 context:(CGContextRef)arg2 ;
-(void)dealloc;
-(id)init;
-(id<TSDCanvasDelegate>)delegate;
-(void)setDelegate:(id<TSDCanvasDelegate>)arg1 ;
-(void)setBackgroundColor:(TSUColor *)arg1 ;
-(TSUColor *)backgroundColor;
-(double)contentsScale;
-(NSEdgeInsets)contentInset;
-(void)setContentInset:(NSEdgeInsets)arg1 ;
-(void)setViewScale:(double)arg1 ;
-(void)teardown;
-(char)isPrinting;
-(TSKDocumentRoot *)documentRoot;
-(void)setAllowsFontSubpixelQuantization:(char)arg1 ;
-(CGSize)unscaledSize;
-(void)setUnscaledSize:(CGSize)arg1 ;
-(TSDInteractiveCanvasController *)canvasController;
-(void)invalidateLayers;
-(TSDLayoutController *)layoutController;
-(void)setInfosToDisplay:(NSArray *)arg1 ;
-(CGRect)convertUnscaledToBoundsRect:(CGRect)arg1 ;
-(CGRect)convertBoundsToUnscaledRect:(CGRect)arg1 ;
-(NSArray *)topLevelReps;
-(char)isCanvasInteractive;
-(char)spellCheckingSupported;
-(char)spellCheckingSuppressed;
-(char)shouldShowTextOverflowGlyphs;
-(NSArray *)infosToDisplay;
-(CGPoint)convertBoundsToUnscaledPoint:(CGPoint)arg1 ;
-(void)invalidateReps;
-(void)invalidateVisibleBounds;
-(TSKAccessController *)accessController;
-(TSKChangeNotifier *)changeNotifier;
-(double)viewScale;
-(void)i_setCanvasController:(id)arg1 ;
-(NSSet *)allReps;
-(void)p_layoutWithReadLock;
-(void)layoutInvalidated;
-(CGPoint)convertUnscaledToBoundsPoint:(CGPoint)arg1 ;
-(void)i_setInfosToDisplay:(id)arg1 updatingLayoutController:(char)arg2 ;
-(void)i_updateInfosInLayoutController;
-(id)repForLayout:(id)arg1 ;
-(void)recreateAllLayoutsAndReps;
-(void)i_unregisterRep:(id)arg1 ;
-(char)i_needsLayout;
-(char)shouldSuppressBackgrounds;
-(char)supportsAdaptiveLayout;
-(TSPObjectContext *)objectContext;
-(CGSize)convertUnscaledToBoundsSize:(CGSize)arg1 ;
-(CGSize)convertBoundsToUnscaledSize:(CGSize)arg1 ;
-(void)i_registerRep:(id)arg1 ;
-(char)allowsFontSubpixelQuantization;
-(void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(CGContextRef)arg2 ;
-(void)i_drawBackgroundInContext:(CGContextRef)arg1 ;
-(id)initForTemporaryLayout;
-(char)isDrawingIntoPDF;
-(CGRect)i_approximateScaledFrameOfEditingMenuAtPoint:(CGPoint)arg1 ;
-(char)canvasIsWideGamut;
-(void)p_removeAllReps;
-(char)p_updateRepsFromLayouts;
-(char)isTemporaryForLayout;
-(CGRect)p_bounds;
-(void)i_drawBackgroundInContext:(CGContextRef)arg1 bounds:(CGRect)arg2 ;
-(CGRect)i_clipRectForCreatingRepsFromLayouts;
-(NSArray *)allRepsOrdered;
-(void)i_setContentsScale:(double)arg1 ;
-(void)i_setCanvasIsWideGamut:(char)arg1 ;
-(CGRect)visibleUnscaledRectForClippingReps;
-(CGImageRef)i_image;
-(char)shouldShowInstructionalTextForLayout:(id)arg1 ;
-(void)nonInteractiveLayoutIfNeeded;
-(char)isRenderingForKPF;
-(char)wantsEditingLayoutsForOffscreenInfos;
-(char)textLayoutMustIncludeAdornments;
-(void)setIsAnchoredAtRight:(char)arg1 ;
-(id)initWithLayoutControllerClass:(Class)arg1 delegate:(id)arg2 ;
-(char)shouldRenderInvisibleContentForNonInteractiveCanvas;
-(char)isAnchoredAtRight;
-(Class)rootLayoutClass;
-(double)i_viewScaleForAudioObjectsInNonInteractiveCanvas;
-(char)suppressesShadowsAndReflections;
-(CGImageRef)i_imageInScaledRect:(CGRect)arg1 withTargetIntegralSize:(CGSize)arg2 distortedToMatch:(char)arg3 keepingChildrenPassingTest:(/*^block*/id)arg4 ;
-(CGImageRef)i_imageInScaledRect:(CGRect)arg1 keepingChildrenPassingTest:(/*^block*/id)arg2 ;
-(char)shouldShowComments;
-(char)shouldShowTextCommentHighlights;
-(void)setEnableInstructionalText:(char)arg1 ;
-(CGRect)unscaledRectOfLayouts;
-(void)i_drawRepsInContext:(CGContextRef)arg1 passingTest:(/*^block*/id)arg2 ;
-(CGContextRef)i_createContextToDrawImageInScaledRect:(CGRect)arg1 withTargetIntegralSize:(CGSize)arg2 distortedToMatch:(char)arg3 returningBounds:(CGRect*)arg4 integralBounds:(CGRect*)arg5 ;
-(CGImageRef)i_newImageInContext:(CGContextRef)arg1 bounds:(CGRect)arg2 integralBounds:(CGRect)arg3 distortedToMatch:(char)arg4 keepingChildrenPassingTest:(/*^block*/id)arg5 ;
-(void)setSuppressesShadowsAndReflections:(char)arg1 ;
-(void)setI_viewScaleForAudioObjectsInNonInteractiveCanvas:(double)arg1 ;
-(char)isLayoutComplete;
-(void)i_layoutIfNeeded;
-(char)p_canvasShouldAlwaysUpdateLayers;
-(void)performBlockAfterLayoutIfNecessary:(/*^block*/id)arg1 ;
-(char)enableInstructionalText;
-(void)i_drawRepsInContext:(CGContextRef)arg1 passingTest:(/*^block*/id)arg2 distort:(CGAffineTransform)arg3 ;
-(void)orderRepsForLayout:(id)arg1 ;
-(void)i_layoutIfNeededUpdatingLayerTree;
-(void)i_registerCanvasLayoutObserver:(id)arg1 ;
-(void)i_unregisterCanvasLayoutObserver:(id)arg1 ;
-(void)i_performBlockWhileIgnoringClickThrough:(/*^block*/id)arg1 ;
-(char)i_shouldIgnoreClickThrough;
-(char)suppressesShapeText;
-(void)setSuppressesShapeText:(char)arg1 ;
-(void)setShouldRenderInvisibleContentForNonInteractiveCanvas:(char)arg1 ;
@end

