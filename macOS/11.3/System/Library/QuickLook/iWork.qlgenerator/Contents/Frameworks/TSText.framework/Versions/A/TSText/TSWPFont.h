/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:01 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSText.framework/Versions/A/TSText
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSText/TSText-Structs.h>
@class NSString, NSFont, NSFontDescriptor, NSMutableDictionary, NSArray;

@interface TSWPFont : NSObject {

	char _isFallbackFont;
	NSString* _desiredPostScriptName;
	NSString* _postScriptName;
	NSString* _familyName;
	unsigned long long _type;
	NSFont* _platformFont;
	NSString* _localizedFamilyName;
	NSFontDescriptor* _platformFontDescriptor;
	unsigned long long _hashValue;
	NSMutableDictionary* _alternatePlatformFonts;
	NSArray* _creationBacktrace;

}

@property (nonatomic,retain) NSString * postScriptName;                              //@synthesize postScriptName=_postScriptName - In the implementation block
@property (nonatomic,retain) NSString * familyName;                                  //@synthesize familyName=_familyName - In the implementation block
@property (nonatomic,retain) NSString * localizedFamilyName;                         //@synthesize localizedFamilyName=_localizedFamilyName - In the implementation block
@property (nonatomic,retain) NSFont * platformFont;                                  //@synthesize platformFont=_platformFont - In the implementation block
@property (nonatomic,retain) NSFontDescriptor * platformFontDescriptor;              //@synthesize platformFontDescriptor=_platformFontDescriptor - In the implementation block
@property (assign,nonatomic) unsigned long long hashValue;                           //@synthesize hashValue=_hashValue - In the implementation block
@property (assign,nonatomic) char isFallbackFont;                                    //@synthesize isFallbackFont=_isFallbackFont - In the implementation block
@property (retain) NSMutableDictionary * alternatePlatformFonts;                     //@synthesize alternatePlatformFonts=_alternatePlatformFonts - In the implementation block
@property (nonatomic,retain) NSArray * creationBacktrace;                            //@synthesize creationBacktrace=_creationBacktrace - In the implementation block
@property (nonatomic,readonly) NSString * desiredPostScriptName;                     //@synthesize desiredPostScriptName=_desiredPostScriptName - In the implementation block
@property (nonatomic,readonly) NSString * displayName; 
@property (nonatomic,readonly) double size; 
@property (nonatomic,readonly) const CTFontRef ctFont; 
@property (nonatomic,readonly) char bold; 
@property (nonatomic,readonly) char italic; 
@property (nonatomic,readonly) char isMasqueradingFont; 
@property (nonatomic,readonly) char isRequestedFont; 
@property (nonatomic,readonly) char shouldShowFallbackBadge; 
@property (nonatomic,readonly) unsigned long long type;                              //@synthesize type=_type - In the implementation block
@property (nonatomic,readonly) NSArray * familyFaces; 
@property (nonatomic,readonly) TSWPFont * baseFont; 
+(id)systemFont;
+(char)isKeyValueProxyLeafType;
+(id)missingFontPostScriptName;
+(id)fontWithDesiredPostScriptName:(id)arg1 ;
+(id)baseFontForFamilyName:(id)arg1 ;
+(id)helveticaFont;
+(id)missingFont;
+(id)loadPlatformFontForPostScriptName:(id)arg1 size:(double)arg2 ;
+(id)masqueradingFontNames;
+(unsigned long long)optionsForLoadingPlatformFontWithPostScriptName:(id)arg1 ;
+(char)isSystemFontName:(id)arg1 ;
+(id)loadPlatformFontOrFallbackForPostScriptName:(id)arg1 size:(double)arg2 foundType:(unsigned long long*)arg3 ;
+(id)localizedFamilyNameForPlatformFont:(id)arg1 ;
+(id)facesOfFontFamily:(id)arg1 ;
+(id)postScriptNameForFamilyName:(id)arg1 ;
+(id)localizedMasqueradingFontFamilyNames;
+(id)fontWithOpaqueIdentifier:(id)arg1 ;
+(id)fontWithDesiredPostScriptName:(id)arg1 fallbackFont:(id)arg2 ofType:(unsigned long long)arg3 ;
+(id)fontWithDesiredPostScriptName:(id)arg1 atSize:(double)arg2 ;
+(id)baseFontWithDescriptor:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(double)size;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(unsigned long long)type;
-(NSString *)displayName;
-(NSString *)familyName;
-(void)setFamilyName:(NSString *)arg1 ;
-(void)setHashValue:(unsigned long long)arg1 ;
-(unsigned long long)hashValue;
-(id)copyWithSize:(double)arg1 ;
-(char)bold;
-(char)italic;
-(const CTFontRef)ctFont;
-(NSString *)localizedFamilyName;
-(TSWPFont *)baseFont;
-(NSFont *)platformFont;
-(char)isRequestedFont;
-(id)copyWithSize:(double)arg1 bold:(char)arg2 italic:(char)arg3 traits:(id)arg4 ;
-(NSString *)desiredPostScriptName;
-(id)initWithDesiredPostScriptName:(id)arg1 platformFontDescriptor:(id)arg2 andPlatformFont:(id)arg3 ofType:(unsigned long long)arg4 ;
-(id)initWithDesiredPostScriptName:(id)arg1 size:(double)arg2 ;
-(id)initWithDesiredPostScriptName:(id)arg1 ;
-(id)initWithDesiredPostScriptName:(id)arg1 platformFontDescriptor:(id)arg2 andPlatformFont:(id)arg3 ofType:(unsigned long long)arg4 localizedFamilyName:(id)arg5 ;
-(NSString *)postScriptName;
-(NSMutableDictionary *)alternatePlatformFonts;
-(const CTFontRef)ctFontForSize:(double)arg1 bold:(char)arg2 italic:(char)arg3 ;
-(const CTFontRef)ctFontForSize:(double)arg1 ;
-(CTFontRef)ctFontForSize:(double)arg1 bold:(char)arg2 italic:(char)arg3 traits:(id)arg4 ;
-(char)isFallbackFont;
-(char)isMasqueradingFontName;
-(char)isMasqueradingFont;
-(char)isBaseFontEqualToBaseFontFor:(id)arg1 ;
-(id)copyWithSize:(double)arg1 bold:(char)arg2 italic:(char)arg3 ;
-(NSArray *)familyFaces;
-(char)shouldShowFallbackBadge;
-(void)setPostScriptName:(NSString *)arg1 ;
-(void)setPlatformFont:(NSFont *)arg1 ;
-(void)setLocalizedFamilyName:(NSString *)arg1 ;
-(NSFontDescriptor *)platformFontDescriptor;
-(void)setPlatformFontDescriptor:(NSFontDescriptor *)arg1 ;
-(void)setIsFallbackFont:(char)arg1 ;
-(void)setAlternatePlatformFonts:(NSMutableDictionary *)arg1 ;
-(NSArray *)creationBacktrace;
-(void)setCreationBacktrace:(NSArray *)arg1 ;
@end

