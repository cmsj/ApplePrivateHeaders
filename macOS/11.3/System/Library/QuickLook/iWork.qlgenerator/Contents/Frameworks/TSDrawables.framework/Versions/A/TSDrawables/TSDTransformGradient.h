/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSDGradient.h>
#import <TSDrawables/TSDMixing.h>

@interface TSDTransformGradient : TSDGradient <TSDMixing> {

	CGPoint mStart;
	CGPoint mEnd;
	CGSize mBaseNaturalSize;
	CGAffineTransform mTransformBeforeUpgrade;

}

@property (nonatomic,readonly) CGPoint startPoint; 
@property (nonatomic,readonly) CGPoint endPoint; 
@property (nonatomic,readonly) CGSize baseNaturalSize; 
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(CGPoint)startPoint;
-(CGPoint)endPoint;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 ;
-(void)paintPath:(const CGPathRef)arg1 inContext:(CGContextRef)arg2 ;
-(long long)mixingTypeWithObject:(id)arg1 ;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(void)paintPath:(const CGPathRef)arg1 naturalBounds:(CGRect)arg2 inContext:(CGContextRef)arg3 isPDF:(char)arg4 ;
-(id)initWithArchive:(const FillArchive*)arg1 unarchiver:(id)arg2 ;
-(void)saveToArchive:(FillArchive*)arg1 archiver:(id)arg2 ;
-(id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2 ;
-(id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned long long)arg3 ;
-(char)isAdvancedGradientIgnoringFlag;
-(char)isEqualIgnoringTransform:(id)arg1 ;
-(void)paintRect:(CGRect)arg1 inContext:(CGContextRef)arg2 atAngle:(double)arg3 ;
-(CGPoint)startPointForPath:(id)arg1 andBounds:(CGRect)arg2 ;
-(CGPoint)endPointForPath:(id)arg1 andBounds:(CGRect)arg2 ;
-(double)gradientAngleInDegrees;
-(void)p_setDefaultValues;
-(CGSize)baseNaturalSizeForBounds:(CGRect)arg1 ;
-(CGSize)baseNaturalSize;
-(CGAffineTransform)transformForSize:(CGSize)arg1 ;
-(void)p_drawQuartzShadingInContext:(CGContextRef)arg1 withGradientNaturalSize:(CGSize)arg2 baseNaturalSize:(CGSize)arg3 start:(CGPoint)arg4 end:(CGPoint)arg5 ;
-(CGPoint)normalizedPointForSize:(CGSize)arg1 endPoint:(char)arg2 ;
-(id)initWithGradient:(id)arg1 inPath:(id)arg2 andBounds:(CGRect)arg3 ;
-(void)p_setStartPoint:(CGPoint)arg1 ;
-(void)p_setEndPoint:(CGPoint)arg1 ;
-(void)p_setBaseNaturalSize:(CGSize)arg1 ;
-(CGPoint)p_scalePoint:(CGPoint)arg1 toShapeWithNaturalSize:(CGSize)arg2 ;
-(CGPoint)p_scalePoint:(CGPoint)arg1 fromShapeWithNaturalSize:(CGSize)arg2 ;
@end

