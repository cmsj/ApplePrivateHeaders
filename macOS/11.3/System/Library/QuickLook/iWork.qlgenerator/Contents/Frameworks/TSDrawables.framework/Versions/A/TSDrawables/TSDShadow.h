/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSSPropertyValueArchiving.h>
#import <TSDrawables/TSDMixing.h>
#import <TSDrawables/TSSPreset.h>
#import <TSDrawables/TSSPresetSource.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSMutableCopying.h>

@class NSString, TSUColor, NSShadow;

@interface TSDShadow : NSObject <TSSPropertyValueArchiving, TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying> {

	char mEnabled;
	double mAngle;
	double mOffset;
	double mRadius;
	double mOpacity;
	TSUColor* mColor;

}

@property (nonatomic,readonly) NSShadow * NSShadow; 
@property (nonatomic,readonly) double angle; 
@property (nonatomic,readonly) double offset; 
@property (nonatomic,readonly) CGPoint offsetDelta; 
@property (nonatomic,readonly) double radius; 
@property (nonatomic,readonly) double opacity; 
@property (nonatomic,copy,readonly) TSUColor * color; 
@property (getter=isEnabled,nonatomic,readonly) char enabled; 
@property (nonatomic,readonly) unsigned long long shadowType; 
@property (nonatomic,readonly) char isContactShadow; 
@property (nonatomic,readonly) char isDropShadow; 
@property (nonatomic,readonly) char isCurvedShadow; 
@property (nonatomic,readonly) NSString * typeDescription; 
@property (nonatomic,readonly) char showForEditingText; 
@property (nonatomic,readonly) NSString * presetKind; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)shadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(id)arg5 enabled:(char)arg6 ;
+(id)presetKinds;
+(void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(unsigned long long)arg3 ;
+(char)canMixWithNilObjects;
+(id)mixableObjectClasses;
+(id)p_defaultShadowEnabled:(char)arg1 ;
+(id)defaultShadow;
+(id)defaultDisabledShadow;
+(id)contactShadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 height:(double)arg4 opacity:(double)arg5 color:(id)arg6 enabled:(char)arg7 ;
+(id)shadowWithNSShadow:(id)arg1 ;
+(id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(id)arg6 enabled:(char)arg7 ;
+(id)keyPathsForValuesAffectingTSUColor;
+(char)automaticallyNotifiesObserversOfTSUColor;
+(id)instanceWithArchive:(const ShadowArchive*)arg1 unarchiver:(id)arg2 ;
+(id)defaultShadowPresets;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(char)isEnabled;
-(double)offset;
-(NSString *)typeDescription;
-(TSUColor *)color;
-(double)opacity;
-(double)radius;
-(double)angle;
-(unsigned long long)shadowType;
-(NSString *)presetKind;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(id)mixedBaseObjectWithObject:(id)arg1 ;
-(id)shadowByTransformingByTransform:(CGAffineTransform)arg1 ;
-(void)applyToContext:(CGContextRef)arg1 viewScale:(double)arg2 flipped:(char)arg3 extraOffset:(CGSize)arg4 ;
-(CGPoint)offsetDelta;
-(CGRect)shadowBoundsForRect:(CGRect)arg1 additionalTransform:(CGAffineTransform)arg2 ;
-(double)clampOffset:(double)arg1 ;
-(double)clampRadius:(double)arg1 ;
-(double)clampOpacity:(double)arg1 ;
-(id)newShadowClampedForSwatches;
-(char)isContactShadow;
-(char)isDropShadow;
-(char)isCurvedShadow;
-(char)showForEditingText;
-(void)applyToContext:(CGContextRef)arg1 viewScale:(double)arg2 ;
-(void)applyToContext:(CGContextRef)arg1 viewScale:(double)arg2 flipped:(char)arg3 ;
-(CGRect)boundsInNaturalSpaceForRep:(id)arg1 ;
-(CGRect)boundsForRep:(id)arg1 ;
-(CGImageRef)newShadowImageForRep:(id)arg1 withSize:(CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(char)arg4 ;
-(CGRect)shadowBoundsForRect:(CGRect)arg1 ;
-(CGRect)shadowBoundsForRect:(CGRect)arg1 additionalAngle:(double)arg2 ;
-(NSShadow *)NSShadow;
-(id)initWithArchive:(const ShadowArchive*)arg1 unarchiver:(id)arg2 ;
-(void)saveToArchive:(ShadowArchive*)arg1 archiver:(id)arg2 ;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(id)i_initWithOpacity:(double)arg1 color:(id)arg2 angle:(double)arg3 offset:(double)arg4 radius:(double)arg5 enabled:(char)arg6 ;
-(void)i_setColor:(id)arg1 ;
-(void)i_setAngle:(double)arg1 ;
-(void)i_setOffset:(double)arg1 ;
-(void)i_setRadius:(double)arg1 ;
-(void)i_setOpacity:(double)arg1 ;
-(void)i_setEnabled:(char)arg1 ;
-(CGImageRef)i_newEmptyImage;
@end

