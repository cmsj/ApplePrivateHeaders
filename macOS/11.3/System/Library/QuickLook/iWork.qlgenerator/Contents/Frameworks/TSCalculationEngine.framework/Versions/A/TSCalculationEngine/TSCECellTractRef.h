/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCalculationEngine.framework/Versions/A/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface TSCECellTractRef : NSObject <NSCopying> {

	TSCECellTractRefCore* _cppCellTractRef;

}

@property (assign,nonatomic) char spansAllColumns; 
@property (assign,nonatomic) char spansAllRows; 
@property (assign,nonatomic) char preserveRectangular; 
@property (assign,nonatomic) char mixedColumnStartedWithPreserve; 
@property (assign,nonatomic) char mixedRowStartedWithPreserve; 
@property (assign,nonatomic) TSCECellTractRefCore* cppCellTractRef;              //@synthesize cppCellTractRef=_cppCellTractRef - In the implementation block
@property (assign,nonatomic) TSKUIDStruct tableUID; 
@property (assign,nonatomic) TSUPreserveFlags preserveFlags; 
+(id)cellTractRefWithUidTractList:(id)arg1 onTable:(const TSKUIDStruct*)arg2 preserveFlags:(TSUPreserveFlags)arg3 rewriteContext:(TSCEFormulaRewriteContext*)arg4 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)debugDescription;
-(char)isValid;
-(void)addRows:(const TSUIndexSet*)arg1 ;
-(void)removeRows:(const TSUIndexSet*)arg1 ;
-(void)addColumns:(const TSUIndexSet*)arg1 ;
-(void)removeColumns:(const TSUIndexSet*)arg1 ;
-(void)addRow:(unsigned)arg1 ;
-(const TSUIndexSet*)rows;
-(const TSUIndexSet*)columns;
-(void)setColumns:(const TSUIndexSet*)arg1 ;
-(void)setRows:(const TSUIndexSet*)arg1 ;
-(TSUCellCoord)topLeft;
-(TSUCellCoord)bottomRight;
-(char)transpose;
-(void)setBottomRight:(const TSUCellCoord*)arg1 ;
-(void)setTopLeft:(const TSUCellCoord*)arg1 ;
-(void)addColumn:(unsigned short)arg1 ;
-(unsigned)numRows;
-(TSKUIDStruct)tableUID;
-(id)initWithRangeRef:(const TSCERangeRef*)arg1 ;
-(void)addRowRange:(const TSUIndexRange*)arg1 ;
-(void)addColumnRange:(const TSUIndexRange*)arg1 ;
-(char)spansAllRows;
-(TSCECellTractRefCore*)cppCellTractRef;
-(id)initWithColumns:(const TSUIndexSet*)arg1 rows:(const TSUIndexSet*)arg2 tableUID:(const TSKUIDStruct*)arg3 ;
-(char)spansAllColumns;
-(unsigned)numColumns;
-(TSCERangeCoordinate)boundingRange;
-(char)isSingleCell;
-(TSCERangeRef)boundingRangeRef;
-(char)isRectangularRange;
-(void)foreachCellRect:(/*^block*/id)arg1 ;
-(id)initWithCppCellTractRef:(const TSCECellTractRefCore*)arg1 ;
-(void)removeColumnRange:(const TSUIndexRange*)arg1 ;
-(void)removeRowRange:(const TSUIndexRange*)arg1 ;
-(void)setTableUID:(TSKUIDStruct)arg1 ;
-(void)setSpansAllRows:(char)arg1 ;
-(void)setPreserveFlags:(TSUPreserveFlags)arg1 ;
-(void)foreachRangeRef:(/*^block*/id)arg1 ;
-(TSUPreserveFlags)preserveFlags;
-(void)setSpansAllColumns:(char)arg1 ;
-(char)preserveRectangular;
-(void)setPreserveRectangular:(char)arg1 ;
-(char)insertRowGapsAtIndexes:(id)arg1 ;
-(char)insertColumnGapsAtIndexes:(id)arg1 ;
-(id)fillInRowGapsUsingIndexes:(id)arg1 ;
-(id)fillInColumnGapsUsingIndexes:(id)arg1 ;
-(id)edgeExpandUsingIndexes:(id)arg1 forRows:(char)arg2 ;
-(char)edgeExpandUsingMovingUids:(id)arg1 tractList:(id)arg2 ;
-(char)edgeExpandTractUsingIncludeUidTract:(id)arg1 resolver:(id)arg2 forRows:(char)arg3 isInverse:(char)arg4 ;
-(char)isSingleCellOrSpanningRange;
-(BOOL)hasTableUID;
-(id)initWithCellRefVector:(const vector<TSCECellRef, std::__1::allocator<TSCECellRef>>*)arg1 ;
-(void)adjustIndexesBy:(const TSUColumnRowOffset*)arg1 ;
-(void)foreachAnyRef:(/*^block*/id)arg1 ;
-(void)setPreserveFlagsOnSubrange:(TSCERangeRef*)arg1 ;
-(id)collapseOutRowIndexes:(id)arg1 ;
-(id)collapseOutColumnIndexes:(id)arg1 ;
-(void)setMixedColumnStartedWithPreserve:(char)arg1 ;
-(void)setMixedRowStartedWithPreserve:(char)arg1 ;
-(id)initWithTopLeft:(const TSUCellCoord*)arg1 bottomRight:(const TSUCellCoord*)arg2 tableUID:(const TSKUIDStruct*)arg3 ;
-(id)expandUsingIndexes:(id)arg1 forRows:(char)arg2 ;
-(id)initWithTopLeft:(const TSUCellCoord*)arg1 bottomRight:(const TSUCellCoord*)arg2 ;
-(char)mixedColumnStartedWithPreserve;
-(char)mixedRowStartedWithPreserve;
-(char)isPreservedColumn:(unsigned short)arg1 preferStart:(char)arg2 ;
-(char)isPreservedRow:(unsigned)arg1 preferStart:(char)arg2 ;
-(TSUPreserveFlags)preserveFlagsForCoord:(const TSUCellCoord*)arg1 preferStart:(char)arg2 ;
-(TSKUIDStructTract*)uidTractWithCalcEngine:(id)arg1 hostTableUID:(const TSKUIDStruct*)arg2 ;
-(void)intersectWithCellRect:(const TSUCellRect*)arg1 ;
-(void)intersectWithCellRectIgnoringSpanning:(const TSUCellRect*)arg1 ;
-(TSUCellCoord)coordAtColumnOffset:(unsigned)arg1 rowOffset:(unsigned)arg2 ;
-(void)setCppCellTractRef:(TSCECellTractRefCore*)arg1 ;
@end

