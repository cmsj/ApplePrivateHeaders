/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSKit.framework/Versions/A/TSKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
#import <TSKit/TSKit-Structs.h>
@class TSUWeakReference, NSCondition, NSMutableDictionary, NSMutableArray, NSObject, NSThread, TSKRunLoopTicket, TSKAccessControllerRunLoop;

@interface TSKAccessController : NSObject {

	TSUWeakReference* _delegate;
	opaque_pthread_rwlock_t _rwLock;
	char _secondaryThreadWriting;
	char _thenReadingOnPrimaryThread;
	NSCondition* _cond;
	NSMutableDictionary* _signalIdentifiers;
	NSMutableDictionary* _waitIdentifiers;
	CFRunLoopSourceRef _primaryThreadPingSource;
	NSMutableArray* _pendingPrimaryThreadBlocks;
	SCD_Struct_TS4* _readerInfo[64];
	SCD_Struct_TS3 _primaryThreadTicketInfo;
	unsigned _readerCount;
	NSMutableArray* _writerQueue;
	NSObject*<OS_dispatch_semaphore> _outstandingTicketReadLock;
	unsigned _outstandingTicketCount;
	Ac _writeLockHeld;
	unsigned long long _writeBlockedPrimaryThreadCount;
	unsigned long long _primaryThreadWriteCount;
	A{__CFRunLoop}* _runLoop;
	Ac _isOnMainRunLoop;
	NSThread* _primaryThread;
	os_unfair_lock_s _primaryThreadIVarLock;
	AI _primaryThreadQualityOfServiceClass;
	Ai _boostPrimaryThreadQualityOfServiceCount;
	TSKRunLoopTicket* _primaryRunLoopTicket;
	Ai _performWhileAnotherWaitingThreadHasWriteCount;

}

@property (readonly) NSThread * primaryThread; 
@property (assign) CFRunLoopRef runLoop; 
@property (readonly) char hasRead; 
@property (readonly) char hasWrite; 
@property (readonly) char isPrimaryThread; 
@property (readonly) char isOnMainRunLoop; 
@property (readonly) char isOnPrimaryRunLoop; 
@property (readonly) unsigned primaryThreadQualityOfServiceClass; 
@property (readonly) TSKAccessControllerRunLoop * primaryRunLoop; 
-(void)dealloc;
-(id)init;
-(CFRunLoopRef)runLoop;
-(id)initWithDelegate:(id)arg1 ;
-(void)setRunLoop:(CFRunLoopRef)arg1 ;
-(char)waitOnIdentifier:(id)arg1 untilDate:(id)arg2 releaseReadWhileWaiting:(char)arg3 ;
-(char)p_hasRead;
-(void)p_readUnlock;
-(char)p_hasWrite;
-(char)p_waitWithCondition:(id)arg1 untilDate:(id)arg2 ;
-(void)p_signalThread:(id)arg1 ;
-(void)p_readLock;
-(void)performRead:(/*^block*/id)arg1 ;
-(void)p_writeUnlock;
-(void)p_dequeueWrite;
-(void)performWrite:(/*^block*/id)arg1 ;
-(id)p_threadIdentifier;
-(void)signalIdentifier:(id)arg1 ;
-(void)waitOnIdentifier:(id)arg1 ;
-(char)hasRead;
-(char)hasWrite;
-(void)performReadWithTicket:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)performWrite:(/*^block*/id)arg1 blockPrimaryThread:(char)arg2 ;
-(void)performReadAllowingOverlappingImplicitRead:(/*^block*/id)arg1 thenWrite:(/*^block*/id)arg2 thenReadOnPrimaryThread:(/*^block*/id)arg3 ;
-(void)assertHasReadOrWrite;
-(void)assertHasRead;
-(void)assertHasWrite;
-(id)initWithPrimaryRunloop:(CFRunLoopRef)arg1 delegate:(id)arg2 ;
-(void)p_setPrimaryThreadIfNeeded;
-(char)isPrimaryThread;
-(void)p_willAcquireWriteLock;
-(void)p_enqueueWriteAndBlockAllowingPendingWrites:(char)arg1 ;
-(void)p_writeLockAndBlockPrimaryThread:(char)arg1 ;
-(void)p_willAcquireReadLock;
-(SCD_Struct_TS3*)p_ticketInfoForCurrentThread;
-(void)p_finishReadForTicketInfo:(SCD_Struct_TS3*)arg1 ;
-(void)i_startReadForTicket:(id)arg1 ;
-(void)p_readLockTakingRealLock:(char)arg1 ;
-(void)p_readUnlockReleasingRealLock:(char)arg1 ;
-(void)i_finishReadForTicket:(id)arg1 ;
-(SCD_Struct_TS3*)p_ticketInfoForTicket:(id)arg1 ;
-(void)p_decrementCountForReaderAtIndex:(unsigned)arg1 releasingRealLock:(char)arg2 ;
-(void)p_unblockPrimaryThread;
-(void)p_performRead:(/*^block*/id)arg1 eagerlyBlockingPrimaryThread:(char)arg2 thenWrite:(/*^block*/id)arg3 allowingPendingWrites:(char)arg4 thenReadOnPrimaryThread:(/*^block*/id)arg5 ;
-(void)p_blockPrimaryThread;
-(void)p_schedulePrimaryThreadRead:(/*^block*/id)arg1 result:(char)arg2 ;
-(void)p_signalPrimaryThreadWriteComplete;
-(NSThread *)primaryThread;
-(void)p_didAcquireReadLock;
-(void)p_willRelinquishReadLock;
-(void)p_didAcquireWriteLock;
-(void)p_blockPrimaryThreadForWrite;
-(void)p_asyncPerformBlockOnPrimaryThread:(/*^block*/id)arg1 ;
-(void)p_willRelinquishWriteLock;
-(unsigned long long)p_writerQueueIndexOfThreadIdentifier:(id)arg1 ;
-(void)p_performReadOnPrimaryThread:(/*^block*/id)arg1 result:(char)arg2 ;
-(void)p_flushPendingPrimaryThreadBlocksQueueAcquiringLock:(char)arg1 ;
-(TSKAccessControllerRunLoop *)primaryRunLoop;
-(void)dispatchAsyncOnPrimaryThreadInMode:(CFStringRef)arg1 block:(/*^block*/id)arg2 ;
-(void)wakeUpPrimaryRunLoop;
-(void)addPrimaryThreadRunLoopSource:(CFRunLoopSourceRef)arg1 mode:(CFStringRef)arg2 ;
-(void)removePrimaryThreadRunLoopSource:(CFRunLoopSourceRef)arg1 mode:(CFStringRef)arg2 ;
-(unsigned)primaryThreadQualityOfServiceClass;
-(id)boostPrimaryThreadQualityOfService;
-(void)p_didEndBoostingPrimaryThread;
-(void)performReadGrantingTicket:(/*^block*/id)arg1 ;
-(void)performWhileAnotherWaitingThreadHasWrite:(/*^block*/id)arg1 ;
-(void)performRead:(/*^block*/id)arg1 thenWrite:(/*^block*/id)arg2 thenReadOnPrimaryThread:(/*^block*/id)arg3 ;
-(void)performRead:(/*^block*/id)arg1 thenWriteBeforePendingWrites:(/*^block*/id)arg2 thenReadOnPrimaryThread:(/*^block*/id)arg3 ;
-(char)isOnMainRunLoop;
-(char)isOnPrimaryRunLoop;
@end

