/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCalculationEngine.framework/Versions/A/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSString;

@interface TSCERefNamingContext : NSObject <NSCopying> {

	char _suppressIdenticalEndReference;
	char _useSymbolicNames;
	char _allowTableName;
	char _allowSpanningColumnReferenceBodyQualifier;
	char _showGeometricAsBase;
	char _quoteComponents;
	char _forceEscaping;
	char _forceTableName;
	char _forceSheetName;
	char _forFormulaPlainText;
	char _usedSymbolicName;
	NSString* _contextSheetName;
	TSKUIDStruct _hostTableUID;

}

@property (nonatomic,retain) NSString * contextSheetName;                                 //@synthesize contextSheetName=_contextSheetName - In the implementation block
@property (assign,nonatomic) TSKUIDStruct hostTableUID;                                   //@synthesize hostTableUID=_hostTableUID - In the implementation block
@property (assign,nonatomic) char suppressIdenticalEndReference;                          //@synthesize suppressIdenticalEndReference=_suppressIdenticalEndReference - In the implementation block
@property (assign,nonatomic) char useSymbolicNames;                                       //@synthesize useSymbolicNames=_useSymbolicNames - In the implementation block
@property (assign,nonatomic) char allowTableName;                                         //@synthesize allowTableName=_allowTableName - In the implementation block
@property (assign,nonatomic) char allowSpanningColumnReferenceBodyQualifier;              //@synthesize allowSpanningColumnReferenceBodyQualifier=_allowSpanningColumnReferenceBodyQualifier - In the implementation block
@property (assign,nonatomic) char showGeometricAsBase;                                    //@synthesize showGeometricAsBase=_showGeometricAsBase - In the implementation block
@property (assign,nonatomic) char quoteComponents;                                        //@synthesize quoteComponents=_quoteComponents - In the implementation block
@property (assign,nonatomic) char forceEscaping;                                          //@synthesize forceEscaping=_forceEscaping - In the implementation block
@property (assign,nonatomic) char forceTableName;                                         //@synthesize forceTableName=_forceTableName - In the implementation block
@property (assign,nonatomic) char forceSheetName;                                         //@synthesize forceSheetName=_forceSheetName - In the implementation block
@property (assign,nonatomic) char forFormulaPlainText;                                    //@synthesize forFormulaPlainText=_forFormulaPlainText - In the implementation block
@property (assign,nonatomic) char usedSymbolicName;                                       //@synthesize usedSymbolicName=_usedSymbolicName - In the implementation block
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)init;
-(void)reset;
-(void)setHostTableUID:(TSKUIDStruct)arg1 ;
-(void)setContextSheetName:(NSString *)arg1 ;
-(void)setAllowTableName:(char)arg1 ;
-(void)setShowGeometricAsBase:(char)arg1 ;
-(void)setQuoteComponents:(char)arg1 ;
-(void)setForceSheetName:(char)arg1 ;
-(void)setForceTableName:(char)arg1 ;
-(void)setSuppressIdenticalEndReference:(char)arg1 ;
-(void)setAllowSpanningColumnReferenceBodyQualifier:(char)arg1 ;
-(void)setUseSymbolicNames:(char)arg1 ;
-(NSString *)contextSheetName;
-(TSKUIDStruct)hostTableUID;
-(char)suppressIdenticalEndReference;
-(char)useSymbolicNames;
-(char)allowTableName;
-(char)allowSpanningColumnReferenceBodyQualifier;
-(char)showGeometricAsBase;
-(char)quoteComponents;
-(char)forceEscaping;
-(void)setForceEscaping:(char)arg1 ;
-(char)forceTableName;
-(char)forceSheetName;
-(char)forFormulaPlainText;
-(void)setForFormulaPlainText:(char)arg1 ;
-(char)usedSymbolicName;
-(void)setUsedSymbolicName:(char)arg1 ;
@end

