/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCalculationEngine.framework/Versions/A/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
@class TSCEFormulaRewrite_Uids, NSArray, TSCEMutableUIDSet, NSIndexSet, TSCEUIDSet;

@interface TSCEFormulaRewriteInfo_RowColumnInfo : NSObject {

	TSKUIDStruct _tableUID;
	TSKUIDStruct _conditionalStyleOwnerUID;
	TSKUIDStruct _groupByUID;
	TSCEFormulaRewrite_Uids* _rowOrColumnUids;
	TSKUIDStructVectorTemplate<TSKUIDStruct>* _rowOrColumnUuids;
	char _isRows;
	NSArray* _rangeEntries;
	TSCERangeCoordinate _tableRange;
	TSCEFormulaRewriteInfo_RowColumnInfo* _auxRowColumnInfo;
	TSCEMutableUIDSet* _expandedRowColumnUuids;
	TSKUIDStruct _insertAtUid;
	TSKUIDStruct _insertOppositeUid;
	char _useWholeTableForInsertionDependencies;

}

@property (nonatomic,readonly) const TSKUIDStruct* tableUID;                                                  //@synthesize tableUID=_tableUID - In the implementation block
@property (nonatomic,readonly) const TSKUIDStruct* conditionalStyleOwnerUID;                                  //@synthesize conditionalStyleOwnerUID=_conditionalStyleOwnerUID - In the implementation block
@property (nonatomic,readonly) const TSKUIDStruct* groupByUID;                                                //@synthesize groupByUID=_groupByUID - In the implementation block
@property (nonatomic,readonly) char isRows;                                                                   //@synthesize isRows=_isRows - In the implementation block
@property (nonatomic,readonly) char isColumns; 
@property (nonatomic,retain,readonly) TSCEFormulaRewrite_Uids * rowOrColumnUids;                              //@synthesize rowOrColumnUids=_rowOrColumnUids - In the implementation block
@property (nonatomic,readonly) const TSKUIDStructVectorTemplate<TSKUIDStruct>* rowOrColumnUuids;              //@synthesize rowOrColumnUuids=_rowOrColumnUuids - In the implementation block
@property (nonatomic,retain,readonly) NSIndexSet * rowOrColumnIndices; 
@property (nonatomic,retain,readonly) TSCEUIDSet * expandedRowColumnUuids;                                    //@synthesize expandedRowColumnUuids=_expandedRowColumnUuids - In the implementation block
@property (nonatomic,retain) TSCEFormulaRewriteInfo_RowColumnInfo * auxRowColumnInfo;                         //@synthesize auxRowColumnInfo=_auxRowColumnInfo - In the implementation block
@property (assign,nonatomic) char useWholeTableForInsertionDependencies;                                      //@synthesize useWholeTableForInsertionDependencies=_useWholeTableForInsertionDependencies - In the implementation block
@property (assign,nonatomic) TSKUIDStruct insertAtUid;                                                        //@synthesize insertAtUid=_insertAtUid - In the implementation block
@property (assign,nonatomic) TSKUIDStruct insertOppositeUid;                                                  //@synthesize insertOppositeUid=_insertOppositeUid - In the implementation block
-(id)description;
-(TSCERangeCoordinate)tableRange;
-(char)isColumns;
-(char)isRows;
-(void)saveToMessage:(ColumnOrRowUuidsInfoArchive*)arg1 ;
-(const TSKUIDStruct*)tableUID;
-(vector<TSCERangeCoordinate, std::__1::allocator<TSCERangeCoordinate>>*)coordRangesForInsertRemove;
-(char)isForTable:(const TSKUIDStruct*)arg1 ;
-(TSCECellRef)originalCellRefForRewriteType:(int)arg1 updatedCellRef:(const TSCECellRef*)arg2 ;
-(unsigned)offsetForRowIndex:(unsigned)arg1 ;
-(TSCECellRef)updatedCellRefForRewriteType:(int)arg1 originalCellRef:(const TSCECellRef*)arg2 ;
-(TSCEFormulaRewriteInfo_RowColumnInfo *)auxRowColumnInfo;
-(TSCEFormulaRewrite_Uids *)rowOrColumnUids;
-(TSKUIDStruct)insertAtUid;
-(TSKUIDStruct)insertOppositeUid;
-(const TSKUIDStruct*)conditionalStyleOwnerUID;
-(const TSKUIDStruct*)groupByUID;
-(char)indexIsAffected:(unsigned)arg1 ;
-(TSKUIDStruct)uuidForIndex:(unsigned)arg1 ;
-(NSIndexSet *)rowOrColumnIndices;
-(TSKUIDStructVectorTemplate<TSKUIDStruct>*)uuidsForIndexes:(id)arg1 ;
-(TSKUIDStructVectorTemplate<TSKUIDStruct>*)uuidsInRange:(NSRange)arg1 ;
-(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)rowOrColumnUuids;
-(TSCEUIDSet *)expandedRowColumnUuids;
-(TSCERangeCoordinate)affectedRangeForRemoveRows;
-(TSCERangeCoordinate)affectedRangeForInsertRows;
-(TSCERangeCoordinate)affectedRangeForMoveRows;
-(id)initFromMessage:(const ColumnOrRowUuidsInfoArchive*)arg1 ;
-(void)unloadIndexes;
-(TSKUIDStructVectorTemplate<TSKUIDStruct>*)orderedUuidsForRange:(NSRange)arg1 inTable:(id)arg2 areRows:(char)arg3 shuffleMap:(id)arg4 ;
-(void)setInsertAtUid:(TSKUIDStruct)arg1 ;
-(void)setInsertOppositeUid:(TSKUIDStruct)arg1 ;
-(id)initWithFormulaOwnerUID:(const TSKUIDStruct*)arg1 uuids:(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg2 areRows:(char)arg3 ;
-(unsigned)offsetForUpdatedRowIndex:(unsigned)arg1 isRemoveRows:(char)arg2 ;
-(id)initWithTableUID:(const TSKUIDStruct*)arg1 condStyleOwnerUID:(const TSKUIDStruct*)arg2 groupByUID:(const TSKUIDStruct*)arg3 uuids:(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg4 atIndexes:(const vector<unsigned int, std::__1::allocator<unsigned int>>*)arg5 areRows:(char)arg6 ;
-(void)loadIndexesForTable:(id)arg1 uidResolver:(id)arg2 forRemoveRows:(char)arg3 shuffleMap:(id)arg4 ;
-(void)createAuxRowColumnInfoForMove;
-(unsigned short)columnIndexForUuid:(const TSKUIDStruct*)arg1 ;
-(unsigned)rowIndexForUuid:(const TSKUIDStruct*)arg1 ;
-(void)setAuxRowColumnInfo:(TSCEFormulaRewriteInfo_RowColumnInfo *)arg1 ;
-(char)useWholeTableForInsertionDependencies;
-(void)setUseWholeTableForInsertionDependencies:(char)arg1 ;
@end

