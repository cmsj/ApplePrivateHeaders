/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSDAbstractLayout.h>
#import <TSDrawables/TSDWrappableParent.h>

@protocol TSDInfo;
@class NSObject, TSDLayoutGeometry, NSMutableSet, TSUBezierPath, NSSet, TSDStroke, TSDInfoGeometry, NSArray;

@interface TSDLayout : TSDAbstractLayout <TSDWrappableParent> {

	NSObject*<TSDInfo> mInfo;
	int mLayoutState;
	CGPoint mBaseAlignmentFrameOriginForFixingInterimPosition;
	CGRect mDirtyRect;
	char mInvalidatingSize;
	struct {
		unsigned genericInvalidated : 1;
		unsigned sizeInvalidated : 1;
	}  mAlreadyInvalidatedFlags;
	struct {
		unsigned position : 1;
		unsigned size : 1;
	}  mInvalidFlags;
	TSDLayoutGeometry* mBaseGeometry;
	CGRect mInitialBoundsForStandardKnobs;
	CGPoint mCapturedInfoGeometryPositionForAttached;
	NSMutableSet* mConnectedLayouts;
	CGSize mMaximumInlineFrameSize;

}

@property (nonatomic,readonly) CGPoint commentPoleUnscaledOffset; 
@property (nonatomic,readonly) TSUBezierPath * i_wrapPath; 
@property (nonatomic,readonly) TSUBezierPath * i_wrapPathIncludingTitleAndCaption; 
@property (nonatomic,readonly) char i_anyAncestorCurrentlyBeingRotatedWantsNormalLayoutDuringDynamicRotation; 
@property (nonatomic,readonly) NSObject*<TSDInfo> info; 
@property (nonatomic,copy) TSDLayoutGeometry * dynamicGeometry; 
@property (nonatomic,readonly) TSDLayoutGeometry * originalGeometry; 
@property (nonatomic,readonly) int layoutState; 
@property (nonatomic,readonly) NSSet * connectedLayouts; 
@property (assign,nonatomic) CGSize maximumInlineFrameSize; 
@property (nonatomic,readonly) char shouldValidate; 
@property (nonatomic,readonly) char invalidGeometry; 
@property (nonatomic,readonly) CGRect frameForPartitioning; 
@property (nonatomic,readonly) Class repClassOverride; 
@property (nonatomic,readonly) char shouldBeDisplayedInShowMode; 
@property (nonatomic,readonly) char isInGroup; 
@property (nonatomic,readonly) char isInTopLevelContainerForEditing; 
@property (nonatomic,readonly) char supportsParentFlipping; 
@property (nonatomic,readonly) char shouldShowCaption; 
@property (nonatomic,readonly) TSDStroke * stroke; 
@property (nonatomic,readonly) char isStrokeBeingManipulated; 
@property (nonatomic,readonly) char shouldProvideGuidesDuringExclusiveAlignmentOperation; 
@property (nonatomic,readonly) CGAffineTransform originalTransformInRoot; 
@property (nonatomic,readonly) CGAffineTransform originalTransformForProvidingGuides; 
@property (nonatomic,readonly) TSDLayoutGeometry * originalPureGeometry; 
@property (nonatomic,readonly) TSDLayoutGeometry * pureGeometry; 
@property (nonatomic,readonly) TSDLayoutGeometry * pureGeometryInRoot; 
@property (nonatomic,readonly) TSDLayoutGeometry * pureGeometryInParent; 
@property (nonatomic,readonly) TSDLayoutGeometry * inspectorGeometry; 
@property (nonatomic,readonly) double inspectorGeometryAngleInDegrees; 
@property (nonatomic,readonly) char canInspectGeometry; 
@property (nonatomic,readonly) CGAffineTransform pureTransformInRoot; 
@property (nonatomic,readonly) CGAffineTransform originalPureTransformInRoot; 
@property (nonatomic,readonly) char isBeingTransformed; 
@property (nonatomic,readonly) char wantsNormalLayoutDuringDynamicRotation; 
@property (nonatomic,readonly) char canAspectRatioLockBeChangedByUser; 
@property (nonatomic,readonly) char resizeMayChangeAspectRatio; 
@property (nonatomic,readonly) CGSize minimumSize; 
@property (nonatomic,readonly) char isDynamicallyChangingAvailableSpaceForContainedChild; 
@property (nonatomic,readonly) TSDInfoGeometry * finalInfoGeometryForResize; 
@property (nonatomic,readonly) char isBeingManipulated; 
@property (nonatomic,readonly) CGRect initialBoundsForStandardKnobs; 
@property (nonatomic,readonly) TSDInfoGeometry * initialInfoGeometry; 
@property (nonatomic,readonly) char parentAutosizes; 
@property (nonatomic,readonly) double descentForInlineLayout; 
@property (nonatomic,readonly) double inlineCenteredAlignmentHorizontalOffset; 
@property (nonatomic,readonly) NSObject * dynamicOverride; 
@property (getter=isSelectable,nonatomic,readonly) char selectable; 
@property (getter=isDraggable,nonatomic,readonly) char draggable; 
@property (nonatomic,readonly) CGRect boundsForStandardKnobs; 
@property (nonatomic,readonly) CGRect frameForCaptionPositioning; 
@property (nonatomic,readonly) CGPoint centerForRotation; 
@property (nonatomic,readonly) CGPoint centerForConnecting; 
@property (nonatomic,readonly) NSArray * dependentLayouts; 
@property (nonatomic,readonly) NSArray * bidirectionalSizeDependentLayouts; 
@property (nonatomic,readonly) NSSet * reliedOnLayouts; 
@property (nonatomic,readonly) NSArray * additionalLayoutsForRepCreation; 
@property (nonatomic,readonly) CGRect alignmentFrameForCaptionEdgeInsetsCalculation; 
@property (nonatomic,readonly) TSUBezierPath * pathForClippingConnectionLines; 
-(void)setAdjustedInterimPositionX:(double)arg1 ;
-(void)setAdjustedInterimPositionY:(double)arg1 ;
-(void)invalidate;
-(id)initWithInfo:(id)arg1 ;
-(NSObject*<TSDInfo>)info;
-(CGSize)minimumSize;
-(void)validate;
-(TSDStroke *)stroke;
-(void)setNeedsDisplayInRect:(CGRect)arg1 ;
-(char)isSelectable;
-(void)setNeedsDisplay;
-(void)setParent:(id)arg1 ;
-(void)setGeometry:(id)arg1 ;
-(char)isDraggable;
-(void)endRotate;
-(int)layoutState;
-(void)invalidateChildren;
-(char)shouldShowCaption;
-(TSDLayoutGeometry *)originalGeometry;
-(id)rootLayout;
-(void)invalidateFrame;
-(Class)repClassOverride;
-(id)computeLayoutGeometry;
-(id)layoutController;
-(void)invalidateSize;
-(void)invalidatePosition;
-(CGRect)convertNaturalRectToUnscaledCanvas:(CGRect)arg1 ;
-(CGRect)convertNaturalRectFromUnscaledCanvas:(CGRect)arg1 ;
-(char)invalidGeometry;
-(CGPoint)convertNaturalPointFromUnscaledCanvas:(CGPoint)arg1 ;
-(void)updateChildrenFromInfo;
-(CGPoint)capturedInfoPositionForAttachment;
-(id)layoutGeometryFromInfo;
-(id)descendentWrappables;
-(TSUBezierPath *)i_wrapPath;
-(void)dragBy:(CGPoint)arg1 ;
-(void)invalidateExteriorWrap;
-(void)processChangedProperty:(int)arg1 ;
-(void)parentDidChange;
-(char)isBeingManipulated;
-(char)allowsConnections;
-(char)orderedBefore:(id)arg1 ;
-(void)processChanges:(id)arg1 ;
-(void)beginDynamicOperation;
-(void)endDynamicOperation;
-(CGRect)boundsForStandardKnobs;
-(NSSet *)connectedLayouts;
-(char)isInTopLevelContainerForEditing;
-(CGRect)i_takeDirtyRect;
-(CGAffineTransform)originalPureTransformInRoot;
-(CGAffineTransform)pureTransformInRoot;
-(CGAffineTransform)originalTransformInRoot;
-(TSDLayoutGeometry *)dynamicGeometry;
-(void)beginRotate;
-(CGPoint)centerForRotation;
-(char)isInGroup;
-(NSArray *)dependentLayouts;
-(void)p_invalidateConnectedLayouts;
-(void)p_unregisterWithLayoutController:(id)arg1 ;
-(void)parentWillChangeTo:(id)arg1 ;
-(void)p_registerWithLayoutController:(id)arg1 ;
-(void)p_recursiveInvalidate;
-(CGPoint)alignmentFrameOriginForFixingInterimPosition;
-(void)setDynamicGeometry:(TSDLayoutGeometry *)arg1 ;
-(TSDLayoutGeometry *)originalPureGeometry;
-(CGRect)initialBoundsForStandardKnobs;
-(TSDLayoutGeometry *)pureGeometry;
-(CGSize)maximumFrameSizeForChild:(id)arg1 ;
-(id)additionalDependenciesForChildLayout:(id)arg1 ;
-(CGPoint)calculatePointFromSearchReference:(id)arg1 ;
-(char)shouldValidate;
-(void)unregisterFromLayoutController;
-(void)willBeAddedToLayoutController:(id)arg1 ;
-(void)willBeRemovedFromLayoutController:(id)arg1 ;
-(char)shouldBeDisplayedInShowMode;
-(char)isStrokeBeingManipulated;
-(void)dynamicStrokeWidthChangeDidBegin;
-(void)dynamicStrokeWidthUpdateToValue:(double)arg1 ;
-(void)dynamicStrokeWidthChangeDidEnd;
-(void)pauseDynamicTransformation;
-(char)isBeingTransformed;
-(void)beginDrag;
-(void)dragByUnscaled:(CGPoint)arg1 ;
-(void)endDrag;
-(CGAffineTransform)originalTransformForProvidingGuides;
-(CGAffineTransform)layoutTransformInInfoSpace:(CGAffineTransform)arg1 ;
-(char)shouldProvideGuidesDuringExclusiveAlignmentOperation;
-(void)takeRotationFromTracker:(id)arg1 ;
-(char)resizeMayChangeAspectRatio;
-(char)canAspectRatioLockBeChangedByUser;
-(void)beginResize;
-(TSDInfoGeometry *)initialInfoGeometry;
-(TSDLayoutGeometry *)pureGeometryInRoot;
-(TSDLayoutGeometry *)inspectorGeometry;
-(void)validateFromLastInterimPosition;
-(CGPoint)centerForConnecting;
-(id)computeInfoGeometryDuringResize;
-(NSSet *)reliedOnLayouts;
-(NSArray *)additionalLayoutsForRepCreation;
-(void)addConnectedLayout:(id)arg1 ;
-(void)removeConnectedLayout:(id)arg1 ;
-(CGRect)frameForCulling;
-(void)p_invalidateDescendentWrapPaths;
-(CGRect)rectInRootForSelectionPath:(id)arg1 ;
-(char)selectionMustBeEntirelyOnscreenToCountAsVisibleInSelectionPath:(id)arg1 ;
-(char)shouldInvalidateSizeWhenInvalidateSizeOfReliedOnLayout:(id)arg1 ;
-(double)viewScaleForZoomingToSelectionPath:(id)arg1 targetPointSize:(double)arg2 ;
-(CGRect)rectInRootOfAutoZoomContextOfSelectionPath:(id)arg1 ;
-(CGRect)rectInRootForPresentingAnnotationPopoverForSelectionPath:(id)arg1 ;
-(id)containedPencilAnnotations;
-(id)unscaledContentRectsToAvoidPencilAnnotationOverlap;
-(char)containsStartOfPencilAnnotation:(id)arg1 ;
-(char)childLayoutIsCurrentlyHiddenWhileManipulating:(id)arg1 ;
-(CGPoint)activityLineUnscaledEndPointForSearchReference:(id)arg1 ;
-(id)unscaledCommentFlagAnchorInfoForSearchReference:(id)arg1 ;
-(char)allowIntersectionOfChildLayout:(id)arg1 ;
-(char)parentAutosizes;
-(void)recursivelyAddLayoutAndChildrenToSet:(id)arg1 ;
-(char)descendentWrappablesContainsWrappable:(id)arg1 ;
-(id)childInfosForChildLayouts;
-(TSUBezierPath *)pathForClippingConnectionLines;
-(id)childrenForPencilAnnotations;
-(CGRect)frameForCaptionPositioning;
-(char)isDynamicallyChangingAvailableSpaceForContainedChild;
-(char)supportsParentFlipping;
-(char)wantsNormalLayoutDuringDynamicRotation;
-(void)takeSizeFromTracker:(id)arg1 ;
-(void)endResize;
-(CGRect)frameForCullingWithBaseFrame:(CGRect)arg1 additionalTransform:(CGAffineTransform)arg2 ;
-(id)computeInfoGeometryFromPureLayoutGeometry:(id)arg1 ;
-(CGRect)baseFrameForFrameForCullingWithAdditionalTransform:(CGAffineTransform)arg1 ;
-(void)p_updateDescendentWrapPathsWithTransform:(CGAffineTransform)arg1 ;
-(void)p_invalidateDescendentWrapPathsInRoot;
-(CGRect)p_frameForCullingWithAdditionalTransform:(CGAffineTransform)arg1 ;
-(void)i_clearInvalidationCache;
-(NSArray *)bidirectionalSizeDependentLayouts;
-(void)invalidateInlineAndDepedentsForInlineFrameResize;
-(CGSize)p_newMaxInlineFrameSize;
-(CGSize)maximumInlineFrameSize;
-(void)setMaximumInlineFrameSize:(CGSize)arg1 ;
-(void)i_recursivelyClearInvalidationCache;
-(char)i_anyAncestorCurrentlyBeingRotatedWantsNormalLayoutDuringDynamicRotation;
-(void)p_calculateClampModelValuesWithAdditionalTransform:(CGAffineTransform)arg1 andPerformBlock:(/*^block*/id)arg2 ;
-(CGRect)alignmentFrameForCaptionEdgeInsetsCalculation;
-(double)scaleForInlineClampingUnrotatedSize:(CGSize)arg1 withTransform:(CGAffineTransform)arg2 ;
-(id)i_captionAndTitleLayouts;
-(CGRect)frameForPartitioning;
-(void)i_willValidateLayout;
-(void)i_didValidateLayout;
-(void)invalidateTextScalePercent;
-(void)updateMaximumInlineFrameSize;
-(id)wrapInvalidationParent;
-(void)invalidateForChangedPrintingSettings;
-(CGSize)minimumSizeForResizingKnob:(id)arg1 ;
-(void)resizeWithTransform:(CGAffineTransform)arg1 ;
-(TSDInfoGeometry *)finalInfoGeometryForResize;
-(TSDLayoutGeometry *)pureGeometryInParent;
-(CGAffineTransform)p_additionalTransformForInlineRoot;
-(double)inspectorGeometryAngleInDegrees;
-(char)canInspectGeometry;
-(NSObject *)dynamicOverride;
-(void)dynamicOverrideDidChange;
-(void)transferLayoutGeometryToInfo:(id)arg1 withAdditionalTransform:(CGAffineTransform)arg2 assertIfInDocument:(char)arg3 ;
-(NSEdgeInsets)captionEdgeInsets;
-(char)shouldUseCaptionEdgeInsetsInInterimPosition;
-(void)calculateAndSetPointsToSearchReference:(id)arg1 ;
-(void)updateLayoutGeometryInPreparationForPartitioning;
-(double)descentForInlineLayout;
-(double)inlineCenteredAlignmentHorizontalOffset;
-(TSUBezierPath *)i_wrapPathIncludingTitleAndCaption;
-(CGRect)rectInRootForZoomingToSelectionPath:(id)arg1 ;
-(double)percentOfUnscaledRectContainedInParentRep:(CGRect)arg1 ;
-(char)canvasShouldScrollForSelectionPath:(id)arg1 ;
-(id)layoutForSelectionPath:(id)arg1 ;
-(CGRect)rectInRootForCalculatingActivityLineEndpoint;
-(CGPoint)commentPoleUnscaledOffset;
-(id)containedPencilAnnotationsIncludingChildren:(char)arg1 ;
-(CGPoint)unscaledCommentPoleOrigin;
@end

