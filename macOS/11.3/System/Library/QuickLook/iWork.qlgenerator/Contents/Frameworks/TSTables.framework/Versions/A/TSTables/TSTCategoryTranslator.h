/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:53:00 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSTables.framework/Versions/A/TSTables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSTables/TSTables-Structs.h>
#import <TSTables/TSTTableTranslator.h>
#import <TSTables/TSTGroupByChangeProtocol.h>

@class NSIndexSet, NSMapTable;

@interface TSTCategoryTranslator : TSTTableTranslator <TSTGroupByChangeProtocol> {

	unsigned long long _groupingsChangingLevel;
	char _sawGroupingChangeNeedingReset;
	char _suspendNotify;
	NSIndexSet* _cachedIndexesForSummaryRows;
	NSMapTable* _cachedSummaryRowIndexesAtLevels;
	NSIndexSet* _cachedIndexesForLabelRows;
	NSMapTable* _cachedLabelRowIndexesAtLevels;
	NSIndexSet* _cachedIndexesForSummaryAndLabelRows;

}

@property (assign,nonatomic) char suspendNotify;                                            //@synthesize suspendNotify=_suspendNotify - In the implementation block
@property (nonatomic,retain) NSIndexSet * cachedIndexesForSummaryRows;                      //@synthesize cachedIndexesForSummaryRows=_cachedIndexesForSummaryRows - In the implementation block
@property (nonatomic,retain) NSMapTable * cachedSummaryRowIndexesAtLevels;                  //@synthesize cachedSummaryRowIndexesAtLevels=_cachedSummaryRowIndexesAtLevels - In the implementation block
@property (nonatomic,retain) NSIndexSet * cachedIndexesForLabelRows;                        //@synthesize cachedIndexesForLabelRows=_cachedIndexesForLabelRows - In the implementation block
@property (nonatomic,retain) NSMapTable * cachedLabelRowIndexesAtLevels;                    //@synthesize cachedLabelRowIndexesAtLevels=_cachedLabelRowIndexesAtLevels - In the implementation block
@property (nonatomic,retain) NSIndexSet * cachedIndexesForSummaryAndLabelRows;              //@synthesize cachedIndexesForSummaryAndLabelRows=_cachedIndexesForSummaryAndLabelRows - In the implementation block
-(id)summaryModel;
-(void)willRemoveGroup:(id)arg1 ;
-(id)columnWidths;
-(id)rowHeights;
-(TSUViewColumnIndex)numberOfHeaderColumns;
-(unsigned long long)tableAreaForCellID:(TSUViewCellCoord)arg1 ;
-(void)setNumberOfHeaderColumns:(TSUViewColumnIndex)arg1 ;
-(id)initWithTableInfo:(id)arg1 ;
-(id)mergedGridIndicesForDimension:(long long)arg1 ;
-(id)allRichTextStorages;
-(id)baseCellRegionForViewCellRegion:(id)arg1 ;
-(TSUModelRowIndex)baseRowIndexForViewRowIndex:(TSUViewRowIndex)arg1 ;
-(TSUModelCellCoord)baseCellCoordForChromeCellCoord:(TSUChromeCellCoord)arg1 ;
-(id)viewCellRegionForBaseCellRect:(TSUModelCellRect)arg1 ;
-(TSUViewColumnIndex)viewColumnIndexForBaseColumnIndex:(TSUModelColumnIndex)arg1 ;
-(TSUModelColumnIndex)baseColumnIndexForViewColumnIndex:(TSUViewColumnIndex)arg1 ;
-(id)viewCellRegionForBaseCellRegion:(id)arg1 ;
-(id)indexesForSummaryRows;
-(id)indexesForSummaryRowsAtGroupLevel:(unsigned char)arg1 ;
-(TSUViewRowIndex)viewRowIndexForChromeRowIndex:(TSUChromeRowIndex)arg1 ;
-(TSUViewRowIndex)viewRowIndexForBaseRowIndex:(TSUModelRowIndex)arg1 ;
-(TSUChromeRowIndex)chromeRowIndexForViewRowIndex:(TSUViewRowIndex)arg1 ;
-(id)viewColumnIndexesForBaseColumnIndexes:(id)arg1 ;
-(TSUModelColumnIndex)baseColumnIndexForChromeColumnIndex:(TSUChromeColumnIndex)arg1 ;
-(TSUModelRowIndex)baseRowIndexForChromeRowIndex:(TSUChromeRowIndex)arg1 ;
-(TSUChromeColumnIndex)chromeColumnIndexForBaseColumnIndex:(TSUModelColumnIndex)arg1 ;
-(TSUChromeRowIndex)chromeRowIndexForBaseRowIndex:(TSUModelRowIndex)arg1 ;
-(TSUChromeColumnIndex)chromeColumnIndexForViewColumnIndex:(TSUViewColumnIndex)arg1 ;
-(TSUViewColumnIndex)viewColumnIndexForChromeColumnIndex:(TSUChromeColumnIndex)arg1 ;
-(TSUModelCellCoord)baseCellCoordForViewCellCoord:(TSUViewCellCoord)arg1 ;
-(TSUChromeCellCoord)chromeCellCoordForBaseCellCoord:(TSUModelCellCoord)arg1 ;
-(TSUChromeCellCoord)chromeCellCoordForViewCellCoord:(TSUViewCellCoord)arg1 ;
-(TSUViewCellCoord)viewCellCoordForBaseCellCoord:(TSUModelCellCoord)arg1 ;
-(TSUViewCellCoord)viewCellCoordForChromeCellCoord:(TSUChromeCellCoord)arg1 ;
-(id)baseColumnIndexesForViewColumnIndexes:(id)arg1 ;
-(id)baseRowIndexesForViewRowIndexes:(id)arg1 ;
-(id)chromeColumnIndexesForViewColumnIndexes:(id)arg1 ;
-(id)chromeRowIndexesForViewRowIndexes:(id)arg1 ;
-(id)viewRowIndexesForBaseRowIndexes:(id)arg1 ;
-(id)viewColumnIndexesForChromeColumnIndexes:(id)arg1 ;
-(id)viewRowIndexesForChromeRowIndexes:(id)arg1 ;
-(RefTypeHolder<TSCECellRef, 0>)baseCellRefForViewCellRef:(const RefTypeHolder<TSCECellRef, 1>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 2>)chromeCellRefForBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 2>)chromeCellRefForViewCellRef:(const RefTypeHolder<TSCECellRef, 1>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 1>)viewCellRefForBaseCellRef:(const RefTypeHolder<TSCECellRef, 0>*)arg1 ;
-(RefTypeHolder<TSCECellRef, 1>)viewCellRefForChromeCellRef:(const RefTypeHolder<TSCECellRef, 2>*)arg1 ;
-(id)baseShuffleMapForViewShuffleMap:(id)arg1 ;
-(void)didAddRowUID:(TSKUIDStruct)arg1 toGroup:(id)arg2 ;
-(void)didRemoveRowUID:(TSKUIDStruct)arg1 fromGroup:(id)arg2 ;
-(TSUViewCellRect)expandCellRangeToCoverMergedCells:(TSUViewCellRect)arg1 ;
-(TSUViewCellCoord)mergeOriginForCellID:(TSUViewCellCoord)arg1 ;
-(id)indexesForSummaryAndLabelRows;
-(TSUViewCellRect)mergeRangeAtCellID:(TSUViewCellCoord)arg1 ;
-(vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>>*)mergeRangesIntersectingRange:(TSUViewCellRect)arg1 ;
-(TSKUIDStruct)columnUIDForBaseColumnIndex:(TSUModelColumnIndex)arg1 ;
-(double)heightOfRowAtIndex:(TSUViewRowIndex)arg1 isDefault:(out char*)arg2 ;
-(void)setHeight:(double)arg1 ofRowAtIndex:(TSUViewRowIndex)arg2 ;
-(double)widthOfColumnAtIndex:(TSUViewColumnIndex)arg1 isDefault:(out char*)arg2 ;
-(void)setWidth:(double)arg1 ofColumnAtIndex:(TSUViewColumnIndex)arg2 ;
-(id)coordinateMapper;
-(id)aggregateFormulaOwner;
-(char)cellExistsAtCellID:(TSUViewCellCoord)arg1 ;
-(char)hasFormulaAtCellID:(TSUViewCellCoord)arg1 ;
-(unsigned long long)numberOfPopulatedCells;
-(id)formulaAtCellID:(TSUViewCellCoord)arg1 ;
-(void)startOfGroupingChangesBatch;
-(void)endOfGroupingChangesBatch;
-(int)setCellStyle:(id)arg1 ofRowAtIndex:(TSUViewRowIndex)arg2 ;
-(int)setTextStyle:(id)arg1 ofRowAtIndex:(TSUViewRowIndex)arg2 ;
-(int)setCellStyle:(id)arg1 ofColumnAtIndex:(TSUViewColumnIndex)arg2 ;
-(int)setTextStyle:(id)arg1 ofColumnAtIndex:(TSUViewColumnIndex)arg2 ;
-(id)cellStyleOfRowAtIndex:(TSUViewRowIndex)arg1 isDefault:(out char*)arg2 ;
-(id)cellStyleOfColumnAtIndex:(TSUViewColumnIndex)arg1 isDefault:(out char*)arg2 ;
-(id)textStyleOfRowAtIndex:(TSUViewRowIndex)arg1 isDefault:(out char*)arg2 ;
-(id)textStyleOfColumnAtIndex:(TSUViewColumnIndex)arg1 isDefault:(out char*)arg2 ;
-(id)conditionalStyleSetAtCellID:(TSUViewCellCoord)arg1 ;
-(void)removeRowsAtIndexes:(id)arg1 ;
-(void)removeColumnsAtIndexes:(id)arg1 ;
-(void)removeRowsAtIndex:(TSUViewRowIndex)arg1 count:(TSUViewRowIndex)arg2 ;
-(void)removeColumnsAtIndex:(TSUViewColumnIndex)arg1 count:(TSUViewColumnIndex)arg2 ;
-(void)addReceiverToGroupBy:(id)arg1 ;
-(unsigned long long)tableStyleAreaForRow:(TSUViewRowIndex)arg1 ;
-(int)insertColumnsAtIndex:(TSUViewColumnIndex)arg1 uids:(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg2 metadatas:(id)arg3 tableArea:(unsigned long long)arg4 ;
-(int)insertRowsAtIndex:(TSUViewRowIndex)arg1 uids:(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg2 metadatas:(id)arg3 tableArea:(unsigned long long)arg4 unsetFilterHidingAction:(char)arg5 ;
-(id)expandCellRegionToCoverMergedCells:(id)arg1 ;
-(id)defaultCellStyleForCellID:(TSUViewCellCoord)arg1 ;
-(id)defaultTextStyleForCellID:(TSUViewCellCoord)arg1 ;
-(unsigned)minNumberOfHeaderColumns;
-(unsigned)maxNumberOfHeaderColumns;
-(id)cellStyleForCellWithEmptyStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out char*)arg2 ;
-(id)textStyleForCellWithEmptyStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out char*)arg2 ;
-(void)removeAnnotationsFromRowsAtIndexes:(id)arg1 ;
-(void)removeAnnotationsFromColumnsAtIndexes:(id)arg1 ;
-(char)hasCommentAtCellID:(TSUViewCellCoord)arg1 ;
-(void)postCommentNotificationForStorage:(id)arg1 atViewCellCoord:(TSUViewCellCoord)arg2 notificationKey:(id)arg3 ;
-(id)commentHostingAtCellID:(TSUViewCellCoord)arg1 forCommentStorage:(id)arg2 ;
-(id)commentHostingAtCellID:(TSUViewCellCoord)arg1 ;
-(id)textStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out char*)arg2 ;
-(id)cellStyleAtCellID:(TSUViewCellCoord)arg1 isDefault:(out char*)arg2 ;
-(id)indexesForLabelRowsAtGroupLevel:(unsigned char)arg1 ;
-(unsigned long long)tableStyleAreaForCellUID:(TSKUIDStructCoord)arg1 ;
-(unsigned long long)tableStyleAreaForCellID:(TSUViewCellCoord)arg1 ;
-(int)getCell:(id)arg1 atCellID:(TSUViewCellCoord)arg2 suppressCellBorder:(char)arg3 ;
-(id)mergeActionForRegion:(id)arg1 ;
-(int)cellValueTypeAtCellID:(TSUViewCellCoord)arg1 ;
-(char)cellStyle:(id)arg1 isEqualToDefaultCellStyleForCellID:(TSUViewCellCoord)arg2 ;
-(char)textStyle:(id)arg1 isEqualToDefaultTextStyleForCellID:(TSUViewCellCoord)arg2 ;
-(id)cellStyleAtCellUID:(const TSKUIDStructCoord*)arg1 isDefault:(out char*)arg2 ;
-(id)textStyleAtCellUID:(const TSKUIDStructCoord*)arg1 isDefault:(out char*)arg2 ;
-(id)translatedCellRangeName:(const RefTypeHolder<TSCERangeRef, 1>*)arg1 usedSymbolicName:(out char*)arg2 ;
-(TSUViewCellRect)bodyRangeForLowestLevelGroupEnclosingCellAtCellID:(TSUCellCoord)arg1 ;
-(void)moveColumnRange:(NSRange)arg1 toColumnIndex:(TSUViewColumnIndex)arg2 ;
-(id)stringAtCellID:(TSUViewCellCoord)arg1 optionalCell:(id)arg2 ;
-(id)characterFillAtCellID:(TSUViewCellCoord)arg1 optionalCell:(id)arg2 ;
-(char)mergeCellRange:(TSUViewCellRect)arg1 ;
-(char)unmergeCellRange:(TSUViewCellRect)arg1 ;
-(char)mergeRangesPartiallyIntersectCellRange:(TSUViewCellRect)arg1 ;
-(char)mergeRangesPartiallyIntersectCellRegion:(id)arg1 ;
-(char)hasMergeRangeSpanningRowsForCellRange:(TSUViewCellRect)arg1 ;
-(char)hasMergeRangesIntersectingCellRegion:(id)arg1 ;
-(id)regionForValueOrCommentCellsInRange:(TSUViewCellRect)arg1 ;
-(char)hasRangeSpanningRowsForCellRange:(TSUViewCellRect)arg1 ;
-(id)shrinkReturningInverseForRegion:(id)arg1 ;
-(id)removeReturningInverseForRegion:(id)arg1 ;
-(id)mergeActionForRegion:(id)arg1 nonOriginPartialsOnly:(char)arg2 ;
-(void)enumerateMergesIntersectingCellRegion:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>>*)mergeRangesIntersectingCellRegion:(id)arg1 ;
-(vector<TSUViewCellRect, std::__1::allocator<TSUViewCellRect>>*)mergeRangesAndCrumbsIntersectingRange:(TSUViewCellRect)arg1 ;
-(char)isValidMergeRange:(TSUViewCellRect)arg1 ;
-(TSUViewCellCoord)cellIDForCellContainingRichTextStorage:(id)arg1 ;
-(id)indexesForLabelRows;
-(unsigned char)categoryGroupLevelAtSummaryRow:(TSUViewRowIndex)arg1 ;
-(unsigned char)categoryGroupLevelAtLabelRow:(TSUViewRowIndex)arg1 ;
-(int)getDefaultCell:(out id)arg1 forCellUID:(const TSKUIDStructCoord*)arg2 ;
-(char)checkMapsAndAssert:(char)arg1 ;
-(void)resetViewMap;
-(id)populatedCategoryGroupLevelsInColumn:(TSUViewColumnIndex)arg1 ;
-(void)didMakeGroupingChangesInRowUIDs:(id)arg1 ;
-(Class)iteratorClass;
-(id)summaryCellVendor;
-(void)didChangeGroupByStructure;
-(void)didCreateGroup:(id)arg1 ;
-(void)didRemoveGroup:(id)arg1 ;
-(char)areMapsStale;
-(TSUViewCellCoord)viewCellCoordForSummaryCellCoord:(TSUModelCellCoord)arg1 ;
-(id)viewColumnGridIndexesForBaseColumnGridIndexes:(id)arg1 ;
-(id)metadataForRowIndex:(TSUViewRowIndex)arg1 ;
-(id)metadataForColumnIndex:(TSUViewColumnIndex)arg1 ;
-(TSUModelCellCoord)baseCellCoordForCellUID:(TSKUIDStructCoord)arg1 ;
-(TSKUIDStructCoord)cellUIDForSummaryCellCoord:(TSUModelCellCoord)arg1 ;
-(id)baseCellRegionForViewCellRect:(TSUViewCellRect)arg1 ;
-(TSUModelColumnIndex)summaryColumnIndexForViewColumnIndex:(TSUViewColumnIndex)arg1 ;
-(void)flushCachedIndexSets;
-(void)forceGroupingChangeReset;
-(void)resetViewMapAndNotify;
-(char)withinGroupingChangesBatch;
-(int)p_applyViewCellCoord:(TSUViewCellCoord)arg1 toSummaryUsingBlock:(/*^block*/id)arg2 toLabelUsingBlock:(/*^block*/id)arg3 toCategoryColumnUsingBlock:(/*^block*/id)arg4 toBaseUsingBlock:(/*^block*/id)arg5 ;
-(void)p_applyViewRowIndex:(TSUViewRowIndex)arg1 toSummaryUsingBlock:(/*^block*/id)arg2 toLabelUsingBlock:(/*^block*/id)arg3 toBaseUsingBlock:(/*^block*/id)arg4 toBeyondBoundsUsingBlock:(/*^block*/id)arg5 ;
-(void)p_applyViewColumnIndex:(TSUViewColumnIndex)arg1 toCategoryColumnUsingBlock:(/*^block*/id)arg2 toBaseUsingBlock:(/*^block*/id)arg3 toBeyondBoundsUsingBlock:(/*^block*/id)arg4 ;
-(TSUModelRowIndex)summaryRowIndexForViewRowIndex:(TSUViewRowIndex)arg1 ;
-(TSUModelCellCoord)summaryCellCoordForViewCellCoord:(TSUViewCellCoord)arg1 ;
-(void)suspendChangeDescriptorNotificationsDuringBlock:(/*^block*/id)arg1 ;
-(int)setCellStyle:(id)arg1 atCellID:(TSUViewCellCoord)arg2 ;
-(int)setTextStyle:(id)arg1 atCellID:(TSUViewCellCoord)arg2 ;
-(TSUModelCellCoord)summaryCellCoordForCellUID:(const TSKUIDStructCoord*)arg1 ;
-(TSUCellCoord)baseCoordFromViewCoord:(TSUCellCoord)arg1 ;
-(TSUCellCoord)aggCoordFromViewCoord:(TSUCellCoord)arg1 ;
-(char)suspendNotify;
-(void)setSuspendNotify:(char)arg1 ;
-(NSIndexSet *)cachedIndexesForSummaryRows;
-(void)setCachedIndexesForSummaryRows:(NSIndexSet *)arg1 ;
-(NSMapTable *)cachedSummaryRowIndexesAtLevels;
-(void)setCachedSummaryRowIndexesAtLevels:(NSMapTable *)arg1 ;
-(NSIndexSet *)cachedIndexesForLabelRows;
-(void)setCachedIndexesForLabelRows:(NSIndexSet *)arg1 ;
-(NSMapTable *)cachedLabelRowIndexesAtLevels;
-(void)setCachedLabelRowIndexesAtLevels:(NSMapTable *)arg1 ;
-(NSIndexSet *)cachedIndexesForSummaryAndLabelRows;
-(void)setCachedIndexesForSummaryAndLabelRows:(NSIndexSet *)arg1 ;
@end

