/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:58 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSDrawables.framework/Versions/A/TSDrawables
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TSDrawables/TSDrawables-Structs.h>
#import <TSDrawables/TSDPathSource.h>
#import <TSDrawables/TSDMixing.h>
#import <TSDrawables/TSDSmartPathSource.h>

@interface TSDScalarPathSource : TSDPathSource <TSDMixing, TSDSmartPathSource> {

	char mIsCurveContinuous;
	unsigned long long mType;
	double mScalar;
	CGSize mNaturalSize;

}

@property (assign,nonatomic) unsigned long long type; 
@property (assign,nonatomic) double scalar; 
@property (nonatomic,readonly) double maxScalar; 
@property (assign,nonatomic) char isCurveContinuous; 
@property (nonatomic,readonly) double cornerRadius; 
@property (nonatomic,readonly) double maxCornerRadius; 
@property (nonatomic,readonly) unsigned long long numberOfSides; 
+(id)regularPolygonWithScalar:(double)arg1 naturalSize:(CGSize)arg2 ;
+(id)pathSourceWithType:(unsigned long long)arg1 scalar:(double)arg2 naturalSize:(CGSize)arg3 ;
+(id)rectangleWithNaturalSize:(CGSize)arg1 ;
+(id)chevronWithScalar:(double)arg1 naturalSize:(CGSize)arg2 ;
+(id)roundedRectangleWithScalar:(double)arg1 naturalSize:(CGSize)arg2 continuousCurve:(char)arg3 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(void)setType:(unsigned long long)arg1 ;
-(unsigned long long)type;
-(double)cornerRadius;
-(char)isRectangular;
-(CGSize)naturalSize;
-(void)setNaturalSize:(CGSize)arg1 ;
-(char)isCircular;
-(id)initWithArchive:(const PathSourceArchive*)arg1 ;
-(void)saveToArchive:(PathSourceArchive*)arg1 ;
-(void)setScalar:(double)arg1 ;
-(double)scalar;
-(double)maxCornerRadius;
-(id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2 ;
-(id)bezierPathWithoutFlips;
-(void)scaleToNaturalSize:(CGSize)arg1 ;
-(CGPoint)getControlKnobPosition:(unsigned long long)arg1 ;
-(unsigned long long)numberOfControlKnobs;
-(CGPoint)p_getControlKnobPointForRoundedRect;
-(CGPoint)p_getControlKnobPointForRegularPolygon;
-(CGPoint)p_getControlKnobPointForChevron;
-(void)p_setControlKnobPointForRoundedRect:(CGPoint)arg1 ;
-(void)p_setControlKnobPointForRegularPolygon:(CGPoint)arg1 ;
-(void)p_setControlKnobPointForChevron:(CGPoint)arg1 ;
-(void)setScalarValue:(id)arg1 ;
-(CGPathRef)p_newRoundedRectPath;
-(CGPathRef)p_newRegularPolygonPath;
-(CGPathRef)p_newChevronPath;
-(double)maxScalar;
-(long long)mixingTypeWithObject:(id)arg1 context:(id)arg2 ;
-(id)inferredAccessibilityDescription;
-(id)initWithType:(unsigned long long)arg1 scalar:(double)arg2 naturalSize:(CGSize)arg3 continuousCurve:(char)arg4 ;
-(void)setIsCurveContinuous:(char)arg1 ;
-(char)isCurveContinuous;
-(unsigned long long)numberOfSides;
@end

