/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/QuickLook/iWork.qlgenerator/Contents/Frameworks/TSCalculationEngine.framework/Versions/A/TSCalculationEngine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <TSCalculationEngine/TSCalculationEngine-Structs.h>
@interface TSCEUuidReferences : NSObject {

	TSKUIDStruct _ownerUID;
	unordered_map<TSKUIDStruct, TSCECellCoordSet, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, TSCECellCoordSet>>>* _coordSetsReferringToTable;
	unordered_map<TSKUIDStruct, std::__1::unordered_map<TSKUIDStruct, TSCECellCoordSet, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, TSCECellCoordSet>>>, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, std::__1::unordered_map<TSKUIDStruct, TSCECellCoordSet, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, TSCECellCoordSet>>>>>>* _coordSetsReferringToUuidInTable;
	unordered_map<TSUCellCoord, std::__1::unordered_set<TSCEUuidPair, std::__1::hash<TSCEUuidPair>, std::__1::equal_to<TSCEUuidPair>, std::__1::allocator<TSCEUuidPair>>, std::__1::hash<TSUCellCoord>, std::__1::equal_to<TSUCellCoord>, std::__1::allocator<std::__1::pair<const TSUCellCoord, std::__1::unordered_set<TSCEUuidPair, std::__1::hash<TSCEUuidPair>, std::__1::equal_to<TSCEUuidPair>, std::__1::allocator<TSCEUuidPair>>>>>* _uuidsByCoord;

}

@property (assign,nonatomic) TSKUIDStruct ownerUID;              //@synthesize ownerUID=_ownerUID - In the implementation block
+(id)_stringForInternalCellRef:(const TSCEInternalCellReference*)arg1 ;
-(id)description;
-(void)clear;
-(void)encodeToArchive:(UuidReferencesArchive*)arg1 archiver:(id)arg2 ;
-(TSKUIDStruct)ownerUID;
-(void)addCellCoord:(const TSUCellCoord*)arg1 referringToTableUID:(const TSKUIDStruct*)arg2 forColumnRowUuid:(const TSKUIDStruct*)arg3 ;
-(void)addCellCoord:(const TSUCellCoord*)arg1 referringToTableUID:(const TSKUIDStruct*)arg2 ;
-(void)removeCellCoord:(const TSUCellCoord*)arg1 referringToTableUID:(const TSKUIDStruct*)arg2 forColumnRowUuid:(const TSKUIDStruct*)arg3 ;
-(void)removeCellCoord:(const TSUCellCoord*)arg1 referringToTableUID:(const TSKUIDStruct*)arg2 ;
-(void)getCellRefs:(TSCECellRefSet*)arg1 referringToOwner:(const TSKUIDStruct*)arg2 ;
-(id)initWithOwnerUID:(const TSKUIDStruct*)arg1 ;
-(void)addCellCoord:(const TSUCellCoord*)arg1 referringToCategoryRef:(const TSCECategoryRef*)arg2 ;
-(void)removeCellCoord:(const TSUCellCoord*)arg1 referringToCategoryRef:(const TSCECategoryRef*)arg2 ;
-(void)removeCellCoord:(const TSUCellCoord*)arg1 ;
-(void)getCellRefs:(TSCECellRefSet*)arg1 referringToOwners:(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg2 ;
-(void)getAllCellRefs:(TSCECellRefSet*)arg1 referringToOwnerUID:(const TSKUIDStruct*)arg2 ;
-(char)getCellRefs:(TSCECellRefSet*)arg1 referringToOwnerUID:(const TSKUIDStruct*)arg2 referringToUuids:(const TSKUIDStructVectorTemplate<TSKUIDStruct>*)arg3 ;
-(id)initFromArchive:(const UuidReferencesArchive*)arg1 ownerUID:(const TSKUIDStruct*)arg2 ;
-(void)unpackAfterUnarchive;
-(void)setOwnerUID:(TSKUIDStruct)arg1 ;
@end

