/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreHAP.framework/Versions/A/CoreHAP
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreHAP/CoreHAP-Structs.h>
#import <HMFoundation/HMFObject.h>
#import <libobjc.A.dylib/HAPKeyStore.h>
#import <libobjc.A.dylib/HMFDumpState.h>

@protocol OS_dispatch_queue;
@class NSString, NSObject;

@interface HAPSystemKeychainStore : HMFObject <HAPKeyStore, HMFDumpState> {

	NSObject*<OS_dispatch_queue> _queue;
	NSString* _activeControllerIdentifier;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                          //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) NSString * activeControllerIdentifier;                       //@synthesize activeControllerIdentifier=_activeControllerIdentifier - In the implementation block
@property (nonatomic,readonly) NSString * activeControllerPairingIdentifier; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)systemStore;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)getLocalPairingIdentity:(id*)arg1 ;
-(id)dumpState;
-(char)registerAccessoryWithHomeKit:(id)arg1 error:(id*)arg2 ;
-(char)getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 username:(id*)arg3 allowCreation:(char)arg4 error:(id*)arg5 ;
-(id)readPublicKeyForAccessoryName:(id)arg1 registeredWithHomeKit:(char*)arg2 error:(id*)arg3 ;
-(char)removeAccessoryKeyForName:(id)arg1 error:(id*)arg2 ;
-(char)savePublicKey:(id)arg1 forAccessoryName:(id)arg2 error:(id*)arg3 ;
-(id)_getKeychainItemsForAccessGroup:(id)arg1 type:(id)arg2 account:(id)arg3 shouldReturnData:(char)arg4 error:(int*)arg5 ;
-(id)_getControllerKeychainItemError:(int*)arg1 ;
-(int)_saveKeyPair:(id)arg1 username:(id)arg2 syncable:(char)arg3 keyType:(id)arg4 ;
-(id)_getControllerKeychainItemForKeyType:(id)arg1 error:(int*)arg2 ;
-(int)_removeControllerKeyPairForKeyType:(id)arg1 identifier:(id)arg2 leaveTombstone:(char)arg3 ;
-(id)_getLocalPairingIdentityAllowingCreation:(char)arg1 error:(id*)arg2 ;
-(char)getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4 allowCreation:(char)arg5 error:(id*)arg6 ;
-(int)_getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4 ;
-(int)_createControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 keyPair:(id*)arg3 username:(id*)arg4 ;
-(NSString *)activeControllerIdentifier;
-(char)saveKeyPair:(id)arg1 username:(id)arg2 syncable:(char)arg3 error:(id*)arg4 ;
-(int)_addKeychainItem:(id)arg1 logDuplicateItemError:(char)arg2 ;
-(void)setActiveControllerIdentifier:(NSString *)arg1 ;
-(int)_getAllAvailableControllerPublicKeys:(id*)arg1 secretKeys:(id*)arg2 userNames:(id*)arg3 ;
-(int)_updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2 ;
-(int)_removeKeychainItem:(id)arg1 leaveTombstone:(char)arg2 ;
-(char)removeControllerKeyPairLeaveTombstone:(char)arg1 error:(id*)arg2 ;
-(int)_removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(char)arg2 ;
-(int)_getMetadataSecretKey:(id*)arg1 ;
-(int)_createMetadataSecretKey:(id*)arg1 ;
-(int)_getPublicKey:(id*)arg1 registeredWithHomeKit:(char*)arg2 forAccessoryName:(id)arg3 ;
-(int)_savePublicKey:(id)arg1 forAccessoryName:(id)arg2 ;
-(int)_removeAccessoryKeyForName:(id)arg1 ;
-(id)_auditKeychainItems:(id)arg1 managedAccessories:(id)arg2 ;
-(void)_updateKeychainItemToInvisible:(id)arg1 ;
-(int)_savePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 resumeSessionID:(unsigned long long)arg4 ;
-(int)_getPeripheralIdentifier:(id*)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long*)arg3 resumeSessionID:(unsigned long long*)arg4 ;
-(int)_deletePeripheralIdentifierForAccessoryIdentifier:(id)arg1 ;
-(int)_deleteAllPeripheralIdentifiers;
-(id)getOrCreateLocalPairingIdentity:(id*)arg1 ;
-(char)saveLocalPairingIdentity:(id)arg1 syncable:(char)arg2 error:(id*)arg3 ;
-(char)deserializeKeyPair:(id)arg1 publicKey:(id*)arg2 secretKey:(id*)arg3 error:(id*)arg4 ;
-(char)getAllAvailableControllerPublicKeys:(id*)arg1 secretKeys:(id*)arg2 userNames:(id*)arg3 error:(id*)arg4 ;
-(char)updateActiveControllerPairingIdentifier:(id)arg1 ;
-(char)removeControllerKeyPairWithError:(id*)arg1 ;
-(char)updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2 error:(id*)arg3 ;
-(char)getCurrentiCloudIdentifier:(id*)arg1 controllerPairingIdentifier:(id*)arg2 error:(id*)arg3 ;
-(char)removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(char)arg2 error:(id*)arg3 ;
-(char)getMetadataSecretKey:(id*)arg1 error:(id*)arg2 ;
-(char)removeAllAccessoryKeys:(id*)arg1 ;
-(NSString *)activeControllerPairingIdentifier;
-(char)updatePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 previousVersion:(unsigned long long*)arg4 resumeSessionID:(unsigned long long)arg5 error:(id*)arg6 ;
-(char)deletePeripheralIdentifierForAccessoryIdentifier:(id)arg1 error:(id*)arg2 ;
-(char)deleteAllPeripheralIdentifiers:(id*)arg1 ;
-(id)readPeripheralIdentifierForAccessoryIdentifier:(id)arg1 protocolVersion:(unsigned long long*)arg2 resumeSessionID:(unsigned long long*)arg3 error:(id*)arg4 ;
-(id)getPeripherialIdentifiersAndAccessoryNames;
-(void)ensureControllerKeyExistsForAllViews;
-(id)auditKeysOfManagedAccessories:(id)arg1 ;
-(char)savePeripheralIdentifier:(id)arg1 forAccessoryIdentifier:(id)arg2 protocolVersion:(unsigned long long)arg3 resumeSessionID:(unsigned long long)arg4 error:(id*)arg5 ;
@end

