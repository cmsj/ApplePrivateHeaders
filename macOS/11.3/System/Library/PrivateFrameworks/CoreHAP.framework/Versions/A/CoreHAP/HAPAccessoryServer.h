/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreHAP.framework/Versions/A/CoreHAP
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HMFoundation/HMFObject.h>

@protocol HMFLocking, HAPAccessoryServerDelegate, OS_dispatch_queue, HAPKeyStore;
@class NSString, NSNumber, NSObject, NSData, NSHashTable, NSArray, NSDate, HAPAccessory, HMFVersion, HMFActivity, HAPDeviceID;

@interface HAPAccessoryServer : HMFObject {

	NSString* _name;
	NSString* _identifier;
	id<HMFLocking> _lock;
	char _hasPairings;
	char _reachable;
	char _securitySessionOpen;
	char _reachabilityPingEnabled;
	char _supportsTimedWrite;
	char _bleLinkConnected;
	char _incompatibleUpdate;
	int _successfulPingCount;
	int _failedPingCount;
	NSNumber* _category;
	unsigned long long _configNumber;
	id<HAPAccessoryServerDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	NSData* _setupHash;
	unsigned long long _authMethod;
	NSString* _productData;
	unsigned long long _pendingRemovePairing;
	NSHashTable* _notificationClients;
	NSArray* _accessories;
	NSDate* _timePairVerifyStart;
	NSString* _pairVerifyReason;
	HAPAccessory* _primaryAccessory;
	long long _linkType;
	HMFVersion* _version;
	NSHashTable* _internalDelegates;
	NSObject*<OS_dispatch_queue> _internalDelegateQueue;
	NSObject*<OS_dispatch_queue> _clientQueue;
	unsigned long long _stateNumber;
	unsigned long long _compatibilityFeatures;
	id<HAPKeyStore> _keyStore;
	unsigned long long _pairSetupType;
	HMFActivity* _pairingActivity;

}

@property (nonatomic,readonly) NSHashTable * internalDelegates;                                 //@synthesize internalDelegates=_internalDelegates - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> internalDelegateQueue;              //@synthesize internalDelegateQueue=_internalDelegateQueue - In the implementation block
@property (nonatomic,retain) NSHashTable * notificationClients;                                 //@synthesize notificationClients=_notificationClients - In the implementation block
@property (assign,nonatomic) int successfulPingCount;                                           //@synthesize successfulPingCount=_successfulPingCount - In the implementation block
@property (assign,nonatomic) int failedPingCount;                                               //@synthesize failedPingCount=_failedPingCount - In the implementation block
@property (__weak,readonly) id<HAPAccessoryServerDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> delegateQueue;                      //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> clientQueue;                        //@synthesize clientQueue=_clientQueue - In the implementation block
@property (nonatomic,copy) NSString * name;                                                     //@synthesize name=_name - In the implementation block
@property (assign,nonatomic) char hasPairings;                                                  //@synthesize hasPairings=_hasPairings - In the implementation block
@property (assign,nonatomic) unsigned long long pendingRemovePairing;                           //@synthesize pendingRemovePairing=_pendingRemovePairing - In the implementation block
@property (assign,getter=isReachable,nonatomic) char reachable;                                 //@synthesize reachable=_reachable - In the implementation block
@property (getter=isSecuritySessionOpen) char securitySessionOpen;                              //@synthesize securitySessionOpen=_securitySessionOpen - In the implementation block
@property (nonatomic,copy) NSString * identifier;                                               //@synthesize identifier=_identifier - In the implementation block
@property (nonatomic,copy) NSNumber * category;                                                 //@synthesize category=_category - In the implementation block
@property (assign,nonatomic) unsigned long long configNumber;                                   //@synthesize configNumber=_configNumber - In the implementation block
@property (assign,nonatomic) unsigned long long stateNumber;                                    //@synthesize stateNumber=_stateNumber - In the implementation block
@property (assign,nonatomic) unsigned long long compatibilityFeatures;                          //@synthesize compatibilityFeatures=_compatibilityFeatures - In the implementation block
@property (assign,getter=isIncompatibleUpdate,nonatomic) char incompatibleUpdate;               //@synthesize incompatibleUpdate=_incompatibleUpdate - In the implementation block
@property (nonatomic,retain) HAPAccessory * primaryAccessory;                                   //@synthesize primaryAccessory=_primaryAccessory - In the implementation block
@property (nonatomic,copy) NSArray * accessories;                                               //@synthesize accessories=_accessories - In the implementation block
@property (nonatomic,__weak,readonly) id<HAPKeyStore> keyStore;                                 //@synthesize keyStore=_keyStore - In the implementation block
@property (nonatomic,copy) NSData * setupHash;                                                  //@synthesize setupHash=_setupHash - In the implementation block
@property (copy) HMFVersion * version;                                                          //@synthesize version=_version - In the implementation block
@property (assign,nonatomic) unsigned long long pairSetupType;                                  //@synthesize pairSetupType=_pairSetupType - In the implementation block
@property (nonatomic,retain) NSString * productData;                                            //@synthesize productData=_productData - In the implementation block
@property (assign,nonatomic,__weak) HMFActivity * pairingActivity;                              //@synthesize pairingActivity=_pairingActivity - In the implementation block
@property (copy,readonly) HAPDeviceID * deviceID; 
@property (nonatomic,readonly) long long linkType;                                              //@synthesize linkType=_linkType - In the implementation block
@property (assign,nonatomic) char supportsTimedWrite;                                           //@synthesize supportsTimedWrite=_supportsTimedWrite - In the implementation block
@property (assign,nonatomic) unsigned long long authMethod;                                     //@synthesize authMethod=_authMethod - In the implementation block
@property (getter=isBLELinkConnected,nonatomic,readonly) char bleLinkConnected;                 //@synthesize bleLinkConnected=_bleLinkConnected - In the implementation block
@property (assign,nonatomic) char reachabilityPingEnabled;                                      //@synthesize reachabilityPingEnabled=_reachabilityPingEnabled - In the implementation block
@property (nonatomic,copy) NSDate * timePairVerifyStart;                                        //@synthesize timePairVerifyStart=_timePairVerifyStart - In the implementation block
@property (nonatomic,copy) NSString * pairVerifyReason;                                         //@synthesize pairVerifyReason=_pairVerifyReason - In the implementation block
-(id)init;
-(NSString *)name;
-(id<HAPAccessoryServerDelegate>)delegate;
-(void)setName:(NSString *)arg1 ;
-(NSString *)identifier;
-(HMFVersion *)version;
-(void)setIdentifier:(NSString *)arg1 ;
-(NSNumber *)category;
-(void)setCategory:(NSNumber *)arg1 ;
-(void)setVersion:(HMFVersion *)arg1 ;
-(HAPDeviceID *)deviceID;
-(void)registerForNotifications:(id)arg1 ;
-(void)setDelegate:(id)arg1 queue:(id)arg2 ;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(void)reconfirm;
-(NSArray *)accessories;
-(long long)linkType;
-(NSObject*<OS_dispatch_queue>)clientQueue;
-(char)isPaired;
-(void)setReachable:(char)arg1 ;
-(char)isReachable;
-(char)isPinging;
-(void)setAccessories:(NSArray *)arg1 ;
-(NSString *)productData;
-(void)setProductData:(NSString *)arg1 ;
-(id<HAPKeyStore>)keyStore;
-(void)continueAuthAfterValidation:(char)arg1 ;
-(void)setStateNumber:(unsigned long long)arg1 ;
-(unsigned long long)stateNumber;
-(unsigned long long)configNumber;
-(NSData *)setupHash;
-(char)hasPairings;
-(id)initWithKeystore:(id)arg1 ;
-(unsigned long long)compatibilityFeatures;
-(HMFActivity *)pairingActivity;
-(id)buildReachabilityNotificationDictionary:(id)arg1 reachable:(char)arg2 linkType:(long long)arg3 withError:(long long)arg4 ;
-(char)notifyClients:(unsigned long long)arg1 withDictionary:(id)arg2 ;
-(void)setSetupHash:(NSData *)arg1 ;
-(void)setHasPairings:(char)arg1 ;
-(void)setPairVerifyReason:(NSString *)arg1 ;
-(unsigned long long)authMethod;
-(void)provisionToken:(id)arg1 ;
-(void)setPairingActivity:(HMFActivity *)arg1 ;
-(void)continuePairingAfterAuthPrompt;
-(void)setSecuritySessionOpen:(char)arg1 ;
-(void)updatePingMetrics;
-(char)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(/*^block*/id)arg2 ;
-(unsigned long long)pairSetupType;
-(void)tearDownSessionOnAuthCompletion;
-(void)startPairingWithConsentRequired:(char)arg1 config:(id)arg2 ownershipToken:(id)arg3 ;
-(char)requiresTimedWrite:(id)arg1 ;
-(void)enumerateInternalDelegatesUsingBlock:(/*^block*/id)arg1 ;
-(void)setConfigNumber:(unsigned long long)arg1 ;
-(void)setCompatibilityFeatures:(unsigned long long)arg1 ;
-(void)enableEvents:(char)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 queue:(id)arg4 ;
-(void)setSupportsTimedWrite:(char)arg1 ;
-(void)setPairSetupType:(unsigned long long)arg1 ;
-(void)setAuthMethod:(unsigned long long)arg1 ;
-(void)authenticateAccessory;
-(void)startPairVerifyMetricActivity;
-(void)completePairVerifyActivityWithLinkType:(long long)arg1 ;
-(char)reachabilityPingEnabled;
-(void)setReachabilityPingEnabled:(char)arg1 ;
-(HAPAccessory *)primaryAccessory;
-(void)incrementFailedPing;
-(void)incrementSuccessfulPing;
-(void)stopPing;
-(char)isSecuritySessionOpen;
-(void)continuePairingUsingWAC;
-(void)discoverAccessories;
-(char)tryPairingPassword:(id)arg1 error:(id*)arg2 ;
-(char)stopPairingWithError:(id*)arg1 ;
-(void)readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)handleUpdatesForCharacteristics:(id)arg1 stateNumber:(id)arg2 ;
-(void)addPairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)removePairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)listPairingsWithCompletionQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)identifyWithCompletion:(/*^block*/id)arg1 ;
-(void)startPing;
-(char)pingSupported;
-(void)addInternalDelegate:(id)arg1 ;
-(unsigned long long)pendingRemovePairing;
-(char)matchesSetupID:(id)arg1 serverIdentifier:(id)arg2 ;
-(void)setPrimaryAccessory:(HAPAccessory *)arg1 ;
-(void)setPendingRemovePairing:(unsigned long long)arg1 ;
-(char)isIncompatibleUpdate;
-(char)isBLELinkConnected;
-(void)unregisterForNotifications:(id)arg1 ;
-(char)supportsTimedWrite;
-(char)matchesSetupID:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)internalDelegateQueue;
-(NSHashTable *)internalDelegates;
-(id)constructPairVerifyMetricReasonStringWithStartTime:(id)arg1 withLinkType:(long long)arg2 withReason:(id)arg3 ;
-(NSDate *)timePairVerifyStart;
-(void)setTimePairVerifyStart:(NSDate *)arg1 ;
-(void)removeInternalDelegate:(id)arg1 ;
-(NSHashTable *)notificationClients;
-(void)setNotificationClients:(NSHashTable *)arg1 ;
-(int)successfulPingCount;
-(void)setSuccessfulPingCount:(int)arg1 ;
-(int)failedPingCount;
-(void)setFailedPingCount:(int)arg1 ;
-(NSString *)pairVerifyReason;
-(void)setIncompatibleUpdate:(char)arg1 ;
@end

