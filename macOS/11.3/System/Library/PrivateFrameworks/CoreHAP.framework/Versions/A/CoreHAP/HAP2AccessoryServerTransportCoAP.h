/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreHAP.framework/Versions/A/CoreHAP
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreHAP/CoreHAP-Structs.h>
#import <CoreHAP/HAP2AccessoryServerTransportBaseWithDelegate.h>
#import <libobjc.A.dylib/HAP2CoAPClientDelegate.h>
#import <libobjc.A.dylib/HAP2AccessoryServerTransportNetServiceDelegate.h>

@protocol HAP2AccessoryServerTransportNetService, HAP2CoAPClient, HAP2AccessoryServerDiscovery, HAP2AccessoryServerTransportNetServiceFactory, HAP2AccessoryServerTransportCoAPClientFactory;
@class HMFActivity, NSString, HAP2AccessoryServerDiscoveryAccessoryInfo;

@interface HAP2AccessoryServerTransportCoAP : HAP2AccessoryServerTransportBaseWithDelegate <HAP2CoAPClientDelegate, HAP2AccessoryServerTransportNetServiceDelegate> {

	char _reuseAddress;
	/*^block*/id _stateChangeCompletion;
	/*^block*/id _sendRequestCompletion;
	id<HAP2AccessoryServerTransportNetService> _netService;
	HMFActivity* _netServiceResolveActivity;
	id<HAP2CoAPClient> _coapClient;
	unsigned long long _maxTransmitAttempts;
	double _initialACKTimeout;
	NSString* _serviceName;
	NSString* _serviceType;
	NSString* _serviceDomain;
	id<HAP2AccessoryServerDiscovery> _discovery;
	HAP2AccessoryServerDiscoveryAccessoryInfo* _acessoryInfo;
	double _addressResolutionTimeout;
	id<HAP2AccessoryServerTransportNetServiceFactory> _netServiceFactory;
	id<HAP2AccessoryServerTransportCoAPClientFactory> _coapClientFactory;
	coap_address_t _ipAddress;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)netService:(id)arg1 didNotResolve:(id)arg2 ;
-(void)netServiceDidStop:(id)arg1 ;
-(void)clientDidDisconnect:(id)arg1 error:(id)arg2 ;
-(void)netServiceDidResolveAddress:(id)arg1 ;
-(unsigned long long)protocolFeaturesForVersion:(id)arg1 ;
-(id)wellKnownEndpoint:(unsigned long long)arg1 ;
-(id)mimeTypeForWellKnownEndpoint:(unsigned long long)arg1 ;
-(void)doOpenWithCompletion:(/*^block*/id)arg1 ;
-(void)doCloseWithError:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)doUpdateMaxRequestTimeout:(double)arg1 ;
-(void)doSendRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)endpointForCharacteristic:(id)arg1 ;
-(id)endpointForCharacteristics:(id)arg1 ;
-(id)mimeTypeForCharacteristicRequests;
-(char)mergeWithNewTransport:(id)arg1 ;
-(id)underlyingTransport;
-(id)initWithOperationQueue:(id)arg1 delegateQueue:(id)arg2 ;
-(void)client:(id)arg1 didReceiveEvent:(id)arg2 ;
-(id)initWithAccessoryInfo:(id)arg1 discovery:(id)arg2 operationQueue:(id)arg3 ;
-(id)initWithOperationQueue:(id)arg1 delegateQueue:(id)arg2 serviceName:(id)arg3 serviceType:(id)arg4 serviceDomain:(id)arg5 addressResolutionTimeout:(double)arg6 discovery:(id)arg7 accessoryInfo:(id)arg8 coapClient:(id)arg9 netServiceFactory:(id)arg10 coapClientFactory:(id)arg11 ;
-(id)initWithServiceName:(id)arg1 type:(id)arg2 domain:(id)arg3 operationQueue:(id)arg4 ;
@end

