/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:33 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/NotesShared.framework/Versions/A/NotesShared
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@interface ICCryptor : NSObject
+(id)unwrappedKeyForObject:(id)arg1 ;
+(char)isAuthenticatedForNote:(id)arg1 ;
+(char)isAuthenticatedForObject:(id)arg1 ;
+(id)decryptData:(id)arg1 forObject:(id)arg2 ;
+(id)cachedMasterKeyForObject:(id)arg1 ;
+(void)setCachedMasterKey:(id)arg1 forObject:(id)arg2 ;
+(id)newWrappedKeyForObject:(id)arg1 ;
+(char)encryptFileFromURL:(id)arg1 toURL:(id)arg2 forObject:(id)arg3 ;
+(id)decryptedDataFromFileURL:(id)arg1 forObject:(id)arg2 ;
+(id)encryptData:(id)arg1 forObject:(id)arg2 tag:(id*)arg3 initializationVector:(id*)arg4 ;
+(id)decryptData:(id)arg1 forObject:(id)arg2 withTag:(id)arg3 initializationVector:(id)arg4 ;
+(id)wrapKey:(id)arg1 withMasterKey:(id)arg2 ;
+(char)userHasPassphraseSetForObject:(id)arg1 ;
+(char)key:(id)arg1 decryptsObject:(id)arg2 ;
+(char)isPassphrase:(id)arg1 correctForObject:(id)arg2 ;
+(void)cacheMasterKeyWithPassphrase:(id)arg1 forAccount:(id)arg2 ;
+(void)cacheMasterKeyWithPassphrase:(id)arg1 forObject:(id)arg2 ;
+(char)userHasPassphraseSetForNote:(id)arg1 ;
+(void)cacheMasterKeyWithPassphrase:(id)arg1 forNote:(id)arg2 ;
+(char)isPassphrase:(id)arg1 correctForAccount:(id)arg2 ;
+(char)unauthenticatedAttachmentsUsingSamePassphraseExistForNote:(id)arg1 passphrase:(id)arg2 ;
+(void)fixDivergedAttachmentsForNote:(id)arg1 usingPassphrase:(id)arg2 ;
+(void)fixUpAnyNotesToMatchAccountUsingPassphraseIfNecessary:(id)arg1 ;
+(void)fixUpAnyNotesToMatchAccountUsingPassphrase:(id)arg1 ;
+(char)isPassphrase:(id)arg1 correctForNote:(id)arg2 ;
+(void)fixNoteWithDivergedKeyFromAccountPassphrase:(id)arg1 usingPassphrase:(id)arg2 ;
+(char)isPassphrase:(id)arg1 correctForObject:(id)arg2 usingKeysFromObject:(id)arg3 ;
+(char)authenticateWithPassphrase:(id)arg1 forAccount:(id)arg2 ;
+(char)authenticateWithPassphrase:(id)arg1 forObject:(id)arg2 ;
+(char)isAuthenticatedForAccount:(id)arg1 ;
+(void)rewrapNote:(id)arg1 newMasterKey:(id)arg2 salt:(id)arg3 iterationCount:(unsigned)arg4 hint:(id)arg5 ;
+(id)masterKeysByAccountIdentifier;
+(void)startOrExtendCachedKeyClearingTimer;
+(void)setCachedMasterKey:(id)arg1 forIdentifier:(id)arg2 bioAuthAccountID:(id)arg3 ;
+(id)cachedMasterKeyForIdentifier:(id)arg1 ;
+(id)allCachedKeys;
+(void)refaultAllPasswordProtectedObjects;
+(char)setPassphrase:(id)arg1 hint:(id)arg2 forAccount:(id)arg3 ;
+(char)authenticateWithPassphrase:(id)arg1 forNote:(id)arg2 ;
+(void)rewrapKeyForObject:(id)arg1 newMasterKey:(id)arg2 salt:(id)arg3 iterationCount:(unsigned)arg4 hint:(id)arg5 ;
+(void)startOrExtendCachedKeyClearingTimerForModes:(id)arg1 ;
+(char)hasAnyCachedMasterKeys;
+(double)timeIntervalBeforeClearingCachedKeys;
+(void)cachedKeyClearingTimerDidFire;
+(void)clearAllCachedMasterKeys;
+(char)decryptFileFromURL:(id)arg1 toURL:(id)arg2 forObject:(id)arg3 ;
+(char)userHasPassphraseSetForAccount:(id)arg1 ;
+(void)cacheMasterKeyWithPassphrase:(id)arg1 ;
+(void)insertMasterKeyFromPassphrase:(id)arg1 intoKeychainForAccount:(id)arg2 ;
+(char)setPassphrase:(id)arg1 hint:(id)arg2 oldPassphrase:(id)arg3 forAccount:(id)arg4 ;
+(char)updateAllNotesWithOldPassphrase:(id)arg1 toAccountPassphrase:(id)arg2 fromAccount:(id)arg3 progress:(id)arg4 ;
+(void)transferSharedPassphraseFromAccount:(id)arg1 toAccount:(id)arg2 ;
+(void)removePassphraseForAccount:(id)arg1 ;
+(void)removePassphraseForNotesInAccount:(id)arg1 ;
+(void)rewrapAndDivergeKeyForObject:(id)arg1 usingPassphrase:(id)arg2 ;
@end

