/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:33 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/NotesShared.framework/Versions/A/NotesShared
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/ICSearchIndexerDataSource.h>

@protocol OS_dispatch_queue;
@class NSString, NSObject, NSMutableOrderedSet, NSURL;

@interface ICBaseSearchIndexerDataSource : NSObject <ICSearchIndexerDataSource> {

	char _observingChanges;
	char _needsReindexing;
	NSString* _uuid;
	NSObject*<OS_dispatch_queue> _processingQueue;
	NSMutableOrderedSet* _objectIDsToProcess;
	NSMutableOrderedSet* _objectIDsBeingProcessed;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> processingQueue;                 //@synthesize processingQueue=_processingQueue - In the implementation block
@property (nonatomic,copy,readonly) NSString * stateFilename; 
@property (nonatomic,readonly) NSURL * stateFileURL; 
@property (nonatomic,retain) NSMutableOrderedSet * objectIDsToProcess;                     //@synthesize objectIDsToProcess=_objectIDsToProcess - In the implementation block
@property (nonatomic,retain) NSMutableOrderedSet * objectIDsBeingProcessed;                //@synthesize objectIDsBeingProcessed=_objectIDsBeingProcessed - In the implementation block
@property (nonatomic,readonly) NSString * uuid;                                            //@synthesize uuid=_uuid - In the implementation block
@property (assign,getter=isObservingChanges,nonatomic) char observingChanges;              //@synthesize observingChanges=_observingChanges - In the implementation block
@property (assign) char needsReindexing;                                                   //@synthesize needsReindexing=_needsReindexing - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(NSString *)uuid;
-(id)persistentStoreCoordinator;
-(NSObject*<OS_dispatch_queue>)processingQueue;
-(void)contextWillSave:(id)arg1 ;
-(void)setProcessingQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)stopObservingChanges;
-(id)newManagedObjectContext;
-(char)isObservingChanges;
-(void)startObservingChanges;
-(id)dataSourceIdentifier;
-(char)shouldIndexableObjectExistInIndexing:(id)arg1 ;
-(unsigned long long)indexingPriority;
-(void)setObjectIDsToProcess:(NSMutableOrderedSet *)arg1 ;
-(NSMutableOrderedSet *)objectIDsToProcess;
-(void)setObjectIDsBeingProcessed:(NSMutableOrderedSet *)arg1 ;
-(void)setObservingChanges:(char)arg1 ;
-(void)setNeedsReindexing:(char)arg1 ;
-(void)resetContextObservers;
-(void)loadOrClearStateIfNecessary;
-(char)isFolderWithServerShareChanged:(id)arg1 ;
-(id)addNotesFromSubtree:(id)arg1 ;
-(char)addNewObjectsForProcessing:(id)arg1 ;
-(void)saveStateIfNecessary;
-(id)searchableItemForObject:(id)arg1 ;
-(NSMutableOrderedSet *)objectIDsBeingProcessed;
-(id)allIndexableObjectIDsInReversedReindexingOrderWithContext:(id)arg1 ;
-(char)needsReindexing;
-(id)indexableObjectIDsWithURIs:(id)arg1 context:(id)arg2 ;
-(char)saveStateDictionary:(id)arg1 ;
-(NSString *)stateFilename;
-(void)clearObjectIDsToIgnoreAndStageForReindexing;
-(id)moveIndexingTrackingFromUserDefaultsToFileIfNecessary;
-(id)loadStateDictionary;
-(char)_loadStateDictionaryWithFileManager:(id*)arg1 fileURL:(id*)arg2 NSError:(id*)arg3 fileExists:(char*)arg4 savedDictionary:(id*)arg5 ;
-(void)logFileSizeForFileAtPath:(id)arg1 fileManager:(id)arg2 ;
-(NSURL *)stateFileURL;
-(void)clearObjectIDsToProcess;
-(id)objectIDsNeedingProcessing;
-(long long)decisionOnObjectID:(id)arg1 searchableItemToIndex:(id*)arg2 objectIDURIToDelete:(id*)arg3 context:(id)arg4 ;
-(id)objectForSearchableItem:(id)arg1 context:(id)arg2 ;
-(id)objectForManagedObjectIDURI:(id)arg1 context:(id)arg2 ;
-(void)searchIndexerWillIndexObjectIDs:(id)arg1 ;
-(void)searchIndexerDidFinishIndexingObjectIDs:(id)arg1 error:(id)arg2 ;
-(void)searchIndexerWillDeleteSearchableItemsWithObjectIDURIs:(id)arg1 ;
-(void)searchIndexerDidFinishDeletingSearchableItemsWithObjectIDURIs:(id)arg1 error:(id)arg2 ;
-(void)stageForReindexingWithContext:(id)arg1 ;
-(void)stageObjectIDURIsForIndexing:(id)arg1 context:(id)arg2 ;
-(id)objectIDsFromSearchableItems:(id)arg1 ;
@end

