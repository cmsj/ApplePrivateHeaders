/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:33 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/DiagnosticRequestService.framework/Versions/A/DiagnosticRequestService
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/DRSDSRequestObject.h>

@class NSUUID, PBRequest, NSString, NSDate, NSData, NSDictionary, NSNumber, NSArray;

@interface DRSRequest : NSObject <DRSDSRequestObject> {

	char _hasBeenCountedByTelemetry;
	unsigned char _decisionServerDecision;
	unsigned short _uploadAttemptCount;
	NSUUID* _requestID;
	NSDate* _requestDate;
	NSString* _build;
	NSString* _teamID;
	NSString* _issueCategory;
	NSString* _issueDescription;
	NSData* _contextDictionaryData;
	NSDictionary* _contextDictionary;
	unsigned long long _requestMCT;
	NSString* _logType;
	NSString* _logPath;
	NSNumber* _cachedLogSize;
	unsigned long long _requestState;
	NSString* _errorDescription;
	unsigned long long _uploadID;

}

@property (nonatomic,readonly) NSUUID * uniqueID; 
@property (nonatomic,readonly) PBRequest * pbRequest; 
@property (nonatomic,readonly) id<DRSDecisionServerBatchRequest> pbBatchInstance; 
@property (nonatomic,readonly) Class pbBatchResponseClass; 
@property (nonatomic,readonly) NSString * functionName; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long expectedType; 
@property (nonatomic,retain) NSString * logPath;                                               //@synthesize logPath=_logPath - In the implementation block
@property (nonatomic,retain) NSString * logType;                                               //@synthesize logType=_logType - In the implementation block
@property (nonatomic,readonly) unsigned long long uploadID;                                    //@synthesize uploadID=_uploadID - In the implementation block
@property (nonatomic,retain) NSNumber * cachedLogSize;                                         //@synthesize cachedLogSize=_cachedLogSize - In the implementation block
@property (assign,nonatomic) unsigned long long requestState;                                  //@synthesize requestState=_requestState - In the implementation block
@property (assign,nonatomic) unsigned char decisionServerDecision;                             //@synthesize decisionServerDecision=_decisionServerDecision - In the implementation block
@property (assign,nonatomic) unsigned short uploadAttemptCount;                                //@synthesize uploadAttemptCount=_uploadAttemptCount - In the implementation block
@property (assign,nonatomic) char hasBeenCountedByTelemetry;                                   //@synthesize hasBeenCountedByTelemetry=_hasBeenCountedByTelemetry - In the implementation block
@property (nonatomic,readonly) NSUUID * requestID;                                             //@synthesize requestID=_requestID - In the implementation block
@property (nonatomic,readonly) NSDate * requestDate;                                           //@synthesize requestDate=_requestDate - In the implementation block
@property (nonatomic,readonly) NSString * build;                                               //@synthesize build=_build - In the implementation block
@property (nonatomic,readonly) NSString * teamID;                                              //@synthesize teamID=_teamID - In the implementation block
@property (nonatomic,readonly) NSString * issueCategory;                                       //@synthesize issueCategory=_issueCategory - In the implementation block
@property (nonatomic,readonly) NSString * issueDescription;                                    //@synthesize issueDescription=_issueDescription - In the implementation block
@property (nonatomic,readonly) NSData * contextDictionaryData;                                 //@synthesize contextDictionaryData=_contextDictionaryData - In the implementation block
@property (nonatomic,readonly) NSDictionary * contextDictionary;                               //@synthesize contextDictionary=_contextDictionary - In the implementation block
@property (nonatomic,readonly) unsigned long long requestMCT;                                  //@synthesize requestMCT=_requestMCT - In the implementation block
@property (nonatomic,readonly) NSString * requestType; 
@property (nonatomic,readonly) NSNumber * logSize; 
@property (nonatomic,readonly) NSArray * filePaths; 
@property (nonatomic,readonly) NSArray * fileURLs; 
@property (nonatomic,readonly) NSArray * fileNames; 
@property (nonatomic,readonly) char hasUploadableContent; 
@property (nonatomic,readonly) NSString * requestStateString; 
@property (nonatomic,readonly) unsigned char requestOutcome; 
@property (nonatomic,readonly) NSString * requestOutcomeString; 
@property (nonatomic,readonly) NSString * errorDescription;                                    //@synthesize errorDescription=_errorDescription - In the implementation block
@property (nonatomic,readonly) NSString * decisionServerDecisionString; 
+(id)entityName;
+(Class)_moClass;
+(id)_requestWithRequestMO_ON_MOC_QUEUE:(id)arg1 ;
+(id)requestsForFilterPredicate:(id)arg1 context:(id)arg2 sortDescriptors:(id)arg3 fetchLimit:(unsigned long long)arg4 errorOut:(id*)arg5 ;
+(id)requiredSystemResourceName;
+(id)requestForMessage:(id)arg1 ;
+(id)unreportedTerminalRequestsFromContext:(id)arg1 sortDescriptors:(id)arg2 fetchLimit:(unsigned long long)arg3 errorOut:(id*)arg4 ;
+(id)uploadedBytesSinceDate:(id)arg1 context:(id)arg2 errorOut:(id*)arg3 ;
+(unsigned long long)requestCountForFilterPredicate:(id)arg1 context:(id)arg2 fetchLimit:(unsigned long long)arg3 errorOut:(id*)arg4 ;
+(id)leastRecentDateFirstSortDescriptor;
+(id)mostRecentDateFirstSortDescriptor;
+(char)cleanRequestRecordsFromPersistentContainer:(id)arg1 removeFiles:(char)arg2 removeRecord:(char)arg3 matchingPredicate:(id)arg4 errorOut:(id*)arg5 ;
-(NSString *)debugDescription;
-(NSString *)teamID;
-(NSUUID *)uniqueID;
-(NSArray *)fileNames;
-(NSString *)build;
-(NSString *)functionName;
-(id)initWithXPCDict:(id)arg1 ;
-(NSUUID *)requestID;
-(NSString *)requestType;
-(NSDictionary *)contextDictionary;
-(NSString *)errorDescription;
-(NSString *)logPath;
-(NSDate *)requestDate;
-(NSString *)logType;
-(NSArray *)fileURLs;
-(id)fileAssets;
-(unsigned long long)requestState;
-(void)setRequestState:(unsigned long long)arg1 ;
-(void)setLogType:(NSString *)arg1 ;
-(NSNumber *)logSize;
-(char)isEqualToRequest:(id)arg1 ;
-(id)recordRepresentation;
-(unsigned char)decisionServerDecision;
-(char)hasUploadableContent;
-(NSArray *)filePaths;
-(char)_deleteLog;
-(NSNumber *)cachedLogSize;
-(NSString *)requestStateString;
-(unsigned short)uploadAttemptCount;
-(char)hasBeenCountedByTelemetry;
-(NSString *)decisionServerDecisionString;
-(NSString *)issueCategory;
-(NSString *)issueDescription;
-(NSData *)contextDictionaryData;
-(void)setLogPath:(NSString *)arg1 ;
-(unsigned long long)requestMCT;
-(void)setUploadAttemptCount:(unsigned short)arg1 ;
-(void)setCachedLogSize:(NSNumber *)arg1 ;
-(void)setDecisionServerDecision:(unsigned char)arg1 ;
-(void)setHasBeenCountedByTelemetry:(char)arg1 ;
-(unsigned char)requestOutcome;
-(void)_configureRequestMO:(id)arg1 ;
-(id)newRequestMOInContext_ON_MOC_QUEUE:(id)arg1 ;
-(unsigned long long)expectedType;
-(char)_markLogsAsPurgeableWithUrgencyWithDeleteFallback:(unsigned long long)arg1 ;
-(char)_updateLogStateToExpectedState:(unsigned char)arg1 ;
-(char)_updateLogFileStateForTransitionFromPreviousState:(unsigned long long)arg1 ;
-(unsigned long long)uploadID;
-(char)updateToState:(unsigned long long)arg1 errorDescription:(id)arg2 errorOut:(id*)arg3 ;
-(void)uploadFailedDueToReason:(id)arg1 ;
-(id)_metadataDescription;
-(id)jsonCompatibleDictionaryRepresentationVerbose:(char)arg1 ;
-(NSString *)requestOutcomeString;
-(void)updateContextWithRequest_ON_MOC_QUEUE:(id)arg1 ;
-(char)performOnReceiptWork:(id)arg1 dampeningOutcome:(unsigned long long)arg2 ;
-(char)uploadStarted;
-(void)uploadCompleteWithError:(id)arg1 ;
-(void)uploadAbortedDueToMissingLog;
-(void)uploadAbortedDueToLogSize;
-(void)uploadDeniedByDecisionServerWithReason:(id)arg1 ;
-(id)_initWithRequestMO_ON_MOC_QUEUE:(id)arg1 ;
-(id)uploadRequest;
-(PBRequest *)pbRequest;
-(id<DRSDecisionServerBatchRequest>)pbBatchInstance;
-(Class)pbBatchResponseClass;
@end

