/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:52 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/FTServices.framework/Versions/A/FTServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <FTServices/FTMessageQueueDelegate.h>

@class FTMessageQueue, NSString, IMTimer, NSNumber, IDSBaseMessage, NSArray;

@interface FTMessageDelivery : NSObject <FTMessageQueueDelegate> {

	unsigned _retries;
	FTMessageQueue* _queue;
	NSString* _userAgent;
	unsigned long long _maxConcurrentMessages;
	char _retryInAirplaneMode;
	char _logToRegistration;
	IMTimer* _timer;
	char _disallowRetry;

}

@property (copy) NSString * userAgent;                                    //@synthesize userAgent=_userAgent - In the implementation block
@property (copy) NSNumber * protocolVersion; 
@property (readonly) char hasQueuedItems; 
@property (readonly) char busy; 
@property (assign) char retryInAirplaneMode;                              //@synthesize retryInAirplaneMode=_retryInAirplaneMode - In the implementation block
@property (assign) char logToRegistration;                                //@synthesize logToRegistration=_logToRegistration - In the implementation block
@property (readonly) IDSBaseMessage * currentMessage; 
@property (readonly) NSArray * queuedMessages; 
@property (readonly) NSArray * allMessages; 
@property (readonly) long long maxMessageSize; 
@property (readonly) long long maxLargeMessageSize; 
@property (assign) unsigned long long maxConcurrentMessages;              //@synthesize maxConcurrentMessages=_maxConcurrentMessages - In the implementation block
@property (assign,nonatomic) char disallowRetry;                          //@synthesize disallowRetry=_disallowRetry - In the implementation block
+(id)alloc;
+(id)_errorForTDMessageDeliveryStatus:(long long)arg1 userInfo:(id)arg2 ;
+(Class)HTTPMessageDeliveryClass;
+(Class)APNSMessageDeliveryClass;
-(void)dealloc;
-(id)init;
-(void)invalidate;
-(id)_queue;
-(char)busy;
-(char)sendMessage:(id)arg1 ;
-(NSNumber *)protocolVersion;
-(void)setProtocolVersion:(NSNumber *)arg1 ;
-(NSString *)userAgent;
-(void)setUserAgent:(NSString *)arg1 ;
-(NSArray *)allMessages;
-(void)networkStateChanged;
-(void)_clearRetryTimer;
-(NSArray *)queuedMessages;
-(char)logToRegistration;
-(char)_sendMessageAsynchronously:(id)arg1 error:(id*)arg2 ;
-(void)_retryTimerHit:(id)arg1 ;
-(long long)maxMessageSize;
-(void)queue:(id)arg1 hitTimeoutForMessage:(id)arg2 ;
-(void)_informDelegateAboutMessage:(id)arg1 error:(id)arg2 result:(id)arg3 resultCode:(long long)arg4 ;
-(IDSBaseMessage *)currentMessage;
-(char)hasQueuedItems;
-(void)cancelMessage:(id)arg1 ;
-(void)_setRetryTimer:(double)arg1 ;
-(long long)maxLargeMessageSize;
-(void)_signMessage:(id)arg1 useDataSignatures:(char)arg2 body:(id)arg3 queryString:(id)arg4 intoDictionary:(id)arg5 ;
-(void)setLogToRegistration:(char)arg1 ;
-(unsigned long long)maxConcurrentMessages;
-(void)setMaxConcurrentMessages:(unsigned long long)arg1 ;
-(char)retryInAirplaneMode;
-(void)setRetryInAirplaneMode:(char)arg1 ;
-(char)disallowRetry;
-(void)setDisallowRetry:(char)arg1 ;
@end

