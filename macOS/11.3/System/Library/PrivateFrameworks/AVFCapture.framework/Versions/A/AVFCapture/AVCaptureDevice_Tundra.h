/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:43 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVFCapture.framework/Versions/A/AVFCapture
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AVFCapture/AVFCapture-Structs.h>
@class AVCaptureDeviceInternal_Tundra, NSString, NSArray, AVCaptureDeviceFormat_Tundra, AVCaptureDeviceInputSource_Tundra;

@interface AVCaptureDevice_Tundra : NSObject {

	AVCaptureDeviceInternal_Tundra* _internal;

}

@property (nonatomic,readonly) NSString * uniqueID; 
@property (nonatomic,readonly) NSString * modelID; 
@property (nonatomic,readonly) NSString * localizedName; 
@property (nonatomic,readonly) NSString * manufacturer; 
@property (nonatomic,readonly) int transportType; 
@property (getter=isConnected,nonatomic,readonly) char connected; 
@property (getter=isInUseByAnotherApplication,nonatomic,readonly) char inUseByAnotherApplication; 
@property (getter=isSuspended,nonatomic,readonly) char suspended; 
@property (nonatomic,readonly) NSArray * linkedDevices; 
@property (nonatomic,readonly) NSArray * formats; 
@property (nonatomic,retain) AVCaptureDeviceFormat_Tundra * activeFormat; 
@property (assign,nonatomic) SCD_Struct_AV0 activeVideoMinFrameDuration; 
@property (assign,nonatomic) SCD_Struct_AV0 activeVideoMaxFrameDuration; 
@property (nonatomic,readonly) NSArray * inputSources; 
@property (nonatomic,retain) AVCaptureDeviceInputSource_Tundra * activeInputSource; 
+(b)resolveClassMethod:;
+(b)resolveInstanceMethod:;
+(void)initialize;
+(id)devices;
+(id)deviceWithUniqueID:(id)arg1 ;
+(id)_registeredDeviceClassNames;
+(id)_linkedDevicesLock;
+(long long)authorizationStatusForMediaType:(id)arg1 ;
+(void)requestAccessForMediaType:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(id)defaultDeviceWithDeviceType:(id)arg1 mediaType:(id)arg2 position:(long long)arg3 ;
+(id)defaultDeviceWithMediaType:(id)arg1 ;
+(id)devicesWithMediaType:(id)arg1 ;
+(id)defaultDeviceWithMediaType:(id)arg1 allowIOSMacEnvironment:(char)arg2 ;
+(id)deviceWithUniqueID:(id)arg1 allowIOSMacEnvironment:(char)arg2 ;
+(id)defaultDeviceWithDeviceType:(id)arg1 mediaType:(id)arg2 position:(long long)arg3 allowIOSMacEnvironment:(char)arg4 ;
+(id)extrinsicMatrixFromDevice:(id)arg1 toDevice:(id)arg2 ;
+(id)_devicesWithAllowIOSMacEnvironment:(char)arg1 ;
+(id)_devicesWithDeviceTypes:(id)arg1 mediaType:(id)arg2 position:(long long)arg3 allowIOSMacEnvironment:(char)arg4 ;
+(id)CMIOBundleIdentifier;
-(b)conformsToProtocol:(id)arg1 ;
-(b)isMemberOfClass:(Class)arg1 ;
-(b)isKindOfClass:(Class)arg1 ;
-(Class)class;
-(void)dealloc;
-(id)description;
-(void)close;
-(char)isHidden;
-(NSString *)localizedName;
-(NSString *)uniqueID;
-(char)isSuspended;
-(long long)position;
-(char)open:(id*)arg1 ;
-(unsigned)deviceID;
-(char)isOpen;
-(char)isConnected;
-(void)setActiveColorSpace:(long long)arg1 ;
-(long long)activeColorSpace;
-(id)deviceType;
-(unsigned)connectionID;
-(int)transportType;
-(NSString *)manufacturer;
-(void)setExposureMode:(long long)arg1 ;
-(long long)exposureMode;
-(float)exposureTargetOffset;
-(NSString *)modelID;
-(id)initSubclass;
-(AVCaptureDeviceFormat_Tundra *)activeFormat;
-(char)isRampingVideoZoom;
-(NSArray *)formats;
-(SCD_Struct_AV0)exposureDuration;
-(float)ISO;
-(float)exposureTargetBias;
-(SCD_Struct_AV0)activeVideoMinFrameDuration;
-(SCD_Struct_AV0)activeVideoMaxFrameDuration;
-(id)activeDepthDataFormat;
-(char)supportsAVCaptureSessionPreset:(id)arg1 ;
-(char)isInUseByAnotherApplication;
-(char)hasMediaType:(id)arg1 ;
-(id)constituentDevices;
-(char)lockForConfiguration:(id*)arg1 ;
-(void)unlockForConfiguration;
-(char)isLockedForConfiguration;
-(id)frameRateRangeForDuration:(SCD_Struct_AV0)arg1 ;
-(NSArray *)inputSources;
-(char)isFlashModeSupported:(long long)arg1 ;
-(char)isTorchModeSupported:(long long)arg1 ;
-(void)deviceConnectionWillChange;
-(void)deviceConnectionDidChange;
-(void)setLinkedDevices:(NSArray *)arg1 ;
-(opaqueCMSampleBufferRef)copyStillImageSampleBufferWithFormat:(id)arg1 error:(id*)arg2 ;
-(long long)deviceSystem;
-(unsigned)connectionUnitComponentSubType;
-(void)setActiveFormat:(AVCaptureDeviceFormat_Tundra *)arg1 ;
-(void)setActiveVideoMinFrameDuration:(SCD_Struct_AV0)arg1 ;
-(void)setActiveVideoMaxFrameDuration:(SCD_Struct_AV0)arg1 ;
-(AVCaptureDeviceInputSource_Tundra *)activeInputSource;
-(void)setActiveInputSource:(AVCaptureDeviceInputSource_Tundra *)arg1 ;
-(void)setFlashMode:(long long)arg1 ;
-(void)setTorchMode:(long long)arg1 ;
-(char)setTorchModeOnWithLevel:(float)arg1 error:(id*)arg2 ;
-(void)setVideoZoomFactor:(double)arg1 ;
-(void)rampToVideoZoomFactor:(double)arg1 withRate:(float)arg2 ;
-(void)cancelVideoZoomRamp;
-(void)setActiveMaxExposureDuration:(SCD_Struct_AV0)arg1 ;
-(char)startUsingDevice:(id*)arg1 ;
-(void)stopUsingDevice;
-(char)becomeDeviceMaster:(id*)arg1 ;
-(void)relinquishDeviceMaster;
-(char)transportControlsSupported;
-(long long)transportControlsPlaybackMode;
-(float)transportControlsSpeed;
-(void)setAutomaticallyAdjustsFeatureControls:(char)arg1 ;
-(char)automaticallyAdjustsFeatureControls;
-(char)isHighResolutionCamera;
-(id)availableStillImageFormats;
-(char)isAdjustingFocus;
-(char)isAdjustingExposure;
-(char)isAdjustingWhiteBalance;
-(char)isFocusModeSupported:(long long)arg1 ;
-(char)isFocusPointOfInterestSupported;
-(long long)focusMode;
-(void)setFocusMode:(long long)arg1 ;
-(void)setFocusPointOfInterest:(CGPoint)arg1 ;
-(char)isExposureModeSupported:(long long)arg1 ;
-(char)isExposurePointOfInterestSupported;
-(void)setExposurePointOfInterest:(CGPoint)arg1 ;
-(char)isWhiteBalanceModeSupported:(long long)arg1 ;
-(long long)whiteBalanceMode;
-(void)setWhiteBalanceMode:(long long)arg1 ;
-(void)setTransportControlsPlaybackMode:(long long)arg1 speed:(float)arg2 ;
-(OpaqueCMIOUnitRef)connectionUnit;
-(long long)torchMode;
-(long long)flashMode;
-(char)isVirtualDevice;
-(char)hasFlash;
-(char)hasTorch;
-(char)isGeometricDistortionCorrectionSupported;
-(void)setActiveDepthDataMinFrameDuration:(SCD_Struct_AV0)arg1 ;
-(void)setExposureModeCustomWithDuration:(SCD_Struct_AV0)arg1 ISO:(float)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)isAutoFocusRangeRestrictionSupported;
-(char)isSmoothAutoFocusSupported;
-(char)isLockingFocusWithCustomLensPositionSupported;
-(float)minExposureTargetBias;
-(float)maxExposureTargetBias;
-(char)isLockingWhiteBalanceWithCustomDeviceGainsSupported;
-(float)maxWhiteBalanceGain;
-(SCD_Struct_AV35)deviceWhiteBalanceGainsForTemperatureAndTintValues:(SCD_Struct_AV36)arg1 ;
-(SCD_Struct_AV36)chromaticityValuesForDeviceWhiteBalanceGains:(SCD_Struct_AV35)arg1 ;
-(char)automaticallyAdjustsVideoHDREnabled;
-(char)isVideoHDREnabled;
-(void)setActiveDepthDataFormat:(id)arg1 ;
-(SCD_Struct_AV0)activeDepthDataMinFrameDuration;
-(CGPoint)focusPointOfInterest;
-(long long)autoFocusRangeRestriction;
-(void)setAutoFocusRangeRestriction:(long long)arg1 ;
-(float)lensPosition;
-(void)setFocusModeLockedWithLensPosition:(float)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)isSmoothAutoFocusEnabled;
-(void)setSmoothAutoFocusEnabled:(char)arg1 ;
-(float)lensAperture;
-(void)setExposureTargetBias:(float)arg1 completionHandler:(/*^block*/id)arg2 ;
-(CGPoint)exposurePointOfInterest;
-(SCD_Struct_AV0)activeMaxExposureDuration;
-(char)isGlobalToneMappingEnabled;
-(void)setGlobalToneMappingEnabled:(char)arg1 ;
-(SCD_Struct_AV35)deviceWhiteBalanceGains;
-(SCD_Struct_AV35)grayWorldDeviceWhiteBalanceGains;
-(void)setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:(SCD_Struct_AV35)arg1 completionHandler:(/*^block*/id)arg2 ;
-(SCD_Struct_AV35)deviceWhiteBalanceGainsForChromaticityValues:(SCD_Struct_AV36)arg1 ;
-(SCD_Struct_AV36)temperatureAndTintValuesForDeviceWhiteBalanceGains:(SCD_Struct_AV35)arg1 ;
-(char)isFlashAvailable;
-(char)isTorchActive;
-(float)torchLevel;
-(char)isTorchAvailable;
-(char)isSubjectAreaChangeMonitoringEnabled;
-(void)setSubjectAreaChangeMonitoringEnabled:(char)arg1 ;
-(double)videoZoomFactor;
-(double)dualCameraSwitchOverVideoZoomFactor;
-(double)minAvailableVideoZoomFactor;
-(id)virtualDeviceSwitchOverVideoZoomFactors;
-(double)maxAvailableVideoZoomFactor;
-(char)isGeometricDistortionCorrectionEnabled;
-(void)setGeometricDistortionCorrectionEnabled:(char)arg1 ;
-(void)setAutomaticallyAdjustsVideoHDREnabled:(char)arg1 ;
-(void)setVideoHDREnabled:(char)arg1 ;
-(id)systemPressureState;
-(char)_startUsingDevice:(id*)arg1 ;
-(void)_stopUsingDevice;
-(char)isLowLightBoostSupported;
-(char)isLowLightBoostEnabled;
-(char)automaticallyEnablesLowLightBoostWhenAvailable;
-(void)setAutomaticallyEnablesLowLightBoostWhenAvailable:(char)arg1 ;
-(NSArray *)linkedDevices;
-(void)_removeAllLinkedDevices;
-(void)removeLinkedDeviceWithoutReentering:(id)arg1 ;
-(void)addLinkedDeviceWithoutReentering:(id)arg1 ;
-(void)_forceClosed;
@end

