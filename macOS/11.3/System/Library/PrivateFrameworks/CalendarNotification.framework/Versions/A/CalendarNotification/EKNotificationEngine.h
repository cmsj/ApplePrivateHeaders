/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:48 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CalendarNotification.framework/Versions/A/CalendarNotification
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol EKNotificationInfoDelegate, OS_dispatch_queue;
@class EKEventStore, CalLimitingQueue, NSObject, NSMutableDictionary, NSString;

@interface EKNotificationEngine : NSObject {

	EKEventStore* _eventStore;
	id<EKNotificationInfoDelegate> _notificationDelegate;
	CalLimitingQueue* _limitingQueue;
	NSObject*<OS_dispatch_queue> _timerQueue;
	NSMutableDictionary* _timers;

}

@property (retain) CalLimitingQueue * limitingQueue;                                 //@synthesize limitingQueue=_limitingQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> timerQueue;                          //@synthesize timerQueue=_timerQueue - In the implementation block
@property (retain) NSMutableDictionary * timers;                                     //@synthesize timers=_timers - In the implementation block
@property (retain) EKEventStore * eventStore;                                        //@synthesize eventStore=_eventStore - In the implementation block
@property (__weak) id<EKNotificationInfoDelegate> notificationDelegate;              //@synthesize notificationDelegate=_notificationDelegate - In the implementation block
@property (nonatomic,readonly) NSString * engineID; 
+(char)shouldLogFor35464009;
+(id)logHandleFor35464009;
+(void)openURLString:(id)arg1 withApp:(id)arg2 ;
-(void)dealloc;
-(void)action;
-(void)start;
-(void)_registerForNotifications;
-(void)_performAction;
-(EKEventStore *)eventStore;
-(void)setEventStore:(EKEventStore *)arg1 ;
-(NSMutableDictionary *)timers;
-(void)setTimers:(NSMutableDictionary *)arg1 ;
-(void)_resetTimers;
-(CalLimitingQueue *)limitingQueue;
-(void)setLimitingQueue:(CalLimitingQueue *)arg1 ;
-(void)quickAction;
-(void)setTimerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setNotificationDelegate:(id<EKNotificationInfoDelegate>)arg1 ;
-(id)_interestingNotifications;
-(void)_notificationReceived:(id)arg1 ;
-(void)_performQuickAction;
-(char)_handlesDismissalForType:(id)arg1 ;
-(void)_handleDismissalForIdentifier:(id)arg1 userInfo:(id)arg2 dismissedAlert:(char)arg3 ;
-(char)_handlesActivationForType:(id)arg1 ;
-(void)_handleActivationForIdentifier:(id)arg1 userInfo:(id)arg2 clickActivation:(char)arg3 additionalActionClicked:(id)arg4 ;
-(char)_handlesExpirationForType:(id)arg1 ;
-(void)_handleExpirationForIdentifiers:(id)arg1 ;
-(char)_contributesToCalendarBadgeCount;
-(void)_calendarBadgeCountWithReply:(/*^block*/id)arg1 ;
-(char)_contributesToRemindersBadgeCount;
-(void)_remindersBadgeCountWithReply:(/*^block*/id)arg1 ;
-(char)_contributesToRemindersWithContactBadgeCount;
-(void)_remindersBadgeCountForContactIdentifier:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(NSObject*<OS_dispatch_queue>)timerQueue;
-(void)_timerFiredWithLabel:(id)arg1 performsQuickAction:(char)arg2 ;
-(id)initWithEventStore:(id)arg1 actionQueue:(id)arg2 timerQueue:(id)arg3 notificationDelegate:(id)arg4 ;
-(NSString *)engineID;
-(void)handleDismissalForType:(id)arg1 identifier:(id)arg2 userInfo:(id)arg3 dismissedAlert:(char)arg4 ;
-(void)handleActivationForType:(id)arg1 identifier:(id)arg2 userInfo:(id)arg3 clickActivation:(char)arg4 additionalActionClicked:(id)arg5 ;
-(void)handleExpirationForType:(id)arg1 identifiers:(id)arg2 after:(double)arg3 ;
-(void)calendarBadgeCountWithReply:(/*^block*/id)arg1 ;
-(void)remindersBadgeCountWithReply:(/*^block*/id)arg1 ;
-(void)remindersBadgeCountForContactIdentifier:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)_removeNotificationIdentifiers:(id)arg1 ;
-(void)_scheduleTimerWithLabel:(id)arg1 interval:(double)arg2 quickAction:(char)arg3 ;
-(id<EKNotificationInfoDelegate>)notificationDelegate;
@end

