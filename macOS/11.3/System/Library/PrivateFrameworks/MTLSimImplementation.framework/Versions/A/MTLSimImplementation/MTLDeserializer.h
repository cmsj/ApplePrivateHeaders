/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:49 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MTLSimImplementation.framework/Versions/A/MTLSimImplementation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MTLDeserializer <NSObject>
@property (readonly) char generateResourceRefs; 
@required
-(char)operationWithSerializedData:(const char*)arg1 serializedDataSize:(unsigned long long)arg2 allocator:(id)arg3;
-(char)newFunctionWithSerializedMetallib:(id)arg1 commandData:(const char*)arg2 commandDataSize:(unsigned long long)arg3 overrideTargetTriple:(id)arg4 allocator:(id)arg5;
-(void)deleteResource:(unsigned)arg1;
-(void)newTextureWithIOSurface:(IOSurfaceRef)arg1 serializedData:(const char*)arg2 serializedDataSize:(unsigned long long)arg3 allocator:(id)arg4;
-(id)getComputePipelineStateForReference:(unsigned)arg1;
-(unsigned)registerCommandQueueForReference:(unsigned)arg1 commandQueue:(id)arg2;
-(id)getCommandQueueForReference:(unsigned)arg1;
-(unsigned)registerFunctionForReference:(unsigned)arg1 function:(id)arg2;
-(id)getFunctionForReference:(unsigned)arg1;
-(unsigned)registerComputePipelineStateForReference:(unsigned)arg1 computePipeline:(id)arg2;
-(unsigned)registerRenderPipelineStateForReference:(unsigned)arg1 renderPipeline:(id)arg2;
-(id)getRenderPipelineStateForReference:(unsigned)arg1;
-(unsigned)registerBufferForReference:(unsigned)arg1 buffer:(id)arg2;
-(id)getBufferForReference:(unsigned)arg1;
-(unsigned)registerTextureForReference:(unsigned)arg1 texture:(id)arg2;
-(id)getTextureForReference:(unsigned)arg1;
-(unsigned)registerSamplerStateForReference:(unsigned)arg1 sampler:(id)arg2;
-(id)getSamplerStateForReference:(unsigned)arg1;
-(unsigned)registerDepthStencilStateForReference:(unsigned)arg1 depthStencil:(id)arg2;
-(id)getDepthStencilStateForReference:(unsigned)arg1;
-(unsigned)registerFenceForReference:(unsigned)arg1 fence:(id)arg2;
-(id)getFenceForReference:(unsigned)arg1;
-(unsigned)registerArgumentBufferLayoutForReference:(unsigned)arg1 argumentBufferLayout:(id)arg2;
-(id)getArgumentBufferLayoutForReference:(unsigned)arg1;
-(unsigned)registerArgumentEncoderForReference:(unsigned)arg1 argumentEncoder:(id)arg2;
-(id)getArgumentEncoderForReference:(unsigned)arg1;
-(unsigned)registerHeapForReference:(unsigned)arg1 heap:(id)arg2;
-(id)getHeapForReference:(unsigned)arg1;
-(unsigned)registerEventForReference:(unsigned)arg1 event:(id)arg2;
-(id)getEventForReference:(unsigned)arg1;
-(id)getResourceForReference:(unsigned)arg1;
-(void)deleteObjectWithSerializedData:(const char*)arg1 serializedDataSize:(unsigned long long)arg2;
-(void)decodeSegments:(void*)arg1 lengths:(unsigned long long*)arg2 count:(unsigned long long)arg3 into:(id)arg4;
-(void)submitCommandSegments:(void*)arg1 lengths:(unsigned long long*)arg2 count:(unsigned long long)arg3 submissionCompleted:(/*^block*/id)arg4 commandBufferCompleted:(/*^block*/id)arg5 commandQueueRef:(unsigned)arg6;
-(void)submitCommandSegmentsTimed:(void*)arg1 lengths:(unsigned long long*)arg2 count:(unsigned long long)arg3 submissionCompleted:(/*^block*/id)arg4 commandBufferCompleted:(/*^block*/id)arg5 commandQueueRef:(unsigned)arg6;
-(unsigned)registerBuffer:(id)arg1;
-(unsigned)registerCommandQueue:(id)arg1;
-(id)newObjectCommandWithSerializedData:(const char*)arg1 serializedDataSize:(unsigned long long)arg2;
-(void)notifyListenerForEventWithSerializedData:(const char*)arg1 serializedDataSize:(unsigned long long)arg2 block:(/*^block*/id)arg3 allocator:(id)arg4;
-(void)newSharedEventWithEventPort:(unsigned)arg1 label:(id)arg2 serializedData:(const char*)arg3 serializedDataSize:(unsigned long long)arg4 allocator:(id)arg5;
-(void)getBytes:(void*)arg1 dataSize:(unsigned long long)arg2 command:(const SCD_Struct_MT1*)arg3;
-(void)submitCommandSegments:(void*)arg1 lengths:(unsigned long long*)arg2 count:(unsigned long long)arg3 submissionCompleted:(/*^block*/id)arg4 commandBufferCompleted:(/*^block*/id)arg5;
-(char)generateResourceRefs;

@end

