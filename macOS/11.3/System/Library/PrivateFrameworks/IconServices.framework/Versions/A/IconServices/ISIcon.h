/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <IconServices/IconServices-Structs.h>
#import <libobjc.A.dylib/ISScalableCompositorResource.h>
#import <libobjc.A.dylib/CALayerDelegate.h>

@class NSString, ISIconManager, NSArray, IFSymbol;

@interface ISIcon : NSObject <ISScalableCompositorResource, CALayerDelegate>

@property (readonly) id<ISIconIdentity> _identity; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) ISIconManager * manager; 
@property (nonatomic,readonly) NSArray * decorations; 
@property (nonatomic,readonly) IFSymbol * symbol; 
+(unsigned long long)behaviourRevision;
+(char)writeCustomIcon:(id)arg1 toURL:(id)arg2 error:(id*)arg3 ;
+(const char*)_AttachedResourceInfoKey;
+(id)layerUpdateQueue;
+(id)templateTypeForType:(id)arg1 ;
+(id)templateTypeForTag:(id)arg1 tagClass:(id)arg2 ;
+(LIIconVariantInfo*)variantInfoForSet:(unsigned long long)arg1 count:(unsigned long long*)arg2 ;
+(int)findVariantFromSet:(unsigned long long)arg1 deviceIdiom:(unsigned long long)arg2 size:(CGSize)arg3 scale:(double)arg4 ;
+(id)sizesFromSet:(unsigned long long)arg1 ;
+(char)variant:(int)arg1 isMemberOfSet:(unsigned long long)arg2 ;
+(id)transparentIcon;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)applicationIcon;
+(id)genericDocumentIcon;
+(id)genericApplicationIcon;
-(id)_imageForSymbolImageDescriptor:(id)arg1 ;
-(unsigned long long)variantOptions;
-(id)_prepareImageForImageDescriptor:(id)arg1 ;
-(id)iconWithDecorations:(id)arg1 ;
-(id)_init;
-(NSArray *)decorations;
-(ISIconManager *)manager;
-(IFSymbol *)symbol;
-(void)displayLayer:(id)arg1 ;
-(id<ISIconIdentity>)_identity;
-(CGImageRef)CGImageForImageDescriptor:(id)arg1 ;
-(id)imageForSize:(CGSize)arg1 scale:(double)arg2 ;
-(double)_aspectRatio;
-(void)getCGImageForImageDescriptor:(id)arg1 completion:(/*^block*/id)arg2 ;
-(CGImageRef)CGImageForDescriptor:(id)arg1 ;
-(id)imageForDescriptor:(id)arg1 ;
-(id)prepareImageForDescriptor:(id)arg1 ;
-(unsigned long long)badgeOptions;
-(void)prepareImagesForDescriptors:(id)arg1 ;
@end

