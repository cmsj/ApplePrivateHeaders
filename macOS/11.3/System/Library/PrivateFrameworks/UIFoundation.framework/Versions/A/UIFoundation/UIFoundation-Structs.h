/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:01 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSTextContainer, NSTextRange, NSMapTable, NSFont, NSMutableParagraphStyle, NSString;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _NSZone* NSZoneRef;

typedef struct NSDirectionalEdgeInsets {
	double top;
	double leading;
	double bottom;
	double trailing;
} NSDirectionalEdgeInsets;

typedef struct _compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
	CGRect __value_;
} compressed_pair<CGRect *, std::__1::allocator<CGRect>>;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
	CGRect __begin_;
	CGRect __end_;
	compressed_pair<CGRect *, std::__1::allocator<CGRect>> __end_cap_;
} vector<CGRect, std::__1::allocator<CGRect>>;

typedef struct CGVector {
	double dx;
	double dy;
} CGVector;

typedef struct {
	id field1;
	double field2;
	char field3;
	char field4;
} SCD_Struct_NS8;

typedef struct {
	NSTextContainer* textContainer;
	NSTextRange* textRange;
	NSMapTable* layoutFragmentTable;
	CGRect usageBounds;
	id layoutFragments;
	id layoutFragmentsHint;
	unsigned long long layoutFragmentsCount;
	unsigned long long layoutFragmentsSize;
	unsigned long long layoutFragmentsGapIndex;
	char layoutFragmentsValid;
	char forPositionQuery;
} SCD_Struct_NS9;

typedef struct {
	id field1;
	id field2;
	id field3;
	CGRect field4;
	id field5;
	id field6;
	unsigned long long field7;
	unsigned long long field8;
	unsigned long long field9;
	char field10;
	char field11;
} SCD_Struct_NS10;

typedef struct NSRange {
	unsigned long long location;
	unsigned long long length;
} NSRange;

typedef struct {
	id field1;
	_ field2;
	NSRange field3;
	id field4[64];
	long long field5;
	_ field6;
	NSRange field7;
	unsigned long long field8;
	long long field9;
	BOOL field10;
} SCD_Struct_NS12;

typedef struct __CTFont* CTFontRef;

typedef struct __CTLine* CTLineRef;

typedef struct __CFArray* CFArrayRef;

typedef struct {
	unsigned char field1;
	long long field2;
	char field3;
} SCD_Struct_NS16;

typedef struct {
	double field1;
	double field2;
	double field3;
} SCD_Struct_NS17;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct NSGlyphTree {
	_NSGlyphNode rootNode;
	_NSGlyphNode curNode;
	unsigned long long curCharIndex;
	unsigned long long curGlyphIndex;
} NSGlyphTree;

typedef struct NSLayoutTree {
	_NSLayoutNode rootNode;
	_NSLayoutNode curNode;
	unsigned long long curGlyphIndex;
	double curLongitudinalOrigin;
	CGRect extraLineFragmentRect;
	CGRect extraLineFragmentUsedRect;
	unsigned long long glyphsPerLineEstimate;
	double offsetPerLineEstimate;
} NSLayoutTree;

typedef struct NSGlyphIndexForPointCache {
	CGPoint point;
	void textContainer;
	unsigned long long indexCache;
	double fractionCache;
} NSGlyphIndexForPointCache;

typedef struct CGContext* CGContextRef;

typedef struct shared_ptr<_NSRTreeContainerNode> {
	_NSRTreeContainerNode __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<_NSRTreeContainerNode>;

typedef union {
	float floatValue;
	double doubleValue;
	unsigned long long integerValue;
	void bytesValue;
} SCD_Union_UI24;

typedef struct __CFStorage* CFStorageRef;

typedef struct {
	id field1;
	long long field2;
} SCD_Struct_NS26;

typedef struct {
	unsigned usesFontLeading : 1;
	unsigned usesScreenFonts : 1;
	unsigned showsInvisibleCharacters : 1;
	unsigned showsControlCharacters : 1;
	unsigned defaultAttachmentScaling : 4;
	unsigned typesetterBehavior : 8;
	unsigned reserved : 20;
} SCD_Struct_NS27;

typedef struct {
	float _hyphenationFactor;
	SCD_Struct_NS27 _flags;
} SCD_Struct_NS28;

typedef struct CATransform3D {
	double m11;
	double m12;
	double m13;
	double m14;
	double m21;
	double m22;
	double m23;
	double m24;
	double m31;
	double m32;
	double m33;
	double m34;
	double m41;
	double m42;
	double m43;
	double m44;
} CATransform3D;

typedef struct NSEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} NSEdgeInsets;

typedef struct CGPath* CGPathRef;

typedef struct shared_ptr<_NSOrderedRangeIndexerImpl> {
	_NSOrderedRangeIndexerImpl __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<_NSOrderedRangeIndexerImpl>;

typedef struct __CTRun* CTRunRef;

typedef struct opaque_pthread_rwlock_t {
	long long __sig;
	char __opaque[192];
} opaque_pthread_rwlock_t;

typedef struct CGAffineTransform {
	double a;
	double b;
	double c;
	double d;
	double tx;
	double ty;
} CGAffineTransform;

typedef struct __CTRunDelegate* CTRunDelegateRef;

typedef struct {
	int commonRowHorizontalAlignment;
	int lastRowHorizontalAlignment;
	int rowVerticalAlignment;
} SCD_Struct_NS37;

typedef struct {
	unsigned field1 : 4;
	unsigned field2 : 1;
	unsigned field3 : 1;
	unsigned field4 : 1;
	unsigned field5 : 4;
	unsigned field6 : 4;
	unsigned field7 : 1;
	unsigned field8 : 1;
	unsigned field9 : 1;
	unsigned field10 : 1;
	unsigned field11 : 2;
	unsigned field12 : 1;
	unsigned field13 : 3;
	unsigned field14 : 7;
} SCD_Struct_NS38;

typedef struct {
	/*function pointer*/void* field1;
	_ field2;
	CGRect field3;
	_ field4;
	CGRect field5;
	float field6;
	float field7;
	/*function pointer*/void* field8;
	/*function pointer*/void* field9;
	double field10;
	double field11;
	double field12;
	double field13;
	double field14;
	double field15;
	NSRange field16;
	NSRange field17;
	_ field18;
	NSRange field19;
	id field20;
	double field21;
	long long field22;
	SCD_Struct_NS38 field23;
	void* field24[0];
} SCD_Struct_NS39;

typedef struct {
	unsigned long long field1;
	unsigned long long field2;
	char field3;
	unsigned long long field4;
	id field5;
	/*function pointer*/void* field6;
	id field7;
	/*function pointer*/void* field8;
} SCD_Struct_NS40;

typedef union {
	unsigned char thin[128];
	unsigned short fat[128];
} SCD_Union_NS41;

typedef struct NSAttributeInfo {
	unsigned toUniCharEncoding;
	unsigned codePageEncoding;
	NSFont* font;
	double fontSize;
	double kern;
	NSMutableParagraphStyle* paraStyle;
	unsigned bold : 1;
	unsigned italic : 1;
	unsigned fontIsValid : 1;
	unsigned paraStyleIsValid : 1;
	unsigned kernIsValid : 1;
	unsigned attributesSameAsBefore : 1;
	unsigned multiByteEncoding : 1;
	unsigned unicodeAlternativeLength : 3;
	unsigned tabStopType : 4;
	unsigned curAttributesNeedsCopying : 1;
	unsigned paraStyleNeedsCopying : 1;
	unsigned hasWritingDirectionAttribute : 1;
	unsigned  : 15;
} NSAttributeInfo;

typedef struct NSRTFPriv {
	void reader;
	char* rtfInput;
	unsigned long long rtfInputLength;
	unsigned long long rtfInputLocation;
	unsigned long long rtfHeaderEndLocation;
	int pushedChar;
	int pushedClass;
	int pushedMajor;
	int pushedMinor;
	int pushedParam;
	char pushedTextBuf[1024];
	int prevChar;
	int bumpLine;
	RTFFont fontList;
	RTFColor colorList;
	RTFStyle styleList;
	char* inputName;
	char* outputName;
	/*function pointer*/void* ccb[5];
	/*function pointer*/void* readHook;
	/*function pointer*/void* msgProc;
	/*function pointer*/void* panicProc;
	char textBuf[1024];
	int textLen;
	int class;
	int major;
	int minor;
	int param;
	long long lineNum;
	long long linePos;
	int groupState;
} NSRTFPriv;

typedef struct NSAttributeDictionaryElement {
	unsigned long long hash;
	id key;
	id value;
} NSAttributeDictionaryElement;

typedef struct __CFString* CFStringRef;

typedef struct __CFStringTokenizer* CFStringTokenizerRef;

typedef struct UBreakIterator* UBreakIteratorRef;

typedef struct {
	unsigned long long field1;
	unsigned long long field2;
	char field3;
} SCD_Struct_NS48;

typedef struct {
	double field1;
	id field2;
	id field3;
	char field4;
	char field5;
} SCD_Struct_NS49;

typedef struct UINibArchiveTableInfo {
	unsigned count;
	unsigned offset;
} UINibArchiveTableInfo;

typedef struct UINibDecoderHeader {
	unsigned char type[10];
	unsigned formatVersion;
	unsigned coderVersion;
	UINibArchiveTableInfo objects;
	UINibArchiveTableInfo keys;
	UINibArchiveTableInfo values;
	UINibArchiveTableInfo classes;
} UINibDecoderHeader;

typedef struct UINibDecoderRecursiveState {
	long long objectID;
	long long nextGenericKey;
	unsigned nextValueSearchIndex;
	char replaced;
} UINibDecoderRecursiveState;

typedef struct UIKeyToKeyIDCache {
	NSString* previousKey[64];
	void* previousKeyID[64];
	char previousKeyExists[64];
	long long hashHits;
	long long hashHotMisses;
	long long hashColdMisses;
} UIKeyToKeyIDCache;

typedef struct UIKeyAndScopeToValueCache {
	unsigned previousScope;
	unsigned previousKey;
	UINibDecoderValue previousValue;
} UIKeyAndScopeToValueCache;

typedef struct _compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
	_NSRange __value_;
} compressed_pair<_NSRange *, std::__1::allocator<_NSRange>>;

typedef struct vector<_NSRange, std::__1::allocator<_NSRange>> {
	_NSRange __begin_;
	_NSRange __end_;
	compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> __end_cap_;
} vector<_NSRange, std::__1::allocator<_NSRange>>;

typedef struct {
	unsigned _resolvedWritingDirection : 2;
	unsigned _reserved : 30;
} SCD_Struct_NS57;

typedef struct __CTTypesetter* CTTypesetterRef;

typedef struct {
	long long location;
	long long length;
} SCD_Struct_NS59;

typedef struct __CTGlyphStorage* CTGlyphStorageRef;

typedef struct {
	unsigned field1 : 1;
	unsigned field2 : 1;
	unsigned field3 : 1;
	unsigned field4 : 1;
	unsigned field5 : 1;
	unsigned field6 : 1;
	unsigned field7 : 1;
	unsigned field8 : 1;
	unsigned field9 : 24;
} SCD_Struct_NS61;

typedef struct {
	id field1;
	id field2;
	long long field3;
	long long field4;
	double field5;
	double field6;
	double field7;
	double field8;
	CGRect field9;
	SCD_Struct_NS61 field10;
} SCD_Struct_NS62;

typedef struct __CFSet* CFSetRef;

typedef struct {
	unsigned short field1;
	CGSize field2;
	unsigned field3;
	long long field4;
	long long field5;
} SCD_Struct_NS64;

typedef struct {
	long long field1;
	SCD_Struct_NS64 field2[0];
} SCD_Struct_NS65;

