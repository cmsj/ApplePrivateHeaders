/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:33 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreWiFi/CoreWiFi-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSDictionary, NSSet, NSData, NSString, CWFChannel, NSArray;

@interface CWFScanResult : NSObject <NSCopying, NSSecureCoding> {

	char _hasWPAIE;
	char _hasRSNIE;
	NSDictionary* _internal;

}

@property (nonatomic,copy) NSDictionary * internal;                                            //@synthesize internal=_internal - In the implementation block
@property (nonatomic,copy,readonly) NSSet * properties; 
@property (nonatomic,copy,readonly) NSDictionary * scanRecord; 
@property (nonatomic,readonly) unsigned long long cacheAge; 
@property (nonatomic,copy,readonly) NSData * informationElementData; 
@property (nonatomic,copy,readonly) NSData * SSID; 
@property (nonatomic,copy,readonly) NSString * networkName; 
@property (nonatomic,copy,readonly) NSString * BSSID; 
@property (nonatomic,copy,readonly) CWFChannel * channel; 
@property (nonatomic,readonly) long long RSSI; 
@property (nonatomic,readonly) long long noise; 
@property (nonatomic,readonly) long long beaconInterval; 
@property (nonatomic,copy,readonly) NSString * countryCode; 
@property (nonatomic,readonly) long long airPortBaseStationModel; 
@property (nonatomic,readonly) char isUnconfiguredAirPortBaseStation; 
@property (nonatomic,readonly) char isPasspoint; 
@property (nonatomic,readonly) char isPersonalHotspot; 
@property (nonatomic,readonly) char isAppleSWAP; 
@property (nonatomic,readonly) char isIBSS; 
@property (nonatomic,readonly) unsigned long long supportedSecurityTypes; 
@property (nonatomic,readonly) unsigned long long strongestSupportedSecurityType; 
@property (nonatomic,readonly) unsigned long long weakestSupportedSecurityType; 
@property (nonatomic,readonly) char isOpen; 
@property (nonatomic,readonly) char isWEP; 
@property (nonatomic,readonly) char isWAPI; 
@property (nonatomic,readonly) char isWPA; 
@property (nonatomic,readonly) char isWPA2; 
@property (nonatomic,readonly) char isWPA3; 
@property (nonatomic,readonly) char isEAP; 
@property (nonatomic,readonly) char isPSK; 
@property (nonatomic,readonly) long long WAPISubtype; 
@property (nonatomic,readonly) int supportedPHYModes; 
@property (nonatomic,readonly) int fastestSupportedPHYMode; 
@property (nonatomic,readonly) int slowestSupportedPHYMode; 
@property (nonatomic,copy) NSDictionary * OSSpecificAttributes; 
@property (nonatomic,readonly) char hasWPAIE;                                                  //@synthesize hasWPAIE=_hasWPAIE - In the implementation block
@property (nonatomic,readonly) unsigned long long WPAMulticastCipher; 
@property (nonatomic,readonly) NSArray * WPAUnicastCiphers; 
@property (nonatomic,readonly) NSArray * WPAAuthSelectors; 
@property (nonatomic,readonly) char hasRSNIE;                                                  //@synthesize hasRSNIE=_hasRSNIE - In the implementation block
@property (nonatomic,readonly) unsigned long long RSNMulticastCipher; 
@property (nonatomic,readonly) unsigned long long RSNBroadcastCipher; 
@property (nonatomic,readonly) NSArray * RSNUnicastCiphers; 
@property (nonatomic,readonly) NSArray * RSNAuthSelectors; 
@property (nonatomic,readonly) int RSNCapabilities; 
@property (nonatomic,readonly) char isMFPCapable; 
@property (nonatomic,readonly) char isMFPRequired; 
@property (nonatomic,readonly) int accessNetworkType; 
@property (nonatomic,readonly) char isInternetAccessible; 
@property (nonatomic,readonly) char isAdditionalStepRequiredForAccess; 
@property (nonatomic,readonly) char isEmergencyServicesReachable; 
@property (nonatomic,readonly) char isUnauthenticatedEmergencyServiceAccessible; 
@property (nonatomic,readonly) long long venueGroup; 
@property (nonatomic,readonly) long long venueType; 
@property (nonatomic,copy,readonly) NSString * HESSID; 
@property (nonatomic,readonly) char isUnconfiguredDevice; 
@property (nonatomic,readonly) char providesInternetAccess; 
@property (nonatomic,readonly) char supportsWPS; 
@property (nonatomic,readonly) char supportsiAPOverWiFi; 
@property (nonatomic,readonly) char supports2GHzNetworks; 
@property (nonatomic,readonly) char supports5GHzNetworks; 
@property (nonatomic,readonly) char supportsCarPlay; 
@property (nonatomic,readonly) char supportsHomeKit; 
@property (nonatomic,readonly) char supportsHomeKit2; 
@property (nonatomic,readonly) char supportsAirPlay; 
@property (nonatomic,readonly) char supportsAirPlay2; 
@property (nonatomic,readonly) char supportsAirPrint; 
@property (nonatomic,readonly) char supportsMFi; 
@property (nonatomic,readonly) char supportsMFiHardwareAuth; 
@property (nonatomic,readonly) char supportsMFiSoftwareTokenAuth; 
@property (nonatomic,readonly) char supportsMFiSoftwareCertAuth; 
@property (nonatomic,readonly) char supportsSecureWAC; 
@property (nonatomic,readonly) char supportsWoW; 
@property (nonatomic,copy,readonly) NSString * friendlyName; 
@property (nonatomic,copy,readonly) NSString * manufacturerName; 
@property (nonatomic,copy,readonly) NSString * modelName; 
@property (nonatomic,copy,readonly) NSString * displayName; 
@property (nonatomic,copy,readonly) NSString * primaryMAC; 
@property (nonatomic,copy,readonly) NSString * bluetoothMAC; 
@property (nonatomic,copy,readonly) NSString * deviceID; 
@property (nonatomic,copy,readonly) NSDictionary * ANQPResponse; 
@property (nonatomic,copy,readonly) NSArray * cellularNetworkInfo; 
@property (nonatomic,copy,readonly) NSArray * NAIRealmNameList; 
@property (nonatomic,copy,readonly) NSArray * roamingConsortiumList; 
@property (nonatomic,copy,readonly) NSArray * operatorFriendlyNameList; 
@property (nonatomic,copy,readonly) NSArray * domainNameList; 
+(char)supportsSecureCoding;
-(int)accessNetworkType;
-(char)isAdditionalStepRequiredForAccess;
-(char)isEmergencyServicesReachable;
-(char)isUnauthenticatedEmergencyServiceAccessible;
-(NSArray *)operatorFriendlyNameList;
-(NSDictionary *)OSSpecificAttributes;
-(char)isWPA;
-(char)isWPA2;
-(char)isWPA3;
-(NSArray *)NAIRealmNameList;
-(char)isMFPCapable;
-(char)isMFPRequired;
-(NSArray *)cellularNetworkInfo;
-(id)__requiredProperties;
-(id)__defaultProperties;
-(char)isUnconfiguredAirPortBaseStation;
-(char)isInternetAccessible;
-(NSString *)HESSID;
-(char)isUnconfiguredDevice;
-(char)providesInternetAccess;
-(char)supportsiAPOverWiFi;
-(char)supports2GHzNetworks;
-(char)supports5GHzNetworks;
-(char)supportsHomeKit;
-(char)supportsHomeKit2;
-(char)supportsAirPrint;
-(char)supportsMFi;
-(char)supportsMFiHardwareAuth;
-(char)supportsSecureWAC;
-(char)supportsWoW;
-(NSString *)primaryMAC;
-(NSString *)bluetoothMAC;
-(char)hasWPAIE;
-(NSArray *)WPAAuthSelectors;
-(char)hasRSNIE;
-(unsigned long long)RSNBroadcastCipher;
-(NSArray *)RSNAuthSelectors;
-(int)RSNCapabilities;
-(id)__internalDictionaryFromScanRecord:(id)arg1 includeProperties:(id)arg2 ;
-(id)__descriptionForPHYMode:(int)arg1 ;
-(id)__descriptionForRSNIE;
-(id)__descriptionForWPAIE;
-(id)__descriptionForAirPortBaseStationModel:(long long)arg1 ;
-(unsigned long long)strongestSupportedSecurityType;
-(unsigned long long)weakestSupportedSecurityType;
-(int)slowestSupportedPHYMode;
-(char)supportsMFiSoftwareTokenAuth;
-(char)supportsMFiSoftwareCertAuth;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSString *)countryCode;
-(NSString *)displayName;
-(NSString *)manufacturerName;
-(NSString *)deviceID;
-(char)isOpen;
-(NSSet *)properties;
-(NSDictionary *)internal;
-(void)setInternal:(NSDictionary *)arg1 ;
-(CWFChannel *)channel;
-(NSString *)modelName;
-(NSDictionary *)scanRecord;
-(char)isPasspoint;
-(char)isPersonalHotspot;
-(NSData *)informationElementData;
-(long long)venueGroup;
-(long long)venueType;
-(NSString *)networkName;
-(long long)noise;
-(char)supportsCarPlay;
-(char)isWAPI;
-(NSData *)SSID;
-(char)supportsAirPlay;
-(unsigned long long)supportedSecurityTypes;
-(int)supportedPHYModes;
-(char)isEqualToScanResult:(id)arg1 ;
-(long long)beaconInterval;
-(char)isAppleSWAP;
-(char)isIBSS;
-(int)fastestSupportedPHYMode;
-(long long)RSSI;
-(NSString *)BSSID;
-(char)isEAP;
-(char)supportsAirPlay2;
-(NSString *)friendlyName;
-(unsigned long long)cacheAge;
-(id)__descriptionForWPACipher:(int)arg1 ;
-(id)__descriptionForWPAAuthSel:(int)arg1 ;
-(id)__descriptionForRSNCipher:(int)arg1 ;
-(id)__descriptionForRSNAuthSel:(int)arg1 ;
-(char)supportsWPS;
-(NSArray *)domainNameList;
-(NSArray *)roamingConsortiumList;
-(long long)WAPISubtype;
-(long long)airPortBaseStationModel;
-(char)isWEP;
-(NSArray *)WPAUnicastCiphers;
-(unsigned long long)WPAMulticastCipher;
-(NSArray *)RSNUnicastCiphers;
-(unsigned long long)RSNMulticastCipher;
-(id)initWithScanRecord:(id)arg1 includeProperties:(id)arg2 ;
-(char)isPSK;
-(id)filteredScanResultWithProperties:(id)arg1 ;
@end

