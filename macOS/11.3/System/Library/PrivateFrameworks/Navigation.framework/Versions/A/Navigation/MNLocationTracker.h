/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Navigation.framework/Versions/A/Navigation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Navigation/Navigation-Structs.h>
#import <libobjc.A.dylib/MNNavigationSessionObserver.h>
#import <libobjc.A.dylib/MNSessionUpdateManagerDelegate.h>

@class MNObserverHashTable, GEOApplicationAuditToken, MNLocation, MNNavigationSession, NSString;

@interface MNLocationTracker : NSObject <MNNavigationSessionObserver, MNSessionUpdateManagerDelegate> {

	MNObserverHashTable* _safeDelegate;
	int _state;
	GEOApplicationAuditToken* _auditToken;
	MNLocation* _lastMatchedLocation;
	MNNavigationSession* _navigationSession;
	char _localizeRoadNames;

}

@property (nonatomic,readonly) MNObserverHashTable * safeDelegate;                                                         //@synthesize safeDelegate=_safeDelegate - In the implementation block
@property (nonatomic,__weak,readonly) MNNavigationSession * navigationSession;                                             //@synthesize navigationSession=_navigationSession - In the implementation block
@property (assign,setter=_setState:,nonatomic) int state;                                                                  //@synthesize state=_state - In the implementation block
@property (setter=_setAuditToken:,getter=_auditToken,nonatomic,retain) GEOApplicationAuditToken * auditToken;              //@synthesize auditToken=_auditToken - In the implementation block
@property (nonatomic,readonly) int transportType; 
@property (nonatomic,readonly) MNLocation * lastMatchedLocation;                                                           //@synthesize lastMatchedLocation=_lastMatchedLocation - In the implementation block
@property (nonatomic,readonly) char isRerouting; 
@property (nonatomic,readonly) char hasArrived; 
@property (nonatomic,readonly) char shouldProjectAlongRoute; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(void)setDelegate:(id)arg1 ;
-(void)resume;
-(int)state;
-(id)_auditToken;
-(void)pause;
-(char)paused;
-(int)transportType;
-(void)_setState:(int)arg1 ;
-(char)hasArrived;
-(void)_setAuditToken:(id)arg1 ;
-(MNObserverHashTable *)safeDelegate;
-(void)startTracking;
-(void)stopTracking;
-(void)updateLocation:(id)arg1 ;
-(void)_updateShouldLocalizeRoadNames;
-(void)_defaultsDidChange;
-(id)_matchedLocationForLocation:(id)arg1 ;
-(void)_switchedToStepAtIndex:(unsigned long long)arg1 ;
-(void)updateManager:(id)arg1 willSendTransitUpdateRequests:(id)arg2 ;
-(void)updateManager:(id)arg1 didReceiveTransitUpdateResponse:(id)arg2 ;
-(void)updateManager:(id)arg1 willSendTransitUpdateRequestForRouteIDs:(id)arg2 ;
-(void)updateManager:(id)arg1 didReceiveTransitUpdates:(id)arg2 ;
-(void)updateManager:(id)arg1 didReceiveTransitError:(id)arg2 ;
-(void)updateManager:(id)arg1 willSendETARequest:(id)arg2 ;
-(void)updateManager:(id)arg1 didReceiveETAResponse:(id)arg2 toRequest:(id)arg3 ;
-(void)updateManager:(id)arg1 didUpdateETAForRouteInfo:(id)arg2 ;
-(void)updateManager:(id)arg1 didReceiveETAError:(id)arg2 ;
-(char)wantsETAUpdates;
-(id)routeInfoForUpdateManager:(id)arg1 ;
-(id)userLocationForUpdateManager:(id)arg1 ;
-(id)initWithNavigationSession:(id)arg1 ;
-(char)isRerouting;
-(char)shouldProjectAlongRoute;
-(void)updateDestination:(id)arg1 finishedHandler:(/*^block*/id)arg2 ;
-(void)reroute:(id)arg1 reason:(unsigned long long)arg2 ;
-(id)matchedLocationForLocation:(id)arg1 ;
-(void)updateVehicleSpeed:(double)arg1 timestamp:(id)arg2 ;
-(void)updateVehicleHeading:(double)arg1 timestamp:(id)arg2 ;
-(char)shouldAllowPause;
-(void)_setIsNavigatingInLowGuidance:(char)arg1 ;
-(void)_updateMatchedLocation:(id)arg1 ;
-(void)_roadFeaturesForFeature:(SCD_Struct_MN5*)arg1 outRoadName:(id*)arg2 outShieldText:(id*)arg3 outShieldType:(long long*)arg4 ;
-(MNLocation *)lastMatchedLocation;
-(MNNavigationSession *)navigationSession;
-(void)resetForTracePlayerAtLocation:(id)arg1 ;
-(void)traceForcedRerouteWithResponse:(id)arg1 request:(id)arg2 ;
-(void)traceForcedActiveTransportTypeChange:(int)arg1 ;
-(void)tracePaused;
-(void)traceJumpedInTime;
-(void)forceOnRoute:(id)arg1 atLocation:(id)arg2 ;
@end

