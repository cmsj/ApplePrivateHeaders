/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:32 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/BookKitFoundation.framework/Versions/A/BookKitFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BookKitFoundation/BookKitFoundation-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSMutableDictionary, NSURL;

@interface BKAssetMetadata : NSObject <NSCopying> {

	os_unfair_lock_s _lock;
	NSMutableDictionary* _backingDictionary;
	long long _assetType;
	NSURL* _backingURL;

}

@property (nonatomic,retain) NSMutableDictionary * backingDictionary;              //@synthesize backingDictionary=_backingDictionary - In the implementation block
@property (assign,nonatomic) long long assetType;                                  //@synthesize assetType=_assetType - In the implementation block
@property (nonatomic,retain) NSURL * backingURL;                                   //@synthesize backingURL=_backingURL - In the implementation block
+(id)updatesMetadataWithDictionary:(id)arg1 error:(id*)arg2 ;
+(long long)assetTypeForAssetAtURL:(id)arg1 ;
+(id)metadataWithURL:(id)arg1 dictionary:(id)arg2 ;
+(id)iTunesArtworkURLWithBaseURL:(id)arg1 ;
+(long long)assetTypeForFileExtension:(id)arg1 ;
+(id)bookTypeForAssetType:(long long)arg1 ;
+(id)dictionaryRepresentation:(id)arg1 combinedWithExtraMetadataByPath:(id)arg2 ;
+(void)_propagateAggregatePart:(id)arg1 toAggregate:(id)arg2 ;
+(id)identityMetadataWithStoreID:(id)arg1 generatedID:(id)arg2 url:(id)arg3 error:(id*)arg4 ;
+(char)identityOfDictionary:(id)arg1 matchesDictionary:(id)arg2 key:(id)arg3 ;
+(char)isAudiobookTrack:(long long)arg1 ;
+(id)_bookSubURLWithBaseURL:(id)arg1 filename:(id)arg2 ;
+(id)iTunesMetadataURLWithBaseURL:(id)arg1 ;
+(id)iTunesMetadataBackupURLWithBaseURL:(id)arg1 ;
+(id)iTunesArtworkBackupURLWithBaseURL:(id)arg1 ;
+(id)sinfXMLURLWithBaseURL:(id)arg1 ;
+(char)isBookURL:(id)arg1 ;
+(id)bookTypeForAssetAtURL:(id)arg1 ;
+(id)dictionaryRepresentationsForAssets:(id)arg1 flavor:(long long)arg2 ;
+(id)dictionaryRepresentations:(id)arg1 combinedWithExtraMetadataByPath:(id)arg2 ;
+(id)assetIDsForAssets:(id)arg1 ;
+(id)sinfPropertiesWithPurchaserID:(id)arg1 downloaderID:(id)arg2 familyID:(id)arg3 ;
+(id)identityMetadataWithDictionary:(id)arg1 error:(id*)arg2 ;
+(id)deserializedMetadataFromDictionary:(id)arg1 error:(id*)arg2 ;
+(/*^block*/id)_backingDictionaryComparator;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(void)lock;
-(void)unlock;
-(unsigned long long)generationCount;
-(id)year;
-(id)displayName;
-(id)itemName;
-(id)genre;
-(id)url;
-(id)artistName;
-(unsigned long long)allocatedSize;
-(id)versionNumber;
-(id)dictionaryRepresentation;
-(id)format;
-(id)duration;
-(id)title;
-(id)modificationDate;
-(char)isUbiquitous;
-(unsigned long long)pageCount;
-(char)isLocked;
-(char)isExplicit;
-(id)accountID;
-(id)author;
-(id)rating;
-(id)producer;
-(id)uploadError;
-(long long)assetType;
-(id)comments;
-(id)sourceURL;
-(char)isAggregate;
-(id)insertionDate;
-(long long)trackNumber;
-(double)percentComplete;
-(id)releaseDate;
-(id)sortTitle;
-(void)setBackingDictionary:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)backingDictionary;
-(id)assetID;
-(id)purchaseDate;
-(long long)discNumber;
-(id)mimeType;
-(id)storeID;
-(id)updateDate;
-(char)isPDF;
-(id)assetDescription;
-(double)bookmarkTime;
-(void)setAssetType:(long long)arg1 ;
-(id)downloadInfo;
-(char)hasPendingUpdates;
-(id)coverImagePath;
-(char)isPreview;
-(char)_hasAllocatedSize;
-(id)copyWithUpdates:(/*^block*/id)arg1 ;
-(char)isBook;
-(char)containsAsset:(id)arg1 ;
-(char)shouldUpdateXattrMetadata;
-(id)isCompressedBookWithError:(id*)arg1 ;
-(id)dictionaryRepresentationWithFlavor:(long long)arg1 ;
-(id)iTunesMetadataURL;
-(id)aggregateIdentifier;
-(id)iTunesMetadataBackupURL;
-(id)coverImageData;
-(id)iTunesArtworkURL;
-(id)iTunesArtworkBackupURL;
-(unsigned long long)aggregatePartCount;
-(id)aggregatePartAtIndex:(unsigned long long)arg1 ;
-(id)generatedID;
-(id)chapterTimes;
-(id)trackTitle;
-(char)isAudiobookTrack;
-(id)aggregateAssetURL;
-(id)initWithURL:(id)arg1 dictionary:(id)arg2 validate:(char)arg3 ;
-(id)normalizedFilename;
-(unsigned long long)_indexOfAggregatePartMatching:(id)arg1 ;
-(id)identityRepresentation;
-(id)iTunesMetadataRepresentation;
-(id)contentLibraryRepresentation;
-(id)progressRepresentation;
-(id)completeExceptPartsRepresentation;
-(id)completeExceptChapterTimesRepresentation;
-(NSURL *)backingURL;
-(void)setBackingURL:(NSURL *)arg1 ;
-(char)isAudiobook;
-(char)isAggregatePart;
-(id)aggregatePartIdentifierPrefix;
-(id)copyWithUpdatedURL:(id)arg1 ;
-(id)addToExistingAggregate:(id)arg1 ;
-(id)removeAggregatePart:(id)arg1 ;
-(char)hasMatchingIdentity:(id)arg1 ;
-(id)itemPath;
-(id)bookType;
-(char)isApplePub;
-(char)isEPub;
-(char)isRMT;
-(char)containsAssetExceptBookmarkTime:(id)arg1 ;
-(id)previousURL;
-(id)trashedURL;
-(char)wasRedacted;
-(id)permlink;
-(char)shouldDisableOptimizeSpeed;
-(char)shouldDisableTouchEmulation;
-(id)desktopSupportLevel;
-(id)packageHash;
-(id)coverImageDataReplaced;
-(id)familyIDTuple;
-(char)hasFamilyID;
-(id)aggregatePartMatching:(id)arg1 ;
-(id)bookmarkTimeUpdateDate;
-(id)sinfXMLURL;
-(char)isInDirectory:(id)arg1 ;
-(id)sortAuthor;
-(id)bookDescription;
-(id)lastOpenDate;
@end

