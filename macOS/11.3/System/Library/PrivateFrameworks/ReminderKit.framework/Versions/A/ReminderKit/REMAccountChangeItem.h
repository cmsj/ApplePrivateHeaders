/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:51 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ReminderKit.framework/Versions/A/ReminderKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/REMConflictResolving.h>
#import <libobjc.A.dylib/REMPersonIDProviding.h>
#import <libobjc.A.dylib/REMSaveRequestTrackedValue.h>
#import <libobjc.A.dylib/REMExternalSyncMetadataWritableProviding.h>

@class NSString, NSData, REMSaveRequest, REMAccountStorage, REMChangedKeysObserver, REMObjectID, REMAccountCapabilities, REMCRMergeableOrderedSet, NSSet, REMAccountGroupContextChangeItem, REMResolutionTokenMap;

@interface REMAccountChangeItem : NSObject <REMConflictResolving, REMPersonIDProviding, REMSaveRequestTrackedValue, REMExternalSyncMetadataWritableProviding> {

	REMSaveRequest* _saveRequest;
	REMAccountStorage* _storage;
	REMChangedKeysObserver* _changedKeysObserver;

}

@property (nonatomic,retain) REMChangedKeysObserver * changedKeysObserver;                       //@synthesize changedKeysObserver=_changedKeysObserver - In the implementation block
@property (nonatomic,readonly) REMObjectID * remObjectID; 
@property (nonatomic,retain) REMObjectID * objectID; 
@property (nonatomic,readonly) REMAccountCapabilities * capabilities; 
@property (nonatomic,readonly) REMCRMergeableOrderedSet * listIDsMergeableOrdering; 
@property (assign,nonatomic) char markedForRemoval; 
@property (nonatomic,retain) NSSet * listIDsToUndelete; 
@property (nonatomic,retain) NSString * displayName; 
@property (assign,nonatomic) char listsDADisplayOrderChanged; 
@property (nonatomic,readonly) long long type; 
@property (nonatomic,copy,readonly) REMAccountStorage * storage;                                 //@synthesize storage=_storage - In the implementation block
@property (nonatomic,retain) NSString * name; 
@property (assign,nonatomic) char inactive; 
@property (assign,nonatomic) char didChooseToMigrate; 
@property (assign,nonatomic) char didChooseToMigrateLocally; 
@property (assign,nonatomic) char didFinishMigration; 
@property (nonatomic,retain) NSString * daConstraintsDescriptionPath; 
@property (assign,nonatomic) char daAllowsCalendarAddDeleteModify; 
@property (assign,nonatomic) char daSupportsSharedCalendars; 
@property (assign,nonatomic) char daWasMigrated; 
@property (nonatomic,readonly) REMSaveRequest * saveRequest;                                     //@synthesize saveRequest=_saveRequest - In the implementation block
@property (nonatomic,readonly) REMAccountGroupContextChangeItem * groupContext; 
@property (nonatomic,retain) REMResolutionTokenMap * resolutionTokenMap; 
@property (nonatomic,retain) NSData * resolutionTokenMapData; 
@property (nonatomic,copy) NSString * personID; 
@property (nonatomic,copy) NSData * personIDSalt; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSString * externalIdentifier; 
@property (nonatomic,copy) NSString * externalModificationTag; 
@property (nonatomic,copy) NSString * daSyncToken; 
@property (nonatomic,copy) NSString * daPushKey; 
+(void)initialize;
+(id)_emptyListIDsOrderingWithAccountID:(id)arg1 ;
-(char)respondsToSelector:(SEL)arg1 ;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(REMAccountStorage *)storage;
-(id)valueForUndefinedKey:(id)arg1 ;
-(void)setValue:(id)arg1 forUndefinedKey:(id)arg2 ;
-(REMAccountCapabilities *)capabilities;
-(id)changedKeys;
-(REMAccountGroupContextChangeItem *)groupContext;
-(REMSaveRequest *)saveRequest;
-(void)addListChangeItem:(id)arg1 ;
-(REMChangedKeysObserver *)changedKeysObserver;
-(id)resolutionTokenKeyForChangedKey:(id)arg1 ;
-(id)shallowCopyWithSaveRequest:(id)arg1 ;
-(void)setChangedKeysObserver:(REMChangedKeysObserver *)arg1 ;
-(id)initWithSaveRequest:(id)arg1 storage:(id)arg2 capabilities:(id)arg3 changedKeysObserver:(id)arg4 ;
-(id)initWithSaveRequest:(id)arg1 storage:(id)arg2 capabilities:(id)arg3 observeInitialValues:(char)arg4 ;
-(void)insertListChangeItem:(id)arg1 adjacentToListChangeItem:(id)arg2 isAfter:(char)arg3 withParentListChangeItem:(id)arg4 ;
-(void)_lowLevelApplyUndoToOrdering:(id)arg1 ;
-(void)_editListIDsOrderingUsingBlock:(/*^block*/id)arg1 ;
-(void)_reassignListChangeItem:(id)arg1 withParentListChangeItem:(id)arg2 ;
-(void)_lowLevelAddListChangeItemToOrdering:(id)arg1 atIndexOfSibling:(id)arg2 isAfter:(char)arg3 withParentListChangeItem:(id)arg4 ;
-(id)initWithObjectID:(id)arg1 type:(long long)arg2 name:(id)arg3 insertIntoSaveRequest:(id)arg4 ;
-(void)insertListChangeItem:(id)arg1 beforeListChangeItem:(id)arg2 ;
-(void)insertListChangeItem:(id)arg1 afterListChangeItem:(id)arg2 ;
-(void)undeleteListWithID:(id)arg1 usingUndo:(id)arg2 ;
-(void)removeFromStore;
-(id)listChangeItemsByOrderingListChangeItems:(id)arg1 ;
-(void)lowLevelAddListIDToOrdering:(id)arg1 withParentListChangeItem:(id)arg2 ;
-(id)lowLevelRemoveListIDFromOrdering:(id)arg1 ;
@end

