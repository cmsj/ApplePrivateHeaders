/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:12 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/Versions/A/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <AVConference/VCSessionParticipant.h>
#import <libobjc.A.dylib/VCVideoSink.h>
#import <libobjc.A.dylib/VCVideoCaptureClient.h>
#import <libobjc.A.dylib/VCSessionUplinkVideoStreamControllerDelegate.h>
#import <libobjc.A.dylib/VCMomentTransportDelegate.h>

@class VCSessionUplinkBandwidthAllocator, NSMutableDictionary, VCSessionUplinkVideoStreamController, NSMutableArray, NSMutableSet, VCVideoRule, VCMoments, VCAudioPowerSpectrumSource, NSArray, NSSet, NSString;

@interface VCSessionParticipantLocal : VCSessionParticipant <VCVideoSink, VCVideoCaptureClient, VCSessionUplinkVideoStreamControllerDelegate, VCMomentTransportDelegate> {

	VCSessionUplinkBandwidthAllocator* _uplinkBandwidthAllocator;
	NSMutableDictionary* _activeUplinkAudioStreams;
	NSMutableDictionary* _pendingActiveUplinkVideoStreams;
	char _encryptionInfoReceived;
	int _shouldUpdateActiveVideoStream;
	unsigned _currentUplinkTargetBitrate;
	opaqueCMSimpleQueueRef _audioStreamUpdateEventQueue;
	opaqueCMSimpleQueueRef _audioRedundancyChangeEventQueue;
	opaqueCMSimpleQueueRef _videoRedundancyChangeEventQueue;
	unsigned _lastSentAudioSampleTime;
	double _lastSentAudioHostTime;
	opaque_pthread_rwlock_t _audioTimestampRWLock;
	unsigned char _lastAudioPriority;
	unsigned char _lastVideoPriority;
	unsigned short _connectionStatsStreamID;
	VCSessionUplinkVideoStreamController* _uplinkVideoStreamController;
	unsigned _uplinkBitrateCapWifi;
	unsigned _uplinkBitrateCapCell;
	tagVCMemoryPool* _audioStreamUpdatePool;
	tagVCMemoryPool* _audioRedundancyEventPool;
	tagVCMemoryPool* _videoRedundancyPool;
	AC _videoPriority;
	char _videoPriorityEnabled;
	char _shouldResize;
	char _enableRedundancy;
	char _enableVADFiltering;
	NSMutableArray* _peerSubscribedStreams;
	NSMutableSet* _localPublishedStreams;
	float _averageSilenceAudioPower;
	unsigned char _audioPriorityRampUp;
	unsigned char _audioPriorityDecaySlow;
	unsigned char _audioPriorityDecayFast;
	float _audioVoiceDetectionSensitivity;
	float _audioSilencePowerAverageMultiplier;
	unsigned char _forcedAudioPriorityValue;
	double _forcedAudioPriorityLastUpdateTime;
	char _forcedAudioPriorityEnabled;
	VCVideoRule* _videoRule;
	char _speechDetected;
	opaqueVCVoiceDetectorRef _voiceDetector;
	double _fecRatio;
	NSMutableSet* _audioPayloadTypes;
	NSMutableSet* _videoPayloadTypes;
	unsigned _currentUplinkTotalBitrateVideo;
	unsigned _currentUplinkTotalBitrateAudio;
	VCMoments* _moments;
	VCAudioPowerSpectrumSource* _powerSpectrumSource;
	int _currentVideoCaptureFrameRate;
	int _maxSupportedMultiwayCameraFrameRate;
	long long _maxSupportedMultiwayVideoResolution;
	char _oneToOneModeEnabled;
	VCSessionParticipantLocalOneToOneSettings* _oneToOneSettings;
	char _isRemoteOnPeace;

}

@property (assign,nonatomic) char encryptionInfoReceived;                                        //@synthesize encryptionInfoReceived=_encryptionInfoReceived - In the implementation block
@property (nonatomic,readonly) unsigned short connectionStatsStreamID;                           //@synthesize connectionStatsStreamID=_connectionStatsStreamID - In the implementation block
@property (assign,nonatomic) unsigned uplinkBitrateCapWifi;                                      //@synthesize uplinkBitrateCapWifi=_uplinkBitrateCapWifi - In the implementation block
@property (assign,nonatomic) unsigned uplinkBitrateCapCell;                                      //@synthesize uplinkBitrateCapCell=_uplinkBitrateCapCell - In the implementation block
@property (assign,nonatomic) char enableVADFiltering;                                            //@synthesize enableVADFiltering=_enableVADFiltering - In the implementation block
@property (nonatomic,copy) NSArray * peerSubscribedStreams;                                      //@synthesize peerSubscribedStreams=_peerSubscribedStreams - In the implementation block
@property (nonatomic,readonly) NSSet * audioPayloadTypes;                                        //@synthesize audioPayloadTypes=_audioPayloadTypes - In the implementation block
@property (nonatomic,readonly) NSSet * videoPayloadTypes;                                        //@synthesize videoPayloadTypes=_videoPayloadTypes - In the implementation block
@property (nonatomic,readonly) unsigned currentUplinkTotalBitrateVideo;                          //@synthesize currentUplinkTotalBitrateVideo=_currentUplinkTotalBitrateVideo - In the implementation block
@property (nonatomic,readonly) unsigned currentUplinkTotalBitrateAudio;                          //@synthesize currentUplinkTotalBitrateAudio=_currentUplinkTotalBitrateAudio - In the implementation block
@property (nonatomic,readonly) VCMoments * moments;                                              //@synthesize moments=_moments - In the implementation block
@property (assign,getter=isOneToOneModeEnabled,nonatomic) char oneToOneModeEnabled; 
@property (assign,nonatomic) int currentVideoCaptureFrameRate; 
@property (nonatomic,readonly) CFStringRef activeStreamKeys; 
@property (assign,nonatomic) char isRemoteOnPeace;                                               //@synthesize isRemoteOnPeace=_isRemoteOnPeace - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(char)setState:(unsigned)arg1 ;
-(void)start;
-(void)stop;
-(void)setMuted:(char)arg1 ;
-(VCMoments *)moments;
-(char)isOneToOneModeEnabled;
-(void)setOneToOneModeEnabled:(char)arg1 ;
-(void)pushAudioSamples:(opaqueVCAudioBufferListRef)arg1 ;
-(void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned)arg2 ;
-(void)redundancyController:(id)arg1 redundancyVectorDidChange:(SCD_Struct_VC50)arg2 ;
-(void)setMediaSuggestion:(VCRateControlMediaSuggestion*)arg1 ;
-(void)handleActiveConnectionChange:(id)arg1 ;
-(void)controller:(id)arg1 didChangeActiveVideoStreams:(id)arg2 ;
-(void)generateKeyFrameWithStreamID:(unsigned short)arg1 ;
-(void)moments:(id)arg1 shouldProcessRequest:(id)arg2 recipientID:(id)arg3 ;
-(void)updateMediaSettingsWithConfig:(id)arg1 ;
-(id)setupStreamRTP:(id)arg1 ;
-(void)stopAudioIOCompletion;
-(char)configureAudioIOWithDeviceRole:(int)arg1 ;
-(id)getAudioDumpName;
-(char)configureWithOneToOneParticipantConfig:(id)arg1 ;
-(void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2 ;
-(void)collectVideoChannelMetrics:(SCD_Struct_VC82*)arg1 ;
-(void)collectAudioChannelMetrics:(SCD_Struct_VC82*)arg1 ;
-(void)thermalLevelDidChange:(int)arg1 ;
-(id)clientCaptureRule;
-(char)onVideoFrame:(opaqueCMSampleBufferRef)arg1 frameTime:(SCD_Struct_VC87)arg2 attribute:(SCD_Struct_Vi134)arg3 ;
-(void)avConferencePreviewError:(id)arg1 ;
-(void)cameraAvailabilityDidChange:(char)arg1 ;
-(void)sourceFrameRateDidChange:(unsigned)arg1 ;
-(void)frameRateIsBeingThrottled:(int)arg1 thermalLevelDidChange:(BOOL)arg2 powerLevelDidChange:(BOOL)arg3 ;
-(id)initWithIDSDestination:(id)arg1 negotiationData:(id)arg2 delegate:(id)arg3 processId:(int)arg4 sessionUUID:(id)arg5 oneToOneModeEnabled:(char)arg6 isGKVoiceChat:(char)arg7 ;
-(unsigned short)connectionStatsStreamID;
-(unsigned)currentUplinkTotalBitrateAudio;
-(unsigned)currentUplinkTotalBitrateVideo;
-(void)updateUplinkTargetBitrate:(unsigned)arg1 ;
-(void)updateTargetBitrateOneToOne:(unsigned)arg1 rateChangeCounter:(unsigned)arg2 ;
-(void)setPeerSubscribedStreams:(NSArray *)arg1 ;
-(void)setUplinkBitrateCapWifi:(unsigned)arg1 ;
-(void)setUplinkBitrateCapCell:(unsigned)arg1 ;
-(void)setEnableVADFiltering:(char)arg1 ;
-(id)supportedAudioRules;
-(void)updateSupportedAudioRules:(id)arg1 ;
-(void)updateMomentsCapabillities:(unsigned)arg1 imageType:(int)arg2 videoCodec:(int)arg3 ;
-(void)setCurrentVideoCaptureFrameRate:(int)arg1 ;
-(char)encryptionInfoReceived;
-(void)didReceiveReportPacket:(tagRTCPPACKET*)arg1 arrivalNTPTime:(tagNTP)arg2 ;
-(void)didReceiveCustomReportPacket:(tagRTCPPACKET*)arg1 arrivalNTPTime:(tagNTP)arg2 ;
-(void)setEncryptionInfoReceived:(char)arg1 ;
-(void)setIsRemoteOnPeace:(char)arg1 ;
-(int)negotiateOneToOne:(id)arg1 ;
-(CFStringRef)activeStreamKeys;
-(long long)setupMaxCaptureResolution;
-(int)setupMaxCaptureCameraFrameRate;
-(unsigned short)generateStreamID;
-(char)setupAudioStreamsWithConfigProvider:(id)arg1 mediaNegotiatorConfig:(id)arg2 ;
-(char)setupVideoStreamsWithConfigProvider:(id)arg1 mediaNegotiatorConfig:(id)arg2 ;
-(void)updatePayloadTypesWithConfigProvider:(id)arg1 ;
-(void)initializeUplinkVideoStreamController;
-(char)initializeMediaNegotiator;
-(char)createParticipantInfo;
-(void)createOpaqueData;
-(void)flushAudioEventQueue;
-(void)flushAudioRedundancyEventQueue;
-(void)flushVideoRedundancyEventQueue;
-(char)enableRedundancy:(char)arg1 ;
-(void)startVoiceActivityDetection;
-(void)updateActiveVoiceOnly;
-(void)registerForVideoCapture:(int)arg1 ;
-(void)deregisterForVideoCapture;
-(CGSize)getCaptureEncodingSize;
-(void)dispatchedUpdateUplinkMediaStreamsWithTargetBitrate:(unsigned)arg1 ;
-(void)stopVoiceActivityDetection;
-(char)applyCachedMediaStreams:(id)arg1 toMultiwayConfig:(id)arg2 ;
-(char)setupAudioStreamsWithConfigProvider:(id)arg1 ;
-(char)setupAudioStreamWithConfiguration:(id)arg1 ;
-(char)setupAudioStreamWithConfiguration:(id)arg1 idsDestination:(id)arg2 ;
-(char)setupVideoStreamsWithConfigProvider:(id)arg1 ;
-(char)setupVideoStreamWithConfiguration:(id)arg1 ;
-(char)setupVideoStreamWithConfiguration:(id)arg1 idsDestination:(id)arg2 ;
-(id)newMediaNegotiatorAudioConfiguration;
-(id)multiwayAudioStreamNegotiatorConfigForStreamConfig:(id)arg1 ;
-(id)multiwayVideoStreamNegotiatorConfigForStreamConfig:(id)arg1 isSubstream:(char)arg2 ;
-(void)setupOneToOneAudioRedundancyController;
-(void)setupOneToOneVideoRedundancyController;
-(void)setupOneToOneSwitchManager;
-(char)setupOneToOneRedundancyControllers;
-(id)newAudioStreamOneToOneConfiguration;
-(id)newVideoStreamOneToOneConfiguration;
-(char)containsStreamWithSSRC:(unsigned)arg1 ;
-(char)containsStreamWithIDSStreamID:(unsigned short)arg1 ;
-(id)audioRuleCollectionWithAudioStreamConfig:(id)arg1 ;
-(void)addCallInfoBlobToParticipantInfo:(id)arg1 ;
-(void)updateActiveAudioStreams:(id)arg1 allStreamIds:(id)arg2 ;
-(void)processAudioStreamUpdateEvent;
-(void)processAudioRedundancyChangeEvent;
-(void)setupEncodingModeWithVideoStreamConfig:(id)arg1 ;
-(char)checkSubscribedStreamsConsistency:(id)arg1 ;
-(id)checkStreamsForAudioOptIn:(id)arg1 ;
-(char)updateUplinkStreamsForPeerSubscribedStreams:(id)arg1 ;
-(void)applyOneToOneVideoRedundancyPercentage:(unsigned)arg1 ;
-(void)updateActiveAudioStreamWithTargetBitrate:(unsigned)arg1 ;
-(void)updateActiveVideoStreamWithTargetBitrate:(unsigned)arg1 ;
-(void)updateActiveVideoStreamWithTargetBitrateForMultiway:(unsigned)arg1 ;
-(void)updateStreamIDCompoundingWithActiveStreamIds:(id)arg1 streamIds:(id)arg2 block:(/*^block*/id)arg3 ;
-(unsigned)calculateUplinkTotalBitrateForMediaStreams:(id)arg1 ;
-(void)dispatchedUpdateUplinkMediaStreamsWithTargetBitrate:(unsigned)arg1 rateChangeCounter:(unsigned)arg2 ;
-(void)updateVideoOneToOneBitrate;
-(void)processVideoEventQueue;
-(void)updateVideoStreamAndProcessFrame:(id)arg1 sampleBuffer:(opaqueCMSampleBufferRef)arg2 lastSentAudioHostTime:(double)arg3 lastSentAudioSampleTime:(unsigned)arg4 frameTime:(SCD_Struct_VC87)arg5 attribute:(SCD_Struct_Vi134)arg6 ;
-(void)processVideoPriority;
-(void)processEventQueues;
-(void)updateAudioPriorityWithSampleBuffer:(opaqueVCAudioBufferListRef)arg1 ;
-(id)initWithIDSDestination:(id)arg1 negotiationData:(id)arg2 delegate:(id)arg3 processId:(int)arg4 sessionUUID:(id)arg5 ;
-(void)applyVideoEnabledSetting:(char)arg1 ;
-(void)updateVideoPaused:(char)arg1 ;
-(int)currentVideoCaptureFrameRate;
-(id)multiwayVideoStreamConfigs;
-(unsigned)generateSSRC;
-(char)isHighPriorityAudioWithPower:(float)arg1 voiceActive:(char)arg2 ;
-(unsigned)uplinkBitrateCapWifi;
-(unsigned)uplinkBitrateCapCell;
-(char)enableVADFiltering;
-(NSArray *)peerSubscribedStreams;
-(NSSet *)audioPayloadTypes;
-(NSSet *)videoPayloadTypes;
-(char)isRemoteOnPeace;
@end

