/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:12 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/Versions/A/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <AVConference/VCSessionParticipant.h>
#import <libobjc.A.dylib/VCSessionDownlinkBandwidthAllocatorClient.h>

@class NSString, NSArray, NSNumber, VCSessionBandwidthAllocationTable, VCVideoQualityInfo, TimingCollection, VCSessionParticipantMediaStreamInfo;

@interface VCSessionParticipantRemote : VCSessionParticipant <VCSessionDownlinkBandwidthAllocatorClient> {

	NSNumber* _optedInVideoStreamID;
	NSNumber* _previousOptedInVideoStreamID;
	NSNumber* _optedInAudioStreamID;
	unsigned short _activeDownlinkVideoStreamID;
	unsigned short _activeDownlinkAudioStreamID;
	char _remoteVideoEnabled;
	char _remoteVideoPaused;
	char _receivedFirstFrame;
	unsigned char _videoQuality;
	unsigned _visibilityIndex;
	unsigned _prominenceIndex;
	VCSessionBandwidthAllocationTable* _mediaTable;
	VCSessionBandwidthAllocationTable* _repairMediaTable;
	VCVideoQualityInfo* _videoQualityInfo;
	double _lastVideoQualityNotificationUpdate;
	unsigned char _lastVideoPriority;
	char _isProcessingVideoOptIn;
	char _isVideoDegraded;
	char _videoSuspended;
	char _isRedundancyRequested;
	char _isRemoteMediaStalled;
	VCSessionParticipantMediaPriorityInfo _mediaPriorityInfo;
	TimingCollection* _perfTimers;
	char _haveReportedPerfTimers;
	char _didSubmitSymptomReportForExtendedPoorConnection;
	double _lastVideoDegradedTime;
	VCSessionParticipantSourceIO* _sourceIO;
	char _isParticipantVersionPeace;

}

@property (nonatomic,readonly) VCSessionParticipantMediaStreamInfo * audioStreamInfo; 
@property (nonatomic,readonly) VCSessionParticipantMediaStreamInfo * videoStreamInfo; 
@property (nonatomic,retain) NSNumber * optedInAudioStreamID;                                      //@synthesize optedInAudioStreamID=_optedInAudioStreamID - In the implementation block
@property (nonatomic,retain) NSNumber * optedInVideoStreamID;                                      //@synthesize optedInVideoStreamID=_optedInVideoStreamID - In the implementation block
@property (assign,getter=isRemoteVideoEnabled,nonatomic) char remoteVideoEnabled;                  //@synthesize remoteVideoEnabled=_remoteVideoEnabled - In the implementation block
@property (assign,getter=isRemoteVideoPaused,nonatomic) char remoteVideoPaused;                    //@synthesize remoteVideoPaused=_remoteVideoPaused - In the implementation block
@property (nonatomic,readonly) char isVideoExpected; 
@property (assign,nonatomic) unsigned char videoQuality;                                           //@synthesize videoQuality=_videoQuality - In the implementation block
@property (assign,nonatomic) unsigned visibilityIndex;                                             //@synthesize visibilityIndex=_visibilityIndex - In the implementation block
@property (assign,nonatomic) unsigned prominenceIndex;                                             //@synthesize prominenceIndex=_prominenceIndex - In the implementation block
@property (nonatomic,readonly) unsigned lastDisplayedFrameRTPTimestamp; 
@property (nonatomic,readonly) char isParticipantVersionPeace;                                     //@synthesize isParticipantVersionPeace=_isParticipantVersionPeace - In the implementation block
@property (readonly) NSString * uuid; 
@property (readonly) NSArray * mediaEntries; 
@property (readonly) unsigned actualNetworkBitrateVideo; 
@property (readonly) unsigned actualNetworkBitrateAudio; 
@property (readonly) unsigned optedInNetworkBitrateVideo; 
@property (readonly) unsigned optedInNetworkBitrateAudio; 
@property (readonly) unsigned short activeDownlinkVideoStreamID;                                   //@synthesize activeDownlinkVideoStreamID=_activeDownlinkVideoStreamID - In the implementation block
@property (readonly) unsigned short activeDownlinkAudioStreamID;                                   //@synthesize activeDownlinkAudioStreamID=_activeDownlinkAudioStreamID - In the implementation block
@property (readonly) char isVisible; 
@property (assign,getter=isVideoSuspended,nonatomic) char videoSuspended; 
+(char)isDeviceLargeScreen;
+(unsigned)maxAudioNetworkBitrateForLocalInterfaceOnWiFi:(char)arg1 ;
+(unsigned)maxVideoNetworkBitrateForVideoQuality:(unsigned char)arg1 isLocalOnWiFi:(char)arg2 isRedundancyRequested:(char)arg3 ;
-(void)dealloc;
-(char)isVisible;
-(void)setMuted:(char)arg1 ;
-(unsigned char)videoQuality;
-(void)setVideoDegraded:(char)arg1 ;
-(void)setVideoPaused:(char)arg1 ;
-(void)setVideoQuality:(unsigned char)arg1 ;
-(void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned)arg2 ;
-(void)vcMediaStream:(id)arg1 remoteMediaStalled:(char)arg2 ;
-(void)vcMediaStream:(id)arg1 didSwitchToAudioStreamWithID:(unsigned short)arg2 ;
-(void)vcMediaStreamDidRTPTimeOut:(id)arg1 ;
-(void)vcMediaStreamDidRTCPTimeOut:(id)arg1 ;
-(void)vcMediaStreamDidDecryptionTimeOut:(id)arg1 ;
-(void)vcMediaStreamDidDecryptionTimeOutForMKMRecovery:(id)arg1 ;
-(void)vcMediaStream:(id)arg1 priorityDidChange:(unsigned char)arg2 ;
-(void)vcMediaStream:(id)arg1 didReceiveFirstVideoFrameWithTime:(SCD_Struct_VC87)arg2 ;
-(void)vcMediaStream:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3 ;
-(void)setAudioPaused:(char)arg1 ;
-(void)setVisibilityIndex:(unsigned)arg1 ;
-(void)setProminenceIndex:(unsigned)arg1 ;
-(unsigned)visibilityIndex;
-(unsigned)prominenceIndex;
-(id)entryForStreamID:(id)arg1 ;
-(char)processParticipantInfo;
-(char)setupAudioStreamFromMediaBlobWithIDSDestination:(id)arg1 ;
-(char)setupVideoStreamFromMediaBlobWithIDSDestination:(id)arg1 ;
-(void)updateDownlinkBandwithAllocatorClientConfigurations:(id)arg1 ;
-(void)updateAudioSpectrumState;
-(void)updateShouldEnableFaceZoom;
-(char)isParticipantPeace:(id)arg1 ;
-(id)checkSubstreams:(id)arg1 forLowerQualityIndex:(unsigned)arg2 ;
-(id)newAudioStreamConfigurationWithMultiwayAudioNegotiationResult:(id)arg1 maxIDSStreamIDCount:(unsigned)arg2 ;
-(char)setupAudioStreamMultiwayConfigurations:(id)arg1 ;
-(char)setupAudioStreamOneToOneConfigurations:(id)arg1 ;
-(char)setupBandwidthAllocationTableForMediaStreamConfigs:(id)arg1 entryType:(unsigned char)arg2 ;
-(id)setupStreamRTP:(id)arg1 ;
-(VCSessionParticipantMediaStreamInfo *)audioStreamInfo;
-(void)setOptedInAudioStreamID:(NSNumber *)arg1 ;
-(char)isVideoExpected;
-(void)setVideoSuspended:(char)arg1 ;
-(void)setOptedInVideoStreamID:(NSNumber *)arg1 ;
-(char)isAudioActive;
-(char)isVideoActive;
-(unsigned)lastDisplayedFrameRTPTimestamp;
-(VCSessionParticipantMediaStreamInfo *)videoStreamInfo;
-(void)checkForExtendedPoorConnection:(double)arg1 ;
-(id)newVideoStreamConfigurationWithNegotiationVideoResult:(id)arg1 ;
-(char)setupVideoStreamMultiwayConfigurations:(id)arg1 ;
-(char)setupVideoStreamOneToOneConfigurations:(id)arg1 ;
-(void)notifyChangeInActiveMediaBitrate:(char)arg1 ;
-(void)setShouldEnableFaceZoom:(char)arg1 ;
-(void)updateVideoPriority:(unsigned char)arg1 ;
-(void)reportParticipantsPerfTimingsOnce;
-(void)setRemoteVideoEnabled:(char)arg1 ;
-(void)setActualBitrateForOptedInStreamID:(id)arg1 withActiveStreamID:(id)arg2 isVideo:(char)arg3 ;
-(NSArray *)mediaEntries;
-(unsigned)actualNetworkBitrateVideo;
-(unsigned)actualNetworkBitrateAudio;
-(unsigned)optedInNetworkBitrateVideo;
-(unsigned)optedInNetworkBitrateAudio;
-(NSNumber *)optedInVideoStreamID;
-(NSNumber *)optedInAudioStreamID;
-(unsigned short)activeDownlinkVideoStreamID;
-(unsigned short)activeDownlinkAudioStreamID;
-(char)isVideoSuspended;
-(id)initWithIDSDestination:(id)arg1 idsParticipantID:(unsigned long long)arg2 mediaNegotiator:(id)arg3 opaqueData:(id)arg4 delegate:(id)arg5 processId:(int)arg6 transportSessionID:(unsigned)arg7 sessionUUID:(id)arg8 config:(id)arg9 isGKVoiceChat:(char)arg10 ;
-(void)stopAudioIOCompletion;
-(void)onStartAudioIO;
-(void)onDidResumeAudioStream:(id)arg1 ;
-(void)onPauseAudioStreams;
-(void)setRemoteVideoPaused:(char)arg1 ;
-(char)configureAudioIOWithDeviceRole:(int)arg1 ;
-(id)getAudioDumpName;
-(void)setActiveStreamIDs:(id)arg1 ;
-(id)recommendedStreamIDsForSelectedMediaEntries:(id)arg1 forceSeamlessTransition:(char)arg2 ;
-(void)negotiateAudioRules:(id)arg1 ;
-(void)receivedMediaPacketAtTime:(double)arg1 isDecryptable:(char)arg2 ;
-(char)configureWithOneToOneParticipantConfig:(id)arg1 ;
-(void)redundancyController:(id)arg1 redundancyIntervalDidChange:(double)arg2 ;
-(void)collectVideoChannelMetrics:(SCD_Struct_VC82*)arg1 ;
-(void)collectAudioChannelMetrics:(SCD_Struct_VC82*)arg1 ;
-(void)updateVideoQualityNotification;
-(void)updateSourcePlayoutTimestampWithSamples:(opaqueVCAudioBufferListRef)arg1 ;
-(void)debounceAudioPriority:(unsigned char)arg1 ;
-(char)isRemoteVideoEnabled;
-(char)isRemoteVideoPaused;
-(char)isParticipantVersionPeace;
@end

