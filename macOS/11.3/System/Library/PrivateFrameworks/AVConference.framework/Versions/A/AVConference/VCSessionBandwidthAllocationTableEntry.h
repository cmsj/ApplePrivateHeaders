/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:12 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/Versions/A/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol VCSessionDownlinkBandwidthAllocatorClient;
@interface VCSessionBandwidthAllocationTableEntry : NSObject {

	id<VCSessionDownlinkBandwidthAllocatorClient> _client;
	unsigned _maxNetworkBitrate;
	unsigned _maxMediaBitrate;
	unsigned _qualityIndex;
	char _isLowestQualityAudio;
	char _isLowestQualityVideo;
	unsigned char _type;
	unsigned _streamID;
	unsigned _actualNetworkBitrate;
	char _hasRepairStreamID;
	unsigned _repairStreamID;
	unsigned _repairMaxNetworkBitrate;
	char _onDemand;
	char _subscribedTo;
	char _startOnDemand;

}

@property (readonly) id<VCSessionDownlinkBandwidthAllocatorClient> client;              //@synthesize client=_client - In the implementation block
@property (readonly) unsigned maxNetworkBitrate;                                        //@synthesize maxNetworkBitrate=_maxNetworkBitrate - In the implementation block
@property (readonly) unsigned maxMediaBitrate;                                          //@synthesize maxMediaBitrate=_maxMediaBitrate - In the implementation block
@property (readonly) unsigned qualityIndex;                                             //@synthesize qualityIndex=_qualityIndex - In the implementation block
@property (assign) char isLowestQualityAudio;                                           //@synthesize isLowestQualityAudio=_isLowestQualityAudio - In the implementation block
@property (assign) char isLowestQualityVideo;                                           //@synthesize isLowestQualityVideo=_isLowestQualityVideo - In the implementation block
@property (readonly) unsigned char type;                                                //@synthesize type=_type - In the implementation block
@property (readonly) unsigned streamID;                                                 //@synthesize streamID=_streamID - In the implementation block
@property (assign) unsigned actualNetworkBitrate;                                       //@synthesize actualNetworkBitrate=_actualNetworkBitrate - In the implementation block
@property (readonly) unsigned repairStreamID;                                           //@synthesize repairStreamID=_repairStreamID - In the implementation block
@property (readonly) unsigned repairMaxNetworkBitrate;                                  //@synthesize repairMaxNetworkBitrate=_repairMaxNetworkBitrate - In the implementation block
@property (readonly) char hasRepairStreamID;                                            //@synthesize hasRepairStreamID=_hasRepairStreamID - In the implementation block
@property (getter=isSubscribedTo) char subscribedTo;                                    //@synthesize subscribedTo=_subscribedTo - In the implementation block
@property (getter=isStartOnDemand,readonly) char startOnDemand;                         //@synthesize startOnDemand=_startOnDemand - In the implementation block
+(long long)compareAudioEntry:(id)arg1 audioEntry:(id)arg2 ;
+(long long)compareAudioEntry:(id)arg1 videoEntry:(id)arg2 ;
+(long long)compareVideoEntry:(id)arg1 videoEntry:(id)arg2 ;
-(void)dealloc;
-(id)description;
-(long long)compare:(id)arg1 ;
-(unsigned char)type;
-(id<VCSessionDownlinkBandwidthAllocatorClient>)client;
-(unsigned)streamID;
-(unsigned)maxNetworkBitrate;
-(unsigned)qualityIndex;
-(unsigned)maxMediaBitrate;
-(char)isSubscribedTo;
-(void)setSubscribedTo:(char)arg1 ;
-(char)hasRepairStreamID;
-(unsigned)repairStreamID;
-(unsigned)repairMaxNetworkBitrate;
-(id)initWithClient:(id)arg1 type:(unsigned char)arg2 networkBitrate:(unsigned)arg3 mediaBitrate:(unsigned)arg4 qualityIndex:(unsigned)arg5 streamID:(unsigned)arg6 ;
-(void)setIsLowestQualityAudio:(char)arg1 ;
-(void)setIsLowestQualityVideo:(char)arg1 ;
-(char)isLowestQualityAudio;
-(char)isLowestQualityVideo;
-(unsigned)actualNetworkBitrate;
-(void)setActualNetworkBitrate:(unsigned)arg1 ;
-(id)initWithClient:(id)arg1 type:(unsigned char)arg2 networkBitrate:(unsigned)arg3 mediaBitrate:(unsigned)arg4 qualityIndex:(unsigned)arg5 streamID:(unsigned)arg6 hasRepairStreamID:(char)arg7 repairStreamID:(unsigned)arg8 repairMaxNetworkBitrate:(unsigned)arg9 subscribedTo:(char)arg10 startOnDemand:(char)arg11 ;
-(char)isStartOnDemand;
@end

