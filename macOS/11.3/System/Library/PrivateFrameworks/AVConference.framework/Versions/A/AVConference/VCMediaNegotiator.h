/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:12 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVConference.framework/Versions/A/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class VCMediaNegotiatorLocalConfiguration, VCMediaNegotiatorResults, VCMediaNegotiatorAudioResults, VCMediaNegotiatorVideoResults, VCMediaNegotiatorCaptionsResults, VCMediaNegotiatorMomentsResults, VCMediaNegotiatorFaceTimeSettingsResults, NSMutableArray, NSArray;

@interface VCMediaNegotiator : NSObject {

	char _usePreNegotiation;
	char _negotiationDone;
	char _isCellular16x9Capable;
	VCMediaNegotiatorLocalConfiguration* _localSettings;
	VCMediaNegotiatorResults* _negotiatedSettings;
	VCMediaNegotiatorAudioResults* _negotiatedAudioSettings;
	VCMediaNegotiatorVideoResults* _negotiatedVideoSettings;
	VCMediaNegotiatorVideoResults* _negotiatedScreenSettings;
	VCMediaNegotiatorCaptionsResults* _negotiatedCaptionsSettings;
	VCMediaNegotiatorMomentsResults* _negotiatedMomentsSettings;
	VCMediaNegotiatorFaceTimeSettingsResults* _negotiatedFaceTimeSettings;
	NSMutableArray* _negotiatedMultiwayAudioStreams;
	NSMutableArray* _negotiatedMultiwayVideoStreams;
	long long _negotiationMode;

}

@property (nonatomic,readonly) long long negotiationMode;                                                          //@synthesize negotiationMode=_negotiationMode - In the implementation block
@property (nonatomic,readonly) char isCaller; 
@property (nonatomic,readonly) char usePreNegotiation;                                                             //@synthesize usePreNegotiation=_usePreNegotiation - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorLocalConfiguration * localSettings;                                //@synthesize localSettings=_localSettings - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorResults * negotiatedSettings;                                      //@synthesize negotiatedSettings=_negotiatedSettings - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorAudioResults * negotiatedAudioSettings;                            //@synthesize negotiatedAudioSettings=_negotiatedAudioSettings - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorVideoResults * negotiatedVideoSettings;                            //@synthesize negotiatedVideoSettings=_negotiatedVideoSettings - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorVideoResults * negotiatedScreenSettings;                           //@synthesize negotiatedScreenSettings=_negotiatedScreenSettings - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorCaptionsResults * negotiatedCaptionsSettings;                      //@synthesize negotiatedCaptionsSettings=_negotiatedCaptionsSettings - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorMomentsResults * negotiatedMomentsSettings;                        //@synthesize negotiatedMomentsSettings=_negotiatedMomentsSettings - In the implementation block
@property (nonatomic,readonly) VCMediaNegotiatorFaceTimeSettingsResults * negotiatedFaceTimeSettings;              //@synthesize negotiatedFaceTimeSettings=_negotiatedFaceTimeSettings - In the implementation block
@property (nonatomic,readonly) NSArray * negotiatedMultiwayAudioStreams;                                           //@synthesize negotiatedMultiwayAudioStreams=_negotiatedMultiwayAudioStreams - In the implementation block
@property (nonatomic,readonly) NSArray * negotiatedMultiwayVideoStreams;                                           //@synthesize negotiatedMultiwayVideoStreams=_negotiatedMultiwayVideoStreams - In the implementation block
+(id)localConfigurationWithData:(id)arg1 deviceRole:(int)arg2 preferredAudioPayload:(int)arg3 ;
+(char)validateLocalConfiguration:(id)arg1 ;
+(id)newCompressedBlob:(id)arg1 ;
+(void)dumpBlob:(id)arg1 prefix:(id)arg2 force:(char)arg3 ;
+(id)newDecompressedBlob:(id)arg1 ;
+(id)negotiationBlobFromData:(id)arg1 ;
+(char)validateMultiwayVideoStreamConfigurations:(id)arg1 ;
+(char)validateMultiwayAudioStreamConfigurations:(id)arg1 ;
+(int)imageTypeBlobSettingsFromSet:(id)arg1 ;
+(int)videoCodecBlobSettingsFromSet:(id)arg1 ;
-(void)dealloc;
-(char)supportsHEIFEncoding;
-(VCMediaNegotiatorLocalConfiguration *)localSettings;
-(char)supportsHEVCEncoding;
-(char)isCaller;
-(id)initWithLocalSettings:(id)arg1 ;
-(char)processInviteBlob:(id)arg1 ;
-(NSArray *)negotiatedMultiwayAudioStreams;
-(VCMediaNegotiatorFaceTimeSettingsResults *)negotiatedFaceTimeSettings;
-(VCMediaNegotiatorAudioResults *)negotiatedAudioSettings;
-(NSArray *)negotiatedMultiwayVideoStreams;
-(VCMediaNegotiatorVideoResults *)negotiatedVideoSettings;
-(char)usePreNegotiation;
-(VCMediaNegotiatorVideoResults *)negotiatedScreenSettings;
-(char)processResponseBlob:(id)arg1 ;
-(id)newInviteBlob;
-(id)newResponseBlob;
-(VCMediaNegotiatorResults *)negotiatedSettings;
-(id)negotiatedFeaturesStringWithLocalFeaturesString:(id)arg1 remoteFeaturesString:(id)arg2 ;
-(VCMediaNegotiatorMomentsResults *)negotiatedMomentsSettings;
-(unsigned)remoteMaxBandwidthForOperatingMode:(int)arg1 connectionType:(int)arg2 ;
-(char)isCellular16x9EncodeCapable;
-(char)setupBandwidthSettingsForMediaBlob:(id)arg1 ;
-(void)setupCaptionsForMediaBlob:(id)arg1 ;
-(void)setupMomentsForMediaBlob:(id)arg1 ;
-(void)setupFaceTimeSettingsForMediaBlob:(id)arg1 isResponse:(char)arg2 ;
-(void)setupMultiwayAudioStreamsForMediaBlob:(id)arg1 ;
-(void)setupMultiwayVideoStreamsForMediaBlob:(id)arg1 ;
-(void)saveRemoteBandwidthSettingsWithMediaBlob:(id)arg1 ;
-(char)negotiateFaceTimeSettings:(id)arg1 ;
-(char)negotiateAudioSettings:(id)arg1 ;
-(char)negotiateVideoSettings:(id)arg1 ;
-(char)negotiateScreenSettings:(id)arg1 ;
-(char)negotiateCaptionsWithCaptionsSettings:(id)arg1 ;
-(char)negotiateMomentsWithMomentsSettings:(id)arg1 ;
-(char)negotiateMultiwayAudioStreams:(id)arg1 ;
-(char)negotiateMultiwayVideoStreams:(id)arg1 ;
-(char)setupAudioWithNegotiatedSettings:(id)arg1 ;
-(char)setupVideoWithNegotiatedSettings:(id)arg1 ;
-(char)setupScreenWithNegotiatedSettings:(id)arg1 ;
-(char)addBandwidthSettingsForMediaBlob:(id)arg1 operatingMode:(int)arg2 connectionType:(int)arg3 maxBitrate:(unsigned)arg4 ;
-(void)negotiateAudioUseSBR:(id)arg1 ;
-(void)negotiateAudioAllowRecording:(id)arg1 ;
-(char)negotiateAudioPrimaryPayload:(id)arg1 ;
-(char)negotiateAudioDTXPayload:(id)arg1 ;
-(char)negotiateAudioREDPayload:(id)arg1 ;
-(void)negotiateAudioSecondaryPayloads:(id)arg1 ;
-(id)negotiateVideoMaxResolutionWithEncodeRules:(id)arg1 decodeRules:(id)arg2 isEncoder:(char)arg3 ;
-(id)selectVideoFeatureString:(id)arg1 selectedPayload:(int)arg2 ;
-(char)processParameterSets:(id)arg1 videoResults:(id)arg2 ;
-(void)negotiateRTCPFB:(id)arg1 ;
-(id)getPreferredVideoPayloadList:(id)arg1 ;
-(char)canEncodeVideo:(id)arg1 ;
-(char)canDecodeVideo:(id)arg1 ;
-(char)selectBestVideoRuleForTransport:(unsigned char)arg1 payload:(int)arg2 encodingType:(unsigned char)arg3 localVideoRuleCollection:(id)arg4 remoteVideoSettings:(id)arg5 negotiatedVideoSettings:(id)arg6 isScreen:(char)arg7 ;
-(void)negotiateTilesPerFrame:(id)arg1 ;
-(id)getPreferredScreenPayloadList;
-(char)processPixelFormats:(id)arg1 videoResults:(id)arg2 ;
-(char)selectBestScreenRule:(id)arg1 preferredPayloadOrder:(id)arg2 ;
-(char)isVideoStreamSupported:(int)arg1 ;
-(id)localeWithMediaBlobLanguage:(int)arg1 ;
-(id)initWithMode:(long long)arg1 localSettings:(id)arg2 ;
-(int)mediaBlobLanguageWithLocale:(id)arg1 ;
-(VCMediaNegotiatorCaptionsResults *)negotiatedCaptionsSettings;
-(long long)negotiationMode;
@end

