/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ScreenTimeCore.framework/Versions/A/ScreenTimeCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ScreenTimeCore/STUniquedManagedObject.h>
#import <libobjc.A.dylib/STSerializableMappedObject.h>
#import <libobjc.A.dylib/STUniquelySerializableManagedObject.h>
#import <libobjc.A.dylib/STVersionVectorable.h>

@class NSData, NSString, NSDate, NSSet, STBlueprintSchedule, STBlueprintUsageLimit, STCoreOrganization;

@interface STBlueprint : STUniquedManagedObject <STSerializableMappedObject, STUniquelySerializableManagedObject, STVersionVectorable>

@property (getter=isDowntimeEnabled) char downtimeEnabled; 
@property (copy,readonly) NSString * downtimeScheduleText; 
@property (getter=isUsageLimitEnabled) char usageLimitEnabled; 
@property (copy,readonly) NSString * limitDisplayName; 
@property (copy,readonly) NSString * limitScheduleText; 
@property (assign,nonatomic) char isTombstoned; 
@property (assign,nonatomic) char invertUsageLimit; 
@property (nonatomic,copy) NSString * identifier; 
@property (nonatomic,copy) NSDate * creationDate; 
@property (nonatomic,copy) NSString * type; 
@property (assign,nonatomic) char enabled; 
@property (assign,nonatomic) char limitEnabled; 
@property (nonatomic,copy) NSDate * expiration; 
@property (nonatomic,copy) NSDate * minimumInstallationDate; 
@property (nonatomic,retain) NSSet * users; 
@property (nonatomic,retain) STBlueprintSchedule * schedule; 
@property (nonatomic,retain) STBlueprintUsageLimit * usageLimit; 
@property (nonatomic,retain) NSSet * configurations; 
@property (nonatomic,retain) STCoreOrganization * organization; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSData * versionVector; 
@property (assign,nonatomic) char isDirty; 
+(id)_fetchRequestMatchingBlueprintsForUserWithDSID:(id)arg1 ;
+(id)blueprintIdentifierForUser:(id)arg1 ;
+(id)serializableClassName;
+(id)fetchOrCreateWithDictionaryRepresentation:(id)arg1 inContext:(id)arg2 error:(id*)arg3 ;
+(id)fetchRequestMatchingExpiredBlueprints;
+(id)fetchRequestMatchingOrphanedBlueprints;
+(id)fetchRequestMatchingUnexpiredOneMoreMinuteBlueprints;
+(id)fetchRequestMatchingBlueprintsForUserWithDSID:(id)arg1 ofType:(id)arg2 ;
+(id)fetchRequestMatchingBlueprintsForUserWithDSID:(id)arg1 fromOrganization:(id)arg2 ;
+(id)fetchRequestMatchingBlueprintsForUserWithDSID:(id)arg1 ofType:(id)arg2 fromOrganization:(id)arg3 ;
+(id)fetchRequestMatchingBlueprintsForUserWithDSID:(id)arg1 ofType:(id)arg2 withIdentifier:(id)arg3 fromOrganization:(id)arg4 ;
+(id)fetchResultsRequestsForChangesToBlueprints;
+(id)fetchResultsRequestsForChangesToBlueprintsForUserWithDSID:(id)arg1 ;
+(id)createBlueprintWithType:(id)arg1 user:(id)arg2 ;
+(id)scheduleTextWithLocale:(id)arg1 weekdayScheduleComparator:(/*^block*/id)arg2 scheduleTimeGetter:(/*^block*/id)arg3 ;
+(char)saveAlwaysAllowListForUser:(id)arg1 withBundleIDs:(id)arg2 error:(id*)arg3 ;
+(id)defaultAlwaysAllowBundleIDs;
+(id)simpleScheduleTimeRangeWithStartTimeComponents:(id)arg1 endTimeComponents:(id)arg2 ;
+(id)customScheduleTimeRangeWithLocale:(id)arg1 startTimeComponents:(id)arg2 endTimeComponents:(id)arg3 ;
+(char)saveDowntimeForUser:(id)arg1 startTime:(id)arg2 endTime:(id)arg3 scheduleByWeekdayIndex:(id)arg4 enabled:(char)arg5 behaviorType:(unsigned long long)arg6 error:(id*)arg7 ;
+(id)defaultStartTime;
+(id)defaultEndTime;
+(id)keyPathsForValuesAffectingDowntimeScheduleText;
+(char)saveManagedUserBlueprintForUser:(id)arg1 error:(id*)arg2 ;
+(char)deleteManagedUserBlueprintForUser:(id)arg1 error:(id*)arg2 ;
+(id)displayNameForUsageLimitWithCategoryIdentifiers:(id)arg1 bundleIdentifiers:(id)arg2 webDomains:(id)arg3 ;
+(id)_getDisplayNameAndAddCategories:(id)arg1 toItemNames:(id)arg2 remainingItems:(unsigned long long*)arg3 ;
+(void)_createDisplayNameWithItemNames:(id)arg1 itemCount:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
+(void)_addWebDomains:(id)arg1 toItemNames:(id)arg2 remainingItems:(unsigned long long)arg3 totalCount:(unsigned long long)arg4 completionHandler:(/*^block*/id)arg5 ;
+(char)saveUsageLimitWithIdentifier:(id)arg1 user:(id)arg2 bundleIdentifiers:(id)arg3 webDomains:(id)arg4 categoryIdentifiers:(id)arg5 dailyBudgetLimit:(double)arg6 budgetLimitByWeekday:(id)arg7 enabled:(char)arg8 behaviorType:(unsigned long long)arg9 error:(id*)arg10 ;
+(char)deleteUsageLimitWithIdentifier:(id)arg1 user:(id)arg2 managedObjectContext:(id)arg3 error:(id*)arg4 ;
+(id)keyPathsForValuesAffectingLimitDisplayName;
+(void)fetchDisplayNameForUsageLimitWithCategoryIdentifiers:(id)arg1 bundleIdentifiers:(id)arg2 webDomains:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
+(id)keyPathsForValuesAffectingLimitScheduleText;
-(void)didChangeValueForKey:(id)arg1 ;
-(id)dictionaryRepresentation;
-(id)initWithEntity:(id)arg1 insertIntoManagedObjectContext:(id)arg2 ;
-(void)tombstone;
-(void)setDowntimeEnabled:(char)arg1 ;
-(void)_limitedApplicationsDidChange:(id)arg1 ;
-(void)_didFetchAppInfo:(id)arg1 ;
-(char)updateWithDictionaryRepresentation:(id)arg1 ;
-(id)declarationsWithError:(id*)arg1 ;
-(void)migrateToVersion2CategoriesIfNeeded;
-(id)computeUniqueIdentifier;
-(void)setStartTime:(id)arg1 endTime:(id)arg2 ;
-(void)setStartTime:(id)arg1 endTime:(id)arg2 forDay:(unsigned long long)arg3 ;
-(char)isDowntimeEnabled;
-(void)disableDowntimeForDay:(unsigned long long)arg1 ;
-(NSString *)downtimeScheduleText;
-(id)_webFilterBlacklistStringsForURL:(id)arg1 ;
-(char)permitWebFilterURL:(id)arg1 pageTitle:(id)arg2 error:(id*)arg3 ;
-(char)isUsageLimitEnabled;
-(void)setUsageLimitEnabled:(char)arg1 ;
-(NSString *)limitDisplayName;
-(NSString *)limitScheduleText;
@end

