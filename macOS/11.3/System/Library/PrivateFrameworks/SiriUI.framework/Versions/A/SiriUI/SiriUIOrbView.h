/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:32 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SiriUI.framework/Versions/A/SiriUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SiriUI/SiriUI-Structs.h>
#import <MetalKit/MTKView.h>

@protocol MTLCommandQueue, MTLBuffer, MTLRenderPipelineState, MTLTexture;
@class MTLRenderPassDescriptor, MPSImageGaussianBlur;

@interface SiriUIOrbView : MTKView {

	CGSize _setupRasterSize;
	/*^block*/id _offCompletion;
	id<MTLCommandQueue> _commandQueue;
	id<MTLBuffer> _dynamicUniformBuffer;
	id<MTLRenderPipelineState> _siriChipBackfacePipeline;
	id<MTLRenderPipelineState> _siriChipFrontfacePipeline;
	id<MTLRenderPipelineState> _siriShadowPipeline;
	id<MTLRenderPipelineState> _siriCompositePipeline;
	id<MTLRenderPipelineState> _sphereMaskPipeline;
	id<MTLRenderPipelineState> _siriAddBlitPipeline;
	id<MTLRenderPipelineState> _siriBlitPipeline;
	id<MTLTexture> _siriChipsTexture;
	id<MTLTexture> _sphereMaskTexture;
	id<MTLTexture> _siriChipsTextureMSAA;
	id<MTLTexture> _sphereMaskTextureMSAA;
	id<MTLTexture> _compositeTextureMSAA;
	id<MTLTexture> _blurChipsTexture;
	id<MTLTexture> _blurMaskTexture;
	id<MTLTexture> _smoothStepTexture;
	id<MTLTexture> _noiseTexture;
	MTLRenderPassDescriptor* _siriChipRenderPassDesc;
	MTLRenderPassDescriptor* _sphereMaskRenderPassDesc;
	MTLRenderPassDescriptor* _finalRenderPassDesc;
	MPSImageGaussianBlur* _mpsBlur;
	SCD_Struct_Si13 _mpsChipBlurOffset;
	id<MTLBuffer> _siriChipGeom;
	int _chipNumIndexes;
	int _chipIndexBufferOffset;
	id<MTLBuffer> _sphereGeom;
	int _sphereNumIndexes;
	int _sphereIndexBufferOffet;
	void* _uniformBufferAddress;
	SCD_Struct_Si14 _projectionMatrix;
	SCD_Struct_Si15 _sphereUniforms;
	SCD_Struct_Si16 _bubbleSpring;
	SCD_Struct_Si16 _energySpring;
	SCD_Struct_Si16 _volumeSpring;
	SCD_Struct_Si16 _chipsSpring;
	SCD_Struct_Si16 _specularSpring;
	SCD_Struct_Si16 _thinkingSpring;
	SCD_Struct_Si16 _speakingSpring;
	SCD_Struct_Si16 _onSpring;
	SCD_Struct_Si16 _chipSpring[6];
	float _bubbleDrawnSize;
	float _averageChipSize;
	float _maxChipSize;
	float _chipRotation;
	float _chipRandomOffset[18];
	float _time;
	float _thinkRotation;
	float _sigma;
	float _frameEnergy;
	float _framerateEnergyModifier;
	float _thinkingTimeStart;
	char _startingThinkingModeNow;
	char _drawingVeryLastFrame;
	float _powerLevel;
	float _inputPowerLevelExpectedLinearMaximum;
	float _outputPowerLevelExpectedLinearMaximum;
	unsigned long long _framerateType;
	int _framesPerSecond;
	char _reduceMotionEnabled;
	int _currentlyShownChannel;
	int _numberOfChips;
	float _bias;
	float _scale;
	float _power;
	long long _mode;

}

@property (assign) char reduceMotionEnabled;                         //@synthesize reduceMotionEnabled=_reduceMotionEnabled - In the implementation block
@property (assign,nonatomic) int currentlyShownChannel;              //@synthesize currentlyShownChannel=_currentlyShownChannel - In the implementation block
@property (assign,nonatomic) int numberOfChips;                      //@synthesize numberOfChips=_numberOfChips - In the implementation block
@property (assign,nonatomic) float bias;                             //@synthesize bias=_bias - In the implementation block
@property (assign,nonatomic) float scale;                            //@synthesize scale=_scale - In the implementation block
@property (assign,nonatomic) float power;                            //@synthesize power=_power - In the implementation block
@property (assign,nonatomic) long long mode;                         //@synthesize mode=_mode - In the implementation block
-(void)dealloc;
-(void)invalidate;
-(id)initWithCoder:(id)arg1 ;
-(void)setMode:(long long)arg1 ;
-(float)scale;
-(long long)mode;
-(void)setFrame:(CGRect)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)drawRect:(CGRect)arg1 ;
-(void)setScale:(float)arg1 ;
-(float)bias;
-(void)setBias:(float)arg1 ;
-(void)setPower:(float)arg1 ;
-(float)power;
-(char)reduceMotionEnabled;
-(char)_initCommon;
-(void)_setMode:(long long)arg1 ;
-(void)setPowerLevel:(float)arg1 ;
-(void)setReduceMotionEnabled:(char)arg1 ;
-(void)animateToOffWithCompletion:(/*^block*/id)arg1 ;
-(void)_setupSpring:(SCD_Struct_Si16*)arg1 withType:(unsigned long long)arg2 initialValue:(float)arg3 ;
-(void)_readReduceMotionEnabled;
-(void)_initCommandQueue;
-(void)_loadMetalPipelines;
-(void)_loadAssets;
-(void)_updateMetalTextureRasterSize:(CGSize)arg1 ;
-(void)_initSprings;
-(void)_initNoiseOffsets;
-(void)setInputPowerLevelExpectedMaximum:(float)arg1 ;
-(void)setOutputPowerLevelExpectedMaximum:(float)arg1 ;
-(void)_didSetModeFrom:(long long)arg1 to:(long long)arg2 ;
-(void)_createSphereBuffer;
-(void)_createSiriChipBuffer;
-(void)_createSmoothStepTexture;
-(void)_createNoiseTexture;
-(void)_updateChipsSizesForOnOff;
-(void)_updateDynamicBufferState;
-(void)_updateSiriGraphicsState;
-(void)setNumberOfChips:(int)arg1 ;
-(void)setCurrentlyShownChannel:(int)arg1 ;
-(float)linearPowerLevel;
-(int)currentlyShownChannel;
-(int)numberOfChips;
@end

