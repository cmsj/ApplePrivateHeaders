/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:32 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SiriUI.framework/Versions/A/SiriUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SiriUIAutoDismissalControllerDelegate;
#import <SiriUI/SiriUI-Structs.h>
@class NSTimer, NSTrackingArea, NSViewController;

@interface SiriUIAutoDismissalController : NSObject {

	NSTimer* _timer;
	NSTrackingArea* _trackingArea;
	CFMachPortRef _tap;
	CFRunLoopSourceRef _tapSource;
	char _enabled;
	char _isHovering;
	char _isKeyWindow;
	NSViewController* _viewController;
	id<SiriUIAutoDismissalControllerDelegate> _delegate;

}

@property (assign,getter=isHovering,nonatomic) char hovering;                                        //@synthesize isHovering=_isHovering - In the implementation block
@property (assign,getter=isKeyWindow,nonatomic) char isKeyWindow;                                    //@synthesize isKeyWindow=_isKeyWindow - In the implementation block
@property (__weak,readonly) NSViewController * viewController;                                       //@synthesize viewController=_viewController - In the implementation block
@property (assign,nonatomic) char enabled;                                                           //@synthesize enabled=_enabled - In the implementation block
@property (assign,nonatomic,__weak) id<SiriUIAutoDismissalControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(void)dealloc;
-(id<SiriUIAutoDismissalControllerDelegate>)delegate;
-(void)setDelegate:(id<SiriUIAutoDismissalControllerDelegate>)arg1 ;
-(void)resume;
-(char)enabled;
-(void)setEnabled:(char)arg1 ;
-(void)pause;
-(char)isKeyWindow;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(NSViewController *)viewController;
-(void)cancelTimer;
-(void)startTimer;
-(void)setHovering:(char)arg1 ;
-(id)initWithViewController:(id)arg1 ;
-(void)setKeyWindow:(char)arg1 ;
-(void)watchHovering:(char)arg1 ;
-(void)watchKeyWindow:(char)arg1 ;
-(void)pauseOrResume:(char)arg1 ;
-(void)keyWindowChanged:(id)arg1 ;
-(char)isHovering;
-(void)setIsKeyWindow:(char)arg1 ;
@end

