/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:03 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AOSKit.framework/Versions/A/AOSKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AOSKit/AOSKit-Structs.h>
@class NSData, NSString, NSURL, NSMutableDictionary, NSHTTPURLResponse, NSDictionary, NSMutableData, NSURLCredential, NSError, NSURLConnection;

@interface AOSRequest : NSObject {

	NSData* _messageBody;
	NSString* _method;
	NSURL* _url;
	NSURL* _originalUrl;
	NSMutableDictionary* _requestHeaders;
	NSHTTPURLResponse* _response;
	NSDictionary* _responseHeaders;
	NSMutableData* _responseData;
	NSURLCredential* _credentials;
	NSError* _error;
	NSURLConnection* _connection;
	char _requestStarted;
	char _requestCompleted;
	CFURLConnectionRef _cfConnection;
	CFURLResponseRef _cfResponse;
	CFHTTPMessageRef _responseMsg;
	NSMutableDictionary* _requestInfo;
	NSString* _clientID;
	int _akRetryCount;

}
+(id)_osInfo;
+(id)clientInfoWithID:(id)arg1 ;
+(id)acceptLanguageString;
+(id)timezoneString;
+(char)_didLoadAuthKit;
+(id)authKitHeadersForURLRequest:(id)arg1 ;
+(id)_softwareInfo;
+(id)defaultHeadersWithClientID:(id)arg1 ;
+(void)initialize;
+(id)countryCode;
+(id)_hardwareInfo;
+(id)_createAuthKitSession;
+(id)defaultHeaders;
+(id)authStringForAccount:(AOSAccountRef)arg1 ;
+(id)defaultHeadersWithClientID:(id)arg1 includingAnisette:(char)arg2 ;
-(void)addBasicAuth;
-(void)removeHeader:(id)arg1 ;
-(void)addTokenAuth;
-(void)applyAuthKitHeaders;
-(void)_runRequestThread;
-(void)processAuthKitResponse;
-(CFURLRequestRef)_cfURLRequest;
-(void)_appendToResponseData:(id)arg1 ;
-(void)_setRequestCompleted:(char)arg1 ;
-(CFURLResponseRef)_cfURLResponse;
-(void)_setResponseMessage:(CFHTTPMessageRef)arg1 ;
-(void)_setCFURLResponse:(CFURLResponseRef)arg1 ;
-(CFURLConnectionRef)cfConnection;
-(void)_setRequestStarted:(char)arg1 ;
-(id)requestInfoForKey:(id)arg1 ;
-(void)setRequestInfo:(id)arg1 forKey:(id)arg2 ;
-(void)finalize;
-(void)dealloc;
-(id)connection;
-(id)error;
-(id)result;
-(id)url;
-(void)reset;
-(void)_setError:(id)arg1 ;
-(id)method;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(id)response;
-(id)messageBody;
-(void)setClientID:(id)arg1 ;
-(id)_urlRequest;
-(char)requestCompleted;
-(void)sendSynchronously;
-(id)responseData;
-(id)responseHeaders;
-(void)_cleanUpConnection;
-(void)setMessageBody:(id)arg1 ;
-(id)credentials;
-(char)requestStarted;
-(id)requestHeaders;
-(int)httpStatusCode;
-(CFHTTPMessageRef)responseMessage;
-(void)setUsername:(id)arg1 andPassword:(id)arg2 ;
-(id)initWithMessage:(id)arg1 usingMethod:(id)arg2 headers:(id)arg3 url:(id)arg4 ;
-(void)setValue:(id)arg1 forHeader:(id)arg2 ;
-(char)applyOTPHeadersForDSID:(id)arg1 ;
-(void)addHeaders:(id)arg1 ;
@end

