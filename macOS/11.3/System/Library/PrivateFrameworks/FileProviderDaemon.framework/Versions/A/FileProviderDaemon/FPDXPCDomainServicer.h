/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:15 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/FileProviderDaemon.framework/Versions/A/FileProviderDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FPDDomainServicing.h>
#import <libobjc.A.dylib/FPDLifetimeServicing.h>

@protocol OS_dispatch_queue, OS_os_transaction, OS_os_log, FPProgressProtocol;
@class FPDServer, FPDProvider, FPDDomain, NSXPCConnection, NSObject, FPDXPCDomainServicerLifetimeExtender, NSString, FPDExtensionSession;

@interface FPDXPCDomainServicer : NSObject <FPDDomainServicing, FPDLifetimeServicing> {

	FPDServer* _server;
	FPDProvider* __provider;
	FPDDomain* _domain;
	NSXPCConnection* _connection;
	NSObject*<OS_dispatch_queue> _requestQueue;
	id _activePresenterObservation;
	FPDXPCDomainServicerLifetimeExtender* _lifetimeExtender;
	char _isALifetimerExtender;
	NSObject*<OS_os_transaction> _serviceTransaction;
	NSObject*<OS_os_log> _log;
	NSString* _providerDomainID;
	id<FPProgressProtocol> _uploadProxy;
	id<FPProgressProtocol> _downloadProxy;

}

@property (nonatomic,readonly) NSString * providerDomainID;                     //@synthesize providerDomainID=_providerDomainID - In the implementation block
@property (nonatomic,readonly) FPDExtensionSession * sessionOrNil; 
@property (nonatomic,readonly) FPDDomain * domainOrNil; 
@property (nonatomic,retain) id<FPProgressProtocol> uploadProxy;                //@synthesize uploadProxy=_uploadProxy - In the implementation block
@property (nonatomic,retain) id<FPProgressProtocol> downloadProxy;              //@synthesize downloadProxy=_downloadProxy - In the implementation block
-(void)dealloc;
-(id)description;
-(void)invalidate;
-(int)pid;
-(NSString *)providerDomainID;
-(void)didChangeItemID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)resolveItemID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)deleteSearchableItemsWithSpotlightDomainIdentifiers:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setDomainEjectable:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchAndStartEnumeratingWithSettings:(id)arg1 observer:(id)arg2 request:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)ingestFromCacheItemWithIdentifier:(id)arg1 requestedFields:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)waitForChangesOnItemsBelowItemWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)waitForStabilizationWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)reimportItemsBelowItemWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setDownloadPolicy:(unsigned long long)arg1 forItemWithIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)evictItemWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)enumerateMaterializedSetFromSyncAnchor:(id)arg1 suggestedBatchSize:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)currentMaterializedSetSyncAnchorWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)enumeratePendingSetFromSyncAnchor:(id)arg1 suggestedBatchSize:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)currentPendingSetSyncAnchorWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)signalErrorResolved:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)temporaryDirectoryWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)listAvailableTestingOperationsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)runTestingOperations:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)subscribeToUploadProgressUpdates:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)subscribeToDownloadProgressUpdates:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_t_setFilePresenterObserver:(id)arg1 ;
-(void)stopExtendingLifetime;
-(void)_unregisterLifetimeExtension;
-(id)__providerIfExists;
-(void)_registerLifetimeExtension;
-(id)providerOrNil;
-(FPDDomain *)domainOrNil;
-(FPDExtensionSession *)sessionOrNil;
-(id)newFileProviderProxy;
-(id)initWithServer:(id)arg1 providerDomainID:(id)arg2 domain:(id)arg3 connection:(id)arg4 ;
-(char)clientCanAccessService:(id)arg1 forConnection:(id)arg2 ;
-(void)startExtendingLifetime;
-(id<FPProgressProtocol>)uploadProxy;
-(void)setUploadProxy:(id<FPProgressProtocol>)arg1 ;
-(id<FPProgressProtocol>)downloadProxy;
-(void)setDownloadProxy:(id<FPProgressProtocol>)arg1 ;
@end

