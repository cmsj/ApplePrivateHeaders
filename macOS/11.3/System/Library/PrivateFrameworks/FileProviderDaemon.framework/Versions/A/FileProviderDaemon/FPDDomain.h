/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:15 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/FileProviderDaemon.framework/Versions/A/FileProviderDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FPDFileCoordinationProviderDelegate.h>
#import <libobjc.A.dylib/FPDDomainIndexerDelegate.h>

@protocol FPDExtensionSessionProtocol, OS_dispatch_source, OS_dispatch_queue, OS_os_log, FPDDomainBackend;
@class NSMutableDictionary, NSOperationQueue, NSObject, NSURL, FPPacer, NSString, NSFileProviderDomain, NSArray, FPDProvider, FPDDomainIndexer, NSData, FPProviderDomain;

@interface FPDDomain : NSObject <FPDFileCoordinationProviderDelegate, FPDDomainIndexerDelegate> {

	NSMutableDictionary* _coordinatorMetadataPerURL;
	NSMutableDictionary* _providedItemRecursiveGenCountPerURL;
	NSOperationQueue* _providedItemsOperationQueue;
	id<FPDExtensionSessionProtocol> _session;
	Class _fpfsClass;
	char _cantStartup;
	char _isObservingRoot;
	char _indexerStarted;
	char _indexerStopped;
	char _isUsingFPFS;
	char _invalidated;
	NSObject*<OS_dispatch_source> _timer;
	NSURL* _previouslyAccessedSecurityScopedURL;
	FPPacer* _rootCreationPacer;
	char _started;
	char _ejectable;
	char _unableToStartup;
	NSString* _identifier;
	NSFileProviderDomain* _nsDomainOrNilForDefault;
	NSFileProviderDomain* _nsDomain;
	NSObject*<OS_dispatch_queue> _serialQueue;
	NSObject*<OS_os_log> _log;
	NSArray* _extensionStorageURLs;
	NSString* _purposeIdentifier;
	id<FPDDomainBackend> _defaultBackend;
	id<FPDDomainBackend> _extensionBackend;
	id<FPDDomainBackend> _deactivatedBackend;
	FPDProvider* _provider;
	NSMutableDictionary* _filePresenters;
	FPDDomainIndexer* _indexer;
	NSData* _fpfsRootBookmarkData;
	Class _fpfsTestingBackendClass;

}

@property (nonatomic,readonly) NSString * identifier;                                     //@synthesize identifier=_identifier - In the implementation block
@property (nonatomic,readonly) NSString * providerDomainID; 
@property (nonatomic,readonly) FPProviderDomain * providerDomain; 
@property (assign,nonatomic) char started;                                                //@synthesize started=_started - In the implementation block
@property (nonatomic,retain) NSFileProviderDomain * nsDomainOrNilForDefault;              //@synthesize nsDomainOrNilForDefault=_nsDomainOrNilForDefault - In the implementation block
@property (nonatomic,readonly) NSFileProviderDomain * nsDomain;                           //@synthesize nsDomain=_nsDomain - In the implementation block
@property (assign,nonatomic) char userEnabled; 
@property (assign,nonatomic) char ejectable;                                              //@synthesize ejectable=_ejectable - In the implementation block
@property (assign,nonatomic) char unableToStartup;                                        //@synthesize unableToStartup=_unableToStartup - In the implementation block
@property (nonatomic,readonly) char isConnectedToAppExtension; 
@property (nonatomic,readonly) unsigned long long disconnectionState; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> serialQueue;                  //@synthesize serialQueue=_serialQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_os_log> log;                                  //@synthesize log=_log - In the implementation block
@property (nonatomic,readonly) NSArray * rootURLs; 
@property (nonatomic,readonly) NSArray * extensionStorageURLs;                            //@synthesize extensionStorageURLs=_extensionStorageURLs - In the implementation block
@property (nonatomic,readonly) NSString * purposeIdentifier;                              //@synthesize purposeIdentifier=_purposeIdentifier - In the implementation block
@property (nonatomic,retain) id<FPDDomainBackend> defaultBackend;                         //@synthesize defaultBackend=_defaultBackend - In the implementation block
@property (nonatomic,readonly) id<FPDDomainBackend> extensionBackend;                     //@synthesize extensionBackend=_extensionBackend - In the implementation block
@property (nonatomic,readonly) id<FPDDomainBackend> deactivatedBackend;                   //@synthesize deactivatedBackend=_deactivatedBackend - In the implementation block
@property (nonatomic,__weak,readonly) FPDProvider * provider;                             //@synthesize provider=_provider - In the implementation block
@property (nonatomic,readonly) id<FPDExtensionSessionProtocol> session;                   //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * filePresenters;                        //@synthesize filePresenters=_filePresenters - In the implementation block
@property (nonatomic,retain) FPDDomainIndexer * indexer;                                  //@synthesize indexer=_indexer - In the implementation block
@property (nonatomic,copy) NSData * fpfsRootBookmarkData;                                 //@synthesize fpfsRootBookmarkData=_fpfsRootBookmarkData - In the implementation block
@property (nonatomic,retain) Class fpfsTestingBackendClass;                               //@synthesize fpfsTestingBackendClass=_fpfsTestingBackendClass - In the implementation block
@property (nonatomic,readonly) NSString * fp_prettyDescription; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)description;
-(void)invalidate;
-(NSString *)identifier;
-(NSObject*<OS_dispatch_queue>)serialQueue;
-(char)started;
-(FPDProvider *)provider;
-(NSMutableDictionary *)filePresenters;
-(NSString *)purposeIdentifier;
-(id)_fileReactorID;
-(void)_writerWithID:(id)arg1 didFinishWritingForURL:(id)arg2 ;
-(id)_providedItemsOperationQueue;
-(void)_provideItemAtURL:(id)arg1 toReaderWithID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_provideItemAtURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_cancelProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2 ;
-(id)_physicalURLForURL:(id)arg1 ;
-(void)_providedItemAtURL:(id)arg1 didGainPresenterWithID:(id)arg2 ;
-(void)_providedItemAtURL:(id)arg1 didLosePresenterWithID:(id)arg2 ;
-(void)_providedItemAtURL:(id)arg1 withPresenterWithID:(id)arg2 didMoveToURL:(id)arg3 ;
-(void)_movingItemAtURL:(id)arg1 requiresProvidingWithDestinationURL:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id<FPDExtensionSessionProtocol>)session;
-(NSString *)providerDomainID;
-(unsigned long long)disconnectionState;
-(NSObject*<OS_os_log>)log;
-(void)setStarted:(char)arg1 ;
-(NSString *)fp_prettyDescription;
-(char)isUsingFPFS;
-(FPProviderDomain *)providerDomain;
-(char)isConnectedToAppExtension;
-(void)setEjectable:(char)arg1 ;
-(char)ejectable;
-(void)forceIngestionForItemID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)userEnabled;
-(void)setUserEnabled:(char)arg1 ;
-(FPDDomainIndexer *)indexer;
-(void)invalidateSession;
-(void)startWithCompletion:(/*^block*/id)arg1 ;
-(void)setIndexer:(FPDDomainIndexer *)arg1 ;
-(void)setFilePresenters:(NSMutableDictionary *)arg1 ;
-(void)finishSetup;
-(NSArray *)extensionStorageURLs;
-(char)supportsFPFS;
-(void)didChangeItemID:(id)arg1 request:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id<FPDDomainBackend>)defaultBackend;
-(void)enumerateWithSettings:(id)arg1 lifetimeExtender:(id)arg2 observer:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(NSFileProviderDomain *)nsDomain;
-(NSArray *)rootURLs;
-(char)isProviderForURL:(id)arg1 ;
-(void)dumpStateTo:(id)arg1 limitNumberOfItems:(char)arg2 ;
-(void)valuesForAttributes:(id)arg1 forURL:(id)arg2 request:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)fetchOperationServiceOrEndpointWithRequest:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)materializedURLForItemID:(id)arg1 ;
-(void)forceIngestionAtURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)forceFSIngestionForItemID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(long long)nonEvictableSpace;
-(void)downloadItemWithItemID:(id)arg1 request:(id)arg2 progress:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)_siblingDelegateForURL:(id)arg1 ;
-(id<FPDDomainBackend>)deactivatedBackend;
-(void)createRootAndObserveIfNeededWithCompletion:(/*^block*/id)arg1 ;
-(char)_shouldDisconnect;
-(char)_shouldDisconnectDueToLowDiskSpace;
-(void)_setupRecoveryTimer;
-(NSFileProviderDomain *)nsDomainOrNilForDefault;
-(char)isHiddenDefaultDomain;
-(char)isDefaultDomain;
-(void)_registerFileCoordinatorWithCompletion:(/*^block*/id)arg1 ;
-(void)_startObservingRootAndResumeIndexerWithCompletion:(/*^block*/id)arg1 ;
-(void)createRootURLWithCompletion:(/*^block*/id)arg1 ;
-(void)_startWithCompletion:(/*^block*/id)arg1 ;
-(void)cancelPendingCoordinations;
-(void)_unregisterFromFileCoordinator;
-(id)_removeProgressForProvidingItemAtURL:(id)arg1 toReaderWithID:(id)arg2 ;
-(id)getProvidedItemRecursiveGenerationCountForItemAtURL:(id)arg1 ;
-(void)setProvidedItemRecursiveGenerationCount:(id)arg1 forItemAtURL:(id)arg2 ;
-(void)daemonSideItemChange:(id)arg1 changedFields:(unsigned long long)arg2 request:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(char)_wantsPresenterNotifications;
-(void)extensionIndexer:(id)arg1 didChangeNeedsAuthentification:(char)arg2 ;
-(id)initWithIdentifier:(id)arg1 nsDomain:(id)arg2 extensionStorageURLs:(id)arg3 purposeIdentifier:(id)arg4 fpfsClass:(Class)arg5 provider:(id)arg6 ;
-(void)setNsDomainOrNilForDefault:(NSFileProviderDomain *)arg1 ;
-(char)createRootByImportingDirectoryAtURL:(id)arg1 error:(id*)arg2 ;
-(void)stopIndexer;
-(void)cleanupDomainWithMode:(unsigned long long)arg1 ;
-(void)dumpInternalStateTo:(id)arg1 request:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)unableToStartup;
-(void)setUnableToStartup:(char)arg1 ;
-(void)setDefaultBackend:(id<FPDDomainBackend>)arg1 ;
-(id<FPDDomainBackend>)extensionBackend;
-(NSData *)fpfsRootBookmarkData;
-(void)setFpfsRootBookmarkData:(NSData *)arg1 ;
-(Class)fpfsTestingBackendClass;
-(void)setFpfsTestingBackendClass:(Class)arg1 ;
@end

