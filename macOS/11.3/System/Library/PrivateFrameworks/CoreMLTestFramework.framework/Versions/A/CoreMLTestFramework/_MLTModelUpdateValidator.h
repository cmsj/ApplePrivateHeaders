/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:47 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreMLTestFramework.framework/Versions/A/CoreMLTestFramework
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MLBatchProvider;
@class NSMutableDictionary, _MLTLogger, NSString, NSDictionary;

@interface _MLTModelUpdateValidator : NSObject {

	char _tested;
	char _useBatchPrediction;
	NSMutableDictionary* _metricsDict;
	_MLTLogger* _logger;
	NSString* _recipePath;
	id<MLBatchProvider> _dataProvider;
	NSMutableDictionary* _validationAccuracyDict;
	NSDictionary* _validationParams;

}

@property (nonatomic,retain) NSMutableDictionary * metricsDict;                         //@synthesize metricsDict=_metricsDict - In the implementation block
@property (nonatomic,retain) _MLTLogger * logger;                                       //@synthesize logger=_logger - In the implementation block
@property (nonatomic,retain) NSString * recipePath;                                     //@synthesize recipePath=_recipePath - In the implementation block
@property (nonatomic,retain) id<MLBatchProvider> dataProvider;                          //@synthesize dataProvider=_dataProvider - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * validationAccuracyDict;              //@synthesize validationAccuracyDict=_validationAccuracyDict - In the implementation block
@property (nonatomic,retain) NSDictionary * validationParams;                           //@synthesize validationParams=_validationParams - In the implementation block
@property (assign) char tested;                                                         //@synthesize tested=_tested - In the implementation block
@property (assign) char useBatchPrediction;                                             //@synthesize useBatchPrediction=_useBatchPrediction - In the implementation block
-(id)initWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(_MLTLogger *)logger;
-(id<MLBatchProvider>)dataProvider;
-(void)setLogger:(_MLTLogger *)arg1 ;
-(void)setDataProvider:(id<MLBatchProvider>)arg1 ;
-(char)tested;
-(void)setTested:(char)arg1 ;
-(NSString *)recipePath;
-(void)setRecipePath:(NSString *)arg1 ;
-(NSDictionary *)validationParams;
-(char)validateModel:(id)arg1 withParams:(id)arg2 verbose:(char)arg3 error:(id*)arg4 ;
-(id)validationAccuracyForOutput:(id)arg1 error:(id*)arg2 ;
-(void)setValidationParams:(NSDictionary *)arg1 ;
-(char)useBatchPrediction;
-(void)setUseBatchPrediction:(char)arg1 ;
-(NSMutableDictionary *)validationAccuracyDict;
-(void)setMetricsDict:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)metricsDict;
-(void)populateMetricsDictFromParams:(id)arg1 ;
-(char)addFailingCountForOutput:(id)arg1 forMetric:(id)arg2 ;
-(char)addPassingCountForOutput:(id)arg1 forMetric:(id)arg2 ;
-(char)checkIfResultsWithinParams:(char)arg1 error:(id*)arg2 ;
-(char)validateModelWithoutAutorelease:(id)arg1 withParams:(id)arg2 verbose:(char)arg3 error:(id*)arg4 ;
-(void)setValidationAccuracyDict:(NSMutableDictionary *)arg1 ;
@end

