/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:47 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreMLTestFramework.framework/Versions/A/CoreMLTestFramework
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CoreMLTestFramework/CoreMLTestFramework-Structs.h>
@class NSDictionary;

@interface _MLTInputGeneratorUtils : NSObject {

	char _usesNdArrayInterpretation;
	int _currentCase;
	unsigned _seedForRandomInput;
	CVBufferRef _buffer;
	NSDictionary* _inputDescriptions;
	NSDictionary* _outputDescriptions;
	NSDictionary* _sequences;

}

@property (assign,nonatomic) CVBufferRef buffer;                   //@synthesize buffer=_buffer - In the implementation block
@property (assign) int currentCase;                                //@synthesize currentCase=_currentCase - In the implementation block
@property (retain) NSDictionary * inputDescriptions;               //@synthesize inputDescriptions=_inputDescriptions - In the implementation block
@property (retain) NSDictionary * outputDescriptions;              //@synthesize outputDescriptions=_outputDescriptions - In the implementation block
@property (retain) NSDictionary * sequences;                       //@synthesize sequences=_sequences - In the implementation block
@property (assign) unsigned seedForRandomInput;                    //@synthesize seedForRandomInput=_seedForRandomInput - In the implementation block
@property (assign) char usesNdArrayInterpretation;                 //@synthesize usesNdArrayInterpretation=_usesNdArrayInterpretation - In the implementation block
-(CVBufferRef)buffer;
-(void)setBuffer:(CVBufferRef)arg1 ;
-(NSDictionary *)sequences;
-(char)hasCorrespondingRecurrentOutput:(id)arg1 ;
-(id)generateRandomCVPixelBufferFeatureWithImageConstraint:(id)arg1 error:(id*)arg2 ;
-(char)usesNdArrayInterpretation;
-(id)generateRandomMultiArrayFeatureWithMultiArrayConstraint:(id)arg1 error:(id*)arg2 ;
-(id)generateRandomDouble;
-(id)generateRandomUniformBetween:(double)arg1 and:(double)arg2 ;
-(id)generateRandomGaussianDoubleWithScale:(double)arg1 bias:(double)arg2 ;
-(id)initInputGeneratorUtilWithModel:(id)arg1 currentCase:(int)arg2 seed:(unsigned)arg3 ;
-(id)generateRandomInputs:(id*)arg1 ;
-(char)hasCorrespondingRecurrentInput:(id)arg1 ;
-(int)currentCase;
-(void)setCurrentCase:(int)arg1 ;
-(NSDictionary *)inputDescriptions;
-(void)setInputDescriptions:(NSDictionary *)arg1 ;
-(NSDictionary *)outputDescriptions;
-(void)setOutputDescriptions:(NSDictionary *)arg1 ;
-(void)setSequences:(NSDictionary *)arg1 ;
-(unsigned)seedForRandomInput;
-(void)setSeedForRandomInput:(unsigned)arg1 ;
-(void)setUsesNdArrayInterpretation:(char)arg1 ;
@end

