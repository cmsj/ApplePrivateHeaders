/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:48 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/IMSharedUI.framework/Versions/A/IMSharedUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <IMSharedUI/IMAudioPlayerDelegate.h>

@protocol IMAudioControllerDelegate;
@class IMAudioPlayer, NSMutableArray, NSURL, NSArray, NSString;

@interface IMAudioController : NSObject <IMAudioPlayerDelegate> {

	unsigned long long _currentIndex;
	IMAudioPlayer* _listenAudioPlayer;
	NSMutableArray* _audioURLs;
	char _shouldUseSpeaker;
	char _shouldStopPlayingWhenSilent;
	char _shouldDuckOthers;
	char _shouldUseAVPlayer;
	char _playing;
	char _paused;
	char _interrupted;
	NSURL* _currentURL;
	id<IMAudioControllerDelegate> _delegate;
	IMAudioPlayer* _audioPlayer;

}

@property (assign,getter=isPaused,nonatomic) char paused;                                //@synthesize paused=_paused - In the implementation block
@property (nonatomic,retain) IMAudioPlayer * audioPlayer;                                //@synthesize audioPlayer=_audioPlayer - In the implementation block
@property (assign,nonatomic) char interrupted;                                           //@synthesize interrupted=_interrupted - In the implementation block
@property (assign,getter=isPlaying,nonatomic) char playing;                              //@synthesize playing=_playing - In the implementation block
@property (nonatomic,retain) IMAudioPlayer * listenAudioPlayer;                          //@synthesize listenAudioPlayer=_listenAudioPlayer - In the implementation block
@property (assign,nonatomic) char shouldUseSpeaker;                                      //@synthesize shouldUseSpeaker=_shouldUseSpeaker - In the implementation block
@property (assign,nonatomic) char shouldStopPlayingWhenSilent;                           //@synthesize shouldStopPlayingWhenSilent=_shouldStopPlayingWhenSilent - In the implementation block
@property (assign,nonatomic) char shouldDuckOthers;                                      //@synthesize shouldDuckOthers=_shouldDuckOthers - In the implementation block
@property (assign,nonatomic) char shouldUseAVPlayer;                                     //@synthesize shouldUseAVPlayer=_shouldUseAVPlayer - In the implementation block
@property (nonatomic,readonly) NSURL * currentURL;                                       //@synthesize currentURL=_currentURL - In the implementation block
@property (nonatomic,readonly) double currentMediaObjectTime; 
@property (nonatomic,readonly) double currentMediaObjectDuration; 
@property (assign,nonatomic) float volume; 
@property (nonatomic,copy,readonly) NSArray * audioURLs; 
@property (assign,nonatomic,__weak) id<IMAudioControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(Class)audioControllerClass;
+(id)audioControllerWithContentsOfURLs:(id)arg1 ;
-(void)dealloc;
-(id<IMAudioControllerDelegate>)delegate;
-(void)setDelegate:(id<IMAudioControllerDelegate>)arg1 ;
-(float)volume;
-(void)pause;
-(void)stop;
-(char)isPaused;
-(void)play;
-(char)interrupted;
-(char)isPlaying;
-(void)setVolume:(float)arg1 ;
-(void)setPaused:(char)arg1 ;
-(IMAudioPlayer *)audioPlayer;
-(void)setAudioPlayer:(IMAudioPlayer *)arg1 ;
-(void)prepareToPlay;
-(void)setInterrupted:(char)arg1 ;
-(void)setPlaying:(char)arg1 ;
-(NSURL *)currentURL;
-(id)initWithContentsOfURLs:(id)arg1 ;
-(unsigned long long)audioSessionControllerOptions;
-(char)shouldUseSpeaker;
-(char)shouldStopPlayingWhenSilent;
-(char)shouldDuckOthers;
-(void)playAfterDelay:(double)arg1 ;
-(void)audioPlayerDidFinishPlaying:(id)arg1 ;
-(char)shouldUseAVPlayer;
-(void)playListenSound:(/*^block*/id)arg1 ;
-(void)_notifyPlayerDidPrepareAudioURL:(id)arg1 successfully:(char)arg2 ;
-(id)currentMediaObject;
-(void)playListenEndSound:(/*^block*/id)arg1 ;
-(void)setListenAudioPlayer:(IMAudioPlayer *)arg1 ;
-(void)_playSoundWithURL:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)audioPlayerCurrentTimeDidChange:(id)arg1 ;
-(void)audioPlayerDidPrepareAudioToPlay:(id)arg1 successfully:(char)arg2 ;
-(NSArray *)audioURLs;
-(void)addContentsOfURL:(id)arg1 ;
-(void)addContentsOfURLs:(id)arg1 ;
-(void)setShouldUseSpeaker:(char)arg1 ;
-(void)setShouldStopPlayingWhenSilent:(char)arg1 ;
-(void)setShouldDuckOthers:(char)arg1 ;
-(double)currentMediaObjectTime;
-(double)currentMediaObjectDuration;
-(void)setShouldUseAVPlayer:(char)arg1 ;
-(IMAudioPlayer *)listenAudioPlayer;
@end

