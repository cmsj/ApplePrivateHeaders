/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MediaRemote.framework/Versions/A/MediaRemote
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSUserDefaults, NSArray, NSDictionary, NSString;

@interface MRUserSettings : NSObject {

	NSUserDefaults* _userDefaults;
	char _externalDevicePairingAllowed;

}

@property (nonatomic,readonly) char usePeerToPeerExternalDeviceConnections; 
@property (nonatomic,readonly) char useNoDelayOptionForExternalDeviceSockets; 
@property (nonatomic,readonly) char useDebugAVRouteWithoutVolumeControl; 
@property (nonatomic,readonly) char useAPSyncAPI; 
@property (nonatomic,readonly) char useOutputDeviceTransport; 
@property (nonatomic,readonly) char useClusterDevices; 
@property (nonatomic,readonly) char shouldInitializeTelevisionBonjourService; 
@property (nonatomic,readonly) char shouldInitializeGenericBonjourService; 
@property (nonatomic,readonly) char shouldInitializeRapportService; 
@property (nonatomic,readonly) char shouldLogPairingSetupCode; 
@property (nonatomic,readonly) char shouldLogArtwork; 
@property (nonatomic,readonly) char verboseProtocolMessageLogging; 
@property (nonatomic,readonly) char shouldWakeDeviceForRemoteControlCommands; 
@property (nonatomic,readonly) char hasExternalDeviceSocketQOSLevelSet; 
@property (nonatomic,readonly) long long externalDeviceSocketQOSLevel; 
@property (assign,getter=isExternalDevicePairingAllowed,nonatomic) char externalDevicePairingAllowed;                                 //@synthesize externalDevicePairingAllowed=_externalDevicePairingAllowed - In the implementation block
@property (nonatomic,readonly) double externalDeviceTimeoutDuration; 
@property (nonatomic,readonly) double externalDeviceNowPlayingInfoCoalesceDuration; 
@property (nonatomic,readonly) double externalDeviceNowPlayingInfoArtworkCoalesceDuration; 
@property (nonatomic,readonly) double externalDeviceDisconnectWaitDuration; 
@property (nonatomic,readonly) double externalDeviceDisconnectSleepDuration; 
@property (nonatomic,readonly) double externalDeviceSleepAssertionOnClientConnectDuration; 
@property (nonatomic,readonly) double bluetoothDeviceResumeDuration; 
@property (nonatomic,readonly) double broadcastCommandWaitDuration; 
@property (nonatomic,readonly) double airPlayOutputContextInitTimeoutDuration; 
@property (nonatomic,readonly) char useExternalDeviceSystemPairing; 
@property (nonatomic,readonly) long long maxTransactionMemorySize; 
@property (nonatomic,readonly) double transactionWaitDurationOnOutOfMemory; 
@property (nonatomic,readonly) double transactionWaitDurationOnXpcSend; 
@property (nonatomic,readonly) double transactionWaitDurationOnNetworkSend; 
@property (nonatomic,readonly) char useSystemAudioContextForAirPlayTransport; 
@property (nonatomic,readonly) char useGenericTransportForHostedEndpoints; 
@property (nonatomic,retain) NSArray * connectedClientAuditTokens; 
@property (nonatomic,retain) NSArray * expectedClientAuditTokens; 
@property (nonatomic,readonly) double queuedCommandsTimeoutInterval; 
@property (nonatomic,readonly) char computeNowPlayingApplication; 
@property (nonatomic,readonly) double nowPlayingApplicationTimeout; 
@property (nonatomic,readonly) char takelockScreenAssertion; 
@property (nonatomic,readonly) char useProactiveEndpoint; 
@property (nonatomic,readonly) char connectToEndpointWhenBeginsPlayback; 
@property (nonatomic,readonly) char connectToAllEndpointsWhenAnyEndpointBeginsPlayback; 
@property (nonatomic,readonly) char connectToUserSelectedEndpoint; 
@property (nonatomic,readonly) double discoverEndpointTimeoutInterval; 
@property (nonatomic,readonly) char needNowPlayingForegroundState; 
@property (nonatomic,readonly) double deviceRecentlyUsedInterval; 
@property (nonatomic,readonly) double mediaRecentlyPlayedInterval; 
@property (nonatomic,readonly) double endpointRecentlyUserSelectedInterval; 
@property (nonatomic,readonly) double launchApplicationTimeoutInterval; 
@property (nonatomic,readonly) char supportProximityMigration; 
@property (nonatomic,readonly) char supportMigration; 
@property (nonatomic,readonly) char supportNewMigrationBehaviorForProximity; 
@property (nonatomic,readonly) char supportMigrationBackToPersonalDevice; 
@property (nonatomic,readonly) char supportNewMigrationArchitecture; 
@property (nonatomic,readonly) char supportProximityMigrationV2; 
@property (nonatomic,readonly) char forceFadeForEveryHandoff; 
@property (nonatomic,readonly) char supportLastPlayingDevice; 
@property (nonatomic,readonly) char sendLastPlayingDeviceToHome; 
@property (nonatomic,readonly) char connectToAllEndpointsWhenInProximityToAnyDevice; 
@property (nonatomic,readonly) double lastPlayingDeviceThresholdInterval; 
@property (nonatomic,readonly) double sendPlaybackSessionUpdateToCompanionCoalesceInterval; 
@property (nonatomic,readonly) char supportLockscreenPlatterDisplayForPersonalDevice; 
@property (nonatomic,readonly) double personalDeviceLockScreenTimeout; 
@property (nonatomic,retain) NSDictionary * personalDeviceState; 
@property (nonatomic,readonly) unsigned long long maximumNumberOfMediaSuggestions; 
@property (nonatomic,readonly) char supportProactiveSuggestion; 
@property (nonatomic,readonly) char visuallyIdentifyProactiveSuggestion; 
@property (nonatomic,readonly) double activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval; 
@property (nonatomic,readonly) char supportNanoLinkAgent; 
@property (nonatomic,readonly) NSArray * jsonClientUIDs; 
@property (nonatomic,retain) NSString * lastBootUUID; 
@property (nonatomic,readonly) NSArray * remoteControlDiscoveryBlacklist; 
@property (nonatomic,readonly) NSArray * remoteControlDiscoveryWhitelist; 
+(id)currentSettings;
-(id)init;
-(NSDictionary *)personalDeviceState;
-(void)setPersonalDeviceState:(NSDictionary *)arg1 ;
-(char)useClusterDevices;
-(NSArray *)jsonClientUIDs;
-(char)shouldLogArtwork;
-(char)supportMigration;
-(char)forceFadeForEveryHandoff;
-(double)externalDeviceTimeoutDuration;
-(char)useExternalDeviceSystemPairing;
-(char)takelockScreenAssertion;
-(char)supportProximityMigrationV2;
-(id)defaultSupportedCommandsData;
-(char)usePeerToPeerExternalDeviceConnections;
-(char)useNoDelayOptionForExternalDeviceSockets;
-(char)useDebugAVRouteWithoutVolumeControl;
-(char)shouldInitializeTelevisionBonjourService;
-(char)shouldInitializeGenericBonjourService;
-(char)shouldInitializeRapportService;
-(char)shouldLogPairingSetupCode;
-(char)verboseProtocolMessageLogging;
-(char)shouldWakeDeviceForRemoteControlCommands;
-(char)hasExternalDeviceSocketQOSLevelSet;
-(long long)externalDeviceSocketQOSLevel;
-(double)externalDeviceNowPlayingInfoCoalesceDuration;
-(double)externalDeviceNowPlayingInfoArtworkCoalesceDuration;
-(double)externalDeviceDisconnectWaitDuration;
-(double)externalDeviceDisconnectSleepDuration;
-(double)externalDeviceSleepAssertionOnClientConnectDuration;
-(double)bluetoothDeviceResumeDuration;
-(double)broadcastCommandWaitDuration;
-(double)airPlayOutputContextInitTimeoutDuration;
-(long long)maxTransactionMemorySize;
-(double)transactionWaitDurationOnOutOfMemory;
-(double)transactionWaitDurationOnXpcSend;
-(double)transactionWaitDurationOnNetworkSend;
-(char)useSystemAudioContextForAirPlayTransport;
-(char)useGenericTransportForHostedEndpoints;
-(NSArray *)connectedClientAuditTokens;
-(void)setConnectedClientAuditTokens:(NSArray *)arg1 ;
-(NSArray *)expectedClientAuditTokens;
-(void)setExpectedClientAuditTokens:(NSArray *)arg1 ;
-(double)queuedCommandsTimeoutInterval;
-(double)nowPlayingApplicationTimeout;
-(char)computeNowPlayingApplication;
-(char)needNowPlayingForegroundState;
-(char)useProactiveEndpoint;
-(char)connectToEndpointWhenBeginsPlayback;
-(char)connectToAllEndpointsWhenAnyEndpointBeginsPlayback;
-(char)connectToUserSelectedEndpoint;
-(double)discoverEndpointTimeoutInterval;
-(double)deviceRecentlyUsedInterval;
-(double)mediaRecentlyPlayedInterval;
-(double)endpointRecentlyUserSelectedInterval;
-(double)launchApplicationTimeoutInterval;
-(NSArray *)remoteControlDiscoveryBlacklist;
-(NSArray *)remoteControlDiscoveryWhitelist;
-(char)supportProximityMigration;
-(char)supportNewMigrationBehaviorForProximity;
-(char)supportMigrationBackToPersonalDevice;
-(char)supportNewMigrationArchitecture;
-(char)supportLastPlayingDevice;
-(char)sendLastPlayingDeviceToHome;
-(double)lastPlayingDeviceThresholdInterval;
-(double)sendPlaybackSessionUpdateToCompanionCoalesceInterval;
-(char)connectToAllEndpointsWhenInProximityToAnyDevice;
-(id)defaultSupportedCommandsDataForClient:(id)arg1 ;
-(void)updateDefaultSupportedCommandsData:(id)arg1 forClient:(id)arg2 ;
-(double)activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval;
-(unsigned)localPlaybackState;
-(void)setLocalPlaybackState:(unsigned)arg1 ;
-(id)localLastPlayingDate;
-(void)setLocalLastPlayingDate:(id)arg1 ;
-(NSString *)lastBootUUID;
-(void)setLastBootUUID:(NSString *)arg1 ;
-(char)supportNanoLinkAgent;
-(char)useAPSyncAPI;
-(char)useOutputDeviceTransport;
-(char)supportLockscreenPlatterDisplayForPersonalDevice;
-(double)personalDeviceLockScreenTimeout;
-(unsigned long long)maximumNumberOfMediaSuggestions;
-(char)supportProactiveSuggestion;
-(char)visuallyIdentifyProactiveSuggestion;
-(char)isExternalDevicePairingAllowed;
-(void)setExternalDevicePairingAllowed:(char)arg1 ;
@end

