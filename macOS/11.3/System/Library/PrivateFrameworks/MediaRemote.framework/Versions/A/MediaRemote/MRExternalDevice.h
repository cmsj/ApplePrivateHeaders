/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MediaRemote.framework/Versions/A/MediaRemote
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <MediaRemote/MediaRemote-Structs.h>
@class NSArray, MRSupportedProtocolMessages, NSString, MROrigin, MRDeviceInfo;

@interface MRExternalDevice : NSObject {

	char _wantsEndpointChangeNotifications;
	char _valid;
	char _usingSystemPairing;
	unsigned _connectionState;
	NSArray* _personalOutputDevices;

}

@property (nonatomic,readonly) MRSupportedProtocolMessages * supportedMessages; 
@property (assign,getter=isUsingSystemPairing,nonatomic) char usingSystemPairing;              //@synthesize usingSystemPairing=_usingSystemPairing - In the implementation block
@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) NSString * hostName; 
@property (nonatomic,readonly) long long port; 
@property (nonatomic,readonly) MROrigin * customOrigin; 
@property (nonatomic,readonly) MRDeviceInfo * deviceInfo; 
@property (nonatomic,readonly) NSArray * personalOutputDevices;                                //@synthesize personalOutputDevices=_personalOutputDevices - In the implementation block
@property (assign,nonatomic) char wantsNowPlayingNotifications; 
@property (assign,nonatomic) char wantsNowPlayingArtworkNotifications; 
@property (assign,nonatomic) char wantsVolumeNotifications; 
@property (assign,nonatomic) char wantsOutputDeviceNotifications; 
@property (assign,nonatomic) char wantsSystemEndpointNotifications; 
@property (assign,nonatomic) char wantsEndpointChangeNotifications;                            //@synthesize wantsEndpointChangeNotifications=_wantsEndpointChangeNotifications - In the implementation block
@property (nonatomic,copy) NSArray * subscribedPlayerPaths; 
@property (getter=isValid,nonatomic,readonly) char valid;                                      //@synthesize valid=_valid - In the implementation block
@property (nonatomic,readonly) unsigned connectionState;                                       //@synthesize connectionState=_connectionState - In the implementation block
@property (getter=isPaired,nonatomic,readonly) char paired; 
-(NSString *)name;
-(char)isValid;
-(long long)port;
-(id)_init;
-(NSString *)hostName;
-(unsigned)connectionState;
-(MRDeviceInfo *)deviceInfo;
-(char)isPaired;
-(void)connectWithOptions:(unsigned)arg1 userInfo:(id)arg2 ;
-(void)outputDeviceVolume:(id)arg1 queue:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)outputDeviceVolumeControlCapabilities:(id)arg1 queue:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setOutputDeviceVolume:(float)arg1 outputDeviceUID:(id)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)disconnect:(id)arg1 ;
-(void)modifyByAddingDeviceUIDs:(id)arg1 removingDeviceUIDs:(id)arg2 settingDeviceUIDs:(id)arg3 addingClusterAwareDeviceUIDs:(id)arg4 removingClusterAwareDeviceUIDs:(id)arg5 settingClusterAwareDeviceUIDs:(id)arg6 withReplyQueue:(id)arg7 completion:(/*^block*/id)arg8 ;
-(void)setWantsVolumeNotifications:(char)arg1 ;
-(void)setWantsOutputDeviceNotifications:(char)arg1 ;
-(void)setWantsNowPlayingArtworkNotifications:(char)arg1 ;
-(void)setWantsNowPlayingNotifications:(char)arg1 ;
-(void)setVolumeCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setConnectionStateCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(NSArray *)subscribedPlayerPaths;
-(void)setSubscribedPlayerPaths:(NSArray *)arg1 ;
-(NSArray *)personalOutputDevices;
-(MRSupportedProtocolMessages *)supportedMessages;
-(void)setUsingSystemPairing:(char)arg1 ;
-(void)unpair;
-(void)sendCustomData:(id)arg1 withName:(id)arg2 ;
-(char)wantsNowPlayingNotifications;
-(char)wantsNowPlayingArtworkNotifications;
-(char)wantsVolumeNotifications;
-(char)wantsOutputDeviceNotifications;
-(char)wantsEndpointChangeNotifications;
-(void)setWantsEndpointChangeNotifications:(char)arg1 ;
-(char)wantsSystemEndpointNotifications;
-(void)setWantsSystemEndpointNotifications:(char)arg1 ;
-(char)isUsingSystemPairing;
-(MROrigin *)customOrigin;
-(void)setPairingCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setNameCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setPairingAllowedCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)setCustomDataCallback:(/*^block*/id)arg1 withQueue:(id)arg2 ;
-(void)ping:(double)arg1 callback:(/*^block*/id)arg2 withQueue:(id)arg3 ;
-(void)sendButtonEvent:(MRHIDButtonEvent)arg1 ;
-(void)sendClientUpdatesConfigMessage;
-(id)errorForCurrentState;
-(id)currentClientUpdatesConfigMessage;
-(void)connectWithOptions:(unsigned)arg1 ;
@end

