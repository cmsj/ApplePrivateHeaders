/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:11 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/StorageKit.framework/Versions/A/StorageKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class SKDisk, NSString, NSImage;

@interface SKBindableDisk : NSObject {

	char _isValid;
	char _canBeDeleted;
	char _isDiskImage;
	char _isInternal;
	char _isSolidState;
	char _isWholeDisk;
	char _isWritable;
	char _supportsJournaling;
	char _isEjectable;
	char _isNetwork;
	char _isLocked;
	char _canSupportRecoveryPartition;
	char _apfsConvertible;
	char _isMacOSBootableSystem;
	char _isOSInternal;
	char _isObserving;
	SKDisk* _representedDisk;
	NSString* _role;
	NSString* _type;
	NSImage* _diskIcon;
	NSString* _volumeName;
	NSString* _volumeUUID;
	NSString* _mountPoint;
	unsigned long long _freeSpace;
	unsigned long long _purgeableSpace;
	unsigned long long _availableSpace;
	unsigned long long _totalSpace;
	unsigned long long _minimumDiskSize;
	unsigned long long _maximumDiskSize;
	NSString* _diskIdentifier;
	NSString* _contentDiskIdentifier;
	NSString* _protocol;

}

@property (assign) char isObserving;                                //@synthesize isObserving=_isObserving - In the implementation block
@property (retain) NSString * role;                                 //@synthesize role=_role - In the implementation block
@property (retain) NSString * type;                                 //@synthesize type=_type - In the implementation block
@property (assign) char isValid;                                    //@synthesize isValid=_isValid - In the implementation block
@property (retain) NSImage * diskIcon;                              //@synthesize diskIcon=_diskIcon - In the implementation block
@property (retain) NSString * volumeName;                           //@synthesize volumeName=_volumeName - In the implementation block
@property (retain) NSString * volumeUUID;                           //@synthesize volumeUUID=_volumeUUID - In the implementation block
@property (retain) NSString * mountPoint;                           //@synthesize mountPoint=_mountPoint - In the implementation block
@property (assign) unsigned long long freeSpace;                    //@synthesize freeSpace=_freeSpace - In the implementation block
@property (assign) unsigned long long purgeableSpace;               //@synthesize purgeableSpace=_purgeableSpace - In the implementation block
@property (assign) unsigned long long availableSpace;               //@synthesize availableSpace=_availableSpace - In the implementation block
@property (assign) unsigned long long totalSpace;                   //@synthesize totalSpace=_totalSpace - In the implementation block
@property (assign) unsigned long long minimumDiskSize;              //@synthesize minimumDiskSize=_minimumDiskSize - In the implementation block
@property (assign) unsigned long long maximumDiskSize;              //@synthesize maximumDiskSize=_maximumDiskSize - In the implementation block
@property (assign) char canBeDeleted;                               //@synthesize canBeDeleted=_canBeDeleted - In the implementation block
@property (retain) NSString * diskIdentifier;                       //@synthesize diskIdentifier=_diskIdentifier - In the implementation block
@property (retain) NSString * protocol;                             //@synthesize protocol=_protocol - In the implementation block
@property (assign) char isDiskImage;                                //@synthesize isDiskImage=_isDiskImage - In the implementation block
@property (assign) char isInternal;                                 //@synthesize isInternal=_isInternal - In the implementation block
@property (assign) char isSolidState;                               //@synthesize isSolidState=_isSolidState - In the implementation block
@property (assign) char isWholeDisk;                                //@synthesize isWholeDisk=_isWholeDisk - In the implementation block
@property (assign) char isWritable;                                 //@synthesize isWritable=_isWritable - In the implementation block
@property (assign) char isLocked;                                   //@synthesize isLocked=_isLocked - In the implementation block
@property (assign) char canSupportRecoveryPartition;                //@synthesize canSupportRecoveryPartition=_canSupportRecoveryPartition - In the implementation block
@property (assign) char apfsConvertible;                            //@synthesize apfsConvertible=_apfsConvertible - In the implementation block
@property (assign) char isMacOSBootableSystem;                      //@synthesize isMacOSBootableSystem=_isMacOSBootableSystem - In the implementation block
@property (assign) char isOSInternal;                               //@synthesize isOSInternal=_isOSInternal - In the implementation block
@property (retain) SKDisk * representedDisk;                        //@synthesize representedDisk=_representedDisk - In the implementation block
@property (readonly) NSString * contentDiskIdentifier;              //@synthesize contentDiskIdentifier=_contentDiskIdentifier - In the implementation block
@property (assign) char supportsJournaling;                         //@synthesize supportsJournaling=_supportsJournaling - In the implementation block
@property (assign) char isEjectable;                                //@synthesize isEjectable=_isEjectable - In the implementation block
@property (assign) char isNetwork;                                  //@synthesize isNetwork=_isNetwork - In the implementation block
+(id)keysToObserve;
-(void)setIsNetwork:(char)arg1 ;
-(char)apfsConvertible;
-(char)isMacOSBootableSystem;
-(unsigned long long)minimumDiskSize;
-(unsigned long long)maximumDiskSize;
-(void)dealloc;
-(void)setType:(NSString *)arg1 ;
-(char)isValid;
-(NSString *)type;
-(NSString *)role;
-(NSString *)protocol;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setProtocol:(NSString *)arg1 ;
-(char)isLocked;
-(void)setIsValid:(char)arg1 ;
-(unsigned long long)availableSpace;
-(void)setAvailableSpace:(unsigned long long)arg1 ;
-(void)stopObserving;
-(void)setRole:(NSString *)arg1 ;
-(char)isInternal;
-(char)isWritable;
-(NSString *)diskIdentifier;
-(char)isEjectable;
-(NSString *)volumeUUID;
-(NSString *)mountPoint;
-(NSString *)volumeName;
-(char)isObserving;
-(unsigned long long)freeSpace;
-(void)setIsWritable:(char)arg1 ;
-(void)setIsLocked:(char)arg1 ;
-(void)setIsInternal:(char)arg1 ;
-(void)setIsObserving:(char)arg1 ;
-(unsigned long long)purgeableSpace;
-(char)canBeDeleted;
-(void)setVolumeUUID:(NSString *)arg1 ;
-(char)supportsJournaling;
-(void)setVolumeName:(NSString *)arg1 ;
-(NSImage *)diskIcon;
-(void)setMountPoint:(NSString *)arg1 ;
-(void)setFreeSpace:(unsigned long long)arg1 ;
-(id)initWithRepresentedDisk:(id)arg1 ;
-(unsigned long long)totalSpace;
-(char)isDiskImage;
-(char)isSolidState;
-(char)canSupportRecoveryPartition;
-(char)isWholeDisk;
-(NSString *)contentDiskIdentifier;
-(void)setRepresentedDisk:(SKDisk *)arg1 ;
-(SKDisk *)representedDisk;
-(void)setIsDiskImage:(char)arg1 ;
-(char)isOSInternal;
-(char)isNetwork;
-(void)setIsSolidState:(char)arg1 ;
-(void)setIsEjectable:(char)arg1 ;
-(void)setDiskIdentifier:(NSString *)arg1 ;
-(void)setTotalSpace:(unsigned long long)arg1 ;
-(void)setPurgeableSpace:(unsigned long long)arg1 ;
-(void)setIsMacOSBootableSystem:(char)arg1 ;
-(void)setSupportsJournaling:(char)arg1 ;
-(void)setApfsConvertible:(char)arg1 ;
-(void)setDiskIcon:(NSImage *)arg1 ;
-(void)setCanSupportRecoveryPartition:(char)arg1 ;
-(void)setMaximumDiskSize:(unsigned long long)arg1 ;
-(void)setMinimumDiskSize:(unsigned long long)arg1 ;
-(void)setIsWholeDisk:(char)arg1 ;
-(void)setIsOSInternal:(char)arg1 ;
-(void)setCanBeDeleted:(char)arg1 ;
@end

