/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Noticeboard.framework/Versions/A/Noticeboard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
@class MSUProduct, NSThread, NSObject, PKDownloader, MSUProductManager;

@interface NBUpdateController : NSObject {

	/*^block*/id _downloadCompletionBlock;
	/*^block*/id _installCompletionBlock;
	MSUProduct* _installedProduct;
	NSThread* _downloadThread;
	NSObject*<OS_dispatch_semaphore> _downloaderFinished;
	double _lastProgressReported;
	NSObject*<OS_dispatch_semaphore> _installWaitSemaphore;
	PKDownloader* _downloader;
	MSUProductManager* _productManager;

}

@property (retain) NSThread * downloadThread;                                          //@synthesize downloadThread=_downloadThread - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> downloaderFinished;                //@synthesize downloaderFinished=_downloaderFinished - In the implementation block
@property (assign) double lastProgressReported;                                        //@synthesize lastProgressReported=_lastProgressReported - In the implementation block
@property (retain) MSUProduct * installedProduct;                                      //@synthesize installedProduct=_installedProduct - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> installWaitSemaphore;              //@synthesize installWaitSemaphore=_installWaitSemaphore - In the implementation block
@property (retain) PKDownloader * downloader;                                          //@synthesize downloader=_downloader - In the implementation block
@property (retain) MSUProductManager * productManager;                                 //@synthesize productManager=_productManager - In the implementation block
@property (copy) id downloadCompletionBlock;                                           //@synthesize downloadCompletionBlock=_downloadCompletionBlock - In the implementation block
@property (copy) id installCompletionBlock;                                            //@synthesize installCompletionBlock=_installCompletionBlock - In the implementation block
-(id)init;
-(char)_debugModeEnabled;
-(id)downloadCompletionBlock;
-(void)setDownloadCompletionBlock:(id)arg1 ;
-(id)_catalogURL;
-(void)installClientDidBegin:(id)arg1 ;
-(void)installClient:(id)arg1 didFailWithError:(id)arg2 ;
-(void)installClientDidFinish:(id)arg1 ;
-(MSUProductManager *)productManager;
-(id)_lastCatalogCheckTimestamp;
-(char)productIsSkippable:(id)arg1 lastCatalogCheckTimeStamp:(id)arg2 considerStagedUpdatesOnly:(char)arg3 ;
-(void)setLastProgressReported:(double)arg1 ;
-(void)setDownloaderFinished:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(void)setDownloader:(PKDownloader *)arg1 ;
-(void)setInstalledProduct:(MSUProduct *)arg1 ;
-(PKDownloader *)downloader;
-(void)packageDownloaderDidStop:(id)arg1 ;
-(void)setDownloadThread:(NSThread *)arg1 ;
-(NSThread *)downloadThread;
-(NSObject*<OS_dispatch_semaphore>)downloaderFinished;
-(id)installCompletionBlock;
-(void)setInstallWaitSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)installWaitSemaphore;
-(id)_installLocationForRequest:(id)arg1 ;
-(void)getInstallableProductsWithCompletion:(/*^block*/id)arg1 ;
-(void)downloadProducts:(id)arg1 ;
-(void)installPackageWithReference:(id)arg1 ;
-(id)notificationBundleInstalledForProductKey:(id)arg1 ;
-(void)installClient:(id)arg1 currentState:(int)arg2 package:(id)arg3 progress:(double)arg4 timeRemaining:(double)arg5 ;
-(void)setInstallCompletionBlock:(id)arg1 ;
-(MSUProduct *)installedProduct;
-(double)lastProgressReported;
-(void)setProductManager:(MSUProductManager *)arg1 ;
-(void)packageDownloaderDidStart:(id)arg1 ;
-(void)packageDownloader:(id)arg1 didChangeProgress:(double)arg2 ;
-(void)packageDownloader:(id)arg1 didStartDownloadingPackageWithReference:(id)arg2 ;
-(void)packageDownloader:(id)arg1 didFinishPackageReference:(id)arg2 localPackageReference:(id)arg3 ;
-(void)packageDownloader:(id)arg1 didFailOnPackageReference:(id)arg2 withError:(id)arg3 ;
-(void)packageDownloader:(id)arg1 didDownloadInvalidDataForPackageReference:(id)arg2 ;
@end

