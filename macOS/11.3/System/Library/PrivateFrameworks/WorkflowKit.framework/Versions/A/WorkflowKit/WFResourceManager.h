/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:55 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/WorkflowKit.framework/Versions/A/WorkflowKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/WFResourceNodeDelegate.h>

@protocol OS_dispatch_queue;
@class NSMutableArray, NSMutableOrderedSet, NSOrderedSet, NSMapTable, NSObject, NSArray, NSSet, NSString;

@interface WFResourceManager : NSObject <WFResourceNodeDelegate> {

	NSMutableArray* _resourceNodes;
	char _resourcesAvailable;
	char _resourcesRequiredForDisplayAvailable;
	char _didEvaluateAvailabilityOfNodes;
	NSMutableOrderedSet* _unavailableResources;
	NSOrderedSet* _unavailableResourceErrors;
	NSMapTable* _targetSelectorTable;
	NSObject*<OS_dispatch_queue> _stateAccessQueue;

}

@property (nonatomic,retain) NSArray * resourceNodes;                                      //@synthesize resourceNodes=_resourceNodes - In the implementation block
@property (assign,nonatomic) char resourcesAvailable;                                      //@synthesize resourcesAvailable=_resourcesAvailable - In the implementation block
@property (assign,nonatomic) char resourcesRequiredForDisplayAvailable;                    //@synthesize resourcesRequiredForDisplayAvailable=_resourcesRequiredForDisplayAvailable - In the implementation block
@property (nonatomic,retain) NSMutableOrderedSet * unavailableResources;                   //@synthesize unavailableResources=_unavailableResources - In the implementation block
@property (nonatomic,retain) NSOrderedSet * unavailableResourceErrors;                     //@synthesize unavailableResourceErrors=_unavailableResourceErrors - In the implementation block
@property (nonatomic,retain) NSMapTable * targetSelectorTable;                             //@synthesize targetSelectorTable=_targetSelectorTable - In the implementation block
@property (nonatomic,readonly) char didEvaluateAvailabilityOfNodes;                        //@synthesize didEvaluateAvailabilityOfNodes=_didEvaluateAvailabilityOfNodes - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> stateAccessQueue;              //@synthesize stateAccessQueue=_stateAccessQueue - In the implementation block
@property (nonatomic,readonly) NSSet * accessResources; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)addResource:(id)arg1 ;
-(void)addTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)removeTarget:(id)arg1 selector:(SEL)arg2 ;
-(NSObject*<OS_dispatch_queue>)stateAccessQueue;
-(void)resourceNodeAvailabilityChanged:(id)arg1 ;
-(id)initWithDefinitions:(id)arg1 ;
-(NSArray *)resourceNodes;
-(void)refreshAvailabilityOfRequiredResourcesOfClasses:(id)arg1 ;
-(char)currentlyRequiresResourceOfClass:(Class)arg1 ;
-(char)currentlyRequiresResourceOfClasses:(id)arg1 ;
-(NSSet *)accessResources;
-(id)currentlyRequiredResourcesOfClass:(Class)arg1 ;
-(void)makeAccessResourcesAvailableAtGlobalLevelWithUserInterface:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)makeAccessResourcesAvailableAtWorkflowLevelWithUserInterface:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)resourceObjectsOfClass:(Class)arg1 ;
-(id)resourceObjectsConformingToProtocol:(id)arg1 ;
-(id)resourceObjectsOfClasses:(id)arg1 ;
-(void)addResourceObjectsOfClassesOrProtocols:(id)arg1 withinNode:(id)arg2 toSet:(id)arg3 ;
-(id)relevantNodes;
-(char)nodeIsRelevant:(id)arg1 ;
-(char)nodeIsAvailable:(id)arg1 error:(id*)arg2 ;
-(void)evaluateAvailabilityOfNodesWithChangedNode:(id)arg1 ;
-(void)evaluateAvailabilityOfNodesIfNeeded;
-(char)resourcesAvailable;
-(char)resourcesRequiredForDisplayAvailable;
-(NSMutableOrderedSet *)unavailableResources;
-(NSOrderedSet *)unavailableResourceErrors;
-(void)setResourcesAvailable:(char)arg1 ;
-(void)setUnavailableResourceErrors:(NSOrderedSet *)arg1 ;
-(void)notifyTargets;
-(NSMapTable *)targetSelectorTable;
-(id)selectorSetForTarget:(id)arg1 ;
-(void)addResource:(id)arg1 withRequiredResources:(id)arg2 ;
-(void)setResourcesRequiredForDisplayAvailable:(char)arg1 ;
-(void)setUnavailableResources:(NSMutableOrderedSet *)arg1 ;
-(void)setResourceNodes:(NSArray *)arg1 ;
-(void)setTargetSelectorTable:(NSMapTable *)arg1 ;
-(char)didEvaluateAvailabilityOfNodes;
@end

