/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:55 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/WorkflowKit.framework/Versions/A/WorkflowKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_xpc_object, OS_dispatch_queue;
@class CKContainer, CKDatabase, NSObject;

@interface WFCloudKitItemRequest : NSObject {

	char _performExpensiveFetchOperations;
	CKContainer* _container;
	CKDatabase* _database;
	NSObject*<OS_xpc_object> _xpcActivity;
	NSObject*<OS_dispatch_queue> _operationWaitingQueue;
	NSObject*<OS_dispatch_queue> _callbackQueue;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> operationWaitingQueue;              //@synthesize operationWaitingQueue=_operationWaitingQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> callbackQueue;                      //@synthesize callbackQueue=_callbackQueue - In the implementation block
@property (nonatomic,readonly) CKContainer * container;                                         //@synthesize container=_container - In the implementation block
@property (nonatomic,readonly) CKDatabase * database;                                           //@synthesize database=_database - In the implementation block
@property (assign,nonatomic) char performExpensiveFetchOperations;                              //@synthesize performExpensiveFetchOperations=_performExpensiveFetchOperations - In the implementation block
@property (nonatomic,retain) NSObject*<OS_xpc_object> xpcActivity;                              //@synthesize xpcActivity=_xpcActivity - In the implementation block
+(void)hydrateItem:(id)arg1 withRecord:(id)arg2 setNilValues:(char)arg3 ;
+(id)createRecordFromItem:(id)arg1 zoneID:(id)arg2 ;
+(void)hydrateItem:(id)arg1 withRecord:(id)arg2 resolvedReferences:(id)arg3 setNilValues:(char)arg4 ;
+(id)desiredKeysFromProperties:(id)arg1 itemType:(Class)arg2 ;
+(void)assignRecordValue:(id)arg1 toItem:(id)arg2 withProperty:(id)arg3 resolvedReferences:(id)arg4 ;
+(id)createRecordIDWithName:(id)arg1 zoneID:(id)arg2 ;
+(id)itemValueForRecordValue:(id)arg1 item:(id)arg2 property:(id)arg3 resolvedReferences:(id)arg4 ;
+(id)recordValueForItemValue:(id)arg1 item:(id)arg2 property:(id)arg3 recordKey:(id)arg4 zoneID:(id)arg5 ;
-(CKContainer *)container;
-(NSObject*<OS_dispatch_queue>)callbackQueue;
-(CKDatabase *)database;
-(void)setXpcActivity:(NSObject*<OS_xpc_object>)arg1 ;
-(NSObject*<OS_xpc_object>)xpcActivity;
-(id)fetchItemWithID:(id)arg1 itemType:(Class)arg2 groupName:(id)arg3 properties:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)updateItems:(id)arg1 setNilValues:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)initWithContainer:(id)arg1 database:(id)arg2 ;
-(id)fetchConfigurationAssetWithType:(id)arg1 configuration:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)fetchConfigurationAssetWithType:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)fetchItemsWithPredicate:(id)arg1 itemType:(Class)arg2 groupName:(id)arg3 properties:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)fetchItemsWithPredicate:(id)arg1 itemType:(Class)arg2 groupName:(id)arg3 properties:(id)arg4 sortDescriptors:(id)arg5 resultsLimit:(unsigned long long)arg6 completionHandler:(/*^block*/id)arg7 ;
-(id)updateItems:(id)arg1 setNilValues:(char)arg2 qualityOfService:(long long)arg3 timeoutIntervalForRequest:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)deleteItem:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)createTaskCancelledError;
-(id)fetchRecordIDs:(id)arg1 desiredKeys:(id)arg2 operationGroup:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(char)performExpensiveFetchOperations;
-(void)setPerformExpensiveFetchOperations:(char)arg1 ;
-(NSObject*<OS_dispatch_queue>)operationWaitingQueue;
@end

