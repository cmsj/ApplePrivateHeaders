/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:20 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVFCore.framework/Versions/A/AVFCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVFCore/AVFCore-Structs.h>
#import <AVFCore/AVWeakObservable.h>
#import <AVFCore/AVKeyPathDependencyHost.h>

@class AVAssetWriterInternal, AVAssetWriterHelper, NSURL, NSString, NSArray, NSError;

@interface AVAssetWriter : NSObject <AVWeakObservable, AVKeyPathDependencyHost> {

	AVAssetWriterInternal* _internal;

}

@property (getter=_helper,retain,readonly) AVAssetWriterHelper * helper; 
@property (nonatomic,__weak,readonly) id<AVAssetWriterDataWritingDelegate> dataWritingDelegate; 
@property (nonatomic,copy,readonly) NSURL * outputURL; 
@property (nonatomic,copy,readonly) NSString * outputFileType; 
@property (nonatomic,readonly) NSArray * availableMediaTypes; 
@property (readonly) long long status; 
@property (readonly) NSError * error; 
@property (nonatomic,copy) NSArray * metadata; 
@property (assign,nonatomic) char shouldOptimizeForNetworkUse; 
@property (nonatomic,copy) NSURL * directoryForTemporaryFiles; 
@property (nonatomic,readonly) NSArray * inputs; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)_errorForOSStatus:(int)arg1 ;
+(id)assetWriterWithURL:(id)arg1 fileType:(id)arg2 error:(id*)arg3 ;
+(id)assetWriterWithDataWritingDelegate:(id)arg1 fileType:(id)arg2 ;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(id)delegate;
-(void)setDelegate:(id)arg1 ;
-(NSError *)error;
-(char)finishWriting;
-(long long)status;
-(id)_helper;
-(void)flush;
-(NSArray *)metadata;
-(void)setMetadata:(NSArray *)arg1 ;
-(NSArray *)inputs;
-(id)initWithContentType:(id)arg1 ;
-(NSURL *)outputURL;
-(void)declareKeyPathDependenciesWithRegistry:(id)arg1 ;
-(void)addCallbackToCancelDuringDeallocation:(id)arg1 ;
-(float)preferredRate;
-(float)preferredVolume;
-(CGAffineTransform)preferredTransform;
-(SCD_Struct_CM3)overallDurationHint;
-(void)setPreferredTransform:(CGAffineTransform)arg1 ;
-(void)setPreferredVolume:(float)arg1 ;
-(id<AVAssetWriterDataWritingDelegate>)dataWritingDelegate;
-(void)setDataWritingDelegate:(id<AVAssetWriterDataWritingDelegate>)arg1 ;
-(SCD_Struct_CM3)movieFragmentInterval;
-(void)setMovieFragmentInterval:(SCD_Struct_CM3)arg1 ;
-(void)setOverallDurationHint:(SCD_Struct_CM3)arg1 ;
-(char)shouldOptimizeForNetworkUse;
-(void)setShouldOptimizeForNetworkUse:(char)arg1 ;
-(NSURL *)directoryForTemporaryFiles;
-(void)setDirectoryForTemporaryFiles:(NSURL *)arg1 ;
-(int)movieTimeScale;
-(void)setMovieTimeScale:(int)arg1 ;
-(void)setPreferredRate:(float)arg1 ;
-(id)inputGroups;
-(SCD_Struct_CM3)preferredOutputSegmentInterval;
-(void)setPreferredOutputSegmentInterval:(SCD_Struct_CM3)arg1 ;
-(SCD_Struct_CM3)initialSegmentStartTime;
-(void)setInitialSegmentStartTime:(SCD_Struct_CM3)arg1 ;
-(id)outputFileTypeProfile;
-(void)setOutputFileTypeProfile:(id)arg1 ;
-(long long)initialMovieFragmentSequenceNumber;
-(void)setInitialMovieFragmentSequenceNumber:(long long)arg1 ;
-(char)producesCombinableFragments;
-(void)setProducesCombinableFragments:(char)arg1 ;
-(id)finishWritingDelegate;
-(id)initWithURL:(id)arg1 fileType:(id)arg2 error:(id*)arg3 ;
-(id)initWithDataWritingDelegate:(id)arg1 fileType:(id)arg2 ;
-(char)_initInternalObject;
-(NSString *)outputFileType;
-(char)_setHelper:(id)arg1 ifCurrentHelper:(id)arg2 withBlock:(/*^block*/id)arg3 ;
-(NSArray *)availableMediaTypes;
-(char)canApplyOutputSettings:(id)arg1 forMediaType:(id)arg2 ;
-(char)canAddInput:(id)arg1 ;
-(void)addInput:(id)arg1 ;
-(char)canAddInputGroup:(id)arg1 ;
-(void)addInputGroup:(id)arg1 ;
-(char)startWriting;
-(void)startSessionAtSourceTime:(SCD_Struct_CM3)arg1 ;
-(void)endSessionAtSourceTime:(SCD_Struct_CM3)arg1 ;
-(void)cancelWriting;
-(void)finishWritingWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)flushSegment;
-(id)initWithFileType:(id)arg1 error:(id*)arg2 ;
-(char)_setHelper:(id)arg1 ifCurrentHelper:(id)arg2 ;
-(char)_supportsSampleReferencesReturningError:(id*)arg1 ;
-(void)setWritesSinglePassUsingPredeterminedFileSize:(long long)arg1 mediaDataSize:(long long)arg2 ;
-(void)setFinishWritingDelegate:(id)arg1 ;
-(void)_transitionToFailedStatusWithError:(id)arg1 ;
@end

