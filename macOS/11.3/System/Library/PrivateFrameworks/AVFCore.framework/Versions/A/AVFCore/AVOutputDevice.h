/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:20 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVFCore.framework/Versions/A/AVFCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AVFCore/AVFCore-Structs.h>
@class AVOutputDeviceInternal;

@interface AVOutputDevice : NSObject {

	AVOutputDeviceInternal* _outputDevice;

}
+(void)initialize;
+(id)sharedLocalDevice;
+(id)outputDeviceWithFigEndpoint:(OpaqueFigEndpointRef)arg1 ;
+(id)outputDeviceWithFigEndpoint:(OpaqueFigEndpointRef)arg1 volumeController:(OpaqueFigVolumeControllerStateRef)arg2 ;
+(id)outputDeviceWithFigEndpoint:(OpaqueFigEndpointRef)arg1 routingContextFactory:(id)arg2 ;
+(void)localDeviceWithCompletion:(/*^block*/id)arg1 ;
+(id)outputDeviceWithRouteDescriptor:(const CFDictionaryRef)arg1 syncController:(OpaqueAPSyncControllerRef)arg2 ;
+(void)localDeviceDidChange;
+(id)outputDeviceWithRouteDescriptor:(CFDictionaryRef)arg1 ;
+(char)canSyncController:(OpaqueAPSyncControllerRef)arg1 supportRoute:(CFDictionaryRef)arg2 ;
+(char)prefersRouteDescriptors;
+(id)outputDeviceWithRouteDescriptor:(CFDictionaryRef)arg1 volumeController:(OpaqueFigVolumeControllerStateRef)arg2 ;
+(id)outputDeviceWithRouteDescriptor:(CFDictionaryRef)arg1 routeDiscoverer:(OpaqueFigRouteDiscovererRef)arg2 ;
+(id)outputDeviceWithRouteDescriptor:(CFDictionaryRef)arg1 routeDiscoverer:(OpaqueFigRouteDiscovererRef)arg2 syncController:(OpaqueAPSyncControllerRef)arg3 ;
+(id)outputDeviceWithRouteDescriptor:(CFDictionaryRef)arg1 routingContextFactory:(id)arg2 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(id)name;
-(float)volume;
-(id)deviceID;
-(id)impl;
-(long long)deviceType;
-(void)setVolume:(float)arg1 ;
-(id)serialNumber;
-(id)groupID;
-(id)deviceName;
-(id)firmwareVersion;
-(id)manufacturer;
-(id)ID;
-(long long)clusterType;
-(long long)volumeControlType;
-(char)automaticallyAllowsConnectionsFromPeersInHomeGroup;
-(void)outputDeviceImplDidChangeVolume:(id)arg1 ;
-(char)canSetVolume;
-(void)outputDeviceImplDidChangeCanChangeVolume:(id)arg1 ;
-(void)outputDeviceImplDidChangeVolumeControlType:(id)arg1 ;
-(void)setSecondDisplayEnabled:(char)arg1 ;
-(void)setSecondDisplayMode:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)setCurrentBluetoothListeningMode:(id)arg1 error:(id*)arg2 ;
-(void)configureUsingBlock:(/*^block*/id)arg1 options:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(long long)deviceSubType;
-(long long)configuredClusterSize;
-(id)modelID;
-(id)identifyingMACAddress;
-(id)clusteredDeviceDescriptions;
-(char)isClusterLeader;
-(id)clusterID;
-(float)batteryLevel;
-(id)airPlayProperties;
-(char)isInUseByPairedDevice;
-(id)connectedPairedDevices;
-(unsigned long long)deviceFeatures;
-(char)requiresAuthorization;
-(char)onlyAllowsConnectionsFromPeersInHomeGroup;
-(char)canAccessRemoteAssets;
-(char)canAccessAppleMusic;
-(char)canAccessiCloudMusicLibrary;
-(char)supportsBufferedAirPlay;
-(char)canBeGrouped;
-(id)proposedGroupID;
-(char)canBeGroupLeader;
-(char)isGroupLeader;
-(char)participatesInGroupPlayback;
-(char)groupContainsGroupLeader;
-(id)logicalDeviceID;
-(char)isLogicalDeviceLeader;
-(char)canCommunicateWithAllLogicalDeviceMembers;
-(char)canRelayCommunicationChannel;
-(char)canPlayEncryptedProgressiveDownloadAssets;
-(char)canFetchMediaDataFromSender;
-(char)presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
-(char)supportsBluetoothSharing;
-(long long)HAPConformance;
-(char)supportsHeadTrackedSpatialAudio;
-(char)isHeadTrackedSpatialAudioActive;
-(id)availableBluetoothListeningModes;
-(id)currentBluetoothListeningMode;
-(void)setCurrentBluetoothListeningMode:(id)arg1 ;
-(id)initWithOutputDeviceImpl:(id)arg1 commChannelManager:(id)arg2 ;
-(id)figEndpointOutputDeviceImpl;
-(void)communicationChannelManager:(id)arg1 didReceiveData:(id)arg2 fromCommunicationChannel:(id)arg3 ;
-(void)communicationChannelManager:(id)arg1 didCloseCommunicationChannel:(id)arg2 ;
-(void)openCommunicationChannelWithOptions:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)outputDeviceImplDidChangeProposedGroupID:(id)arg1 ;
-(id)communicationChannelDelegate;
-(void)updateFrecencyScore;
-(void)setCommunicationChannelDelegate:(id)arg1 ;
-(double)frecencyScore;
-(char)hasBatteryLevel;
-(id)modelSpecificInformation;
-(void)configureUsingBlock:(/*^block*/id)arg1 completionHandler:(/*^block*/id)arg2 ;
@end

