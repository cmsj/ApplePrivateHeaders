/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:19 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AVFCore.framework/Versions/A/AVFCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, AVPlayerItemDelegate, NSObjectNSCopying, AVLoggingIdentifier;
#import <AVFCore/AVFCore-Structs.h>
@class NSURL, NSObject, AVWeakReference, NSArray, AVAsset, NSMutableArray, NSMutableDictionary, AVAudioMix, NSError, AVPlayerItemInterstitialEventCollector, NSDictionary, NSDate, NSString, AVMediaSelection, AVPlayerItem, AVPlayerConnection, AVVideoComposition, AVCustomVideoCompositorSession;

@interface AVPlayerItemInternal : NSObject {

	NSURL* URL;
	NSObject*<OS_dispatch_queue> ivarAccessQueue;
	AVWeakReference* weakReference;
	NSObject*<OS_dispatch_queue> figConfigurationQueue;
	NSObject*<OS_dispatch_queue> figPlaybackItemAccessorQueue;
	NSObject*<OS_dispatch_queue> figPlaybackItemSetterQueue;
	NSObject*<OS_dispatch_queue> seekQueue;
	OpaqueFigSimpleMutexRef seekIDMutex;
	OpaqueVTPixelBufferAttributesMediatorRef pixelBufferAttributeMediator;
	OpaqueCMTimebaseRef proxyUnfoldedTimebase;
	OpaqueCMTimebaseRef proxyFoldedTimebase;
	NSArray* automaticallyLoadedAssetKeys;
	char wasInitializedWithURL;
	AVAsset* asset;
	OpaqueFigPlaybackItemRef figPlaybackItem;
	NSObject*<OS_dispatch_queue> stateDispatchQueue;
	NSArray* cachedTracks;
	NSArray* tracks;
	NSMutableArray* syncLayers;
	NSArray* itemOutputs;
	NSMutableArray* itemVideoOutputs;
	NSMutableDictionary* itemLegibleOutputsForKeys;
	NSMutableDictionary* itemMetadataOutputsForKeys;
	char suppressesVideoLayers;
	OpaqueCMTimebaseRef foldedTimebase;
	OpaqueCMTimebaseRef unfoldedFigTimebase;
	char didBecomeReadyForInspectionOfTracks;
	char didBecomeReadyForInspectionOfPresentationSize;
	char didBecomeReadyForInspectionOfDuration;
	char figAssetDidBecomeReadyForInspectionOfMediaSelectionOptions;
	char didBecomeReadyForInspectionOfRecommendedTimeOffsetFromLive;
	AVAsset* assetWithFigPlaybackItem;
	NSArray* trackIDsForAssetWithFigPlaybackItem;
	char needTimedMetadataNotification;
	char didBecomeReadyForBasicInspection;
	id<AVPlayerItemDelegate> delegate;
	AVAudioMix* audioMix;
	long long status;
	NSError* error;
	SCD_Struct_CM3 forwardPlaybackEndTime;
	SCD_Struct_CM3 reversePlaybackEndTime;
	SCD_Struct_CM3 advanceTimeForOverlappedPlayback;
	char advanceTimeForOverlappedPlaybackWasSet;
	char preservesTimeOffsetFromLive;
	SCD_Struct_CM3 configuredTimeOffsetFromLive;
	SCD_Struct_CM3 recommendedTimeOffsetFromLive;
	SCD_Struct_CM3 duration;
	char seekingWaitsForVideoCompositionRendering;
	NSArray* textStyleRules;
	NSArray* textHighlightArray;
	CFStringRef initialFigTimePitchAlgorithm;
	char canUseNetworkResourcesForLiveStreamingWhilePaused;
	SCD_Struct_CM3 maximumForwardBufferDuration;
	SCD_Struct_CM3 maximumTrailingBufferDuration;
	double preferredPeakBitRate;
	int startsOnFirstEligibleVariant;
	NSArray* itemCollectors;
	NSMutableArray* itemMetadataCollectors;
	AVPlayerItemInterstitialEventCollector* interstitialEventCollector;
	unsigned RTCReportingFlags;
	NSDictionary* gaplessInfo;
	float soundCheckVolumeNormalization;
	float volumeAdjustment;
	NSDictionary* loudnessInfo;
	opaqueMTAudioProcessingTapRef audioProcessingTap;
	char shouldOptimizeForExclusivePlayback;
	char reversesMoreVideoFramesInMemory;
	char reversesMoreVideoFramesInMemoryWasSet;
	char aggressivelyCachesVideoFrames;
	char aggressivelyCachesVideoFramesWasSet;
	char decodesAllFramesDuringOrdinaryPlayback;
	char decodesAllFramesDuringOrdinaryPlaybackWasSet;
	char initialContinuesPlayingDuringPrerollForSeek;
	char initialContinuesPlayingDuringPrerollForRateChange;
	char usesIFrameOnlyPlaybackForHighRateScaledEditsWasSet;
	char usesIFrameOnlyPlaybackForHighRateScaledEdits;
	SCD_Struct_CM3 minimumIntervalForIFrameOnlyPlayback;
	char minimumIntervalForIFrameOnlyPlaybackWasSet;
	float speedThresholdForIFrameOnlyPlayback;
	char speedThresholdForIFrameOnlyPlaybackWasSet;
	NSDate* initialDate;
	NSDate* initialEstimatedDate;
	char requiresAccessLog;
	char suppressesAudioOnlyVariants;
	char prefersOfflinePlayableVariants;
	unsigned long long variantPreferences;
	double preferredMaximumAudioSampleRate;
	NSArray* imageQueueInterpolationCurve;
	char imageQueueInterpolationCurveWasSet;
	char blendsVideoFrames;
	char blendsVideoFramesWasSet;
	char appliesPerFrameHDRDisplayMetadata;
	char appliesPerFrameHDRDisplayMetadataWasSet;
	NSString* videoApertureMode;
	char usesMinimalLatencyForVideoCompositionRendering;
	char initialAlwaysMonitorsPlayability;
	long long initialPlaybackLikelyToKeepUpTrigger;
	char savesDownloadedDataToDiskWhenDone;
	char networkUsuallyExceedsMaxBitRate;
	char allowProgressiveSwitchUp;
	char allowProgressiveStartup;
	char allowProgressiveResume;
	CGSize IFramePrefetchTargetDimensions;
	id<NSObject><NSCopying> AVKitData;
	CGSize preferredMaximumResolution;
	CGSize preferredMinimumResolution;
	char canPlayFastForward;
	char canPlayFastReverse;
	char canPlayReverse;
	char canPlaySlowReverse;
	char canPlaySlowForward;
	char canStepForward;
	char canStepBackward;
	CGSize presentationSize;
	char playbackBufferEmpty;
	char playbackBufferFull;
	char playbackLikelyToKeepUp;
	char restrictsAutomaticMediaSelectionToAvailableOfflineOptions;
	char nonForcedSubtitlesEnabled;
	char hasEnabledVideo;
	char hasVideo;
	char hasEnabledAudio;
	char hasEnqueuedVideoFrame;
	char externalProtectionRequested;
	char automaticallyHandlesInterstitialEvents;
	NSArray* seekableTimeRanges;
	double seekableTimeRangesLastModifiedTime;
	NSArray* loadedTimeRanges;
	SCD_Struct_CM5 loopTimeRange;
	id<AVLoggingIdentifier> loggingIdentifier;
	AVMediaSelection* currentMediaSelection;
	char needToSeekAfterCreatingFigPlaybackItem;
	SCD_Struct_CM3 initialTime;
	unsigned initialSetTimeFlags;
	SCD_Struct_CM3 initialMinSnapTime;
	SCD_Struct_CM3 initialMaxSnapTime;
	unsigned nextSeekIDToGenerate;
	int pendingSeekID;
	/*^block*/id seekCompletionHandler;
	AVPlayerItem* previousItem;
	AVPlayerItem* nextItem;
	AVPlayerConnection* playerConnection;
	char initialWillNeverSeekBackwardsHint;
	AVVideoComposition* videoComposition;
	AVWeakReference* clientsOriginalVideoComposition;
	AVCustomVideoCompositorSession* customVideoCompositorSession;
	void* figVideoCompositor;
	AVPlayerItem* interstitialTemplate;
	long long initialVariantIndex;
	NSString* currentStableVariantID;
	NSMutableDictionary* mediaOptionsSelectedByClient;
	NSArray* timedMetadata;
	NSMutableArray* handlersToCallWhenReadyForEnqueueing;
	char haveInitialSamples;
	char haveCPEProtector;
	char didInformObserversAboutAvailabilityOfTracks;
	char didFireKVOForAssetForNonStreamingItem;
	AVAudioMix* mostRecentlyAppliedAudioMix;
	char audioSpatializationAllowed;
	char audioSpatializationAllowedWasSet;
	unsigned long long allowedAudioSpatializationFormats;
	char allowedAudioSpatializationFormatsWasSet;
	AVWeakReference* playerReference;
	char didSetAssetToAssetWithFigPlaybackItem;
	OpaqueFigCPEProtectorRef figCPEProtector;
	long long lastContentAuthorizationStatus;
	NSString* videoEnhancementMode;
	char isRenderingSpatialAudio;

}
@end

