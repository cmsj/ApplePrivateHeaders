/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:49 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/OSInstaller.framework/Versions/A/OSInstaller
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class SKDisk, NSString, NSURL;

@interface OSInstallOptions : NSObject {

	char _isIngenuine;
	char _shouldConvertToAPFS;
	char _isAppleInternal;
	char _perpareForSealer;
	SKDisk* _dataTarget;
	SKDisk* _systemTarget;
	long long _installType;
	NSString* _localizedProductName;
	NSString* _targetVolumeName;
	NSURL* _baseSystemURL;
	NSURL* _appleDiagnosticsURL;
	NSString* _alternateBlessVolumePath;

}

@property (retain) NSURL * baseSystemURL;                            //@synthesize baseSystemURL=_baseSystemURL - In the implementation block
@property (retain) NSURL * appleDiagnosticsURL;                      //@synthesize appleDiagnosticsURL=_appleDiagnosticsURL - In the implementation block
@property (retain) NSString * alternateBlessVolumePath;              //@synthesize alternateBlessVolumePath=_alternateBlessVolumePath - In the implementation block
@property (retain) SKDisk * dataTarget;                              //@synthesize dataTarget=_dataTarget - In the implementation block
@property (retain) SKDisk * systemTarget;                            //@synthesize systemTarget=_systemTarget - In the implementation block
@property (retain) NSString * baseSystemPath; 
@property (retain) NSString * appleDiagnosticsPath; 
@property (assign) long long installType;                            //@synthesize installType=_installType - In the implementation block
@property (assign) char isIngenuine;                                 //@synthesize isIngenuine=_isIngenuine - In the implementation block
@property (retain) NSString * localizedProductName;                  //@synthesize localizedProductName=_localizedProductName - In the implementation block
@property (assign) char shouldConvertToAPFS;                         //@synthesize shouldConvertToAPFS=_shouldConvertToAPFS - In the implementation block
@property (assign) char isAppleInternal;                             //@synthesize isAppleInternal=_isAppleInternal - In the implementation block
@property (retain) NSString * targetVolumeName;                      //@synthesize targetVolumeName=_targetVolumeName - In the implementation block
@property (assign) char perpareForSealer;                            //@synthesize perpareForSealer=_perpareForSealer - In the implementation block
+(char)isBeingInstalledInternally;
-(char)isAppleInternal;
-(long long)installType;
-(NSString *)localizedProductName;
-(SKDisk *)systemTarget;
-(void)setIsAppleInternal:(char)arg1 ;
-(void)setInstallType:(long long)arg1 ;
-(SKDisk *)dataTarget;
-(void)setSystemTarget:(SKDisk *)arg1 ;
-(void)setDataTarget:(SKDisk *)arg1 ;
-(id)_fileDiskURLForPath:(id)arg1 ;
-(void)setBaseSystemURL:(NSURL *)arg1 ;
-(NSURL *)baseSystemURL;
-(id)_pathFromFileDiskURL:(id)arg1 ;
-(void)setAppleDiagnosticsURL:(NSURL *)arg1 ;
-(NSURL *)appleDiagnosticsURL;
-(id)_mountPointForDiskWithUUID:(id)arg1 ;
-(void)setBaseSystemPath:(NSString *)arg1 ;
-(NSString *)baseSystemPath;
-(void)setAppleDiagnosticsPath:(NSString *)arg1 ;
-(NSString *)appleDiagnosticsPath;
-(char)isIngenuine;
-(void)setIsIngenuine:(char)arg1 ;
-(void)setLocalizedProductName:(NSString *)arg1 ;
-(char)shouldConvertToAPFS;
-(void)setShouldConvertToAPFS:(char)arg1 ;
-(NSString *)targetVolumeName;
-(void)setTargetVolumeName:(NSString *)arg1 ;
-(char)perpareForSealer;
-(void)setPerpareForSealer:(char)arg1 ;
-(NSString *)alternateBlessVolumePath;
-(void)setAlternateBlessVolumePath:(NSString *)arg1 ;
@end

