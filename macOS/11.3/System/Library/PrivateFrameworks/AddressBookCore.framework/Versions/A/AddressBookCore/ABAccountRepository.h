/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AddressBookCore.framework/Versions/A/AddressBookCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/ABAccountCollection.h>

@class NSMutableDictionary, ABDefaultAccountPreference, NSString, ABAccount, NSArray;

@interface ABAccountRepository : NSObject <ABAccountCollection> {

	NSMutableDictionary* _existingAccounts;
	NSMutableDictionary* _hiddenAccounts;
	char _areExistingAccountsValid;
	char _areHiddenAccountsValid;
	id _futureAutocompletionAccounts;
	id _factory;
	id _defaultAccountPreference;

}

@property (retain,readonly) ABDefaultAccountPreference * defaultAccountPreference;              //@synthesize defaultAccountPreference=_defaultAccountPreference - In the implementation block
@property (copy) NSString * tag; 
@property (copy,readonly) NSString * basePath; 
@property (readonly) ABAccount * defaultAccount; 
@property (copy,readonly) NSArray * allAccounts; 
@property (copy,readonly) NSArray * enabledAccounts; 
@property (copy,readonly) NSArray * persistentAccounts; 
@property (copy,readonly) NSArray * hiddenAccounts; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)os_log;
+(id)dictionaryByObscuringPassword:(id)arg1 ;
+(void)prepareLocalCacheForAccountWithIdentifier:(id)arg1 factory:(id)arg2 ;
+(id)sharedRepository;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(void)setTag:(NSString *)arg1 ;
-(NSString *)tag;
-(id)accountWithIdentifier:(id)arg1 ;
-(id)initWithFactory:(id)arg1 ;
-(id)accounts;
-(id)sources;
-(NSArray *)enabledAccounts;
-(NSArray *)persistentAccounts;
-(NSArray *)allAccounts;
-(ABAccount *)defaultAccount;
-(NSArray *)hiddenAccounts;
-(NSString *)basePath;
-(void)runWithLock:(/*^block*/id)arg1 ;
-(ABDefaultAccountPreference *)defaultAccountPreference;
-(char)configuredForSingleSource;
-(void)addAccountWithIdentifierIfAbsent:(id)arg1 ;
-(void)invalidateAllAccounts;
-(void)replaceAccountWithIdentifier:(id)arg1 shouldPostResetNotification:(char)arg2 ;
-(void)nts_addAccountsFromArray:(id)arg1 ;
-(void)nts_invalidateAutocompletionAccounts;
-(void)nts_removeAccountsFromArray:(id)arg1 ;
-(id)nts_allExistingAccounts;
-(char)addAccountWithSource:(id)arg1 andPostDidChangeNotification:(char)arg2 ;
-(id)addAccountIfAbsent:(id)arg1 andPostDidChangeNotification:(char)arg2 ;
-(id)nts_accountForIdentifier:(id)arg1 ;
-(void)nts_addAccount:(id)arg1 ;
-(id)sortAccounts:(id)arg1 ;
-(void)postDidChangeNotificationWithAccounts:(id)arg1 ;
-(void)replaceAccountWithIdentifier:(id)arg1 ;
-(void)postAddedExternallyNotificationWithAccount:(id)arg1 ;
-(char)shouldAddedAccountBecomeDefault:(id)arg1 ;
-(void)setDefaultAccount:(ABAccount *)arg1 ;
-(char)removeAccount:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)nts_removeAccount:(id)arg1 ;
-(void)makeNextAvailableAccountTheDefault;
-(void)postRemovedExternallyNotificationWithAccount:(id)arg1 ;
-(void)postResetNotification;
-(void)invalidateAutocompletionAccounts;
-(id)nts_removeAllExistingAccounts;
-(id)nonHiddenAccountWithIdentifier:(id)arg1 ;
-(id)hiddenAccountWithIdentifier:(id)arg1 ;
-(void)runWithLockLoadingExistingAccountsIfNecessary:(/*^block*/id)arg1 ;
-(id)nts_hiddenAccountForIdentifier:(id)arg1 ;
-(void)runWithLockLoadingHiddenAccountsIfNecessary:(/*^block*/id)arg1 ;
-(void)postDidLoadNotificationWithAccounts:(id)arg1 ;
-(id)nts_hiddenAccounts;
-(id)accountComparerForExistingAccounts;
-(id)defaultableAccounts;
-(void)nts_addHiddenAccountsFromArray:(id)arg1 ;
-(id)autocompletionAccounts;
-(id)futureAutocompletionAccounts;
-(id)newFutureAutocompletionAccounts;
-(id)autocompletionAccountsFromEnabledAccounts;
-(void)postDidChangeNotificationWithAccounts:(id)arg1 includingContactStoreNotification:(char)arg2 ;
-(char)mergeDataFromAccount:(id)arg1 toAccount:(id)arg2 withOptions:(int)arg3 error:(id*)arg4 ;
-(id)initWithBasePath:(id)arg1 ;
-(id)makeAddressBookWithOptions:(id)arg1 ;
-(void)refreshEnabledAccounts;
-(void)addSourceWithUidIfAbsent:(id)arg1 ;
-(void)invalidateAllSources;
-(void)replaceSourceWithUid:(id)arg1 ;
-(char)addAccountWithSource:(id)arg1 ;
-(id)addAccountWithComponents:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)removeAccount:(id)arg1 error:(id*)arg2 ;
-(char)removeAccounts:(id)arg1 error:(id*)arg2 ;
-(void)removeSourceWithUid:(id)arg1 ;
-(void)invalidateAutocompletionSources;
-(id)setEnabled:(char)arg1 forAccountWithIdentifier:(id)arg2 ;
-(id)sourceWithUID:(id)arg1 ;
-(id)existingAccountIdentifierEquivalentToProposedConfig:(id)arg1 ;
-(id)defaultAccountTypeInfo;
-(id)autocompletionSources;
-(void)postChangedExternallyNotificationWithAccountIdentifier:(id)arg1 ;
-(void)dumpCache;
-(char)mergeDataFromAccount:(id)arg1 toAccount:(id)arg2 error:(id*)arg3 ;
@end

