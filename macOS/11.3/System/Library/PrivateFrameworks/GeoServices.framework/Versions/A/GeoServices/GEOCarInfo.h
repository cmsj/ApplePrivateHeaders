/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:15 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <libobjc.A.dylib/NSCopying.h>

@class PBDataReader, PBUnknownFields, NSString, GEOScreenDimension;

@interface GEOCarInfo : PBCodable <NSCopying> {

	PBDataReader* _reader;
	PBUnknownFields* _unknownFields;
	SCD_Struct_GE86* _engineTypes;
	SCD_Struct_GE86* _inputMethods;
	GEOScreenResolution _screenResolution;
	NSString* _carName;
	NSString* _manufacturer;
	NSString* _model;
	GEOScreenDimension* _screenDimension;
	unsigned _readerMarkPos;
	unsigned _readerMarkLength;
	os_unfair_lock_s _readerLock;
	int _brightness;
	int _colorRange;
	int _deviceConnection;
	int _navAidedDrivingStatus;
	char _destinationSharingEnabled;
	char _isInstructionCardEnabled;
	char _isInstrumentClusterEnabled;
	char _isMapviewEnabled;
	struct {
		unsigned has_screenResolution : 1;
		unsigned has_brightness : 1;
		unsigned has_colorRange : 1;
		unsigned has_deviceConnection : 1;
		unsigned has_navAidedDrivingStatus : 1;
		unsigned has_destinationSharingEnabled : 1;
		unsigned has_isInstructionCardEnabled : 1;
		unsigned has_isInstrumentClusterEnabled : 1;
		unsigned has_isMapviewEnabled : 1;
		unsigned read_unknownFields : 1;
		unsigned read_engineTypes : 1;
		unsigned read_inputMethods : 1;
		unsigned read_carName : 1;
		unsigned read_manufacturer : 1;
		unsigned read_model : 1;
		unsigned read_screenDimension : 1;
		unsigned wrote_anyField : 1;
	}  _flags;

}

@property (nonatomic,readonly) char hasManufacturer; 
@property (nonatomic,retain) NSString * manufacturer; 
@property (nonatomic,readonly) char hasModel; 
@property (nonatomic,retain) NSString * model; 
@property (assign,nonatomic) char hasScreenResolution; 
@property (assign,nonatomic) GEOScreenResolution screenResolution; 
@property (assign,nonatomic) char hasDeviceConnection; 
@property (assign,nonatomic) int deviceConnection; 
@property (assign,nonatomic) char hasDestinationSharingEnabled; 
@property (assign,nonatomic) char destinationSharingEnabled; 
@property (assign,nonatomic) char hasNavAidedDrivingStatus; 
@property (assign,nonatomic) int navAidedDrivingStatus; 
@property (nonatomic,readonly) unsigned long long engineTypesCount; 
@property (nonatomic,readonly) int* engineTypes; 
@property (nonatomic,readonly) char hasCarName; 
@property (nonatomic,retain) NSString * carName; 
@property (nonatomic,readonly) char hasScreenDimension; 
@property (nonatomic,retain) GEOScreenDimension * screenDimension; 
@property (assign,nonatomic) char hasColorRange; 
@property (assign,nonatomic) int colorRange; 
@property (assign,nonatomic) char hasBrightness; 
@property (assign,nonatomic) int brightness; 
@property (nonatomic,readonly) unsigned long long inputMethodsCount; 
@property (nonatomic,readonly) int* inputMethods; 
@property (assign,nonatomic) char hasIsInstrumentClusterEnabled; 
@property (assign,nonatomic) char isInstrumentClusterEnabled; 
@property (assign,nonatomic) char hasIsInstructionCardEnabled; 
@property (assign,nonatomic) char isInstructionCardEnabled; 
@property (assign,nonatomic) char hasIsMapviewEnabled; 
@property (assign,nonatomic) char isMapviewEnabled; 
@property (nonatomic,readonly) PBUnknownFields * unknownFields; 
+(char)isValid:(id)arg1 ;
+(id)carInfoWithTraits:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(id)initWithData:(id)arg1 ;
-(id)initWithDictionary:(id)arg1 ;
-(id)dictionaryRepresentation;
-(void)setBrightness:(int)arg1 ;
-(void)mergeFrom:(id)arg1 ;
-(char)readFrom:(id)arg1 ;
-(void)writeTo:(id)arg1 ;
-(void)copyTo:(id)arg1 ;
-(NSString *)model;
-(void)setModel:(NSString *)arg1 ;
-(NSString *)manufacturer;
-(void)setManufacturer:(NSString *)arg1 ;
-(int)brightness;
-(void)readAll:(char)arg1 ;
-(id)jsonRepresentation;
-(id)initWithJSON:(id)arg1 ;
-(PBUnknownFields *)unknownFields;
-(void)clearUnknownFields:(char)arg1 ;
-(void)addEngineType:(int)arg1 ;
-(unsigned long long)engineTypesCount;
-(void)clearEngineTypes;
-(int)engineTypeAtIndex:(unsigned long long)arg1 ;
-(int*)engineTypes;
-(void)setEngineTypes:(int*)arg1 count:(unsigned long long)arg2 ;
-(id)engineTypesAsString:(int)arg1 ;
-(int)StringAsEngineTypes:(id)arg1 ;
-(id)initWithTraits:(id)arg1 ;
-(void)setDeviceConnection:(int)arg1 ;
-(int)deviceConnection;
-(NSString *)carName;
-(GEOScreenDimension *)screenDimension;
-(void)setScreenResolution:(GEOScreenResolution)arg1 ;
-(void)setDestinationSharingEnabled:(char)arg1 ;
-(void)setNavAidedDrivingStatus:(int)arg1 ;
-(void)setCarName:(NSString *)arg1 ;
-(void)setScreenDimension:(GEOScreenDimension *)arg1 ;
-(void)setColorRange:(int)arg1 ;
-(void)addInputMethod:(int)arg1 ;
-(void)setIsInstrumentClusterEnabled:(char)arg1 ;
-(void)setIsInstructionCardEnabled:(char)arg1 ;
-(void)setIsMapviewEnabled:(char)arg1 ;
-(unsigned long long)inputMethodsCount;
-(void)clearInputMethods;
-(int)inputMethodAtIndex:(unsigned long long)arg1 ;
-(char)hasManufacturer;
-(char)hasModel;
-(GEOScreenResolution)screenResolution;
-(void)setHasScreenResolution:(char)arg1 ;
-(char)hasScreenResolution;
-(void)setHasDeviceConnection:(char)arg1 ;
-(char)hasDeviceConnection;
-(id)deviceConnectionAsString:(int)arg1 ;
-(int)StringAsDeviceConnection:(id)arg1 ;
-(char)destinationSharingEnabled;
-(void)setHasDestinationSharingEnabled:(char)arg1 ;
-(char)hasDestinationSharingEnabled;
-(int)navAidedDrivingStatus;
-(void)setHasNavAidedDrivingStatus:(char)arg1 ;
-(char)hasNavAidedDrivingStatus;
-(id)navAidedDrivingStatusAsString:(int)arg1 ;
-(int)StringAsNavAidedDrivingStatus:(id)arg1 ;
-(char)hasCarName;
-(char)hasScreenDimension;
-(int)colorRange;
-(void)setHasColorRange:(char)arg1 ;
-(char)hasColorRange;
-(void)setHasBrightness:(char)arg1 ;
-(char)hasBrightness;
-(int*)inputMethods;
-(void)setInputMethods:(int*)arg1 count:(unsigned long long)arg2 ;
-(id)inputMethodsAsString:(int)arg1 ;
-(int)StringAsInputMethods:(id)arg1 ;
-(char)isInstrumentClusterEnabled;
-(void)setHasIsInstrumentClusterEnabled:(char)arg1 ;
-(char)hasIsInstrumentClusterEnabled;
-(char)isInstructionCardEnabled;
-(void)setHasIsInstructionCardEnabled:(char)arg1 ;
-(char)hasIsInstructionCardEnabled;
-(char)isMapviewEnabled;
-(void)setHasIsMapviewEnabled:(char)arg1 ;
-(char)hasIsMapviewEnabled;
@end

