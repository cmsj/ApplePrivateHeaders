/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:12 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <libobjc.A.dylib/NSCopying.h>

@class PBDataReader, GEOLocation, NSData, GEOLatLng, NSArray;

@interface GEOCompanionRouteStatus : PBCodable <NSCopying> {

	PBDataReader* _reader;
	SCD_Struct_GE17* _selectedRideIndexs;
	GEOLocation* _location;
	NSData* _routeID;
	GEOLatLng* _routeMatchCoordinate;
	double _timestamp;
	unsigned _readerMarkPos;
	unsigned _readerMarkLength;
	os_unfair_lock_s _readerLock;
	unsigned _distanceRemainingOnRoute;
	unsigned _distanceToManeuver;
	unsigned _distanceToRoute;
	int _feedbackType;
	int _hapticsType;
	unsigned _remainingTime;
	unsigned _routeLocationIndex;
	float _routeLocationOffset;
	unsigned _stepID;
	char _guidancePromptsEnabled;
	char _isConnectedToCarplay;
	char _lowGuidanceNavigation;
	SCD_Struct_GE75 _flags;

}

@property (nonatomic,readonly) char isNavigating; 
@property (nonatomic,readonly) char isRecalculating; 
@property (nonatomic,readonly) char hasEffectiveStepID; 
@property (nonatomic,readonly) unsigned effectiveStepID; 
@property (nonatomic,readonly) char hasEffectiveDistanceToManeuver; 
@property (nonatomic,readonly) unsigned effectiveDistanceToManeuver; 
@property (nonatomic,readonly) NSArray * selectedRideIndices; 
@property (assign,nonatomic) char hasFeedbackType; 
@property (assign,nonatomic) int feedbackType; 
@property (assign,nonatomic) char hasStepID; 
@property (assign,nonatomic) unsigned stepID; 
@property (assign,nonatomic) char hasDistanceToManeuver; 
@property (assign,nonatomic) unsigned distanceToManeuver; 
@property (assign,nonatomic) char hasDistanceToRoute; 
@property (assign,nonatomic) unsigned distanceToRoute; 
@property (assign,nonatomic) char hasDistanceRemainingOnRoute; 
@property (assign,nonatomic) unsigned distanceRemainingOnRoute; 
@property (assign,nonatomic) char hasRemainingTime; 
@property (assign,nonatomic) unsigned remainingTime; 
@property (nonatomic,readonly) char hasLocation; 
@property (nonatomic,retain) GEOLocation * location; 
@property (assign,nonatomic) char hasRouteLocationIndex; 
@property (assign,nonatomic) unsigned routeLocationIndex; 
@property (assign,nonatomic) char hasRouteLocationOffset; 
@property (assign,nonatomic) float routeLocationOffset; 
@property (assign,nonatomic) char hasTimestamp; 
@property (assign,nonatomic) double timestamp; 
@property (nonatomic,readonly) char hasRouteMatchCoordinate; 
@property (nonatomic,retain) GEOLatLng * routeMatchCoordinate; 
@property (nonatomic,readonly) char hasRouteID; 
@property (nonatomic,retain) NSData * routeID; 
@property (assign,nonatomic) char hasGuidancePromptsEnabled; 
@property (assign,nonatomic) char guidancePromptsEnabled; 
@property (nonatomic,readonly) unsigned long long selectedRideIndexsCount; 
@property (nonatomic,readonly) unsigned* selectedRideIndexs; 
@property (assign,nonatomic) char hasLowGuidanceNavigation; 
@property (assign,nonatomic) char lowGuidanceNavigation; 
@property (assign,nonatomic) char hasHapticsType; 
@property (assign,nonatomic) int hapticsType; 
@property (assign,nonatomic) char hasIsConnectedToCarplay; 
@property (assign,nonatomic) char isConnectedToCarplay; 
+(char)isValid:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(id)initWithData:(id)arg1 ;
-(id)initWithDictionary:(id)arg1 ;
-(GEOLocation *)location;
-(id)dictionaryRepresentation;
-(double)timestamp;
-(char)isNavigating;
-(void)setLocation:(GEOLocation *)arg1 ;
-(void)mergeFrom:(id)arg1 ;
-(char)readFrom:(id)arg1 ;
-(void)writeTo:(id)arg1 ;
-(void)copyTo:(id)arg1 ;
-(void)setTimestamp:(double)arg1 ;
-(char)hasTimestamp;
-(void)readAll:(char)arg1 ;
-(id)jsonRepresentation;
-(id)initWithJSON:(id)arg1 ;
-(unsigned)stepID;
-(void)setHasTimestamp:(char)arg1 ;
-(void)setStepID:(unsigned)arg1 ;
-(void)setRouteID:(NSData *)arg1 ;
-(NSData *)routeID;
-(char)hasLocation;
-(void)setFeedbackType:(int)arg1 ;
-(int)feedbackType;
-(void)setHasFeedbackType:(char)arg1 ;
-(char)hasFeedbackType;
-(id)feedbackTypeAsString:(int)arg1 ;
-(int)StringAsFeedbackType:(id)arg1 ;
-(char)hasRouteID;
-(GEOLatLng *)routeMatchCoordinate;
-(void)setDistanceToManeuver:(unsigned)arg1 ;
-(void)setDistanceToRoute:(unsigned)arg1 ;
-(void)setDistanceRemainingOnRoute:(unsigned)arg1 ;
-(void)setRemainingTime:(unsigned)arg1 ;
-(void)setRouteLocationIndex:(unsigned)arg1 ;
-(void)setRouteLocationOffset:(float)arg1 ;
-(void)setRouteMatchCoordinate:(GEOLatLng *)arg1 ;
-(void)setGuidancePromptsEnabled:(char)arg1 ;
-(void)addSelectedRideIndex:(unsigned)arg1 ;
-(void)setLowGuidanceNavigation:(char)arg1 ;
-(void)setHapticsType:(int)arg1 ;
-(void)setIsConnectedToCarplay:(char)arg1 ;
-(unsigned long long)selectedRideIndexsCount;
-(void)clearSelectedRideIndexs;
-(unsigned)selectedRideIndexAtIndex:(unsigned long long)arg1 ;
-(void)setHasStepID:(char)arg1 ;
-(char)hasStepID;
-(unsigned)distanceToManeuver;
-(void)setHasDistanceToManeuver:(char)arg1 ;
-(char)hasDistanceToManeuver;
-(unsigned)distanceToRoute;
-(void)setHasDistanceToRoute:(char)arg1 ;
-(char)hasDistanceToRoute;
-(unsigned)distanceRemainingOnRoute;
-(void)setHasDistanceRemainingOnRoute:(char)arg1 ;
-(char)hasDistanceRemainingOnRoute;
-(unsigned)remainingTime;
-(void)setHasRemainingTime:(char)arg1 ;
-(char)hasRemainingTime;
-(unsigned)routeLocationIndex;
-(void)setHasRouteLocationIndex:(char)arg1 ;
-(char)hasRouteLocationIndex;
-(float)routeLocationOffset;
-(void)setHasRouteLocationOffset:(char)arg1 ;
-(char)hasRouteLocationOffset;
-(char)hasRouteMatchCoordinate;
-(char)guidancePromptsEnabled;
-(void)setHasGuidancePromptsEnabled:(char)arg1 ;
-(char)hasGuidancePromptsEnabled;
-(unsigned*)selectedRideIndexs;
-(void)setSelectedRideIndexs:(unsigned*)arg1 count:(unsigned long long)arg2 ;
-(char)lowGuidanceNavigation;
-(void)setHasLowGuidanceNavigation:(char)arg1 ;
-(char)hasLowGuidanceNavigation;
-(int)hapticsType;
-(void)setHasHapticsType:(char)arg1 ;
-(char)hasHapticsType;
-(id)hapticsTypeAsString:(int)arg1 ;
-(int)StringAsHapticsType:(id)arg1 ;
-(char)isConnectedToCarplay;
-(void)setHasIsConnectedToCarplay:(char)arg1 ;
-(char)hasIsConnectedToCarplay;
-(void)_updateClusteredSectionSelectedRideIndicesFromRoute:(id)arg1 ;
-(unsigned)effectiveStepID;
-(id)initWithRouteID:(id)arg1 ;
-(id)initWithRoute:(id)arg1 routeID:(id)arg2 ;
-(void)updateWithRoute:(id)arg1 routeID:(id)arg2 ;
-(void)updateClusteredSectionSelectedRideIndicesFromRoute:(id)arg1 routeID:(id)arg2 ;
-(void)updateFeedbackWithNavigationState:(int)arg1 locationUnreliable:(char)arg2 announcementStage:(unsigned long long)arg3 nextAnnouncementStage:(unsigned long long)arg4 nextAnnouncementTime:(double)arg5 ;
-(char)isRecalculating;
-(char)hasEffectiveStepID;
-(unsigned)effectiveStepIDInRoute:(id)arg1 ;
-(char)hasEffectiveDistanceToManeuver;
-(unsigned)effectiveDistanceToManeuver;
-(NSArray *)selectedRideIndices;
@end

