/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:13 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <GeoServices/GeoServices-Structs.h>
@class GEOComposedRoute, GEORouteRoadMatcher;

@interface GEORouteMatcher : NSObject {

	GEOComposedRoute* _route;
	char _useStrictInitialOnRouteCriteria;
	GEORouteRoadMatcher* _routeRoadMatcher;
	char _shouldSnapRouteMatchToRoute;
	char _useMatchedCoordinateForMatching;

}

@property (assign,nonatomic) char useStrictInitialOnRouteCriteria;              //@synthesize useStrictInitialOnRouteCriteria=_useStrictInitialOnRouteCriteria - In the implementation block
@property (assign,nonatomic) char shouldSnapRouteMatchToRoute;                  //@synthesize shouldSnapRouteMatchToRoute=_shouldSnapRouteMatchToRoute - In the implementation block
@property (assign,nonatomic) char useMatchedCoordinateForMatching;              //@synthesize useMatchedCoordinateForMatching=_useMatchedCoordinateForMatching - In the implementation block
-(void)dealloc;
-(id)initWithRoute:(id)arg1 ;
-(PolylineCoordinate)closestRouteCoordinateForLocationCoordinate:(GEOCoarseLocationLatLng)arg1 ;
-(id)matchToClosestPointOnRouteWithLocation:(id)arg1 ;
-(void)_finishRouteMatch:(id)arg1 previousRouteMatch:(id)arg2 forLocation:(id)arg3 ;
-(id)_candidateForSegment:(id)arg1 location:(id)arg2 previousRouteMatch:(id)arg3 ;
-(char)_supportsSnapping;
-(id)matchToRouteWithLocation:(id)arg1 previousRouteMatch:(id)arg2 ;
-(void)setUseMatchedCoordinateForMatching:(char)arg1 ;
-(char)useMatchedCoordinateForMatching;
-(id)matchToRouteWithLocation:(id)arg1 ;
-(void)_startRouteMatch;
-(void)_considerCandidateMatch:(id)arg1 ;
-(void)_forEachSegmentNearLocation:(id)arg1 previousRouteMatch:(id)arg2 handler:(/*^block*/id)arg3 ;
-(PolylineCoordinate)_guaranteedRouteCoordinateForLocationCoordinate:(GEOCoarseLocationLatLng)arg1 ;
-(double)distanceToRouteFrom:(GEOCoarseLocationLatLng)arg1 startDistance:(double)arg2 endDistance:(double)arg3 ;
-(id)_startStepForPreviousRouteMatch:(id)arg1 ;
-(id)_stepForPointIndex:(unsigned)arg1 previousStep:(id)arg2 ;
-(char)_shouldConsiderCourseForLocation:(id)arg1 ;
-(double)_scoreModifierForStep:(id)arg1 previousStep:(id)arg2 ;
-(void)_snapRouteMatchToRoad:(id)arg1 ;
-(double)distanceToRouteFrom:(GEOCoarseLocationLatLng)arg1 ;
-(char)useStrictInitialOnRouteCriteria;
-(void)setUseStrictInitialOnRouteCriteria:(char)arg1 ;
-(char)shouldSnapRouteMatchToRoute;
-(void)setShouldSnapRouteMatchToRoute:(char)arg1 ;
@end

