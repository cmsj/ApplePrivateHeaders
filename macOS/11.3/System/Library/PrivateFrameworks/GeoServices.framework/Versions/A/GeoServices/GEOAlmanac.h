/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:15 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <GeoServices/GeoServices-Structs.h>
@class GEOAlmanacRiseTransitSet, NSDate;

@interface GEOAlmanac : NSObject {

	GEOAlmanacRiseTransitSet* _previousRiseTransitSet;
	GEOAlmanacRiseTransitSet* _currentRiseTransitSet;
	GEOAlmanacRiseTransitSet* _nextRiseTransitSet;
	set<CAARiseTransitSetDetails2, _CAARiseTransitSetDetails2IsLessThan, std::__1::allocator<CAARiseTransitSetDetails2>>* _riseTransitSetEvents;

}

@property (nonatomic,readonly) char isDayLight; 
@property (nonatomic,readonly) NSDate * previousSunrise; 
@property (nonatomic,readonly) NSDate * previousTransit; 
@property (nonatomic,readonly) NSDate * previousSunset; 
@property (nonatomic,readonly) NSDate * sunrise; 
@property (nonatomic,readonly) NSDate * transit; 
@property (nonatomic,readonly) NSDate * sunset; 
@property (nonatomic,readonly) NSDate * nextSunrise; 
@property (nonatomic,readonly) NSDate * nextTransit; 
@property (nonatomic,readonly) NSDate * nextSunset; 
-(id)description;
-(void)calculateAstronomicalTimeForLocation:(GEOCoarseLocationLatLng)arg1 time:(double)arg2 ;
-(char)isDayLight;
-(NSDate *)transit;
-(void)calculateAstronomicalTimeForLocation:(GEOCoarseLocationLatLng)arg1 altitudeInDegrees:(double)arg2 ;
-(void)calculateAstronomicalTimeForLocation:(GEOCoarseLocationLatLng)arg1 date:(id)arg2 altitudeInDegrees:(double)arg3 options:(unsigned long long)arg4 ;
-(void)calculateAstronomicalTimeForLocation:(GEOCoarseLocationLatLng)arg1 time:(double)arg2 altitudeInDegrees:(double)arg3 ;
-(void)calculateGeocentricDirectionForSunX:(double*)arg1 Y:(double*)arg2 Z:(double*)arg3 date:(id)arg4 ;
-(char)isDayLightForDate:(id)arg1 ;
-(NSDate *)previousSunrise;
-(NSDate *)previousTransit;
-(NSDate *)previousSunset;
-(NSDate *)sunrise;
-(NSDate *)sunset;
-(NSDate *)nextSunrise;
-(NSDate *)nextTransit;
-(NSDate *)nextSunset;
-(void)calculateAstronomicalTimeForLocation:(GEOCoarseLocationLatLng)arg1 ;
-(void)calculateAstronomicalTimeForLocation:(GEOCoarseLocationLatLng)arg1 time:(double)arg2 altitudeInDegrees:(double)arg3 options:(unsigned long long)arg4 ;
-(void)calculateGeocentricDirectionForSunX:(double*)arg1 Y:(double*)arg2 Z:(double*)arg3 ;
-(char)isDayLightForTime:(double)arg1 ;
@end

