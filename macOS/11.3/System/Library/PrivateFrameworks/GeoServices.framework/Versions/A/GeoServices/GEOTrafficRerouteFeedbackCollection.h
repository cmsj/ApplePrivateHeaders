/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:11 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <GeoServices/GeoServices-Structs.h>
#import <ProtocolBuffer/PBCodable.h>
#import <libobjc.A.dylib/NSCopying.h>

@class PBDataReader, NSData, NSMutableArray;

@interface GEOTrafficRerouteFeedbackCollection : PBCodable <NSCopying> {

	PBDataReader* _reader;
	NSData* _directionResponseID;
	NSData* _oldRouteID;
	NSMutableArray* _oldRouteIncidents;
	NSData* _reroutedRouteID;
	unsigned _readerMarkPos;
	unsigned _readerMarkLength;
	os_unfair_lock_s _readerLock;
	unsigned _oldRouteHistoricTravelTime;
	unsigned _oldRouteTravelTime;
	unsigned _reroutedRouteHistoricTravelTime;
	unsigned _reroutedRouteTravelTime;
	char _oldRouteBlocked;
	struct {
		unsigned has_oldRouteHistoricTravelTime : 1;
		unsigned has_oldRouteTravelTime : 1;
		unsigned has_reroutedRouteHistoricTravelTime : 1;
		unsigned has_reroutedRouteTravelTime : 1;
		unsigned has_oldRouteBlocked : 1;
		unsigned read_directionResponseID : 1;
		unsigned read_oldRouteID : 1;
		unsigned read_oldRouteIncidents : 1;
		unsigned read_reroutedRouteID : 1;
		unsigned wrote_anyField : 1;
	}  _flags;

}

@property (assign,nonatomic) char hasOldRouteTravelTime; 
@property (assign,nonatomic) unsigned oldRouteTravelTime; 
@property (assign,nonatomic) char hasReroutedRouteTravelTime; 
@property (assign,nonatomic) unsigned reroutedRouteTravelTime; 
@property (assign,nonatomic) char hasOldRouteHistoricTravelTime; 
@property (assign,nonatomic) unsigned oldRouteHistoricTravelTime; 
@property (assign,nonatomic) char hasReroutedRouteHistoricTravelTime; 
@property (assign,nonatomic) unsigned reroutedRouteHistoricTravelTime; 
@property (assign,nonatomic) char hasOldRouteBlocked; 
@property (assign,nonatomic) char oldRouteBlocked; 
@property (nonatomic,retain) NSMutableArray * oldRouteIncidents; 
@property (nonatomic,readonly) char hasDirectionResponseID; 
@property (nonatomic,retain) NSData * directionResponseID; 
@property (nonatomic,readonly) char hasOldRouteID; 
@property (nonatomic,retain) NSData * oldRouteID; 
@property (nonatomic,readonly) char hasReroutedRouteID; 
@property (nonatomic,retain) NSData * reroutedRouteID; 
+(char)isValid:(id)arg1 ;
+(Class)oldRouteIncidentsType;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)init;
-(id)initWithData:(id)arg1 ;
-(id)initWithDictionary:(id)arg1 ;
-(id)dictionaryRepresentation;
-(void)mergeFrom:(id)arg1 ;
-(char)readFrom:(id)arg1 ;
-(void)writeTo:(id)arg1 ;
-(void)copyTo:(id)arg1 ;
-(void)readAll:(char)arg1 ;
-(id)jsonRepresentation;
-(id)initWithJSON:(id)arg1 ;
-(NSData *)directionResponseID;
-(NSData *)oldRouteID;
-(NSData *)reroutedRouteID;
-(void)setOldRouteTravelTime:(unsigned)arg1 ;
-(void)setReroutedRouteTravelTime:(unsigned)arg1 ;
-(void)setOldRouteHistoricTravelTime:(unsigned)arg1 ;
-(void)setReroutedRouteHistoricTravelTime:(unsigned)arg1 ;
-(void)setOldRouteBlocked:(char)arg1 ;
-(void)addOldRouteIncidents:(id)arg1 ;
-(void)setDirectionResponseID:(NSData *)arg1 ;
-(void)setOldRouteID:(NSData *)arg1 ;
-(void)setReroutedRouteID:(NSData *)arg1 ;
-(unsigned long long)oldRouteIncidentsCount;
-(void)clearOldRouteIncidents;
-(id)oldRouteIncidentsAtIndex:(unsigned long long)arg1 ;
-(unsigned)oldRouteTravelTime;
-(void)setHasOldRouteTravelTime:(char)arg1 ;
-(char)hasOldRouteTravelTime;
-(unsigned)reroutedRouteTravelTime;
-(void)setHasReroutedRouteTravelTime:(char)arg1 ;
-(char)hasReroutedRouteTravelTime;
-(unsigned)oldRouteHistoricTravelTime;
-(void)setHasOldRouteHistoricTravelTime:(char)arg1 ;
-(char)hasOldRouteHistoricTravelTime;
-(unsigned)reroutedRouteHistoricTravelTime;
-(void)setHasReroutedRouteHistoricTravelTime:(char)arg1 ;
-(char)hasReroutedRouteHistoricTravelTime;
-(char)oldRouteBlocked;
-(void)setHasOldRouteBlocked:(char)arg1 ;
-(char)hasOldRouteBlocked;
-(NSMutableArray *)oldRouteIncidents;
-(void)setOldRouteIncidents:(NSMutableArray *)arg1 ;
-(char)hasDirectionResponseID;
-(char)hasOldRouteID;
-(char)hasReroutedRouteID;
@end

