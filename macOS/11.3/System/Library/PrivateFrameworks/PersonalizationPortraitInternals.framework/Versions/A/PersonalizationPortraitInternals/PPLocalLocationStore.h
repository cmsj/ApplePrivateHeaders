/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:10 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PersonalizationPortraitInternals.framework/Versions/A/PersonalizationPortraitInternals
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/PPFeedbackAccepting.h>
#import <libobjc.A.dylib/PPFeedbackProcessing.h>

@class _PASLock, NSCache, PPTrialWrapper, PPLocationStorage;

@interface PPLocalLocationStore : NSObject <PPFeedbackAccepting, PPFeedbackProcessing> {

	_PASLock* _cache;
	NSCache* _modelCache;
	PPTrialWrapper* _trialWrapper;
	char _useScoreInterpreter;
	PPLocationStorage* _storage;

}

@property (nonatomic,readonly) PPLocationStorage * storage;              //@synthesize storage=_storage - In the implementation block
@property (nonatomic,readonly) char useScoreInterpreter;                 //@synthesize useScoreInterpreter=_useScoreInterpreter - In the implementation block
+(id)defaultStore;
+(id)scoredLocationFromName:(id)arg1 category:(unsigned short)arg2 score:(double)arg3 sentimentScore:(double)arg4 ;
+(unsigned short)namedEntityCategoryToLocationCategory:(unsigned long long)arg1 ;
+(char)isLocationRelevantDynamicNamedEntityCategory:(id)arg1 ;
+(char)isLocationRelevantNamedEntityCategory:(unsigned long long)arg1 ;
+(id)locationFromMapItemDictionary:(id)arg1 ;
+(void)sortAndTruncate:(id)arg1 queryLimit:(unsigned long long)arg2 ;
+(float)resolvedPerRecordDecayRateForFeatureProvider:(id)arg1 perRecordDecayRate:(float)arg2 ;
+(float)resolvedPerRecordDecayRateForRecord:(id)arg1 perRecordDecayRate:(float)arg2 ;
+(id)locationNamedEntityToPPScoredLocation:(id)arg1 ;
+(id)locationFromMapItem:(id)arg1 ;
+(unsigned short)poiCategoryToPPLocationCategory:(id)arg1 ;
+(unsigned short)routineLOITypeToLocationCategory:(long long)arg1 ;
+(float)resolvedPerRecordDecayRateForSourceBundleId:(id)arg1 algorithm:(unsigned short)arg2 perRecordDecayRate:(float)arg3 ;
-(id)init;
-(PPLocationStorage *)storage;
-(id)_init;
-(void)registerFeedback:(id)arg1 completion:(/*^block*/id)arg2 ;
-(char)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3 ;
-(char)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4 ;
-(char)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4 ;
-(char)donateLocations:(id)arg1 source:(id)arg2 contextualNamedEntities:(id)arg3 algorithm:(unsigned short)arg4 cloudSync:(char)arg5 decayRate:(double)arg6 error:(id*)arg7 ;
-(char)clearWithError:(id*)arg1 deletedCount:(unsigned long long*)arg2 ;
-(char)iterRankedLocationsWithQuery:(id)arg1 error:(id*)arg2 block:(/*^block*/id)arg3 ;
-(char)iterLocationRecordsWithQuery:(id)arg1 error:(id*)arg2 block:(/*^block*/id)arg3 ;
-(id)locationRecordsWithQuery:(id)arg1 error:(id*)arg2 ;
-(void)processfeedbackItems:(id)arg1 scoringDate:(id)arg2 clientIdentifier:(id)arg3 clientBundleId:(id)arg4 mappingId:(id)arg5 ;
-(double)finalScoreFromRecordsUsingHybrid:(id)arg1 streamingScorer:(id)arg2 mlModel:(id)arg3 ;
-(void)_petLoggingForQuery:(id)arg1 resultCount:(unsigned long long)arg2 clientProcessName:(id)arg3 hasError:(char)arg4 ;
-(id)_loadScoreInterpreter;
-(char)_shouldUseScoringMLModel;
-(id)_loadScoringMLModel;
-(id)_feedbackItemsByItemString:(id)arg1 ;
-(char)_logFeedbackSessionsWithFeedback:(id)arg1 error:(id*)arg2 ;
-(id)initWithStorage:(id)arg1 trialWrapper:(id)arg2 ;
-(id)rankedLocationsWithQuery:(id)arg1 clientProcessName:(id)arg2 error:(id*)arg3 ;
-(id)scoreLocations:(id)arg1 scoringDate:(id)arg2 perRecordDecayRate:(float)arg3 decayRate:(float)arg4 sourceStats:(id)arg5 scoreInterpreter:(id)arg6 streamingScorer:(id*)arg7 mlModel:(id)arg8 ;
-(id)locationRecordOfCategory:(unsigned short)arg1 ;
-(id)locationForHome;
-(id)locationForWork;
-(id)homeOrWorkAddresses;
-(id)_unlimitedLocationRecordsWithQuery:(id)arg1 error:(id*)arg2 ;
-(char)deleteAllLocationsFromSourcesWithBundleId:(id)arg1 groupId:(id)arg2 olderThan:(id)arg3 deletedCount:(unsigned long long*)arg4 error:(id*)arg5 ;
-(char)deleteAllLocationsOlderThanDate:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3 ;
-(void)_logDonationForLocations:(id)arg1 bundleId:(id)arg2 algorithm:(unsigned short)arg3 groupId:(id)arg4 ;
-(char)deleteAllLocationFeedbackCountsOlderThanDate:(id)arg1 ;
-(char)pruneOrphanedLocationFeedbackCountsWithLimit:(long long)arg1 rowOffset:(unsigned long long)arg2 deletedCount:(unsigned long long*)arg3 isComplete:(char*)arg4 ;
-(id)_getScoredLocationFeaturesForStreamingScorerWithIdentifier:(id)arg1 excludingSourceBundleId:(id)arg2 decayedFeedbackCounts:(id)arg3 error:(id*)arg4 ;
-(id)_getScoredLocationFeaturesForCoreMLFromIdentifier:(id)arg1 scoringDate:(id)arg2 excludingSourceBundleId:(id)arg3 decayedFeedbackCounts:(id)arg4 featurizer:(id)arg5 error:(id*)arg6 ;
-(id)_locationToMappedStringMatchingForLocations:(id)arg1 timestamp:(double)arg2 error:(id*)arg3 ;
-(id)_feedbackItemToLocationMapForFeedback:(id)arg1 error:(id*)arg2 ;
-(char)_extractDonationsForFeedback:(id)arg1 pbFeedbackLog:(id)arg2 location:(id)arg3 error:(id*)arg4 ;
-(char)useScoreInterpreter;
@end

