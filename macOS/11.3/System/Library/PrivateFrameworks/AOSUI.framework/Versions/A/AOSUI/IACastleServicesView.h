/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AOSUI.framework/Versions/A/AOSUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AOSUI/AOSUI-Structs.h>
#import <AppKit/NSView.h>
#import <libobjc.A.dylib/MMWebKitViewControllerDelegate.h>
#import <libobjc.A.dylib/iCloudWebViewDelegate.h>

@class MM_Account, NSTextField, NSTableView, NSButton, MMInfoCapacityBarView, MMWebKitViewController, NSString, NSView, NSLayoutConstraint, NSMutableDictionary, CastlePlugin;

@interface IACastleServicesView : NSView <MMWebKitViewControllerDelegate, iCloudWebViewDelegate> {

	MM_Account* _mmAccount;
	NSTextField* _nameField;
	NSTextField* _appleIDField;
	NSTableView* _servicesTable;
	NSButton* _detailsButton;
	NSTextField* _iCloudLabel;
	NSTextField* _storageLabel;
	MMInfoCapacityBarView* _storageBar;
	NSButton* _storageButton;
	MMWebKitViewController* _webKitViewController;
	NSString* _storageFormat;
	NSView* _headerViewContainer;
	NSView* _headerViewStandard;
	NSView* _headerViewLocked;
	NSView* _headerViewReauth;
	NSTextField* _notVerifiedText;
	NSTextField* _checkEmailText;
	NSTextField* _lockedTitle;
	NSTextField* _lockedText;
	NSButton* _buttonDefault;
	NSButton* _buttonAlternate;
	NSButton* _buttonDefaultWithAlternate;
	NSTextField* _reauthTitle;
	NSTextField* _reauthText;
	NSTextField* _secondaryAccountTitle;
	NSTextField* _secondaryAccountDescription;
	NSButton* _optimizeStorage;
	NSTextField* _optimizeStorageDescription;
	NSLayoutConstraint* _optimizeStorageToStorageLabelConstraint;
	NSLayoutConstraint* _servicesViewToStorageLabelConstraint;
	NSLayoutConstraint* _servicesViewToOptimizeStorageConstraint;
	NSMutableDictionary* _rowViews;
	char _enabled;
	CastlePlugin* _plugin;

}

@property (setter=setMMAccount:,nonatomic,retain) MM_Account * mmAccount;              //@synthesize mmAccount=_mmAccount - In the implementation block
@property (assign,getter=isEnabled,nonatomic) char enabled;                            //@synthesize enabled=_enabled - In the implementation block
@property (assign) CastlePlugin * plugin;                                              //@synthesize plugin=_plugin - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)loadFromNib:(unsigned long long)arg1 ;
-(void)dealloc;
-(void)setEnabled:(char)arg1 ;
-(char)isEnabled;
-(void)awakeFromNib;
-(long long)numberOfRowsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3 ;
-(id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3 ;
-(id)tableView:(id)arg1 rowViewForRow:(long long)arg2 ;
-(double)tableView:(id)arg1 heightOfRow:(long long)arg2 ;
-(CastlePlugin *)plugin;
-(void)setPlugin:(CastlePlugin *)arg1 ;
-(void)updateAccount:(id)arg1 ;
-(void)help:(id)arg1 ;
-(MM_Account *)mmAccount;
-(void)mtLogStorageActivity:(id)arg1 ;
-(void)_closeWebViewWindow;
-(void)mmWebKitViewControllerDidCancel:(id)arg1 ;
-(void)mmWebKitViewControllerDidSucceed:(id)arg1 ;
-(void)mmWebKitViewControllerDidFailLoading:(id)arg1 error:(id)arg2 ;
-(void)mmWebKitViewControllerDidFinishLoading:(id)arg1 ;
-(void)mmWebKitViewControllerDidDismiss:(id)arg1 ;
-(void)showHeaderForViewState:(unsigned long long)arg1 ;
-(void)updateService:(id)arg1 ;
-(void)serviceEnabled:(id)arg1 ;
-(void)unregisterNotifications;
-(void)updateAccountMainThread:(id)arg1 ;
-(void)updateServiceMainThread:(id)arg1 ;
-(void)serviceEnabledMainThread:(id)arg1 ;
-(id)idenfierForTableView:(id)arg1 andRow:(long long)arg2 ;
-(void)updateServicesTable;
-(void)refreshQuota;
-(void)displayQuota:(id)arg1 ;
-(char)_isOptimizeStorageEnabled;
-(void)_updateViewIfNeeded:(id)arg1 ;
-(void)updateServiceRow:(id)arg1 ;
-(void)_optimizeSetHidden:(char)arg1 ;
-(void)setMMAccount:(id)arg1 ;
-(void)storagePressed:(id)arg1 ;
-(void)showTerms:(id)arg1 ;
-(void)optimizeStoragePressed:(id)arg1 ;
-(void)reAuthPressed:(id)arg1 ;
-(void)resendEmailPressed:(id)arg1 ;
-(void)lockedButtonPressed:(id)arg1 ;
-(void)showSignInError:(id)arg1 ;
@end

