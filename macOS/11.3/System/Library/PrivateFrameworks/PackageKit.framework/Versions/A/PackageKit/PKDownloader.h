/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:49 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PackageKit.framework/Versions/A/PackageKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class PKDownloaderQueue, PKDownloaderSpeedTracker, NSTimer, NSString;

@interface PKDownloader : NSObject {

	PKDownloaderQueue* _queue;
	char _isQueueRunning;
	char _stopNotificationPending;
	PKDownloaderSpeedTracker* _downloadTracker;
	PKDownloaderSpeedTracker* _checksumTracker;
	NSTimer* _progressTimer;
	NSString* _lastKnownPeerAddress;
	char _downloadInBackground;
	/*^block*/id _loggingBlock;
	id _delegate;

}

@property (__weak) id delegate;                                       //@synthesize delegate=_delegate - In the implementation block
@property (assign) long long maxConcurrentDownloadCount; 
@property (assign) char downloadInBackground;                         //@synthesize downloadInBackground=_downloadInBackground - In the implementation block
@property (nonatomic,copy) id loggingBlock;                           //@synthesize loggingBlock=_loggingBlock - In the implementation block
+(id)userAgent;
+(void)setUserAgent:(id)arg1 ;
-(long long)maxConcurrentDownloadCount;
-(void)setMaxConcurrentDownloadCount:(long long)arg1 ;
-(void)_startQueuedDownloads;
-(void)setIsQueueRunning:(char)arg1 ;
-(void)_updateProgressInfo;
-(void)_notifyDelegateIfQueueStopped:(id)arg1 ;
-(void)_startDownloadForQueueElement:(id)arg1 ;
-(void)_updateIndicators:(id)arg1 ;
-(char)downloadInBackground;
-(void)setDownloadInBackground:(char)arg1 ;
-(void)_finishFileCopyWithResult:(id)arg1 ;
-(void)_elementDidFinish:(id)arg1 ;
-(void)_element:(id)arg1 didFailWithError:(id)arg2 ;
-(void)_postProcessDownloadWithElement:(id)arg1 isValid:(char)arg2 ;
-(char)_validatePackageAtPath:(id)arg1 ;
-(void)_updateDownloadSpeed;
-(void)_startNativeValidationForDownload:(id)arg1 returningOnThread:(id)arg2 ;
-(void)_startChecksumValidationForDownload:(id)arg1 returningOnThread:(id)arg2 ;
-(void)cancelDownloadWithPackageReference:(id)arg1 ;
-(void)_startFileCopyForQueueElement:(id)arg1 ;
-(char)_cancelDownloadCapturingResumeData:(id)arg1 ;
-(id)_peerAddressForURLResponse:(id)arg1 ;
-(void)download:(id)arg1 receiveLogWithLevel:(unsigned long long)arg2 withLogMesage:(id)arg3 ;
-(void)download:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2 ;
-(void)download:(id)arg1 didReceiveChallenge:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)download:(id)arg1 receivedResumeBytesOfLength:(long long)arg2 ;
-(void)download:(id)arg1 didCheckDataOfLength:(unsigned long long)arg2 ;
-(void)dealloc;
-(id)description;
-(id)delegate;
-(void)setDelegate:(id)arg1 ;
-(double)estimatedTimeRemaining;
-(id)initWithDelegate:(id)arg1 ;
-(id)download:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(void)download:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)download:(id)arg1 didReceiveDataOfLength:(unsigned long long)arg2 ;
-(void)downloadDidFinish:(id)arg1 ;
-(void)download:(id)arg1 didFailWithError:(id)arg2 ;
-(double)progressValue;
-(void)clearQueue;
-(void)setLoggingBlock:(id)arg1 ;
-(void)queuePackageReference:(id)arg1 destination:(id)arg2 ;
-(void)startQueue;
-(unsigned long long)completedDownloadSize;
-(unsigned long long)totalDownloadSize;
-(void)_runBlockOnThread:(id)arg1 withBlock:(/*^block*/id)arg2 waitUntilDone:(char)arg3 ;
-(void)__runBlock:(/*^block*/id)arg1 ;
-(char)isQueueEmpty;
-(void)stopQueue;
-(char)isQueueRunning;
-(char)queueContainsPackageReference:(id)arg1 ;
-(id)loggingBlock;
-(void)_startUpdateTimer;
-(void)_stopUpdateTimer;
@end

