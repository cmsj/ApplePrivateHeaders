/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:49 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PackageKit.framework/Versions/A/PackageKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PackageKit/PackageKit-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSArray, NSString, NSData, NSFileHandle, NSDictionary, NSMachPort;

@interface PKInstallRequest : NSObject <NSSecureCoding> {

	NSArray* _packageSpecifiers;
	NSString* _destinationPath;
	long long _installPhases;
	char _useForegroundPriorityForStaging;
	double _frameworkVersion;
	NSString* _clientProcessName;
	char _openScripts;
	char _internalBundleVersionChecking;
	NSString* _scriptTargetVolume;
	NSString* _loggingIdentifier;
	char _ignoreIndexBom;
	char _useAFSCByDefault;
	char _isRecursive;
	NSData* _appStoreReceiptData;
	unsigned long long _spaceRequiredForInstall;
	char _clientBlocksRestart;
	int _restartAction;
	NSString* _appPlaceholderPath;
	NSArray* _lockApplicationsDuringInstall;
	NSString* _blacklistPropertyListPath;
	NSFileHandle* _translocationFileHandle;
	char _bypassSystemVolumeEnforcementChecker;
	long long _rosettaTranslationMode;
	char _isOSInstall;
	char _isSoftwareUpdateOSInstall;
	char _isOSInstaller;
	NSString* _masterBOMPath;
	unsigned long long _packageExtractorSpeed;
	char _disableAFSC;
	char _isMDMManagedAppInstall;
	NSDictionary* _untrustedEnvironment;
	NSMachPort* _clientBootstrapPort;
	NSMachPort* _clientSecuritySessionPort;
	int _clientUID;
	int _clientGID;
	SCD_Struct_PK12 _clientAuditToken;
	SCD_Struct_PK13* _authorizationEnvironment;
	AuthorizationOpaqueRefRef _defaultAuthorization;
	AuthorizationOpaqueRefRef _overrideAuthorization;
	int _minTrustLevel;
	char _allowExpiredCertificates;
	char _allowExpiredRoots;
	char _didPassPreflight;
	char _hasValidTrustLevel;
	int _evaluatedTrustLevel;
	NSArray* _certificateChain;
	SecTrustRef _trustRef;
	char _userConsentedInstall;

}

@property (readonly) NSArray * packages; 
@property (readonly) NSArray * packageSpecifiers; 
@property (retain) NSString * destinationPath;                      //@synthesize destinationPath=_destinationPath - In the implementation block
@property (assign) long long installPhases;                         //@synthesize installPhases=_installPhases - In the implementation block
@property (readonly) SCD_Struct_PK12 clientAuditToken;              //@synthesize clientAuditToken=_clientAuditToken - In the implementation block
@property (assign) char userConsentedInstall;                       //@synthesize userConsentedInstall=_userConsentedInstall - In the implementation block
@property (assign) long long rosettaTranslationMode; 
+(char)supportsSecureCoding;
+(id)requestWithPackages:(id)arg1 destination:(id)arg2 ;
-(char)_validateAuthorizationReturningAcquiredRights:(id*)arg1 ;
-(long long)installPhases;
-(void)_setIsRecursive:(char)arg1 ;
-(void)_setUntrustedEnvironment:(id)arg1 ;
-(void)_setClientBootstrapPort:(id)arg1 ;
-(void)_setClientSecuritySessionPort:(id)arg1 ;
-(void)_resolveInstallPathsReplacingPriorResults:(char)arg1 ;
-(char)_isMDMManagedAppInstall;
-(char)_isOSInstaller;
-(char)_clientBlocksRestart;
-(char)_isRequestFromSoftwareUpdate;
-(char)_isRequestFromMacAppStore;
-(id)_authorizationAsExternalData;
-(char)_isRequestCompatibleWithRights:(id)arg1 ;
-(char)_isSoftwareUpdateOSInstall;
-(char)_useForegroundPriorityForStaging;
-(char)_performPreflightCheckIncludingSizing:(char)arg1 error:(id*)arg2 ;
-(char)_bypassReadOnlyEnforcementChecker;
-(char)_useOpenScriptsDirectory;
-(int)_clientGID;
-(id)_initWithPackages:(id)arg1 destination:(id)arg2 withOutError:(id*)arg3 ;
-(void)_setBypassReadOnlyEnforcementChecker:(char)arg1 ;
-(AuthorizationOpaqueRefRef)_createAuthorizationRefWithExternalFormData:(id)arg1 ;
-(id)_externalFormDataForAuthorizationRef:(AuthorizationOpaqueRefRef)arg1 ;
-(void)setInstallPhases:(long long)arg1 ;
-(char)_isDeeplyEqualToRequest:(id)arg1 ;
-(void)removePackageSpecifiers:(id)arg1 ;
-(id)_installItems;
-(void)_setInstallSandboxName:(id)arg1 ;
-(id)_installSandboxName;
-(id)_untrustedEnvironment;
-(void)_setClientUID:(int)arg1 andGID:(int)arg2 ;
-(id)_masterBOMPath;
-(char)_ignoreIndexBom;
-(unsigned long long)_extractionSpeed;
-(void)_setDisableAFSC:(char)arg1 ;
-(char)_disableAFSC;
-(char)_useHFSPlusCompressionByDefault;
-(char)_internalBundleVersionChecking;
-(void)_setInternalBundleVersionChecking:(char)arg1 ;
-(id)_lockApplicationsDuringInstall;
-(void)_setLockApplicationsDuringInstall:(id)arg1 ;
-(id)_installBlacklistPlistPath;
-(id)_appStoreReceiptData;
-(unsigned long long)_spaceRequiredForInstall;
-(void)_setSpaceRequiredForInstall:(unsigned long long)arg1 ;
-(id)_appPlaceholderPath;
-(char)_restrictedRootOverridden;
-(char)_isValidAppStoreRequest:(char)arg1 ;
-(void)setAuthorizationEnvironment:(SCD_Struct_PK13*)arg1 ;
-(void)_updateWithSingleTrustLevel:(int)arg1 certificateChain:(id)arg2 trust:(SecTrustRef)arg3 ;
-(void)_clearTrustEvaluation;
-(char)_evaluateTrustForPackage:(id)arg1 verifyingPayload:(char)arg2 returningError:(id*)arg3 ;
-(char)_validAttributesForSoftwareUpdate:(id)arg1 ;
-(char)_hasValidInstallPathForAnyIAPContent;
-(char)_canInstallPackageSpecifier:(id)arg1 error:(id*)arg2 ;
-(char)checkLocalPackagesReturningError:(id*)arg1 ;
-(char)didPassPreflightCheck;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(id)description;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSArray *)packages;
-(const AuthorizationOpaqueRefRef)authorization;
-(char)requiresAuthorization;
-(void)_setLoggingIdentifier:(id)arg1 ;
-(void)setAuthorization:(AuthorizationOpaqueRefRef)arg1 ;
-(SCD_Struct_PK12)clientAuditToken;
-(char)_isRecursive;
-(NSString *)destinationPath;
-(void)setDestinationPath:(NSString *)arg1 ;
-(id)_clientProcessName;
-(int)_clientUID;
-(id)_loggingIdentifier;
-(void)setMinimumRequiredTrustLevel:(int)arg1 ;
-(char)authorizeForRight:(const char*)arg1 allowingInteraction:(char)arg2 ;
-(char)evaluateTrustReturningError:(id*)arg1 ;
-(NSArray *)packageSpecifiers;
-(char)userConsentedInstall;
-(void)setUserConsentedInstall:(char)arg1 ;
-(int)trustLevelReturningCertificateChain:(id*)arg1 ;
-(int)trustLevelReturningTrustRef:(_SecTrust*)arg1 ;
-(void)_setIsOSInstall:(char)arg1 ;
-(void)_setMasterBOMPath:(id)arg1 ;
-(void)_setSkipsVerifyOnUnsignedPackages:(char)arg1 ;
-(void)_setScriptTargetVolume:(id)arg1 ;
-(void)_setIgnoreIndexBom:(char)arg1 ;
-(void)_setRestartAction:(int)arg1 ;
-(void)_setUseOpenScriptsDirectory:(char)arg1 ;
-(void)_setClientBlocksRestart:(char)arg1 ;
-(void)_setTranslocationFileHandle:(id)arg1 ;
-(void)setRosettaTranslationMode:(long long)arg1 ;
-(char)_restrictedRootEnabled;
-(char)performPreflightCheckReturningError:(id*)arg1 ;
-(id)_scriptTargetVolume;
-(int)_restartAction;
-(void)setAllowExpiredCertificates:(char)arg1 ;
-(void)setAllowExpiredRoots:(char)arg1 ;
-(void)_setIsOSInstaller:(char)arg1 ;
-(id)initWithPackages:(id)arg1 destination:(id)arg2 ;
-(void)_setIsSoftwareUpdateOSInstall:(char)arg1 ;
-(void)_setInstallBlacklistPlistPath:(id)arg1 ;
-(void)_setExtractionSpeed:(unsigned long long)arg1 ;
-(char)preauthorizeAllowingInteraction:(char)arg1 ;
-(char)_isOSInstall;
-(unsigned long long)totalSizeRequired;
-(void)_setIsStageRequest:(char)arg1 ;
-(void)_setUseForegroundPriorityForStaging:(char)arg1 ;
-(void)_setUseHFSPlusCompressionByDefault:(char)arg1 ;
-(void)_setIsMDMManagedAppInstall:(char)arg1 ;
-(void)_setAppStoreReceiptData:(id)arg1 ;
-(void)_setAppPlaceholderPath:(id)arg1 ;
-(char)_isStageRequest;
-(int)_authLevel;
-(id)_clientBootstrapPort;
-(id)_clientSecuritySessionPort;
-(long long)rosettaTranslationMode;
@end

