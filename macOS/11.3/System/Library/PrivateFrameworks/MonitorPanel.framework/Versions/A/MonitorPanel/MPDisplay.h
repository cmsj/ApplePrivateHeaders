/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MonitorPanel.framework/Versions/A/MonitorPanel
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <MonitorPanel/MonitorPanel-Structs.h>
@class NSString, NSMutableArray, NSMutableDictionary, MPDisplayMode, NSUUID, NSImage, NSArray, MPDisplayPreset;

@interface MPDisplay : NSObject {

	int _displayID;
	int _aliasID;
	unsigned _ioService;
	NSString* _displayName;
	unsigned _userFlags;
	NSMutableArray* _allModes;
	NSMutableArray* _trimmedModes;
	NSMutableArray* _listHQModes;
	NSMutableArray* _listModes;
	NSMutableArray* _userModes;
	NSMutableDictionary* _trimmedResolutions;
	NSMutableDictionary* _listHQResolutions;
	NSMutableDictionary* _listResolutions;
	NSMutableDictionary* _userResolutions;
	NSMutableArray* _scanRates;
	NSMutableArray* _scanRateStrings;
	MPDisplayMode* _defaultMode;
	MPDisplayMode* _nativeMode;
	MPDisplayMode* _currentMode;
	int _orientation;
	NSUUID* _uuid;
	NSImage* _displayIcon;
	NSImage* _displayResolutionPreviewIcon;
	CGRect _displayResolutionPreviewRect;
	char _isSmartDisplay;
	char _hasSafeMode;
	char _hasSimulscan;
	char _hasTVModes;
	char _isHiDPI;
	char _isRetina;
	char _isBuiltIn;
	char _hqModesForChiclets;
	char _isMirrored;
	char _isMirrorMaster;
	char _isTV;
	char _isProjector;
	char _isAirPlayDisplay;
	char _is4K;
	char _isSidecarDisplay;
	char _hasMultipleRates;
	char _hasZeroRate;
	char _uiProjectorOverride;
	char _hasHDRModes;
	char _preferHDRModes;
	char _needsUpdate;
	os_unfair_lock_s _accessLock;
	void* _coreDisplayFrameworkBundle;
	/*function pointer*/void* _isHDRModeSupported;
	/*function pointer*/void* _isHDRModeEnabled;
	/*function pointer*/void* _enableHDRMode;
	char _hasHDRModeSupport;
	NSMutableArray* _presetsArray;
	unsigned _numberOfPresets;
	char _hasRotationSensor;
	char _usePreciseRefreshRate;
	char _loadingPresets;
	char _isAppleProDisplay;

}

@property (nonatomic,retain) NSString * displayName; 
@property (readonly) NSString * titleName; 
@property (retain) MPDisplayMode * currentMode;                           //@synthesize currentMode=_currentMode - In the implementation block
@property (retain) MPDisplayMode * nativeMode;                            //@synthesize nativeMode=_nativeMode - In the implementation block
@property (retain) MPDisplayMode * defaultMode;                           //@synthesize defaultMode=_defaultMode - In the implementation block
@property (readonly) int displayID;                                       //@synthesize displayID=_displayID - In the implementation block
@property (readonly) int aliasID;                                         //@synthesize aliasID=_aliasID - In the implementation block
@property (readonly) int mirrorMasterDisplayID; 
@property (assign) unsigned userFlags;                                    //@synthesize userFlags=_userFlags - In the implementation block
@property (readonly) NSArray * scanRates; 
@property (readonly) NSArray * scanRateStrings; 
@property (assign,nonatomic) int orientation;                             //@synthesize orientation=_orientation - In the implementation block
@property (assign) char overscanEnabled; 
@property (assign) char bestForVideoMode; 
@property (assign) int underscan; 
@property (readonly) int minUnderscan; 
@property (readonly) int maxUnderscan; 
@property (readonly) char isSmartDisplay;                                 //@synthesize isSmartDisplay=_isSmartDisplay - In the implementation block
@property (readonly) char hasSafeMode;                                    //@synthesize hasSafeMode=_hasSafeMode - In the implementation block
@property (readonly) char hasSimulscan;                                   //@synthesize hasSimulscan=_hasSimulscan - In the implementation block
@property (readonly) char hasTVModes;                                     //@synthesize hasTVModes=_hasTVModes - In the implementation block
@property (readonly) char isHiDPI;                                        //@synthesize isHiDPI=_isHiDPI - In the implementation block
@property (readonly) char isBuiltIn;                                      //@synthesize isBuiltIn=_isBuiltIn - In the implementation block
@property (readonly) char isBuiltInRetina; 
@property (readonly) char isMirrored;                                     //@synthesize isMirrored=_isMirrored - In the implementation block
@property (readonly) char isMirrorMaster;                                 //@synthesize isMirrorMaster=_isMirrorMaster - In the implementation block
@property (readonly) char isForcedToMirror; 
@property (readonly) char isTV;                                           //@synthesize isTV=_isTV - In the implementation block
@property (readonly) char is4K;                                           //@synthesize is4K=_is4K - In the implementation block
@property (readonly) char isProjector;                                    //@synthesize isProjector=_isProjector - In the implementation block
@property (readonly) char isAirPlayDisplay;                               //@synthesize isAirPlayDisplay=_isAirPlayDisplay - In the implementation block
@property (readonly) char isSidecarDisplay;                               //@synthesize isSidecarDisplay=_isSidecarDisplay - In the implementation block
@property (readonly) char hasMultipleRates;                               //@synthesize hasMultipleRates=_hasMultipleRates - In the implementation block
@property (readonly) char hasZeroRate;                                    //@synthesize hasZeroRate=_hasZeroRate - In the implementation block
@property (readonly) char hasHDRModes; 
@property (readonly) char preferHDRModes; 
@property (readonly) char hasPresets; 
@property (readonly) char hasRotationSensor;                              //@synthesize hasRotationSensor=_hasRotationSensor - In the implementation block
@property (readonly) char isAppleProDisplay; 
@property (readonly) NSArray * presets; 
@property (readonly) MPDisplayPreset * activePreset; 
@property (readonly) MPDisplayPreset * defaultPreset; 
@property (readonly) char hasMenuBar; 
@property (readonly) CGRect displayBounds; 
@property (readonly) CGRect hardwareBounds; 
@property (readonly) NSUUID * uuid; 
@property (readonly) NSImage * displayIcon; 
@property (readonly) NSImage * displayResolutionPreviewIcon; 
@property (readonly) CGRect displayResolutionPreviewRect; 
-(void)dealloc;
-(NSUUID *)uuid;
-(int)setMode:(id)arg1 ;
-(NSString *)displayName;
-(void)setOrientation:(int)arg1 ;
-(id)allModes;
-(MPDisplayMode *)currentMode;
-(int)displayID;
-(int)orientation;
-(void)setDisplayName:(NSString *)arg1 ;
-(void)setCurrentMode:(MPDisplayMode *)arg1 ;
-(char)isHiDPI;
-(char)isAirPlayDisplay;
-(char)isBuiltIn;
-(char)isMirrored;
-(void)setUserFlags:(unsigned)arg1 ;
-(NSImage *)displayIcon;
-(char)isTV;
-(MPDisplayMode *)defaultMode;
-(void)setDefaultMode:(MPDisplayMode *)arg1 ;
-(NSArray *)presets;
-(MPDisplayPreset *)defaultPreset;
-(char)is4K;
-(char)isModeNative:(id)arg1 ;
-(id)modesOfType:(unsigned long long)arg1 ;
-(void)buildPresetsList;
-(char)hasPresets;
-(void)refreshModes;
-(void)bucketizeDisplayModes;
-(void)addMatchingModesToTrimmed;
-(void)addTVModesToPreferred;
-(void)refreshResolutions:(id)arg1 usingModeList:(id)arg2 ;
-(void)setNativeMode:(MPDisplayMode *)arg1 ;
-(void)determineTrimmedModeList;
-(void)refreshResolutions;
-(void)refreshScanRates;
-(id)modesMatchingResolutionOfMode:(id)arg1 ;
-(char)canChangeOrientation;
-(int)setModeNumber:(int)arg1 ;
-(char)supportsOverscan;
-(void)setOverscanEnabled:(char)arg1 ;
-(char)supportsUnderscan;
-(id)_imageForDisplay:(id)arg1 ;
-(void)_loadPreviewIconFromServiceDictionary:(id)arg1 ;
-(NSImage *)displayResolutionPreviewIcon;
-(id)_imageAndRect:(CGRect*)arg1 fromDictionary:(id)arg2 forOrientation:(long long)arg3 ;
-(id)initWithCGSDisplayID:(int)arg1 ;
-(NSString *)titleName;
-(char)isBuiltInRetina;
-(char)isAppleProDisplay;
-(char)hasMenuBar;
-(id)multiscanModesForMode:(id)arg1 ;
-(char)isAlias:(int)arg1 ;
-(id)stringForScanRate:(id)arg1 ;
-(id)scanRateForString:(id)arg1 ;
-(id)resolutionsOfType:(unsigned long long)arg1 ;
-(id)modeMatchingResolutionOfMode:(id)arg1 withScanRate:(id)arg2 ;
-(id)modeWithNumber:(int)arg1 ;
-(CGRect)displayBounds;
-(char)hasMultipleScanRates;
-(char)supportsBestForVideoMode;
-(char)bestForVideoMode;
-(void)setBestForVideoMode:(char)arg1 ;
-(NSArray *)scanRates;
-(NSArray *)scanRateStrings;
-(id)modesForResolution:(id)arg1 ;
-(char)inDefaultMode;
-(void)setMirrorModeNumber:(int)arg1 ;
-(void)setMirrorMode:(id)arg1 ;
-(void)setMirrorMaster:(char)arg1 ;
-(char)isForcedToMirror;
-(char)hasHDRModes;
-(char)preferHDRModes;
-(void)setPreferHDRModes:(char)arg1 ;
-(int)mirrorMasterDisplayID;
-(CGRect)hardwareBounds;
-(char)overscanEnabled;
-(int)minUnderscan;
-(int)maxUnderscan;
-(int)underscan;
-(void)setUnderscan:(int)arg1 ;
-(CGRect)displayResolutionPreviewRect;
-(MPDisplayPreset *)activePreset;
-(char)setActivePreset:(MPDisplayPreset *)arg1 ;
-(int)aliasID;
-(unsigned)userFlags;
-(char)isSmartDisplay;
-(char)hasSafeMode;
-(char)hasSimulscan;
-(char)hasTVModes;
-(char)isMirrorMaster;
-(char)isProjector;
-(char)isSidecarDisplay;
-(char)hasMultipleRates;
-(char)hasZeroRate;
-(MPDisplayMode *)nativeMode;
-(char)hasRotationSensor;
@end

