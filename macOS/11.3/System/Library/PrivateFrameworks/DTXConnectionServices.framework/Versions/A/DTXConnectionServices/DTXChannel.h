/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:20 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/DTXConnectionServices.framework/Versions/A/DTXConnectionServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <DTXConnectionServices/DTXConnectionServices-Structs.h>
#import <DTXConnectionServices/DTXMessenger.h>

@protocol OS_dispatch_queue;
@class NSString, DTXConnection, NSObject;

@interface DTXChannel : NSObject <DTXMessenger> {

	NSString* _label;
	DTXConnection* _connection;
	DTXConnection* _strongConnection;
	NSObject*<OS_dispatch_queue> _serialQueue;
	os_unfair_lock_s _handlerGuard;
	unsigned _channelCode;
	int _compressionTypeHint;
	char _canceled;
	DTXChannelGuarded_private _channelGuarded;

}

@property (assign) char isCanceled;                                      //@synthesize canceled=_canceled - In the implementation block
@property (nonatomic,readonly) unsigned channelCode;                     //@synthesize channelCode=_channelCode - In the implementation block
@property (assign) int compressionTypeHint;                              //@synthesize compressionTypeHint=_compressionTypeHint - In the implementation block
@property (nonatomic,readonly) DTXConnection * _connection;              //@synthesize connection=_connection - In the implementation block
@property (nonatomic,copy) NSString * label;                             //@synthesize label=_label - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)description;
-(void)resume;
-(DTXConnection *)_connection;
-(NSString *)label;
-(void)setLabel:(NSString *)arg1 ;
-(void)cancel;
-(void)suspend;
-(void)setIsCanceled:(char)arg1 ;
-(char)isCanceled;
-(void)setMessageHandler:(/*^block*/id)arg1 ;
-(void)setDispatchTarget:(id)arg1 ;
-(void)_setDispatchValidator:(/*^block*/id)arg1 ;
-(void)sendControlAsync:(id)arg1 replyHandler:(/*^block*/id)arg2 ;
-(void)_setDispatchTarget:(id)arg1 queue:(id)arg2 ;
-(unsigned)channelCode;
-(id)initWithConnection:(id)arg1 channelIdentifier:(unsigned)arg2 label:(id)arg3 ;
-(void)registerDisconnectHandler:(/*^block*/id)arg1 ;
-(void)_scheduleBlock:(/*^block*/id)arg1 ;
-(void)sendControlSync:(id)arg1 replyHandler:(/*^block*/id)arg2 ;
-(char)sendMessageAsync:(id)arg1 replyHandler:(/*^block*/id)arg2 ;
-(void)sendMessage:(id)arg1 replyHandler:(/*^block*/id)arg2 ;
-(void)sendMessageSync:(id)arg1 replyHandler:(/*^block*/id)arg2 ;
-(int)compressionTypeHint;
-(void)_scheduleMessage:(id)arg1 tracker:(id)arg2 withHandler:(/*^block*/id)arg3 ;
-(void)setCompressionTypeHint:(int)arg1 ;
-(SCD_Struct_DT3)_callbackSnapshot;
@end

