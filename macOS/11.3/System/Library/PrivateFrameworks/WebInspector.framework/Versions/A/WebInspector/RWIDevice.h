/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:29 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/WebInspector.framework/Versions/A/WebInspector
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WebInspector/RWITarget.h>

@protocol OS_dispatch_queue, OS_dispatch_source, RWIDeviceDelegate;
@class NSMutableArray, NSObject, NSString, NSArray;

@interface RWIDevice : RWITarget {

	NSMutableArray* _mobileDeviceConnections;
	NSObject*<OS_dispatch_queue> _deviceAccessQueue;
	NSObject*<OS_dispatch_source> _deviceAccessQueuePairingTimer;
	NSString* _loggingIdentifier;
	char _hasBuildVersion;
	char _attemptedPair;
	char _supportsAutoAttach;
	long long _automationAvailability;
	char _supportsWirelessConnections;
	char _remoteInspectionEnabled;
	char _wirelessEnabled;
	char _passcodeLocked;
	long long _deviceClass;
	id<RWIDeviceDelegate> _deviceDelegate;
	long long _pairingProgress;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> deviceAccessQueue;                             //@synthesize deviceAccessQueue=_deviceAccessQueue - In the implementation block
@property (nonatomic,copy,readonly) NSArray * mobileDeviceConnections;                                     //@synthesize mobileDeviceConnections=_mobileDeviceConnections - In the implementation block
@property (nonatomic,readonly) long long deviceClass;                                                      //@synthesize deviceClass=_deviceClass - In the implementation block
@property (assign,nonatomic,__weak) id<RWIDeviceDelegate> deviceDelegate;                                  //@synthesize deviceDelegate=_deviceDelegate - In the implementation block
@property (nonatomic,readonly) long long pairingProgress;                                                  //@synthesize pairingProgress=_pairingProgress - In the implementation block
@property (nonatomic,readonly) char supportsWirelessConnections;                                           //@synthesize supportsWirelessConnections=_supportsWirelessConnections - In the implementation block
@property (getter=isConnected,nonatomic,readonly) char connected; 
@property (nonatomic,readonly) char hasWiredConnection; 
@property (nonatomic,readonly) char hasWirelessConnection; 
@property (getter=isRemoteInspectionEnabled,nonatomic,readonly) char remoteInspectionEnabled;              //@synthesize remoteInspectionEnabled=_remoteInspectionEnabled - In the implementation block
@property (getter=isWirelessEnabled,nonatomic,readonly) char wirelessEnabled;                              //@synthesize wirelessEnabled=_wirelessEnabled - In the implementation block
@property (getter=isPasscodeLocked,nonatomic,readonly) char passcodeLocked;                                //@synthesize passcodeLocked=_passcodeLocked - In the implementation block
@property (getter=isPaired,nonatomic,readonly) char paired; 
+(void)initialize;
-(id)description;
-(char)isReady;
-(void)pair;
-(char)isConnected;
-(long long)deviceClass;
-(char)paired;
-(char)isDevice;
-(id)loggingIdentifier;
-(char)isPaired;
-(void)connectionEstablished;
-(char)isIOS;
-(char)supportsAutomaticInspection;
-(char)isWirelessEnabled;
-(void)disableWireless;
-(void)enableWireless;
-(char)hasWiredConnection;
-(char)hasWirelessConnection;
-(char)isSimulator;
-(long long)pairingProgress;
-(char)isPasscodeLocked;
-(char)isRemoteInspectionEnabled;
-(char)supportsWirelessConnections;
-(long long)automationAvailability;
-(void)setAutomationAvailability:(long long)arg1 ;
-(void)addMobileDeviceConnection:(id)arg1 ;
-(id)initWithMobileDeviceConnection:(id)arg1 manager:(id)arg2 ;
-(void)removeMobileDeviceConnection:(id)arg1 ;
-(NSArray *)mobileDeviceConnections;
-(void)_queueAttemptingPairWithProgressCallback:(/*^block*/id)arg1 ;
-(void)markAsHavingBuildVersion;
-(void)_fetchDeviceInformationFromMobileDeviceConnection:(id)arg1 ;
-(void)webInspectorServiceEnabled;
-(void)webInspectorServiceDisabled;
-(void)setDeviceName:(id)arg1 udid:(id)arg2 buildVersion:(id)arg3 productVersion:(id)arg4 deviceClass:(long long)arg5 paired:(long long)arg6 wirelessEnabled:(char)arg7 supported:(char)arg8 supportsAutoAttach:(char)arg9 ;
-(void)setPasscodeLocked:(char)arg1 ;
-(char)supportsWebDriver;
-(void)connectionLost;
-(void)deviceNameChanged;
-(void)lockStatusChanged;
-(void)wirelessCapabilitiesChanged;
-(id<RWIDeviceDelegate>)deviceDelegate;
-(void)setDeviceDelegate:(id<RWIDeviceDelegate>)arg1 ;
-(NSObject*<OS_dispatch_queue>)deviceAccessQueue;
@end

