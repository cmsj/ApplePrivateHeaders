/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:28 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Osprey.framework/Versions/A/Osprey
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Osprey/OspreyRPC.h>

@protocol OS_dispatch_queue, OS_dispatch_group;
@class NSURL, NSURLSessionConfiguration, NSObject, OspreyGRPCChannel, OspreyDeviceAuthentication, NSError, OspreyPreferences, OspreyConnectionPreferences, OspreyChannelRequestOptions, NSString;

@interface OspreyChannel : NSObject <OspreyRPC> {

	NSURL* _url;
	NSURLSessionConfiguration* _configuration;
	NSObject*<OS_dispatch_queue> _queue;
	OspreyGRPCChannel* _channel;
	OspreyDeviceAuthentication* _deviceAuthenticator;
	NSObject*<OS_dispatch_group> _validationGroup;
	char _waitingForSignature;
	NSError* _signatureError;
	OspreyPreferences* _preferences;
	OspreyConnectionPreferences* _connectionPreferences;
	OspreyChannelRequestOptions* _defaultRequestOptions;
	char _enableDeviceAuthentication;
	/*^block*/id _connectionMetricsHandler;
	NSString* _clientTraceId;

}

@property (assign,nonatomic) char enableDeviceAuthentication;              //@synthesize enableDeviceAuthentication=_enableDeviceAuthentication - In the implementation block
@property (assign,nonatomic) char forceHTTPv2; 
@property (nonatomic,copy) id connectionMetricsHandler;                    //@synthesize connectionMetricsHandler=_connectionMetricsHandler - In the implementation block
@property (assign,nonatomic) char useAbsinthe; 
@property (nonatomic,copy) NSString * clientTraceId;                       //@synthesize clientTraceId=_clientTraceId - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithURL:(id)arg1 configuration:(id)arg2 ;
-(void)setUseCompression:(char)arg1 ;
-(id)bidirectionalStreamingRequestWithMethodName:(id)arg1 requestBuilder:(/*^block*/id)arg2 streamingResponseHandler:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(void)unaryRequestWithMethodName:(id)arg1 requestData:(id)arg2 requestBuilder:(/*^block*/id)arg3 responseHandler:(/*^block*/id)arg4 ;
-(char)enableDeviceAuthentication;
-(void)setEnableDeviceAuthentication:(char)arg1 ;
-(char)forceHTTPv2;
-(void)setForceHTTPv2:(char)arg1 ;
-(NSString *)clientTraceId;
-(void)setClientTraceId:(NSString *)arg1 ;
-(id)initWithURL:(id)arg1 configuration:(id)arg2 useCache:(char)arg3 ;
-(void)setConnectionMetricsHandler:(id)arg1 ;
-(id)connectionMetricsHandler;
-(id)_buildRequestWithMethodName:(id)arg1 requestBuilder:(/*^block*/id)arg2 ;
-(void)_prepareChannelWithRequest:(id)arg1 continueWith:(/*^block*/id)arg2 ;
-(void)preconnect;
-(void)_prepareDeviceAuthenticationWithCompletion:(/*^block*/id)arg1 ;
-(void)initializeDeviceAuthenticationSessionWithCompletion:(/*^block*/id)arg1 ;
-(void)serverStreamingRequestWithMethodName:(id)arg1 requestData:(id)arg2 requestBuilder:(/*^block*/id)arg3 streamingResponseHandler:(/*^block*/id)arg4 completion:(/*^block*/id)arg5 ;
-(id)clientStreamingRequestWithMethodName:(id)arg1 requestBuilder:(/*^block*/id)arg2 responseHandler:(/*^block*/id)arg3 ;
-(/*^block*/id)getConnectionMetricsHandler;
-(char)useAbsinthe;
-(void)setUseAbsinthe:(char)arg1 ;
-(void)initializeAbsintheSessionWithCompletion:(/*^block*/id)arg1 ;
-(void)performRequest:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)performBidirectionalStreamingRequest:(id)arg1 handler:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)ocp_setAssociatedHandle:(id)arg1 ;
@end

