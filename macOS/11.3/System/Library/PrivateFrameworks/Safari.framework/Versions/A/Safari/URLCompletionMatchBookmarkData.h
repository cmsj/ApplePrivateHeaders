/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/WBSURLCompletionMatchData.h>

@class NSString, WebBookmarkLeaf;

@interface URLCompletionMatchBookmarkData : NSObject <WBSURLCompletionMatchData> {

	char _shouldPreload;
	WebBookmarkLeaf* _bookmark;

}

@property (nonatomic,readonly) WebBookmarkLeaf * bookmark;                  //@synthesize bookmark=_bookmark - In the implementation block
@property (nonatomic,readonly) NSString * originalURLString; 
@property (nonatomic,readonly) char containsBookmark; 
@property (nonatomic,readonly) double lastVisitedTimeInterval; 
@property (nonatomic,readonly) char lastVisitWasFailure; 
@property (nonatomic,readonly) char shouldPreload;                          //@synthesize shouldPreload=_shouldPreload - In the implementation block
@property (nonatomic,readonly) long long visitCount; 
@property (nonatomic,readonly) long long visitCountScore; 
@property (nonatomic,readonly) char visitWasClientError; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(WebBookmarkLeaf *)bookmark;
-(double)lastVisitedTimeInterval;
-(NSString *)originalURLString;
-(char)lastVisitWasFailure;
-(id)initWithBookmark:(id)arg1 ;
-(id)pageTitleAtIndex:(unsigned long long)arg1 ;
-(id)pageTitleForUserVisibleURLStringAtIndex:(unsigned long long)arg1 ;
-(char)containsBookmark;
-(id)userVisibleURLStringForPageTitleAtIndex:(unsigned long long)arg1 ;
-(id)userVisibleURLStringAtIndex:(unsigned long long)arg1 ;
-(void)enumeratePageTitlesUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateUserVisibleURLsUsingBlock:(/*^block*/id)arg1 ;
-(float)topSitesScoreForPageTitleAtTime:(double)arg1 ;
-(long long)visitCountScoreForPageTitleAtTime;
-(float)topSitesScoreForURLStringAtIndex:(unsigned long long)arg1 atTime:(double)arg2 ;
-(long long)visitCountScoreForURLStringAtIndex:(unsigned long long)arg1 ;
-(id)matchDataByMergingWithMatchData:(id)arg1 ;
-(char)matchesAutocompleteTrigger:(id)arg1 ;
-(char)shouldPreload;
-(id)initWithBookmark:(id)arg1 shouldPreload:(char)arg2 ;
@end

