/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <libobjc.A.dylib/RWITargetDelegate.h>
#import <libobjc.A.dylib/NSMenuDelegate.h>

@class NSMenuItem, NSMenu, NSArray, BrowserDiagnosticLoggingDelegate, NSMutableSet, NSString;

@interface DevelopMenuController : NSObject <RWITargetDelegate, NSMenuDelegate> {

	NSMenuItem* _developMenuItem;
	NSMenuItem* _highlightedRemoteWebInspectorMenuItem;
	NSMenu* _userAgentMenu;
	NSMenu* _openWithMenu;
	NSMenu* _experimentalFeaturesMenu;
	NSMenu* _serviceWorkersMenu;
	NSMenu* _webExtensionBackgroundPagesMenu;
	NSMenuItem* _getSafariTechnologyPreviewMenuItem;
	char _developMenuOpen;
	NSArray* _userAgents;
	Optional<unsigned long long> _notificationHandlerID;
	BrowserDiagnosticLoggingDelegate* _sharedInspectorDiagnosticLoggingDelegate;
	NSMutableSet* _uuidsOfWebExtensionBackgroundPagesToInspect;
	char _menuInstalled;

}

@property (getter=isMenuInstalled,nonatomic,readonly) char menuInstalled;              //@synthesize menuInstalled=_menuInstalled - In the implementation block
@property (readonly) NSArray * userAgents; 
@property (readonly) NSString * iPhoneUserAgent; 
@property (readonly) NSString * iPadUserAgent; 
@property (readonly) NSString * iPadMiniUserAgent; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedController;
-(void)dealloc;
-(char)updateMenu:(id)arg1 withEvent:(id)arg2 withFlags:(unsigned long long)arg3 ;
-(char)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id*)arg3 action:(SEL*)arg4 ;
-(void)menuWillOpen:(id)arg1 ;
-(void)menuDidClose:(id)arg1 ;
-(void)menu:(id)arg1 willHighlightItem:(id)arg2 ;
-(void)pairWithDevice:(id)arg1 ;
-(void)_setDeveloperExtrasEnabled:(char)arg1 ;
-(void)installMenuWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)removeMenu;
-(char)isMenuInstalled;
-(id)_noWebExtensionBackgroundPagesMenuItem;
-(void)_handleRWINotification:(id)arg1 ;
-(void)_updateMenuForTarget:(id)arg1 ;
-(void)_configureAutomaticInspectionForTarget:(id)arg1 ;
-(void)_removeMenuForTarget:(id)arg1 ;
-(void)_inspectDebuggable:(id)arg1 ;
-(char)_autoPauseSettingForTarget:(id)arg1 ;
-(id)_autoAttachPreferenceKeyForTarget:(id)arg1 ;
-(id)_autoPausePreferenceKeyForTarget:(id)arg1 ;
-(char)_autoAttachSettingForTarget:(id)arg1 ;
-(char)_toggleAttachSettingForTarget:(id)arg1 ;
-(char)_togglePauseSettingForTarget:(id)arg1 ;
-(void)_actuallyInstallMenu;
-(void)_requestAllDeveloperModeExtensions:(/*^block*/id)arg1 ;
-(void)showSnippetEditor:(id)arg1 ;
-(void)_registerForRWINotifications;
-(void)_invalidateAllDeveloperModeExtensions;
-(void)_unregisterForRWINotifications;
-(NSArray *)userAgents;
-(void)_updateServiceWorkerMenuItems;
-(void)_updateWebExtensionBackgroundPagesMenuMenuItems;
-(id)_generateRemoteInspectorTargetMenuItems;
-(id)_menuItemForTarget:(id)arg1 ;
-(void)_updateMenuItem:(id)arg1 forTarget:(id)arg2 ;
-(id)_createMenuItemForTarget:(id)arg1 ;
-(void)_insertMenuItem:(id)arg1 forTarget:(id)arg2 ;
-(void)_updateMenuItem:(id)arg1 forDevice:(id)arg2 ;
-(void)_updateMenuItem:(id)arg1 forSimulator:(id)arg2 ;
-(void)_updateMenuItem:(id)arg1 forMachine:(id)arg2 ;
-(void)_updateSubmenu:(id)arg1 forTarget:(id)arg2 ;
-(id)_menuItemForDebuggable:(id)arg1 title:(id)arg2 ;
-(void)_toggleAutoAttach:(id)arg1 ;
-(void)_toggleAutoPause:(id)arg1 ;
-(void)_toggleWirelessDebugging:(id)arg1 ;
-(void)inspectDebuggable:(id)arg1 ;
-(void)inspectUnloadedBackgroundPage:(id)arg1 ;
-(id)_noServiceWorkersMenuItem;
-(id)_menuItemForWebExtensionWithUnloadedBackgroundPage:(id)arg1 ;
-(void)_indicate:(id)arg1 enabled:(char)arg2 ;
-(char)_isRemoteWebInspectorMenuItem:(id)arg1 ;
-(void)target:(id)arg1 decidePolicyForAutomaticInspectionCandidate:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 didAddDebuggable:(id)arg2 ;
-(void)application:(id)arg1 didRemoveDebuggable:(id)arg2 ;
-(NSString *)iPhoneUserAgent;
-(NSString *)iPadUserAgent;
-(NSString *)iPadMiniUserAgent;
@end

