/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <libobjc.A.dylib/NSFilePresenter.h>

@protocol OS_dispatch_queue, WBSSandboxExtensionToken, DownloadProgressEntryDelegate;
@class NSURL, NSOperationQueue, NSSet, NSError, _WKDownload, NSURLRequest, NSURLResponse, DownloadFile, NSMutableArray, NSMutableDictionary, NSString, NSData, WBSDownloadFileUnarchiver, WBSCoalescedAsynchronousWriter, NSDate, NSProgress, BrowserWindowController, NSObject, NSTimer, NSArray;

@interface DownloadProgressEntry : NSObject <NSFilePresenter> {

	NSURL* _URL;
	long long _bytesLoaded;
	long long _lastReportedBytesLoaded;
	long long _bytesExpected;
	NSError* _error;
	char _done;
	_WKDownload* _wkDownload;
	NSURLRequest* _request;
	NSURLResponse* _response;
	DownloadFile* _downloadFile;
	NSMutableArray* _postDownloadFiles;
	NSMutableDictionary* _depthForNestedArchive;
	NSString* _identifier;
	NSData* _resumeInformation;
	WBSDownloadFileUnarchiver* _fileUnarchiver;
	WBSCoalescedAsynchronousWriter* _plistWriter;
	NSDate* _startDate;
	char _openWhenDone;
	char _allowOverwrite;
	char _shouldAvoidPersistingIdentifyingInformation;
	char _observingWidgetInstallationNotification;
	int _downloadStage;
	long long _bytesLoadedAtStart;
	int _iconNumber;
	long long _lastBytesPerSecond;
	unique_ptr<SafariShared::SuddenTerminationDisabler, std::__1::default_delete<SafariShared::SuddenTerminationDisabler>>* m_suddenTerminationDisabler;
	NSProgress* _progress;
	float _lastSavedFractionCompleted;
	CGPoint _hopOriginPoint;
	BrowserWindowController* _hopOriginWindowController;
	char _observingFileLocation;
	NSObject*<OS_dispatch_queue> _cachedBundlePathAccessQueue;
	NSTimer* _reportUpdatedProgressTimer;
	id<WBSSandboxExtensionToken> _sandboxTokenForBundle;
	NSObject*<OS_dispatch_queue> _downloadSandboxTokenQueue;
	char _shouldUseRequestURLAsOriginURLIfNecessary;
	char _didShowStorageManagerUI;
	char _resumed;
	NSArray* _tags;
	NSDate* _dateAdded;
	NSDate* _dateFinished;
	NSString* _directoryPath;
	id<DownloadProgressEntryDelegate> _delegate;
	NSString* _cachedBundlePath;

}

@property (nonatomic,copy) NSString * cachedBundlePath;                                      //@synthesize cachedBundlePath=_cachedBundlePath - In the implementation block
@property (nonatomic,readonly) char shouldPromptForDownloadPath; 
@property (nonatomic,copy) NSArray * tags;                                                   //@synthesize tags=_tags - In the implementation block
@property (nonatomic,readonly) NSDate * dateAdded;                                           //@synthesize dateAdded=_dateAdded - In the implementation block
@property (nonatomic,readonly) NSDate * dateFinished;                                        //@synthesize dateFinished=_dateFinished - In the implementation block
@property (nonatomic,retain) NSString * directoryPath;                                       //@synthesize directoryPath=_directoryPath - In the implementation block
@property (nonatomic,copy,readonly) NSString * pathExtension; 
@property (assign,nonatomic) char shouldUseRequestURLAsOriginURLIfNecessary;                 //@synthesize shouldUseRequestURLAsOriginURLIfNecessary=_shouldUseRequestURLAsOriginURLIfNecessary - In the implementation block
@property (assign,nonatomic) char didShowStorageManagerUI;                                   //@synthesize didShowStorageManagerUI=_didShowStorageManagerUI - In the implementation block
@property (getter=wasResumed,nonatomic,readonly) char resumed;                               //@synthesize resumed=_resumed - In the implementation block
@property (assign,nonatomic,__weak) id<DownloadProgressEntryDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (copy,readonly) NSURL * presentedItemURL; 
@property (retain,readonly) NSOperationQueue * presentedItemOperationQueue; 
@property (copy,readonly) NSURL * primaryPresentedItemURL; 
@property (readonly) NSSet * observedPresentedItemUbiquityAttributes; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)_resume;
-(id<DownloadProgressEntryDelegate>)delegate;
-(char)open;
-(void)setDelegate:(id<DownloadProgressEntryDelegate>)arg1 ;
-(void)resume;
-(id)error;
-(id)initWithDictionary:(id)arg1 ;
-(id)identifier;
-(NSString *)pathExtension;
-(id)URL;
-(void)setError:(id)arg1 ;
-(id)dictionaryRepresentation;
-(void)stop;
-(NSArray *)tags;
-(id)filename;
-(NSURL *)presentedItemURL;
-(NSOperationQueue *)presentedItemOperationQueue;
-(void)presentedItemDidMoveToURL:(id)arg1 ;
-(void)setTags:(NSArray *)arg1 ;
-(id)_bundlePath;
-(char)isBusy;
-(id)statusString;
-(char)_open;
-(long long)bytesLoaded;
-(NSDate *)dateAdded;
-(long long)bytesPerSecond;
-(NSString *)directoryPath;
-(id)currentFile;
-(char)fileExists;
-(void)_setStartDate:(id)arg1 ;
-(char)isIdle;
-(void)savePendingChangesBeforeTermination;
-(long long)bytesExpected;
-(void)setBytesExpected:(long long)arg1 ;
-(void)setDone:(char)arg1 ;
-(int)downloadStage;
-(void)setHopOriginPoint:(CGPoint)arg1 inWindowController:(id)arg2 ;
-(void)_setDownloadStage:(int)arg1 shouldSendNotifications:(char)arg2 ;
-(id)_initWithRequest:(id)arg1 bytesLoaded:(long long)arg2 bytesExpected:(long long)arg3 error:(id)arg4 download:(id)arg5 downloadFile:(id)arg6 postDownloadFile:(id)arg7 downloadStage:(int)arg8 identifier:(id)arg9 mayOpenWhenDone:(char)arg10 allowOverwrite:(char)arg11 shouldAvoidPersistingIdentifyingInformation:(char)arg12 ;
-(void)_markDownloadBundleAsInProgressIfNeeded;
-(id)downloadFile;
-(void)_forgetAllFiles;
-(id)_pathForDownloadBundleInDirectory:(id)arg1 withFilename:(id)arg2 ;
-(char)_notEnoughFreeDiskSpaceAtDirectoryPath:(id)arg1 ;
-(void)_createDownloadBundleAtPath:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_downloadPath;
-(id)_postDownloadPath;
-(id)_postDownloadFile;
-(void)_saveStateToPListInBundle:(id)arg1 ;
-(void)_markDownloadBundleAsInProgress;
-(void)setDownloadFileWithPath:(id)arg1 isUsingSavePanel:(char)arg2 ;
-(id)currentPath;
-(void)_stopObservingFileLocation;
-(void)_setDownloadFileWithPath:(id)arg1 ;
-(void)_startObservingFileLocation;
-(void)_reportUpdatedProgress;
-(void)_postPathDidChangeNotification;
-(void)setBytesLoaded:(long long)arg1 ;
-(id)_threadSafeCachedBundlePath;
-(void)_extensionTokenForDownloadBundleAtURL:(id)arg1 creatingIfNecessary:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)canAttemptResume;
-(char)_canFinishDownloadWithoutReloading;
-(void)setDownloadStage:(int)arg1 ;
-(void)_autoOpenWithCompletionHandler:(/*^block*/id)arg1 ;
-(char)_hasAnyFiles;
-(void)_forgetPostDownloadFile:(id)arg1 ;
-(void)_forgetAllPostDownloadFiles;
-(void)_reportUpdatedProgressTimerFired:(id)arg1 ;
-(void)_reportUpdatedProgressNow;
-(void)_cancelReportUpdatedProgressTimer;
-(void)_reportUpdatedProgressSoon;
-(id)busyStatus;
-(long long)bytesLoadedSinceStart;
-(unsigned long long)_requiredAdditionalSpaceAtDirectoryPath:(id)arg1 ;
-(void)_startPostProcessingIfDone;
-(void)_browserWindowWillClose:(id)arg1 ;
-(void)_updateCachedBundlePath;
-(void)_addPostDownloadFileWithPath:(id)arg1 ;
-(void)_endWithPostDownloadError:(id)arg1 ;
-(void)_addUnarchivedFiles:(id)arg1 ;
-(char)_addCertificateToKeyChain;
-(id)_allFiles;
-(void)_updatePath:(id)arg1 ofFile:(id)arg2 ;
-(int)_openArchive;
-(void)_moveFilesFromBundleWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)setCachedBundlePath:(NSString *)arg1 ;
-(NSString *)cachedBundlePath;
-(void)_addPostDownloadFiles:(id)arg1 ;
-(void)_stopReportingProgress;
-(void)_setProgressFileURL:(id)arg1 ;
-(void)_startReportingProgress;
-(unsigned long long)_fileSystemFreeSizeAtDirectoryPath:(id)arg1 ;
-(id)_legalFilenameForDirectoryPath:(id)arg1 filename:(id)arg2 ;
-(void)_didCreateDownloadBundleAtPath:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_initializeResumeInformationForDownload;
-(void)_updateFractionCompletedExtendedAttributeIfNeededForPath:(id)arg1 minimumChange:(float)arg2 ;
-(long long)secondsRemaining;
-(void)_clearHopOrigin;
-(id)initWithWKDownload:(id)arg1 mayOpenWhenDone:(char)arg2 allowOverwrite:(char)arg3 shouldAvoidPersistingIdentifyingInformation:(char)arg4 ;
-(void)createDownloadBundleWithFilename:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)removeDownloadBundleWithPath:(id)arg1 ;
-(char)shouldPromptForDownloadPath;
-(void)saveInitialStateToPList;
-(void)willRemove;
-(void)setDownloadFileWithPath:(id)arg1 ;
-(void)setResponse:(id)arg1 bytesLoaded:(long long)arg2 ;
-(id)wkDownload;
-(char)aliasFileExists;
-(void)setDirectoryPath:(NSString *)arg1 ;
-(char)reveal;
-(char)allowOverwrite;
-(char)canAttemptOpen;
-(char)canAttemptReveal;
-(char)canStop;
-(char)canResumeOrReload;
-(char)notEnoughFreeDiskSpaceAtCurrentPath;
-(unsigned long long)requiredAdditionalSpaceAtCurrentPath;
-(id)_canceledError;
-(NSDate *)dateFinished;
-(char)shouldUseRequestURLAsOriginURLIfNecessary;
-(void)setShouldUseRequestURLAsOriginURLIfNecessary:(char)arg1 ;
-(char)didShowStorageManagerUI;
-(void)setDidShowStorageManagerUI:(char)arg1 ;
-(char)wasResumed;
@end

