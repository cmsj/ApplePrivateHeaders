/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <libobjc.A.dylib/AutoFillLocalAuthenticationOperationDelegate.h>
#import <libobjc.A.dylib/SFAppAutoFillOneTimeCodeProviderObserver.h>
#import <libobjc.A.dylib/NSTableViewDataSource.h>
#import <libobjc.A.dylib/NSTableViewDelegate.h>
#import <libobjc.A.dylib/CompletionUIPresentationControllerDelegate.h>

@class NSMutableSet, NSHashTable, SFAppAutoFillOneTimeCodeProvider, AutoFillAuthorizationController, AutoFillLocalAuthenticationOperation, AutoFillLocalAuthenticationManager, NSData, NSString;

@interface FormAutoFillCompletionControllerObjCAdapter : NSObject <AutoFillLocalAuthenticationOperationDelegate, SFAppAutoFillOneTimeCodeProviderObserver, NSTableViewDataSource, NSTableViewDelegate, CompletionUIPresentationControllerDelegate> {

	FormAutoFillCompletionController* _completionController;
	NSMutableSet* _completionAbortingNotificationNames;
	NSHashTable* _observers;
	SFAppAutoFillOneTimeCodeProvider* _cachedOneTimeCodeProvider;
	AutoFillAuthorizationController* _autoFillAuthorizationController;
	char _hasUserInteractedWithTouchID;
	AutoFillLocalAuthenticationOperation* _currentLocalAuthenticationOperation;
	AutoFillLocalAuthenticationManager* _autoFillLocalAuthenticationManager;
	char __biometricAuthenticationStillInUse;

}

@property (assign,nonatomic) char _biometricAuthenticationStillInUse;                //@synthesize _biometricAuthenticationStillInUse=__biometricAuthenticationStillInUse - In the implementation block
@property (nonatomic,readonly) char isAskingForBiometricAuthentication; 
@property (nonatomic,readonly) NSData * currentExternalizedContext; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)invalidate;
-(id)_tableView;
-(long long)numberOfRowsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3 ;
-(id)tableView:(id)arg1 rowViewForRow:(long long)arg2 ;
-(void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3 ;
-(id)tableView:(id)arg1 selectionIndexesForProposedSelection:(id)arg2 ;
-(double)tableView:(id)arg1 heightOfRow:(long long)arg2 ;
-(void)tableViewSelectionDidChange:(id)arg1 ;
-(void)tableViewSelectionIsChanging:(id)arg1 ;
-(FormAutoFillCompletionController*)completionController;
-(void)consumeOneTimeCode:(id)arg1 ;
-(void)oneTimeCodeProviderReceivedCode:(id)arg1 ;
-(id)_oneTimeCodeProvider;
-(NSData *)currentExternalizedContext;
-(void)_updateTouchIDAvailabilityIfNecessary:(id)arg1 ;
-(void)registerAutoFillControllerObserver:(id)arg1 ;
-(void)removeAutoFillControllerObserver:(id)arg1 ;
-(char)isAskingForBiometricAuthentication;
-(FormAutoFillCompletionController*)_formCompletionController;
-(void)completionListTableView:(id)arg1 mouseUpInRow:(long long)arg2 ;
-(void)completionUIPresentationControllerWillStartPresentationAnimation:(id)arg1 ;
-(void)completionUIPresentationControllerDidFinishPresentationAnimation:(id)arg1 ;
-(id)initWithCompletionController:(FormAutoFillCompletionController*)arg1 ;
-(void)didRefreshCompletionListItems:(const Vector<WTF::RefPtr<Safari::CompletionListItem, WTF::RawPtrTraits<Safari::CompletionListItem>, WTF::DefaultRefDerefTraits<Safari::CompletionListItem>>, 0, WTF::CrashOnOverflow, 16, WTF::FastMalloc>*)arg1 ;
-(void)completionWindowDidShow;
-(double)widthOfAutoFillCaptionWithString:(id)arg1 ;
-(double)widthOfCellForItem:(CompletionListItem*)arg1 ;
-(char)performActionForListItem:(const CompletionListItem*)arg1 result:(char*)arg2 shouldAbortCompletion:(char*)arg3 ;
-(void)completionWindowDidHide;
-(void)completionWindowWillShow;
-(void)_cancelCurrentLAOperation;
-(void)_registerTableViewCellClasses;
-(void)_unregisterForCompletionAbortingNotifications;
-(id)_completionListTableView;
-(void)_registerForCompletionAbortingNotifications;
-(void)_didToggleTouchIDToAutoFill:(id)arg1 ;
-(void)_selectFirstCompletionItem;
-(void)_cancelBiometricAuthenticationIfPossible;
-(char)shouldAbortCompletionFromNotification:(id)arg1 ;
-(void)_registerForCompletionAbortingNotificationNamed:(id)arg1 object:(id)arg2 ;
-(void)_abortCompletionFromNotification:(id)arg1 ;
-(char)shouldShowAuthenticationSheetForCompletionListItem:(const CompletionListItem*)arg1 ;
-(void)_presentAuthenticationSheetWithCompletionListItem:(const CompletionListItem*)arg1 ;
-(void)_updateCellAtIndex:(long long)arg1 inTableView:(id)arg2 withBlock:(/*^block*/id)arg3 ;
-(void)_cancelBiometricAuthentication;
-(void)_requestBiometricAuthenticationIfNecessary;
-(id)_autoFillCaptionTableCellViewNibName;
-(void)_showBiometricMatchFailureFeedback;
-(char)_biometricAuthenticationStillInUse;
-(void)set_biometricAuthenticationStillInUse:(char)arg1 ;
-(id)_itemNameForAutoFillAuthorizationSheetWithItem:(const CompletionListItem*)arg1 ;
-(void)updateBiometricAvailabilityInCompletionList:(char)arg1 ;
-(void)operation:(id)arg1 attemptedAuthenticationWithResult:(long long)arg2 ;
-(void)_updateBiometricPromptForTableViewIfNecessary:(id)arg1 ;
-(void)_updateSeparatorStateForItem:(CompletionListItem*)arg1 tableView:(id)arg2 rowView:(id)arg3 row:(long long)arg4 ;
@end

