/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <Safari/SafariExtensionsController.h>
#import <libobjc.A.dylib/SFSafariExtensionHostDelegate.h>
#import <libobjc.A.dylib/ExtensionToolbarItemProviding.h>

@class NSArray, NSMutableDictionary, NSPointerArray, NSMapTable;

@interface SafariAppExtensionsController : SafariExtensionsController <SFSafariExtensionHostDelegate, ExtensionToolbarItemProviding> {

	NSMutableDictionary* _contentBlockerToAssociatedAppExtensionMap;
	NSPointerArray* _extensionContexts;
	NSMapTable* _extensionToReusableContextMap;
	NSMutableDictionary* _extensionToReusableContextTimeout;
	NSMutableDictionary* _extensionToQueuedConnectionBlocks;
	id _keyBagLockStatusObservationToken;
	char _shouldReadFromKeychainAfterKeyBagIsUnlocked;

}

@property (nonatomic,readonly) NSArray * toolbarItemIdentifiers; 
+(id)sharedController;
+(id)_extensionPointIdentifier;
+(id)_composedIdentifierForStateOfExtensionWithBundleIdentifier:(id)arg1 developerIdentifier:(id)arg2 ;
+(id)extensionIdentifierToBaseURIMapBundleParameterKey;
+(id)extensionsCrashReporterMessageBundleParameterKey;
+(long long)toolbarItemIdealPointSize;
+(id)_extensionsCrashReporterMessage;
+(id)_extensionWebsiteAccessForExtensionDictionary:(id)arg1 ;
+(id)_urlForExtensionSettings;
+(id)extensionURLScheme;
+(id)_contentScriptsFromExtensionDictionary:(id)arg1 ;
+(id)_styleSheetsFromExtensionDictionary:(id)arg1 ;
+(Class)_extensionDataClass;
+(char)_initializeExtensionData:(id)arg1 forExtension:(id)arg2 ;
+(id)_skipLoadingEnabledExtensionsAtLaunchPreferenceKey;
-(void)_listenForKeyBagUnlockEvent;
-(void)_handleKeyBagUnlock;
-(void)getActiveWindowWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getAllWindowsWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)reloadPage:(id)arg1 ;
-(void)getTabForPage:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getActiveTabInWindow:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getAllTabsInWindow:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)closeWindow:(id)arg1 ;
-(void)getActivePageInTab:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getPagesInTab:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getWindowForTab:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)activateTab:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)navigateTab:(id)arg1 toURL:(id)arg2 ;
-(void)closeTab:(id)arg1 ;
-(void)dispatchMessageWithName:(id)arg1 fromExtensionWithUUID:(id)arg2 toPage:(id)arg3 userInfo:(id)arg4 ;
-(void)getPropertiesOfPage:(id)arg1 forExtensionWithUUID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getScreenshotOfVisibleAreaForPage:(id)arg1 forExtensionWithUUID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)openTabInWindow:(id)arg1 withURL:(id)arg2 forExtensionWithUUID:(id)arg3 makeActiveIfPossible:(char)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)getToolbarItemInWindow:(id)arg1 forExtensionWithUUID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)openWindowWithURL:(id)arg1 forExtensionWithUUID:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setToolbarItemsNeedUpdateForExtensionWithUUID:(id)arg1 ;
-(void)setToolbarItem:(id)arg1 forExtensionWithUUID:(id)arg2 isEnabled:(char)arg3 withBadgeText:(id)arg4 ;
-(void)setToolbarItem:(id)arg1 forExtensionWithUUID:(id)arg2 isEnabled:(char)arg3 ;
-(void)setToolbarItem:(id)arg1 forExtensionWithUUID:(id)arg2 badgeText:(id)arg3 ;
-(void)setToolbarItem:(id)arg1 forExtensionWithUUID:(id)arg2 imageData:(id)arg3 ;
-(void)setToolbarItem:(id)arg1 forExtensionWithUUID:(id)arg2 label:(id)arg3 ;
-(void)showPopoverFromToolbarItem:(id)arg1 forExtensionWithUUID:(id)arg2 ;
-(void)getBaseURIOfExtensionWithUUID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)extensionDataForExtension:(id)arg1 ;
-(void)dispatchValidateToolbarItem:(id)arg1 toExtensionWithUUID:(id)arg2 inWindow:(id)arg3 ;
-(void)loadPopoverForExtensionWithUUID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)dispatchToolbarItemClickedInWindow:(id)arg1 toExtensionWithUUID:(id)arg2 ;
-(void)dispatchPopoverWillShowInWindow:(id)arg1 toExtensionWithUUID:(id)arg2 ;
-(void)dispatchPopoverDidCloseInWindow:(id)arg1 toExtensionWithUUID:(id)arg2 ;
-(void)completeRequestToExtensionWithUUID:(id)arg1 withRequestIdentifier:(id)arg2 ;
-(char)canAnyExtensionsAddHeadersToURL:(id)arg1 ;
-(void)getExtensionHeadersForURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)pageWithUUID:(id)arg1 willNavigateToURL:(id)arg2 ;
-(void)contentBlockerWithIdentifier:(id)arg1 blockedResourceWithURL:(id)arg2 inPageWithUUID:(id)arg3 ;
-(void)dispatchMessage:(id)arg1 userInfo:(id)arg2 fromPageWithUUID:(id)arg3 toExtensionWithUUID:(id)arg4 ;
-(void)setContextMenuEventUserInfo:(id)arg1 forPageWithUUID:(id)arg2 forExtensionWithUUID:(id)arg3 ;
-(void)dispatchMessageFromContainingAppWithName:(id)arg1 userInfo:(id)arg2 toExtensionWithUUID:(id)arg3 ;
-(id)_persistentStateURLForExtensionURL:(id)arg1 ;
-(id)_extensionURLToLoadFromPersistentStateURL:(id)arg1 ;
-(id)_versionNumberForExtension:(id)arg1 ;
-(id)_displayVersionForExtension:(id)arg1 ;
-(id)_displayNameForExtension:(id)arg1 ;
-(void)_replaceLegacyExtensionsWithAppExtension:(id)arg1 andDeveloperIdentifier:(id)arg2 ;
-(id)_updatedExtensionStateForCurrentPermissions:(id)arg1 previousExtensionState:(id)arg2 ;
-(char)_shouldDisableExtensionIfAdditionalPermissionsAreRequired:(id)arg1 previousExtensionState:(id)arg2 ;
-(char)_canAccessExtensionsDataInStorage;
-(void)_deferAccessToExtensionsDataInStorageDuringLoad:(char)arg1 ;
-(id)userVisibleWebsiteAccessForExtension:(id)arg1 ;
-(id)_cdHashForCodeSigningDictionary:(id)arg1 ;
-(char)_extensionHasPopover:(id)arg1 ;
-(void)_connectToExtension:(id)arg1 reason:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)readExtensionsStateFromStorage;
-(void)_loadContentScriptsAndStylesheetsForExtension:(id)arg1 withCodeRef:(SecCodeRef)arg2 ;
-(void)_loadToolbarItemForExtension:(id)arg1 withCodeRef:(SecCodeRef)arg2 ;
-(void)_loadContextMenuForExtension:(id)arg1 ;
-(void)_loadAssociatedContentBlockersForExtension:(id)arg1 ;
-(long long)_accessLevelRequestedByExtension:(id)arg1 ;
-(id)extensionWithBaseURIHost:(id)arg1 ;
-(char)_canExtensionWithUUID:(id)arg1 accessURL:(id)arg2 ;
-(void)dispatchValidateContextMenuItem:(id)arg1 toExtensionWithUUID:(id)arg2 fromPageWithUUID:(id)arg3 validationHandler:(/*^block*/id)arg4 ;
-(id)_localizedToolbarItemLabelForLocalizedInfoDictionary:(id)arg1 withIdentifier:(id)arg2 ;
-(id)_toolbarItemForExtensionDictionary:(id)arg1 localizedInfoDictionary:(id)arg2 extensionIdentifier:(id)arg3 extensionUUID:(id)arg4 imagePathForName:(/*^block*/id)arg5 validateResourceHandler:(/*^block*/id)arg6 ;
-(void)_insertToolbarItemForExtensionIfNecessary:(id)arg1 ;
-(id)_localizedContextMenuItemLabelForLocalizedInfoDictionary:(id)arg1 withCommand:(id)arg2 ;
-(id)_contextMenuForExtensionDictionary:(id)arg1 localizedInfoDictionary:(id)arg2 extensionUUID:(id)arg3 ;
-(void)_connectContextToSessionWithRequestIdentifier:(id)arg1 remoteViewController:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_connectToExtension:(id)arg1 shareExtensionContext:(char)arg2 reason:(long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_executeQueuedBlocksForExtensionWithUUID:(id)arg1 requestIdentifier:(id)arg2 error:(id)arg3 ;
-(void)_getAPIProxyForExtensionWithUUID:(id)arg1 shareExtensionContext:(char)arg2 reason:(long long)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_getAPIProxyForExtensionWithUUID:(id)arg1 reason:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_scheduleExpirationOfReusableContextForExtensionWithUUID:(id)arg1 ;
-(char)_canExtension:(id)arg1 addHeadersToURL:(id)arg2 ;
-(char)_canExtensionWithUUID:(id)arg1 accessBrowserContentViewController:(id)arg2 ;
-(id)toolbarItemForIdentifier:(id)arg1 browserWindowController:(id)arg2 ;
-(NSArray *)toolbarItemIdentifiers;
-(void)_connectToExtensionForValidation:(id)arg1 untrustedCodeSigningDictionary:(id)arg2 attemptRetryOnFailure:(char)arg3 ;
-(void)_unloadPreviouslyEnabledExtension:(id)arg1 ;
-(void)_loadEnabledExtension:(id)arg1 ;
-(char)_extensionShouldBeAutomaticallyEnabled:(id)arg1 ;
-(id)_generateBaseURIForExtension:(id)arg1 ;
-(void)_enableExtension:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)contextMenuItemsForEnabledExtensionsForPageWithUUID:(id)arg1 withCurrentURL:(id)arg2 ;
-(void)invalidateContextMenuUserInfoForPageWithUUID:(id)arg1 ;
-(void)dispatchContextMenuItemSelected:(id)arg1 toExtensionWithUUID:(id)arg2 fromPageWithUUID:(id)arg3 withUserInfo:(id)arg4 ;
@end

