/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/ExternalURLNavigationDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegatePrivate.h>

@class BrowserViewController, NSTimer, _WKUserInitiatedAction, ExternalURLNavigationHandler, NSURL, WBSAppLink, NSDate, NSString;

@interface BrowserNavigationDelegate : NSObject <ExternalURLNavigationDelegate, WKNavigationDelegatePrivate> {

	BrowserViewController* _browserViewController;
	NSTimer* _cachePageTextTimer;
	NSTimer* _preFillFormsTimer;
	NSTimer* _resetCrashCountTimer;
	char _progressIsForInitialMainFrameLoad;
	unsigned long long _recentWebProcessCrashCount;
	char _wasBrowserInitiatedLoad;
	_WKUserInitiatedAction* _lastUserInitiatedAction;
	ExternalURLNavigationHandler* _externalURLNavigationHandler;
	char _isExternalSchemeRedirectScheduled;
	/*^block*/id _pendingNavigationActionDueToExternalSchemePromptHandler;
	NSURL* _urlReloadedWithOverriddenEnableContentBlockers;
	char _overriddenContentBlockersEnabledSetting;
	double _lastEstimatedProgress;
	WBSAppLink* _currentAppLink;
	char _navigatingViaBackForwardList;
	char _navigatingToCachedPageViaBackForwardList;
	char _didLoadCurrentURLWithContentBlockersEnabled;
	NSDate* _lastCommittedLoadDate;

}

@property (nonatomic,readonly) NSDate * lastCommittedLoadDate;                                                                             //@synthesize lastCommittedLoadDate=_lastCommittedLoadDate - In the implementation block
@property (nonatomic,readonly) double estimatedProgress; 
@property (assign,getter=isNavigatingViaBackForwardList,nonatomic) char navigatingViaBackForwardList;                                      //@synthesize navigatingViaBackForwardList=_navigatingViaBackForwardList - In the implementation block
@property (assign,getter=isNavigatingToCachedPageViaBackForwardList,nonatomic) char navigatingToCachedPageViaBackForwardList;              //@synthesize navigatingToCachedPageViaBackForwardList=_navigatingToCachedPageViaBackForwardList - In the implementation block
@property (nonatomic,readonly) char didLoadCurrentURLWithContentBlockersEnabled;                                                           //@synthesize didLoadCurrentURLWithContentBlockersEnabled=_didLoadCurrentURLWithContentBlockersEnabled - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(void)close;
-(void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didCommitNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(double)estimatedProgress;
-(void)_webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 preferences:(id)arg3 userInfo:(id)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 userInfo:(id)arg3 ;
-(void)_webView:(id)arg1 didStartProvisionalLoadWithRequest:(id)arg2 inFrame:(id)arg3 ;
-(void)_webView:(id)arg1 didFailProvisionalLoadWithRequest:(id)arg2 inFrame:(id)arg3 withError:(id)arg4 ;
-(void)_webView:(id)arg1 didCommitLoadWithRequest:(id)arg2 inFrame:(id)arg3 ;
-(void)_webView:(id)arg1 didFinishLoadWithRequest:(id)arg2 inFrame:(id)arg3 ;
-(void)_webView:(id)arg1 didFailLoadWithRequest:(id)arg2 inFrame:(id)arg3 withError:(id)arg4 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4 ;
-(void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3 ;
-(void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2 ;
-(void)_webView:(id)arg1 authenticationChallenge:(id)arg2 shouldAllowLegacyTLS:(/*^block*/id)arg3 ;
-(void)_webView:(id)arg1 didNegotiateModernTLS:(id)arg2 ;
-(void)_webView:(id)arg1 webContentProcessDidTerminateWithReason:(long long)arg2 ;
-(void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)_webView:(id)arg1 URL:(id)arg2 contentRuleListIdentifiers:(id)arg3 notifications:(id)arg4 ;
-(void)_webView:(id)arg1 contentRuleListWithIdentifier:(id)arg2 performedAction:(id)arg3 forURL:(id)arg4 ;
-(void)_webView:(id)arg1 webGLLoadPolicyForURL:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)_webView:(id)arg1 resolveWebGLLoadPolicyForURL:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)_webView:(id)arg1 backForwardListItemAdded:(id)arg2 removed:(id)arg3 ;
-(void)_webView:(id)arg1 willGoToBackForwardListItem:(id)arg2 inPageCache:(char)arg3 ;
-(void)_webView:(id)arg1 decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)arg2 forExtension:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(long long)_verifyDownloadPolicyDecisionForURL:(id)arg1 isMainFrame:(char)arg2 ;
-(void)_handlePolicyDecisionForURL:(id)arg1 isMainFrame:(char)arg2 navigationResponseDecision:(long long)arg3 decisionHandlerWillUseWebsitePolicies:(long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_handlePolicyDecisionForURL:(id)arg1 isMainFrame:(char)arg2 navigationActionDecision:(long long)arg3 decisionHandlerWillUseWebsitePolicies:(long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_handleUseWithWebsitePoliciesForURL:(id)arg1 isMainFrame:(char)arg2 decisionHandlerWillUseWebsitePoliciesForReload:(char)arg3 preferredUseActionPolicy:(long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_clearSpeculativeStateForDivertedLoadDecision:(char)arg1 isMainFrame:(char)arg2 isDownloadLink:(char)arg3 ;
-(void)_handleUseWithWebsitePoliciesForURL:(id)arg1 isMainFrame:(char)arg2 decisionHandlerWillUseWebsitePoliciesForReload:(char)arg3 preferredUseResponsePolicy:(long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(char)_isSpawningNewTabForURLWindowPolicy:(long long)arg1 navigationType:(long long)arg2 ;
-(char)_shouldGoBackInPinnedTabForURLWindowPolicy:(long long)arg1 navigationType:(long long)arg2 URL:(id)arg3 ;
-(void)_loadWebsitePoliciesForURL:(id)arg1 isForMainFrameNavigation:(char)arg2 isForReload:(char)arg3 withCompletionHandler:(/*^block*/id)arg4 ;
-(void)_unableToImplementPolicyForMainFrameForURL:(id)arg1 ;
-(void)_reloadCrashedPages;
-(void)_openHelpAnchorID:(id)arg1 ;
-(void)_handleErrorPageSearchWebURL:(id)arg1 ;
-(void)_didStartProgressForURL:(id)arg1 ;
-(char)donatePageTextMetadata:(id)arg1 allowingDonationWithoutReaderText:(char)arg2 ;
-(char)_isWebpageSecure;
-(char)_canDonatePageTextToSpotlight;
-(void)_didDecideNavigationPolicy:(long long)arg1 forNavigationAction:(id)arg2 webView:(id)arg3 ;
-(void)_internalWebView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 preferences:(id)arg3 userInfo:(id)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(/*^block*/id)policyDecisionHandlerForNavigationAction:(id)arg1 decisionHandler:(/*^block*/id)arg2 inNewProcess:(char)arg3 ;
-(void)verifyAndHandlePolicyDecisionForURL:(id)arg1 isMainFrame:(char)arg2 navigationActionDecision:(long long)arg3 decisionHandlerWillUseWebsitePolicies:(long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_loadURLSoonWithUserAndPasswordRemoved:(id)arg1 ;
-(void)_openURLExternally:(id)arg1 isMainFrame:(char)arg2 navigationAction:(id)arg3 ;
-(char)_handleErrorPageLink:(id)arg1 webView:(id)arg2 frame:(id)arg3 originatingFrame:(id)arg4 ;
-(char)_handleUserPreferredStartPageLink:(id)arg1 navigationType:(unsigned)arg2 eventModifiers:(unsigned long long)arg3 eventMouseButton:(long long)arg4 ;
-(void)_handlePolicyWhenNotReusingCurrentWebViewForURL:(id)arg1 policy:(long long)arg2 readingListItem:(id)arg3 pageNumber:(unsigned long long)arg4 navigationType:(long long)arg5 ;
-(/*^block*/id)decisionHandlerForNavigationResponsePolicyDecisionHandler:(/*^block*/id)arg1 ;
-(void)verifyAndHandlePolicyDecisionForURL:(id)arg1 isMainFrame:(char)arg2 navigationResponseDecision:(long long)arg3 decisionHandlerWillUseWebsitePolicies:(long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(id)_fallbackURLForWellKnownChangePasswordURL:(id)arg1 ;
-(char)_openURLUsingPassKit:(id)arg1 ;
-(void)_runURLClassifierWithWebView:(id)arg1 URL:(id)arg2 ;
-(void)_locationChangeDoneForWebView:(id)arg1 isMainFrame:(char)arg2 pageLoadType:(int)arg3 error:(id)arg4 ;
-(void)_showAppLinkBannerIfNeeded;
-(void)endProgressFeedback;
-(void)_resetCrashCountSoon;
-(void)_cachePageTextSoon;
-(void)_preFillFormsSoon;
-(char)_canAuthenticateAgainstProtectionSpace:(id)arg1 ;
-(void)externalURLNavigationHandlerDidEnqueueNavigationAction:(id)arg1 ;
-(void)externalURLNavigationHandlerDidCompleteNavigationAction:(id)arg1 ;
-(id)initWithBrowserViewController:(id)arg1 ;
-(void)updateWebsitePoliciesForURL:(id)arg1 ;
-(void)overrideEnableContentBlockersOnNextReload:(char)arg1 ;
-(void)cancelProgressFeedback;
-(void)didStartBrowserInitiatedLoadForURL:(id)arg1 usingBackForwardList:(char)arg2 ;
-(char)_allowCachingPageText;
-(void)_clearBlockedWindowConfigurationCachesIfNecessary:(char)arg1 ;
-(void)showMLPhishingDialogForIdentifier:(id)arg1 url:(id)arg2 webView:(id)arg3 ;
-(NSDate *)lastCommittedLoadDate;
-(char)isNavigatingViaBackForwardList;
-(void)setNavigatingViaBackForwardList:(char)arg1 ;
-(char)isNavigatingToCachedPageViaBackForwardList;
-(void)setNavigatingToCachedPageViaBackForwardList:(char)arg1 ;
-(char)didLoadCurrentURLWithContentBlockersEnabled;
@end

