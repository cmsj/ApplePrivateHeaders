/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <Safari/KeyLoopSplicingContainerView.h>
#import <libobjc.A.dylib/TabPreviewWindowControllerDelegate.h>
#import <libobjc.A.dylib/ButtonInTabSyncGroupDelegate.h>
#import <libobjc.A.dylib/DetachedTabDraggingImageToWindowTransitionControllerDelegate.h>
#import <libobjc.A.dylib/MorphingDragImageControllerDragSource.h>
#import <libobjc.A.dylib/NSAnimationDelegate.h>
#import <libobjc.A.dylib/NSDraggingDestination.h>
#import <libobjc.A.dylib/TabButtonDelegate.h>
#import <libobjc.A.dylib/TabDraggingDestination.h>

@protocol TabPreviewDataSource, TabBarViewItem, TabBarViewDelegate, ButtonInTabSyncGroup;
@class NSTrackingArea, TabButton, NSScrollView, NSLayoutConstraint, NSView, NSMutableArray, NSMapTable, CABackdropLayer, NSTitlebarSeparatorView, TabBarEmptyRegionPlaceholderButton, TabPreviewWindowController, WBSDispatchSourceTimer, NSArray, NSString;

@interface TabBarView : KeyLoopSplicingContainerView <TabPreviewWindowControllerDelegate, ButtonInTabSyncGroupDelegate, DetachedTabDraggingImageToWindowTransitionControllerDelegate, MorphingDragImageControllerDragSource, NSAnimationDelegate, NSDraggingDestination, TabButtonDelegate, TabDraggingDestination> {

	NSTrackingArea* _trackingArea;
	TabButton* _tabButtonUnderMouse;
	TabButton* _pressedTabButton;
	NSScrollView* _scrollView;
	NSLayoutConstraint* _leadingScrollViewConstraint;
	NSView* _scrollViewDocumentView;
	NSView* _tabContainer;
	NSMutableArray* _tabBarViewItems;
	NSMutableArray* _tabButtons;
	NSMapTable* _tabBarViewItemsToTabButtons;
	unsigned long long _selectedTabButtonIndex;
	unsigned long long _firstInsertedTabButtonIndex;
	char _selectionIsChanging;
	char _isInteractivelyClosingTabs;
	char _isScrollingToRevealAddedTab;
	TabButton* _draggedTabButton;
	CGPoint _mouseOffsetOnSelectedTab;
	CGPoint _mouseLocationForDraggedTab;
	unsigned long long _dragSourceIndex;
	unsigned long long _dropIndex;
	unsigned long long _fallbackSelectedTabButtonIndex;
	char _selectedButtonIsDetached;
	char _hideWindowAfterDetachingOnlyTab;
	CGRect _layoutBounds;
	CGRect _firstButtonFrame;
	double _unpinnedSelectedButtonWidth;
	double _remainingWidthInTabBarAfterDividingEvenlyAmongButtons;
	double _scrollViewContentWidth;
	unsigned long long _numberOfTabsForLayout;
	unsigned long long _stackingRegions;
	char _isStackingButtons;
	double _edgeScrollingFactor;
	double _titleScrollingFactor;
	double _selectedButtonSlowingFactor;
	double _slowingDistance;
	NSView* _backgroundView;
	CABackdropLayer* _backdropLayer;
	NSView* _backgroundColorView;
	NSTitlebarSeparatorView* _topBorderSeparatorView;
	NSView* _pinnedTabsContainer;
	unsigned long long _numberOfPinnedTabs;
	unsigned long long _numberOfPinnedTabsForLayout;
	char _isDraggingInPinningRegion;
	char _mustDragExtraDistanceToReorder;
	double _timeOfLastHoveredIndexChange;
	unsigned long long _lastHoveredIndexWhileWaitingForReorderingToKickIn;
	TabBarEmptyRegionPlaceholderButton* _placeholderTabForEmptyUnpinnedRegion;
	char _didScheduledAnimatedLayout;
	char _didLayOutAfterMovingToWindow;
	char _showingContextMenu;
	TabPreviewWindowController* _tabPreviewWindowController;
	id<TabPreviewDataSource> _tabPreviewDataSource;
	id<TabBarViewItem> _tabBarViewItemOfRecentlyDismissedTabPreview;
	WBSDispatchSourceTimer* _tabPreviewWindowShowTimer;
	WBSDispatchSourceTimer* _tabPreviewWindowCleanUpTimer;
	id<TabBarViewItem> _centerTabBarViewItemToPrefetch;
	NSMapTable* _prefetchedTabPreviewDataSources;
	long long _nonPinnedTabButtonLayoutMode;
	char _animationEnabled;
	char _usesOffscreenRendering;
	char _forcesActiveWindowState;
	id<TabBarViewDelegate> _delegate;
	id<ButtonInTabSyncGroup> _buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion;

}

@property (assign,nonatomic,__weak) id<TabBarViewDelegate> delegate;                                                              //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isAnimationEnabled,nonatomic) char animationEnabled;                                                     //@synthesize animationEnabled=_animationEnabled - In the implementation block
@property (assign,nonatomic) char usesOffscreenRendering;                                                                         //@synthesize usesOffscreenRendering=_usesOffscreenRendering - In the implementation block
@property (assign,nonatomic) char forcesActiveWindowState;                                                                        //@synthesize forcesActiveWindowState=_forcesActiveWindowState - In the implementation block
@property (nonatomic,copy) NSArray * tabBarViewItems;                                                                             //@synthesize tabBarViewItems=_tabBarViewItems - In the implementation block
@property (nonatomic,readonly) NSArray * tabButtons;                                                                              //@synthesize tabButtons=_tabButtons - In the implementation block
@property (assign,nonatomic,__weak) id<ButtonInTabSyncGroup> buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion;              //@synthesize buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion=_buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)accessibilityLabelForNumberOfTabs:(unsigned long long)arg1 andNumberOfPinnedTabs:(unsigned long long)arg2 ;
+(char)isTabPreviewEnabled;
+(void)_updateNarrowTabsEnabled;
+(char)isNarrowTabsEnabled;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(id<TabBarViewDelegate>)delegate;
-(void)setDelegate:(id<TabBarViewDelegate>)arg1 ;
-(void)layout;
-(char)isOpaque;
-(char)wantsUpdateLayer;
-(void)updateLayer;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)hitTest:(CGPoint)arg1 ;
-(void)viewDidMoveToWindow;
-(void)mouseDown:(id)arg1 ;
-(id)accessibilityChildren;
-(id)accessibilityLabel;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseMoved:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(id)accessibilityIdentifier;
-(id)accessibilityValue;
-(void)setAccessibilityValue:(id)arg1 ;
-(id)accessibilityContents;
-(void)setAccessibilityContents:(id)arg1 ;
-(void)_windowChangedKeyState;
-(char)acceptsFirstMouse:(id)arg1 ;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(void)scrollWheel:(id)arg1 ;
-(id)menuForEvent:(id)arg1 ;
-(void)willOpenMenu:(id)arg1 withEvent:(id)arg2 ;
-(void)didCloseMenu:(id)arg1 withEvent:(id)arg2 ;
-(void)mouseUp:(id)arg1 ;
-(void)updateTrackingAreas;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(void)otherMouseUp:(id)arg1 ;
-(char)wantsPeriodicDraggingUpdates;
-(void)_commonTabBarViewInit;
-(void)_clipViewBoundsChanged:(id)arg1 ;
-(void)updateCloseButtonVisibilityForTabBarViewItem:(id)arg1 ;
-(void)_updateButtonsAndLayOutAnimated:(char)arg1 isSelectingButton:(char)arg2 ;
-(void)_updateIndexOfTabUnderCurrentMouseLocation:(char)arg1 ;
-(void)_restackButtonViews;
-(char)_shouldLayOutButtonsNow;
-(unsigned long long)_numberOfTabsForLayout;
-(void)_updatePinnedTabs;
-(void)_recalculateLayoutAndUpdateContainerViewFrames;
-(void)_scrollToButtonAtIndex:(unsigned long long)arg1 canScrollSelectedButton:(char)arg2 ;
-(void)_layOutButtonsAnimated:(char)arg1 ;
-(void)_updateButtonStateAndKeyLoop;
-(void)_updateButtonsAndLayOutAnimated:(char)arg1 ;
-(void)_updateBackdropLayer;
-(double)_pinnedTabsWidth;
-(void)_recalculateLayout;
-(char)_canDetachTab;
-(void)_startReorderingRestrictionsAfterPinning;
-(void)_cancelReorderingRestrictionsAfterPinning;
-(void)_animateButtonLayout:(id)arg1 ;
-(char)_shouldAlignTabButtonTitleWithWindowCenter;
-(unsigned long long)_frontmostButtonIndex;
-(void)_layOutDraggedButtonAnimated:(char)arg1 ;
-(CGRect)_viewFrameForAdjustedButtonFrame:(CGRect)arg1 ;
-(double)_titleCenterOffsetForButton:(id)arg1 ;
-(double)_titleCenterOffsetForButtonAtIndex:(unsigned long long)arg1 frontmostButtonIndex:(unsigned long long)arg2 ;
-(CGRect)_placeholderTabForEmptyUnpinnedRegionButtonFrame;
-(double)_layoutBoundsWidth;
-(char)_shouldCreatePlaceholderTabForEmptyUnpinnedRegion;
-(void)_uninstallPlaceholderTabForEmptyUnpinnedRegion;
-(void)setButtonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion:(id<ButtonInTabSyncGroup>)arg1 ;
-(id<ButtonInTabSyncGroup>)buttonThatSyncsWithPlaceholderTabInEmptyUnpinnedRegion;
-(CGRect)_layoutBounds;
-(unsigned long long)_numberOfPinnedTabsForLayout;
-(void)_updateButtonWidthAndRemainingWidthInTabBarToDivideAmongButtons;
-(unsigned long long)_calculateStackingRegions;
-(char)_shouldLayOutButtonsToAlignWithWindowCenter;
-(CGRect)_centeringFrameForButtonAtIndex:(unsigned long long)arg1 ;
-(double)_horizontalOffsetForButtonAtIndex:(unsigned long long)arg1 frontmostButtonIndex:(unsigned long long)arg2 slowingFactor:(double)arg3 ;
-(unsigned long long)_tabIndexAtPointWhenLayingOutButtonsToAlignWithWindowCenter:(CGPoint)arg1 ;
-(unsigned long long)_visibleTabIndexAtPoint:(CGPoint)arg1 stackingRegion:(unsigned long long*)arg2 ignorePointsOutsideOfLayoutBounds:(char)arg3 ;
-(unsigned long long)_tabIndexAtPoint:(CGPoint)arg1 ;
-(CGPoint)_scrollTargetPointForStackingRegion:(unsigned long long)arg1 ;
-(NSArray *)tabBarViewItems;
-(void)selectTabBarViewItem:(id)arg1 ;
-(NSEdgeInsets)_layoutBoundsEdgeInsetsForUnstackedButtons;
-(CGRect)_rectWithUnstackedButtons;
-(double)_effectiveRightStackWidthForButtonAtIndex:(unsigned long long)arg1 ;
-(double)_effectiveLeftStackWidthForButtonAtIndex:(unsigned long long)arg1 ;
-(void)setForcesActiveWindowState:(char)arg1 ;
-(void)insertTabBarViewItem:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)_insertTabButtonWithTabViewItem:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)_scheduleButtonLayOutAnimated:(char)arg1 ;
-(void)_installPlaceholderTabForEmptyUnpinnedRegion;
-(void)_moveButton:(id)arg1 forTabBarViewItem:(id)arg2 toIndex:(unsigned long long)arg3 ;
-(void)_setIndexOfTabUnderMouse:(unsigned long long)arg1 animated:(char)arg2 ;
-(char)_shouldShowCloseButtonForTabBarViewItem:(id)arg1 ;
-(id)tabButton:(id)arg1 menuForEvent:(id)arg2 ;
-(void)_animateTabBackgroundOnClickEventIfAppropriate:(id)arg1 ;
-(void)_trackMouseEventsForEvent:(id)arg1 inStackingRegion:(unsigned long long)arg2 ;
-(void)_trackMouseEventsForEvent:(id)arg1 onTabAtIndex:(unsigned long long)arg2 ;
-(id)_trackMouseEventsUntilMouseUp:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(unsigned long long)_visibleTabIndexAtPoint:(CGPoint)arg1 stackingRegion:(unsigned long long*)arg2 ;
-(void)_scrollAfterClickingOnStackingRegion:(unsigned long long)arg1 ;
-(void)selectTabButton:(id)arg1 ;
-(void)_trackReorderingEventsWithStartEvent:(id)arg1 forTabButton:(id)arg2 ;
-(void)_setTabButtonUnderMouse:(id)arg1 shouldAnimateHighlight:(char)arg2 ;
-(char)_shouldHighlightButtonOnHover;
-(long long)_tabDragResultForInitialDragWithStartEvent:(id)arg1 ;
-(long long)_tabDragResultForEventTrackingWithStartEvent:(id)arg1 ;
-(void)_detachTabAndPositionUnderCursor:(id)arg1 ;
-(char)_shouldDetachTabForMouseEvent:(id)arg1 ;
-(void)_updateDropIndexWithDraggingLocation:(CGPoint)arg1 ;
-(double)_pinningRegionWidth;
-(void)_autoscrollButtonsForStackingRegion:(unsigned long long)arg1 ;
-(unsigned long long)_numberOfUnpinnedTabs;
-(id)_miniWindowDragImageForTabButton:(id)arg1 ;
-(id)_tabDragImageForTabButton:(id)arg1 ;
-(id)_pinnedTabDragImageForTabButton:(id)arg1 ;
-(CGPoint)_mouseLocationInDragImageForTabButton:(id)arg1 ;
-(double)_miniWindowDragImageWidth;
-(id)_destinationWindowForDropOnScreenOperation;
-(unsigned long long)_updateDropIndexWithTabDraggingInfo:(id)arg1 ;
-(unsigned long long)_dragOperationForDraggingInfo:(id)arg1 ;
-(id)destinationWindowForDetachedTabDraggingImageToWindowTransitionController:(id)arg1 ;
-(void)detachedTabDraggingImageToWindowTransitionController:(id)arg1 didFinishTransitionAnimationForWindow:(id)arg2 ;
-(void)morphingDragImage:(id)arg1 wasDroppedAtPointOnScreen:(CGPoint)arg2 ;
-(id)dragDestinationWindowForMorphingDragImage:(id)arg1 ;
-(void)closeTabButton:(id)arg1 ;
-(void)tabButtonDidBecomeFirstResponder:(id)arg1 ;
-(unsigned long long)tabDraggingEntered:(id)arg1 ;
-(unsigned long long)tabDraggingUpdated:(id)arg1 ;
-(void)tabDraggingExited:(id)arg1 ;
-(char)performTabDragOperation:(id)arg1 ;
-(char)wantsPeriodicTabDraggingUpdates;
-(char)willPinTabForTabDragOperation:(id)arg1 ;
-(void)_layoutSublayersOfLayer:(id)arg1 ;
-(double)currentButtonWidth;
-(char)forcesActiveWindowState;
-(void)setTabBarViewItems:(NSArray *)arg1 ;
-(void)addTabBarViewItem:(id)arg1 ;
-(void)removeTabBarViewItem:(id)arg1 ;
-(void)moveTabBarViewItem:(id)arg1 toIndex:(unsigned long long)arg2 ;
-(NSArray *)tabButtons;
-(void)smartMagnifyWithEvent:(id)arg1 ;
-(void)dismissTabPreviewWindow;
-(void)prepareForOffscreenRendering;
-(void)setUsesOffscreenRendering:(char)arg1 ;
-(void)tabPreviewWindowWillClose:(id)arg1 ;
-(void)tabPreviewWindowDidClose:(id)arg1 ;
-(void)buttonInTabSyncGroup:(id)arg1 didSetTabButtonState:(unsigned long long)arg2 ;
-(CGRect)_contentBounds;
-(void)_narrowTabsRelatedPreferenceDidChange:(id)arg1 ;
-(void)_setUpViewAnimationForLayout:(char)arg1 ;
-(CGRect)_adjustedFrameForButtonAtIndex:(unsigned long long)arg1 selectedButtonIndex:(unsigned long long)arg2 isHidden:(char*)arg3 ;
-(double)_minButtonWidth;
-(double)_effectiveSelectedButtonSlowingFactorWithAdjustmentScale:(double)arg1 ;
-(double)_effectiveSlowingDistanceWithAdjustmentScale:(double)arg1 ;
-(unsigned long long)_frontmostButtonIndexInUnpinnedRegion;
-(double)_buttonWidthForNumberOfButtons:(unsigned long long)arg1 selectedButtonIndex:(unsigned long long)arg2 inWidth:(double)arg3 remainderWidth:(double*)arg4 selectedButtonWidth:(double*)arg5 ;
-(CGRect)_unstackedFrameForButtonAtIndex:(unsigned long long)arg1 selectedTabIndex:(unsigned long long)arg2 ;
-(CGRect)_frameForButtonAtIndex:(unsigned long long)arg1 selectedTabIndex:(unsigned long long)arg2 firstButtonOffset:(double)arg3 buttonWidth:(double)arg4 selectedButtonWidth:(double)arg5 supplementalWidth:(double)arg6 ;
-(unsigned long long)_tabIndexAtPoint:(CGPoint)arg1 withButtonWidth:(double)arg2 selectedButtonIndex:(unsigned long long)arg3 selectedButtonWidth:(double)arg4 supplementalWidth:(double)arg5 ;
-(unsigned long long)_tabIndexAtPoint:(CGPoint)arg1 withButtonWidth:(double)arg2 numberOfButtonsWithSupplementalWidth:(unsigned long long)arg3 supplementalWidthPerButton:(double)arg4 ;
-(void)_setPressedTabButton:(id)arg1 animated:(char)arg2 ;
-(void)_cancelOrCloseTabPreviewWindowIfNeeded;
-(void)_updateTabPreviewOnMouseMove;
-(char)_canShowTabPreview;
-(id)_tabPreviewDataSourceForTabBarViewItem:(id)arg1 ;
-(void)_clearPrefetchedTabPreviewDataSources;
-(void)_prefetchTabPreviewDataSourcesAroundTabBarViewItem:(id)arg1 ;
-(void)_showTabPreviewWindow;
-(char)isAnimationEnabled;
-(void)setAnimationEnabled:(char)arg1 ;
-(char)usesOffscreenRendering;
@end

