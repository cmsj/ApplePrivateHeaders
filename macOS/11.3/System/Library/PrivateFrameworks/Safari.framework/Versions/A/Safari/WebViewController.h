/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:09 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <AppKit/NSViewController.h>
#import <libobjc.A.dylib/FindBannerDelegate.h>
#import <libobjc.A.dylib/_WKFindDelegate.h>
#import <libobjc.A.dylib/BannerContainerViewDelegate.h>
#import <libobjc.A.dylib/BannerDelegate.h>
#import <libobjc.A.dylib/SearchableWKViewFullScreenDelegate.h>

@class NSMutableArray, BannerContainerView, NSString, WKWebViewConfiguration, SearchableWKView, HeaderFooterPrintRenderer, WKWebsiteDataStore, NSURL, FileWrapper, NSData, FindBanner, TabContentViewController, NSArray;

@interface WebViewController : NSViewController <FindBannerDelegate, _WKFindDelegate, BannerContainerViewDelegate, BannerDelegate, SearchableWKViewFullScreenDelegate> {

	RefPtr<Safari::WebViewControllerWKAdapter, WTF::RawPtrTraits<Safari::WebViewControllerWKAdapter>, WTF::DefaultRefDerefTraits<Safari::WebViewControllerWKAdapter>>* _webViewControllerWKAdapter;
	NSMutableArray* _bannerActionQueue;
	BannerContainerView* _bannerContainerView;
	NSMutableArray* _installedBanners;
	NSString* _suggestedFilenameForFrameToSave;
	WKWebViewConfiguration* _configuration;
	char _isDeferringViewInWindowChanges;
	char _isClosed;
	char _isSavingAsPDF;
	char __isSavingAsWebArchive;
	SearchableWKView* _webView;
	HeaderFooterPrintRenderer* _headerFooterPrintRenderer;
	unsigned long long _browsingMode;
	WKWebsiteDataStore* _websiteDataStore;
	Frame* _frameToSave;
	NSURL* _urlToSave;
	FileWrapper* _fileWrapperToSave;
	NSData* _dataForFrameToSave;
	NSData* _dataForWebArchiveToSave;
	FindBanner* _findBanner;
	double _topContentInset;

}

@property (assign,setter=_setZoomFactor:,nonatomic) double zoomFactor; 
@property (nonatomic,readonly) unsigned long long browsingMode;                                                      //@synthesize browsingMode=_browsingMode - In the implementation block
@property (nonatomic,readonly) WKWebsiteDataStore * websiteDataStore;                                                //@synthesize websiteDataStore=_websiteDataStore - In the implementation block
@property (nonatomic,readonly) WebViewControllerWKAdapter* webViewControllerWKAdapter; 
@property (nonatomic,readonly) char usesPrivateBrowsing; 
@property (nonatomic,readonly) NSURL * committedURL; 
@property (nonatomic,copy,readonly) NSString * pageTitle; 
@property (getter=isShowingStandaloneImage,nonatomic,readonly) char showingStandaloneImage; 
@property (nonatomic,readonly) SearchableWKView * webView;                                                           //@synthesize webView=_webView - In the implementation block
@property (nonatomic,readonly) Page* page; 
@property (nonatomic,readonly) int webProcessIdentifier; 
@property (nonatomic,readonly) TabContentViewController * tabContentViewController; 
@property (nonatomic,readonly) char isClosed;                                                                        //@synthesize isClosed=_isClosed - In the implementation block
@property (nonatomic,readonly) char canSave; 
@property (nonatomic,readonly) char isSavingAsPDF;                                                                   //@synthesize isSavingAsPDF=_isSavingAsPDF - In the implementation block
@property (nonatomic,readonly) char isSaveDialogPending; 
@property (nonatomic,readonly) Frame* frameToSave;                                                                   //@synthesize frameToSave=_frameToSave - In the implementation block
@property (nonatomic,readonly) NSURL * urlToSave;                                                                    //@synthesize urlToSave=_urlToSave - In the implementation block
@property (nonatomic,readonly) FileWrapper * fileWrapperToSave;                                                      //@synthesize fileWrapperToSave=_fileWrapperToSave - In the implementation block
@property (nonatomic,copy,readonly) NSString * mimeTypeForSaving; 
@property (nonatomic,copy,readonly) NSData * dataForFrameToSave;                                                     //@synthesize dataForFrameToSave=_dataForFrameToSave - In the implementation block
@property (nonatomic,copy,readonly) NSData * dataForWebArchiveToSave;                                                //@synthesize dataForWebArchiveToSave=_dataForWebArchiveToSave - In the implementation block
@property (nonatomic,copy,readonly) NSString * suggestedFilenameToSave; 
@property (nonatomic,readonly) char _isSavingAsWebArchive;                                                           //@synthesize _isSavingAsWebArchive=__isSavingAsWebArchive - In the implementation block
@property (nonatomic,readonly) char canPrint; 
@property (nonatomic,readonly) HeaderFooterPrintRenderer * headerFooterPrintRenderer;                                //@synthesize headerFooterPrintRenderer=_headerFooterPrintRenderer - In the implementation block
@property (nonatomic,copy,readonly) NSArray * installedBanners;                                                      //@synthesize installedBanners=_installedBanners - In the implementation block
@property (nonatomic,readonly) FindBanner * findBanner;                                                              //@synthesize findBanner=_findBanner - In the implementation block
@property (getter=isShowingFindInPageBanner,nonatomic,readonly) char showingFindInPageBanner; 
@property (nonatomic,readonly) char canShowFindInPageBanner; 
@property (nonatomic,readonly) char canHideFindInPageBanner; 
@property (nonatomic,readonly) char canFocusContentSearchField; 
@property (nonatomic,readonly) char canFindNextInPage; 
@property (nonatomic,readonly) char canFindPreviousInPage; 
@property (getter=_isCurrentPageSearchable,nonatomic,readonly) char _currentPageSearchable; 
@property (assign,nonatomic) double topContentInset;                                                                 //@synthesize topContentInset=_topContentInset - In the implementation block
@property (getter=isTopContentInsetCurrentlyUsed,nonatomic,readonly) char topContentInsetCurrentlyUsed; 
@property (nonatomic,readonly) char canShowWebInspector; 
@property (nonatomic,copy,readonly) NSString * userAgent; 
@property (nonatomic,copy) NSString * customUserAgent; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)webViewControllerForPage:(const Page*)arg1 ;
+(void)enumerateWebViewControllersUsingBlock:(/*^block*/id)arg1 ;
+(id)_pagesToWebViewControllers;
-(void)dealloc;
-(void)invalidate;
-(void)close;
-(void)loadView;
-(Page*)page;
-(void)viewDidLoad;
-(char)isClosed;
-(void)_close;
-(SearchableWKView *)webView;
-(NSString *)userAgent;
-(NSString *)pageTitle;
-(char)canZoomOut;
-(char)canZoomIn;
-(void)setCustomUserAgent:(NSString *)arg1 ;
-(NSString *)customUserAgent;
-(char)canMakeTextSmaller;
-(double)zoomFactor;
-(void)_setTextZoomFactor:(double)arg1 ;
-(NSURL *)committedURL;
-(WKWebsiteDataStore *)websiteDataStore;
-(double)_textZoomFactor;
-(void)beginDeferringViewInWindowChanges;
-(void)endDeferringViewInWindowChanges;
-(void)endDeferringViewInWindowChangesSync;
-(void)_webView:(id)arg1 didCountMatches:(unsigned long long)arg2 forString:(id)arg3 ;
-(void)_webView:(id)arg1 didFindMatches:(unsigned long long)arg2 forString:(id)arg3 withMatchIndex:(long long)arg4 ;
-(void)_webView:(id)arg1 didFailToFindString:(id)arg2 ;
-(void)dismissContentRelativeChildWindows;
-(char)canSave;
-(char)canMakeTextBigger;
-(void)makeTextBigger;
-(void)makeTextSmaller;
-(char)usesPrivateBrowsing;
-(void)resetZoom;
-(void)_setZoomFactor:(double)arg1 ;
-(TabContentViewController *)tabContentViewController;
-(unsigned long long)browsingMode;
-(int)webProcessIdentifier;
-(char)tryClose;
-(void)hideAllBannersAnimated:(char)arg1 ;
-(void)uninstallBanner:(id)arg1 animated:(char)arg2 ;
-(void)bannerContainerViewDidUninstall:(id)arg1 ;
-(void)bannerContainerView:(id)arg1 installAnimationDidEndForBanner:(id)arg2 ;
-(void)bannerContainerView:(id)arg1 didUninstallBanner:(id)arg2 ;
-(void)bannerContainerView:(id)arg1 willInstallBanner:(id)arg2 ;
-(void)bannerContainerView:(id)arg1 didInstallBanner:(id)arg2 ;
-(void)bannerContainerView:(id)arg1 willUninstallBanner:(id)arg2 ;
-(void)bannerContainerViewDidUpdateLayoutDuringAnimation:(id)arg1 ;
-(id)initWithConfiguration:(id)arg1 browsingMode:(unsigned long long)arg2 ;
-(char)contentIsCapableOfZoom;
-(WebViewControllerWKAdapter*)webViewControllerWKAdapter;
-(double)topContentInset;
-(void)setTopContentInset:(double)arg1 ;
-(void)hideFindInPageBannerAnimated:(char)arg1 ;
-(void)updateSiteZoomPreference;
-(char)isShowingStandaloneImage;
-(Frame*)frameToSave;
-(NSURL *)urlToSave;
-(char)canFocusContentSearchField;
-(void)focusContentSearchField;
-(char)_isCurrentPageSearchable;
-(char)canPrint;
-(char)isTopContentInsetCurrentlyUsed;
-(void)moveBannerContainerToFollowWebContent;
-(char)canShowWebInspector;
-(void)toggleWebInspector;
-(id)_viewBelowBanner;
-(char)isBannerInstalled:(id)arg1 ;
-(char)isShowingFindInPageBanner;
-(void)queueInstallationOfBanner:(id)arg1 animated:(char)arg2 ;
-(void)queueUninstallationOfBanner:(id)arg1 animated:(char)arg2 ;
-(id)_createWebViewWithConfiguration:(id)arg1 ;
-(Ref<Safari::WebViewControllerWKAdapter, WTF::RawPtrTraits<Safari::WebViewControllerWKAdapter>>*)createContentViewController;
-(char)_isSavingAsWebArchive;
-(void)_presentSaveDialog;
-(FileWrapper *)fileWrapperToSave;
-(char)isSavingAsPDF;
-(NSString *)mimeTypeForSaving;
-(NSString *)suggestedFilenameToSave;
-(NSData *)dataForWebArchiveToSave;
-(void)presentSavePDFDialogForFrame:(const Frame*)arg1 ;
-(void)presentSaveDialogForFrame:(const Frame*)arg1 ;
-(void)saveDialogDidClose;
-(NSData *)dataForFrameToSave;
-(char)isSaveDialogPending;
-(void)findNextInPage;
-(void)findPreviousInPage;
-(FindBanner *)findBanner;
-(char)canFindNextInPage;
-(char)canFindPreviousInPage;
-(char)canHideFindInPageBanner;
-(void)zoomIn;
-(void)zoomOut;
-(char)canResetZoom;
-(NSArray *)installedBanners;
-(char)setCustomUserAgent:(id)arg1 reloadPage:(char)arg2 ;
-(char)isReadyToFindForBanner:(id)arg1 ;
-(void)hideFindOverlayForBanner:(id)arg1 ;
-(void)findBanner:(id)arg1 startFindingString:(id)arg2 findOptions:(unsigned long long)arg3 maximumNumberOfMatches:(unsigned long long)arg4 ;
-(void)findBanner:(id)arg1 highlightAllMatchesForString:(id)arg2 findOptions:(unsigned long long)arg3 maximumNumberOfMatches:(unsigned long long)arg4 ;
-(char)shouldUpdateFindPasteboardForBanner:(id)arg1 ;
-(void)zoomWithFactor:(id)arg1 ;
-(void)presentSaveDialogForFileWrapper:(id)arg1 ;
-(HeaderFooterPrintRenderer *)headerFooterPrintRenderer;
-(void)didReceiveSuggestedFilename:(id)arg1 forSavingFrame:(const Frame*)arg2 ;
-(void)_zoomPreferencesDidLoad:(id)arg1 ;
-(void)_defaultPageZoomDidChange:(id)arg1 ;
-(void)_perSitePageZoomDidChange:(id)arg1 ;
-(void)_willClosePage;
-(id)_suggestedFilenameForFrameToSave;
-(void)_presentSaveDialogIfReadyForFrame:(const Frame*)arg1 ;
-(char)_isWebViewInFullScreenMode;
-(void)_queueBanner:(id)arg1 withActionType:(long long)arg2 animated:(char)arg3 ;
-(void)_startNextQueuedBannerAction;
-(void)_createBannerContainerViewIfNeeded;
-(void)_updateFocusAfterBannerUninstall;
-(char)canShowFindInPageBanner;
-(id)_createFindInPageBanner;
-(void)showFindInPageBannerAnimated:(char)arg1 ;
-(char)_zoomsTextOnly;
-(void)registerSiteZoomPreference;
-(char)_fullPageZoomEnabled;
-(id)currentZoomPreference;
-(void)_hideAllBannerOverlays;
@end

