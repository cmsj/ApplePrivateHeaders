/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FirefoxCryptoKeyStorage.h>

@class NSData, BerkeleyDatabase, NSString;

@interface FirefoxCryptoKeyStoreV3 : NSObject <FirefoxCryptoKeyStorage> {

	BerkeleyDatabase* _database;
	char _databasePassedSanityCheck;
	NSData* _passwordCheckData;
	NSData* _passwordCheckHeader;
	NSData* _passwordCheckEntrySalt;
	NSData* _passwordCheckPayload;

}

@property (nonatomic,readonly) char canOpen; 
@property (nonatomic,readonly) char storesRawPrivateKey; 
@property (nonatomic,readonly) char isKeyStorageUsingFirefox75AndAbove; 
@property (nonatomic,copy,readonly) NSData * globalSaltData; 
@property (nonatomic,copy,readonly) NSData * passwordCheckEntrySalt; 
@property (nonatomic,copy,readonly) NSData * passwordCheckPayload; 
@property (nonatomic,copy,readonly) NSData * passwordCheckIV; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)_dataForKey:(id)arg1 ;
-(char)_openDatabaseIfNeeded;
-(id)initWithStoreURL:(id)arg1 ;
-(char)canOpen;
-(char)isKeyStorageUsingFirefox75AndAbove;
-(NSData *)globalSaltData;
-(NSData *)passwordCheckEntrySalt;
-(NSData *)passwordCheckPayload;
-(NSData *)passwordCheckIV;
-(id)encryptedPrivateKeyDataWithID:(id)arg1 ;
-(char)storesRawPrivateKey;
-(id)_versionData;
-(void)_resetDerivedData;
-(id)_passwordCheckHeader;
-(id)_passwordCheckData;
@end

