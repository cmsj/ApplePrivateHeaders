/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <libobjc.A.dylib/BrowserPersistentState.h>
#import <libobjc.A.dylib/WBSClosedWindow.h>

@class NSMutableArray, NSString, NSDate, NSUUID, NSArray;

@interface BrowserWindowPersistentState : NSObject <BrowserPersistentState, WBSClosedWindow> {

	NSMutableArray* _tabStates;
	unsigned long long _selectedUnpinnedTabIndex;
	unsigned long long _selectedPinnedTabIndex;
	CGRect _windowContentRect;
	NSString* _customUnifiedFieldText;
	char _favoritesBarHidden;
	char _isMinimized;
	char _prefersSidebarVisible;
	char _isPopupWindow;
	char _privateWindow;
	char _tabBarHidden;
	NSDate* _dateClosed;
	NSUUID* _windowUUID;

}

@property (getter=isPrivateWindow,nonatomic,readonly) char privateWindow;                 //@synthesize privateWindow=_privateWindow - In the implementation block
@property (nonatomic,readonly) NSDate * dateClosed;                                       //@synthesize dateClosed=_dateClosed - In the implementation block
@property (nonatomic,readonly) NSUUID * windowUUID;                                       //@synthesize windowUUID=_windowUUID - In the implementation block
@property (assign,nonatomic) char isMinimized;                                            //@synthesize isMinimized=_isMinimized - In the implementation block
@property (getter=isTabBarHidden,nonatomic,readonly) char tabBarHidden;                   //@synthesize tabBarHidden=_tabBarHidden - In the implementation block
@property (nonatomic,readonly) char hasTabsToRestore; 
@property (nonatomic,copy,readonly) NSArray * tabUUIDs; 
@property (nonatomic,readonly) unsigned long long numberOfTabs; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) id<WBSClosedTab> selectedClosedTab; 
@property (nonatomic,readonly) unsigned long long numberOfNonDisposableTabs; 
@property (nonatomic,copy,readonly) NSArray * closedTabs; 
@property (nonatomic,readonly) long long closedItemType; 
-(unsigned long long)numberOfTabs;
-(char)isMinimized;
-(NSUUID *)windowUUID;
-(char)containsAnyURLs;
-(unsigned long long)numberOfNonDisposableTabs;
-(id)selectedTab;
-(char)isTabBarHidden;
-(id)initWithBrowserWindowController:(id)arg1 encryptionProvider:(id)arg2 ;
-(id)initWithDictionaryRepresentation:(id)arg1 encryptionProvider:(id)arg2 ;
-(char)hasTabsToRestore;
-(void)setIsMinimized:(char)arg1 ;
-(void)restoreBrowserWindow;
-(id)dictionaryRepresentationIncludingSessionState:(char)arg1 forCleanExit:(char)arg2 ;
-(NSArray *)tabUUIDs;
-(long long)closedItemType;
-(NSDate *)dateClosed;
-(NSArray *)closedTabs;
-(char)containsTabStateWithUUID:(id)arg1 ;
-(void)removeTabStateWithUUID:(id)arg1 ;
-(void)removeStateWithURLs:(id)arg1 ;
-(void)enumerateTabStatesUsingBlock:(/*^block*/id)arg1 ;
-(void)restoreWindowContents:(id)arg1 ;
-(char)isPrivateWindow;
-(void)_initWithDictionaryRepresentationCommon:(id)arg1 ;
-(id)_initWithV1DictionaryRepresentation:(id)arg1 encryptionProvider:(id)arg2 ;
-(id)_initWithV2DictionaryRepresentation:(id)arg1 encryptionProvider:(id)arg2 ;
-(char)_shouldRestoreTabStateInWindow:(id)arg1 ;
-(id)_tabStatesToRestore;
-(id<WBSClosedTab>)selectedClosedTab;
@end

