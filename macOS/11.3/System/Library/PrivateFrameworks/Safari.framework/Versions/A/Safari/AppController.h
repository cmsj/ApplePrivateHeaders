/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <libobjc.A.dylib/PrivacyReportControllerDelegate.h>
#import <libobjc.A.dylib/WBSDigitalHealthManagerDelegate.h>
#import <libobjc.A.dylib/DownloadAlertsManagerDelegate.h>
#import <libobjc.A.dylib/DownloadsManagerDecisionResponder.h>
#import <libobjc.A.dylib/DownloadsManagerDelegate.h>
#import <libobjc.A.dylib/MutableMediaStateTrackerDataSource.h>
#import <libobjc.A.dylib/MutableMediaStateTrackerDelegate.h>
#import <libobjc.A.dylib/WBSWebExtensionsControllerDelegate.h>
#import <libobjc.A.dylib/WBSPhishingClassifierControllerDelegate.h>
#import <libobjc.A.dylib/NSApplicationDelegate.h>
#import <libobjc.A.dylib/NSMenuDelegate.h>
#import <libobjc.A.dylib/NSUserInterfaceValidations.h>
#import <libobjc.A.dylib/FormTextStatusWatcherDelegate.h>

@protocol OS_dispatch_queue, TabSnapshotVending, WBSPhishingClassifier, EncryptionProvider;
@class NSMenuItem, SFAuthorization, NSMenu, BrowserSessionPersistentState, WBSCoalescedAsynchronousWriter, NSMutableArray, WBSLeadImageCache, BookmarksMenuController, NSUserActivity, NSTimer, SafariAutomationController, _WKUserStyleSheet, NSAlert, NSMutableSet, FormTextStatusWatcher, WBSTabDialogManager, WBSSiteMetadataManager, FaviconProvider, TemplateIconCache, DownloadsManager, DownloadAlertsManager, DownloadsPreferenceManager, WBSFormAutoFillCorrectionsHistoryObserver, WBSCyclerConnectionManager, NSObject, TabSnapshotSensitiveDataPurger, BrowserDataImportUIController, WBSPeriodicActivityScheduler, SecureDefaultsMigrator, AutoFillLocalAuthenticationManager, WBSPrivacyReportData, PrivacyReportController, TabSnapshotCacheWithPersistence, WBSParsecABGroupManager, WBSAllowedLegacyTLSHostManager, BrowserViewControllerNavigationManager, WBSAutoplayPreferenceManager, WBSAutoplayQuirkWhitelistManager, WBSUserAgentQuirksManager, SandboxFileExtensionController, SandboxRuntimeExtensionController, SFAppAutoFillOneTimeCodeProvider, ResourcePreferencesController, CombinedFavoritesController, WBSForYouRecentParsecResultsManager, CKContextClient, _WKVisitedLinkStore, NSString, WBSDigitalHealthManager, ClosedTabOrWindowStateManager, BrowserTabViewItem, MutableMediaStateTracker, ZoomPreferenceManager, ContentBlockersPreferenceManager, WBSAutomaticReaderActivationManager, PopUpWindowPreferenceManager, ExternalJavaScriptEvaluationPolicyController, ForYouRecommendationMediator, WKProcessPool, BrowserViewController, NSArray, WBSQuickWebsiteSearchController;

@interface AppController : NSObject <PrivacyReportControllerDelegate, WBSDigitalHealthManagerDelegate, DownloadAlertsManagerDelegate, DownloadsManagerDecisionResponder, DownloadsManagerDelegate, MutableMediaStateTrackerDataSource, MutableMediaStateTrackerDelegate, WBSWebExtensionsControllerDelegate, WBSPhishingClassifierControllerDelegate, NSApplicationDelegate, NSMenuDelegate, NSUserInterfaceValidations, FormTextStatusWatcherDelegate> {

	NSMenuItem* _aboutSafariMenuItem;
	NSMenuItem* _openPreferencesMenuItem;
	NSMenuItem* viewMenuItem;
	NSMenuItem* windowMenuItem;
	NSMenuItem* selectNextTabMenuItem;
	NSMenuItem* selectPreviousTabMenuItem;
	NSMenuItem* goBackMenuItem;
	NSMenuItem* goForwardMenuItem;
	NSMenuItem* textEncodingMenuItem;
	NSMenuItem* shareMenuItem;
	NSMenuItem* closeTabMenuItem;
	NSMenuItem* closeOtherTabsMenuItem;
	NSMenuItem* closeWindowMenuItem;
	NSMenuItem* closeAllWindowsMenuItem;
	NSMenuItem* newTabMenuItem;
	NSMenuItem* openFileMenuItem;
	NSMenuItem* openLocationMenuItem;
	NSMenuItem* quitMenuItem;
	NSMenuItem* reloadMenuItem;
	NSMenuItem* reloadFromOriginMenuItem;
	NSMenuItem* reloadWithoutContentBlockersMenuItem;
	NSMenuItem* hideMenuItem;
	NSMenuItem* minimizeMenuItem;
	NSMenuItem* minimizeAllMenuItem;
	NSMenuItem* _visualTabPickerMenuItem;
	NSMenuItem* reopenRecentlyClosedTabsMenuItem;
	NSMenuItem* showTabBarMenuItem;
	SFAuthorization* parentalControlAuthorization;
	NSMenu* _dockMenu;
	NSMenuItem* _shiftedCloseMenuItem;
	NSMenuItem* _shiftedCloseAllMenuItem;
	BrowserSessionPersistentState* _lastSessionState;
	WBSCoalescedAsynchronousWriter* _saveSessionStateWriter;
	char _closeKeyEquivalentClosesTab;
	char _textEncodingMenuLoaded;
	char _bookmarksMenuLoaded;
	char _awaitingModalCloseAllConfirmation;
	char _lastSessionStateComputed;
	char _hasFinishedLaunching;
	NSMutableArray* _deferredURLsToOpen;
	NSMutableArray* _deferredURLsAsHTML;
	NSMutableArray* _deferredBundleIdentifiersOfApplicationsThatInitiatedNavigation;
	int _bookmarksMenuItemIndex;
	unique_ptr<Safari::AutomaticTerminationDisabler, std::__1::default_delete<Safari::AutomaticTerminationDisabler>>* _automaticTerminationDisabler;
	id _appSleepAssertion;
	unique_ptr<SafariShared::SuddenTerminationDisabler, std::__1::default_delete<SafariShared::SuddenTerminationDisabler>>* _emptyCacheSuddenTerminationDisabler;
	unsigned long long _emptyCachePendingOperationsCount;
	WBSLeadImageCache* _leadImageCache;
	BookmarksMenuController* _bookmarksMenuController;
	NSUserActivity* _continuityActivity;
	NSTimer* _updateContinuityTimer;
	char _didFinishLaunching;
	char _shouldPrepareBrowserContentViewControllerForNewUserActivityWhenFinishedLaunching;
	SafariAutomationController* _automationController;
	Context* _processContext;
	MutableDictionary* _initializationMessages;
	_WKUserStyleSheet* _userStyleSheet;
	NSAlert* _unresponsiveWebProcessAlert;
	HashSet<Safari::WK::Page, WTF::DefaultHash<Safari::WK::Page>, WTF::HashTraits<Safari::WK::Page>>* _unresponsivePages;
	NSMutableSet* _pagesWaitingToCloseAtTermination;
	char _tryCloseAtTerminationWasCanceled;
	char _isProcessingWebProcessCrash;
	char _isTerminatingAllPagesInUnresponsiveWebProcesses;
	FormTextStatusWatcher* _formTextStatusWatcherForCloseAllWindows;
	FormTextStatusWatcher* _formTextStatusWatcherForQuit;
	NSTimer* _collectWindowsAndTabsDataTimer;
	WBSTabDialogManager* _tabDialogManager;
	WBSSiteMetadataManager* _siteMetadataManager;
	FaviconProvider* _faviconProvider;
	TemplateIconCache* _templateIconCache;
	DownloadsManager* _downloadsManager;
	DownloadAlertsManager* _downloadAlertsManager;
	DownloadsPreferenceManager* _downloadsPreferenceManager;
	WBSFormAutoFillCorrectionsHistoryObserver* _formAutoFillHistoryObserver;
	NSTimer* _stalledTerminationDetectionTimer;
	WBSCyclerConnectionManager* _cyclerConnectionManager;
	NSObject*<OS_dispatch_queue> _siteMetadataManagerAccessSynchronizationQueue;
	NSObject*<OS_dispatch_queue> _tabSnapshotMachineryAccessQueue;
	id<TabSnapshotVending> _tabSnapshotVendor;
	TabSnapshotSensitiveDataPurger* _tabSnapshotSensitiveDataPurger;
	BrowserDataImportUIController* _browserDataImportUIController;
	WBSPeriodicActivityScheduler* _sandboxFileExtensionMaintenanceScheduler;
	SecureDefaultsMigrator* _secureDefaultsMigrator;
	AutoFillLocalAuthenticationManager* _autoFillLocalAuthenticationManager;
	WBSPrivacyReportData* _privacyReportDataProvider;
	PrivacyReportController* _privacyReportController;
	TabSnapshotCacheWithPersistence* _tabSnapshotCacheWithPersistence;
	WBSParsecABGroupManager* _abGroupManager;
	WBSAllowedLegacyTLSHostManager* _cachedLegacyTLSHostManager;
	char _hideDefaultBrowserBanner;
	char _terminating;
	BrowserViewControllerNavigationManager* _navigationManager;
	WBSAutoplayPreferenceManager* _autoplayPreferenceManager;
	WBSAutoplayQuirkWhitelistManager* _autoplayQuirksWhitelistManager;
	WBSUserAgentQuirksManager* _userAgentQuirksManager;
	SandboxFileExtensionController* _sandboxFileExtensionController;
	SandboxRuntimeExtensionController* _sandboxRuntimeExtensionController;
	id<WBSPhishingClassifier> _phishingClassifier;
	SFAppAutoFillOneTimeCodeProvider* _oneTimeCodeProvider;
	ResourcePreferencesController* _resourcePreferencesController;
	CombinedFavoritesController* _combinedFavoritesController;
	WBSForYouRecentParsecResultsManager* _forYouRecentParsecResultsManager;
	CKContextClient* _contextClient;
	_WKVisitedLinkStore* _visitedLinkStore;
	NSString* _defaultUserAgent;
	WBSDigitalHealthManager* _digitalHealthManager;
	NSMenuItem* _bookmarksMenuItem;
	NSMenuItem* _newWindowMenuItem;
	NSMenuItem* _translationMenuItem;
	ClosedTabOrWindowStateManager* _closedTabOrWindowStateManager;
	BrowserTabViewItem* _mostRecentlyMutedTab;
	MutableMediaStateTracker* _mutableMediaStateTracker;
	ZoomPreferenceManager* _zoomPreferenceManager;
	ContentBlockersPreferenceManager* _contentBlockersPreferenceManager;
	WBSAutomaticReaderActivationManager* _automaticReaderActivationManager;
	PopUpWindowPreferenceManager* _popUpWindowPreferenceManager;
	ExternalJavaScriptEvaluationPolicyController* _externalJavaScriptEvaluationPolicyController;
	id<EncryptionProvider> _sessionStateEncryptionProvider;
	ForYouRecommendationMediator* _existingForYouRecommendationMediator;
	NSMenu* _fileMenu;
	NSMenu* _editMenu;
	NSMenu* _historyMenu;
	NSMenu* _helpMenu;
	NSMenuItem* _importBookmarksMenuItem;
	NSMenuItem* _importFromMenuItem;
	NSMenuItem* _exportBookmarksMenuItem;
	NSMenuItem* _exportMenuItem;
	NSMenuItem* _muteCurrentTabToggleMenuItem;
	NSMenuItem* _muteOtherTabsToggleMenuItem;
	NSMenuItem* _menuItemCopy;
	NSMenuItem* _menuItemCopySearchTerms;

}

@property (assign,nonatomic,__weak) NSMenu * fileMenu;                                                                                   //@synthesize fileMenu=_fileMenu - In the implementation block
@property (assign,nonatomic,__weak) NSMenu * editMenu;                                                                                   //@synthesize editMenu=_editMenu - In the implementation block
@property (assign,nonatomic,__weak) NSMenu * historyMenu;                                                                                //@synthesize historyMenu=_historyMenu - In the implementation block
@property (assign,nonatomic,__weak) NSMenu * helpMenu;                                                                                   //@synthesize helpMenu=_helpMenu - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * importBookmarksMenuItem;                                                                //@synthesize importBookmarksMenuItem=_importBookmarksMenuItem - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * importFromMenuItem;                                                                     //@synthesize importFromMenuItem=_importFromMenuItem - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * exportBookmarksMenuItem;                                                                //@synthesize exportBookmarksMenuItem=_exportBookmarksMenuItem - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * exportMenuItem;                                                                         //@synthesize exportMenuItem=_exportMenuItem - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * muteCurrentTabToggleMenuItem;                                                           //@synthesize muteCurrentTabToggleMenuItem=_muteCurrentTabToggleMenuItem - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * muteOtherTabsToggleMenuItem;                                                            //@synthesize muteOtherTabsToggleMenuItem=_muteOtherTabsToggleMenuItem - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * menuItemCopy;                                                                           //@synthesize menuItemCopy=_menuItemCopy - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * menuItemCopySearchTerms;                                                                //@synthesize menuItemCopySearchTerms=_menuItemCopySearchTerms - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * translationMenuItem;                                                                    //@synthesize translationMenuItem=_translationMenuItem - In the implementation block
@property (nonatomic,readonly) NSString * defaultUserAgent;                                                                              //@synthesize defaultUserAgent=_defaultUserAgent - In the implementation block
@property (nonatomic,readonly) NSString * bundleVersionString; 
@property (nonatomic,readonly) const String* injectedBundlePath; 
@property (nonatomic,readonly) const Context* processContext;                                                                            //@synthesize processContext=_processContext - In the implementation block
@property (nonatomic,readonly) WKProcessPool * processPool; 
@property (nonatomic,readonly) Dictionary* initializationMessages; 
@property (nonatomic,readonly) BrowserViewControllerNavigationManager * navigationManager;                                               //@synthesize navigationManager=_navigationManager - In the implementation block
@property (nonatomic,readonly) DownloadsManager * downloadsManager; 
@property (nonatomic,readonly) ResourcePreferencesController * resourcePreferencesController;                                            //@synthesize resourcePreferencesController=_resourcePreferencesController - In the implementation block
@property (nonatomic,readonly) CombinedFavoritesController * combinedFavoritesController;                                                //@synthesize combinedFavoritesController=_combinedFavoritesController - In the implementation block
@property (nonatomic,readonly) WBSDigitalHealthManager * digitalHealthManager;                                                           //@synthesize digitalHealthManager=_digitalHealthManager - In the implementation block
@property (nonatomic,retain) NSMenuItem * bookmarksMenuItem;                                                                             //@synthesize bookmarksMenuItem=_bookmarksMenuItem - In the implementation block
@property (assign,nonatomic,__weak) NSMenuItem * newWindowMenuItem;                                                                      //@synthesize newWindowMenuItem=_newWindowMenuItem - In the implementation block
@property (nonatomic,readonly) char lastSessionHasRestorableContent; 
@property (assign,nonatomic) char usesPerTabWebProcess; 
@property (getter=isUsingPrivateBrowsingInAnyWindow,nonatomic,readonly) char usingPrivateBrowsingInAnyWindow; 
@property (getter=isTerminating,nonatomic,readonly) char terminating;                                                                    //@synthesize terminating=_terminating - In the implementation block
@property (getter=isTryingToTerminate,nonatomic,readonly) char tryingToTerminate; 
@property (nonatomic,readonly) _WKVisitedLinkStore * visitedLinkStore;                                                                   //@synthesize visitedLinkStore=_visitedLinkStore - In the implementation block
@property (nonatomic,readonly) AutoFillLocalAuthenticationManager * autoFillLocalAuthenticationManager;                                  //@synthesize autoFillLocalAuthenticationManager=_autoFillLocalAuthenticationManager - In the implementation block
@property (nonatomic,readonly) char reloadsPagesWhenWebProcessExits; 
@property (nonatomic,readonly) ClosedTabOrWindowStateManager * closedTabOrWindowStateManager;                                            //@synthesize closedTabOrWindowStateManager=_closedTabOrWindowStateManager - In the implementation block
@property (nonatomic,readonly) char isAnyWebProcessUnresponsive; 
@property (nonatomic,readonly) BrowserViewController * browserViewControllerToToggleScreenCapture; 
@property (assign,nonatomic,__weak) BrowserTabViewItem * mostRecentlyMutedTab;                                                           //@synthesize mostRecentlyMutedTab=_mostRecentlyMutedTab - In the implementation block
@property (nonatomic,retain) MutableMediaStateTracker * mutableMediaStateTracker;                                                        //@synthesize mutableMediaStateTracker=_mutableMediaStateTracker - In the implementation block
@property (nonatomic,copy,readonly) NSArray * browserViewControllersPlayingMutableMedia; 
@property (nonatomic,readonly) unsigned long long numberOfTabsCapturingMedia; 
@property (getter=isOverlayStatusBarEnabled,nonatomic,readonly) char overlayStatusBarEnabled; 
@property (getter=isDevelopMenuEnabled,nonatomic,readonly) char developMenuEnabled; 
@property (nonatomic,readonly) ZoomPreferenceManager * zoomPreferenceManager;                                                            //@synthesize zoomPreferenceManager=_zoomPreferenceManager - In the implementation block
@property (nonatomic,readonly) ContentBlockersPreferenceManager * contentBlockersPreferenceManager;                                      //@synthesize contentBlockersPreferenceManager=_contentBlockersPreferenceManager - In the implementation block
@property (nonatomic,readonly) WBSAutoplayPreferenceManager * autoplayPreferenceManager;                                                 //@synthesize autoplayPreferenceManager=_autoplayPreferenceManager - In the implementation block
@property (nonatomic,readonly) WBSAutoplayQuirkWhitelistManager * autoplayQuirksWhitelistManager;                                        //@synthesize autoplayQuirksWhitelistManager=_autoplayQuirksWhitelistManager - In the implementation block
@property (nonatomic,readonly) WBSAutomaticReaderActivationManager * automaticReaderActivationManager;                                   //@synthesize automaticReaderActivationManager=_automaticReaderActivationManager - In the implementation block
@property (nonatomic,readonly) DownloadsPreferenceManager * downloadsPreferenceManager;                                                  //@synthesize downloadsPreferenceManager=_downloadsPreferenceManager - In the implementation block
@property (nonatomic,readonly) PopUpWindowPreferenceManager * popUpWindowPreferenceManager;                                              //@synthesize popUpWindowPreferenceManager=_popUpWindowPreferenceManager - In the implementation block
@property (nonatomic,readonly) WBSUserAgentQuirksManager * userAgentQuirksManager;                                                       //@synthesize userAgentQuirksManager=_userAgentQuirksManager - In the implementation block
@property (nonatomic,readonly) WBSTabDialogManager * tabDialogManager; 
@property (nonatomic,readonly) WBSQuickWebsiteSearchController * quickWebsiteSearchController; 
@property (nonatomic,readonly) SafariAutomationController * automationController;                                                        //@synthesize automationController=_automationController - In the implementation block
@property (nonatomic,readonly) WBSSiteMetadataManager * siteMetadataManager; 
@property (nonatomic,readonly) FaviconProvider * faviconProvider; 
@property (nonatomic,readonly) TemplateIconCache * templateIconCache; 
@property (nonatomic,readonly) ExternalJavaScriptEvaluationPolicyController * externalJavaScriptEvaluationPolicyController;              //@synthesize externalJavaScriptEvaluationPolicyController=_externalJavaScriptEvaluationPolicyController - In the implementation block
@property (nonatomic,readonly) id<TabSnapshotSensitiveDataPurging> tabSnapshotSensitiveDataPurger; 
@property (nonatomic,readonly) id<TabSnapshotVending> tabSnapshotVendor; 
@property (nonatomic,readonly) id<EncryptionProvider> sessionStateEncryptionProvider;                                                    //@synthesize sessionStateEncryptionProvider=_sessionStateEncryptionProvider - In the implementation block
@property (nonatomic,readonly) CKContextClient * contextClient;                                                                          //@synthesize contextClient=_contextClient - In the implementation block
@property (nonatomic,readonly) WBSForYouRecentParsecResultsManager * forYouRecentParsecResultsManager;                                   //@synthesize forYouRecentParsecResultsManager=_forYouRecentParsecResultsManager - In the implementation block
@property (assign,nonatomic,__weak) ForYouRecommendationMediator * existingForYouRecommendationMediator;                                 //@synthesize existingForYouRecommendationMediator=_existingForYouRecommendationMediator - In the implementation block
@property (nonatomic,readonly) SandboxRuntimeExtensionController * sandboxRuntimeExtensionController;                                    //@synthesize sandboxRuntimeExtensionController=_sandboxRuntimeExtensionController - In the implementation block
@property (nonatomic,readonly) SandboxFileExtensionController * sandboxFileExtensionController;                                          //@synthesize sandboxFileExtensionController=_sandboxFileExtensionController - In the implementation block
@property (nonatomic,readonly) id<WBSPhishingClassifier> phishingClassifier;                                                             //@synthesize phishingClassifier=_phishingClassifier - In the implementation block
@property (nonatomic,readonly) SFAppAutoFillOneTimeCodeProvider * oneTimeCodeProvider;                                                   //@synthesize oneTimeCodeProvider=_oneTimeCodeProvider - In the implementation block
@property (nonatomic,readonly) TabSnapshotCacheWithPersistence * tabSnapshotCacheWithPersistence; 
@property (nonatomic,readonly) WBSAllowedLegacyTLSHostManager * legacyTLSHostManager; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedAppController;
+(id)localizedPerSitePreferencesMenuItemTitle;
+(id)appSleepAssertionWithReason:(id)arg1 ;
+(id)mailApplicationURL;
+(char)mailApplicationAtURL:(id)arg1 supportsKey:(id)arg2 ;
+(id)webWidgetIdentifier;
+(char)mailApplicationSupportsShareKit;
-(void)dealloc;
-(id)init;
-(char)validateUserInterfaceItem:(id)arg1 ;
-(void)awakeFromNib;
-(void)applicationDidFinishLaunching:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationDidResignActive:(id)arg1 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidChangeScreenParameters:(id)arg1 ;
-(char)application:(id)arg1 openFile:(id)arg2 ;
-(char)applicationShouldOpenUntitledFile:(id)arg1 ;
-(char)applicationOpenUntitledFile:(id)arg1 ;
-(unsigned long long)applicationShouldTerminate:(id)arg1 ;
-(id)applicationDockMenu:(id)arg1 ;
-(void)setHelpMenu:(NSMenu *)arg1 ;
-(NSMenu *)helpMenu;
-(char)updateMenu:(id)arg1 withEvent:(id)arg2 withFlags:(unsigned long long)arg3 ;
-(char)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(char)arg2 ;
-(void)application:(id)arg1 runTest:(unsigned long long)arg2 duration:(double)arg3 ;
-(char)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id*)arg3 action:(SEL*)arg4 ;
-(char)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3 ;
-(char)application:(id)arg1 willContinueUserActivityWithType:(id)arg2 ;
-(BrowserViewControllerNavigationManager *)navigationManager;
-(CKContextClient *)contextClient;
-(NSString *)defaultUserAgent;
-(void)stopLoading:(id)arg1 ;
-(void)reloadFromOrigin:(id)arg1 ;
-(void)emptyCache:(unsigned long long)arg1 ;
-(WKProcessPool *)processPool;
-(void)_historyItemsWereRemoved:(id)arg1 ;
-(void)_historyWasCleared:(id)arg1 ;
-(void)policyDidChangeForDigitalHealthManager:(id)arg1 ;
-(WBSSiteMetadataManager *)siteMetadataManager;
-(void)openHelpAnchor:(id)arg1 ;
-(WBSForYouRecentParsecResultsManager *)forYouRecentParsecResultsManager;
-(void)userStyleSheetPreferencesUpdated;
-(ResourcePreferencesController *)resourcePreferencesController;
-(void)resetTextEncodingMenu;
-(char)fullKeyboardAccessIsEnabled;
-(char)_ensureCookieDirectoryIsCreated;
-(void)_initializeNSUserDefaults;
-(void)_initializeProcessContext;
-(id<TabSnapshotSensitiveDataPurging>)tabSnapshotSensitiveDataPurger;
-(SandboxFileExtensionController *)sandboxFileExtensionController;
-(void)_sendABGroupIdentifierToWebKit;
-(void)_abGroupIdentifierDidChange:(id)arg1 ;
-(void)_parsecBagDidLoad:(id)arg1 ;
-(void)_updateTranslationMenuItem:(id)arg1 ;
-(const String*)injectedBundlePath;
-(char)usesPerTabWebProcess;
-(FaviconProvider *)faviconProvider;
-(void)setInjectedBundleInitializationMessagesData:(const Type*)arg1 forKey:(id)arg2 ;
-(void)_handleURLEvent:(id)arg1 withReplyEvent:(id)arg2 ;
-(void)_handlePlistEvent:(id)arg1 withReplyEvent:(id)arg2 ;
-(void)_handleClearHistoryEvent:(id)arg1 withReplyEvent:(id)arg2 ;
-(void)_handleRemovingWebsiteDataEvent:(id)arg1 withReplyEvent:(id)arg2 ;
-(void)_handleShowingReadingListItemEvent:(id)arg1 withReplyEvent:(id)arg2 ;
-(void)_updateCloseKeyEquivalents;
-(NSMenuItem *)bookmarksMenuItem;
-(void)_parentalControlsDidChange;
-(void)updateCloseKeyEquivalents;
-(void)_historyWasLoaded:(id)arg1 ;
-(void)_historyHostnamesWereRemoved:(id)arg1 ;
-(void)contentBlockerDidChange;
-(void)_appExtensionBlocklistDidChange:(id)arg1 ;
-(void)_collectWindowsAndTabsDataTimerFired:(id)arg1 ;
-(void)unsubscribeFromFeedsIfNecessary;
-(WBSQuickWebsiteSearchController *)quickWebsiteSearchController;
-(id)viewMenuItem;
-(void)_openUntitledFileWhileLaunching:(char)arg1 ;
-(char)_restoreSessionDuringLaunchIfNeeded;
-(id)_lastSessionState;
-(void)_prepareBrowserContentViewControllerForNewUserActivityUsingPrivateBrowsingForNewWindow:(char)arg1 ;
-(void)setHistoryMenu:(NSMenu *)arg1 ;
-(void)showPrivacyReport:(id)arg1 ;
-(void)_performDelayedLaunchOperations;
-(void)_connectToCyclerIfNecessary;
-(id<WBSPhishingClassifier>)phishingClassifier;
-(void)_ignoreSafariQuickLookPreviewExtensionInSTP;
-(void)_prepareBrowserContentViewControllerForNewUserActivity;
-(id)_browserViewControllerForPendingUserActivity;
-(void)_cancelModalCloseAllConfirmation;
-(unsigned long long)_applicationShouldTerminateFromState:(int)arg1 ;
-(void)_invalidateStalledTerminationDetectionTimer;
-(void)_scheduleStalledTerminationDetectionTimer;
-(id)_tabWithUnsavedCredentials;
-(void)_continueDeferredTerminationDeterminationFromState:(int)arg1 ;
-(char)_OKToCloseBrowserWindowsForExplicitCloseAllCommand:(char)arg1 ;
-(id)_downloadAlertsManager;
-(void)_clearICloudTabsIfNecessaryDuringTermination;
-(unsigned long long)_tryCloseAllPagesToTerminate;
-(void)_stalledTerminationDetected:(id)arg1 ;
-(void)_replyToApplicationShouldTerminate:(char)arg1 ;
-(char)systemRestoresWindowsWhenReopeningApps;
-(void)_savePendingData:(id)arg1 ;
-(char)isTryingToTerminate;
-(void)_openURL:(id)arg1 forcingHTMLMIMEType:(char)arg2 bundleIdentifierOfApplicationThatInitiatedNavigation:(id)arg3 ;
-(void)clearPageCaches;
-(char)_restoreWebInspectorWindowAllowingDeminiaturizing:(char)arg1 ;
-(void)_newWindowFromDock:(id)arg1 ;
-(void)_newPrivateWindowFromDock:(id)arg1 ;
-(void)_updateTextEncodingMenu;
-(void)_updateBrowserDataPortabilityMenuItems;
-(void)toggleJavaScriptCanNotOpenWindows:(id)arg1 ;
-(void)addBookmarksForTabs:(id)arg1 ;
-(void)showDownloads:(id)arg1 ;
-(void)importBookmarks:(id)arg1 ;
-(void)reloadObeyingUnifiedField:(id)arg1 ;
-(void)reloadWithInvertedContentBlockersEnabledSetting:(id)arg1 ;
-(void)consolidateTabsAndWindows:(id)arg1 ;
-(void)reopenLastClosedTabOrWindow:(id)arg1 ;
-(void)reopenLastSession:(id)arg1 ;
-(char)lastSessionHasRestorableContent;
-(void)toggleStatusBar:(id)arg1 ;
-(char)isOverlayStatusBarEnabled;
-(void)createPrivateBrowsingWindow:(id)arg1 ;
-(void)clearHistoryAndWebsiteData:(id)arg1 ;
-(void)showExtensionsGallery:(id)arg1 ;
-(void)copySearchTerms:(id)arg1 ;
-(void)_consolidateTabsAndWindowsNow;
-(void)sessionStateDidChange;
-(void)_showHTMLResourceFile:(id)arg1 ;
-(void)_computeLastSessionStateIfNecessary;
-(char)isTerminating;
-(_WKVisitedLinkStore *)visitedLinkStore;
-(WBSAllowedLegacyTLSHostManager *)legacyTLSHostManager;
-(void)_clearHistorySandboxTokensPassingTest:(/*^block*/id)arg1 ;
-(id)parentalControlsAuthorizationWithFlags:(unsigned)arg1 ;
-(char)_eventIsSelectNextTabKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsSelectPreviousTabKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsCloseTabOrWindowKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsQuitKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsHideKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsMinimizeKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsMinimizeAllKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsNewTabOrWindowKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsOpenFileOrLocationKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsReloadKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(char)_eventIsOpenPreferencesKeyEquivalent:(id)arg1 ignoreModifierKeys:(char)arg2 ;
-(void)emptyWebKit1Cache:(unsigned long long)arg1 ;
-(void)emptyCacheOperationWillBeAddedToQueue;
-(void)emptyCacheOperationDidFinish;
-(id)localizedHelpBookName;
-(char)_shouldSuppressSessionRestoration;
-(char)hasDeferredURLsToOpen;
-(void)_hideBookmarksMenu;
-(void)_showBookmarksMenu;
-(id)_firstTabWithVideoPlayingInPIP:(id)arg1 ;
-(TemplateIconCache *)templateIconCache;
-(char)isDevelopMenuEnabled;
-(void)_waitForEmptyCache;
-(void)_showResourceFileWithName:(id)arg1 extension:(id)arg2 ;
-(void)_setKeyEquivalentForMenuItem:(id)arg1 toIncludeShiftKey:(char)arg2 ;
-(void)createCombinedFavoritesControllerIfNecessary;
-(char)_event:(id)arg1 isKeyEquivalentForMenuItem:(id)arg2 ignoreModifierKeys:(char)arg3 ;
-(char)_eventIsOldSelectNextPreviousTabKeyEquivalent:(id)arg1 direction:(char*)arg2 ignoreModifierKeys:(char)arg3 ;
-(void)_cancelPendingUpdateContinuityActivityTimer;
-(void)_updateContinuityActivityWithCloudTab:(id)arg1 ;
-(void)_updateContinuityActivityTimerFired;
-(id)_firstBrowserViewControllerWithMutableMediaState:(unsigned long long)arg1 ;
-(unsigned long long)numberOfTabsCapturingMedia;
-(id)browserViewControllerToToggleMute;
-(BrowserViewController *)browserViewControllerToToggleScreenCapture;
-(void)toggleMediaCaptureInBrowserViewController:(id)arg1 ;
-(Dictionary*)_userStyleSheetPreferences;
-(char)_shouldTerminatePageIfUnresponsive:(const Page*)arg1 ;
-(void)shouldTerminateAfterTryingToCloseAllPages:(char)arg1 ;
-(char)_shouldTerminatePageAndRelatedPagesIfUnresponsive:(const Page*)arg1 ;
-(char)_terminateApplicationOrCloseWindowIfUnresponsivePageIsBeingClosed:(id)arg1 ;
-(void)_terminatePageInUnresponsiveWebProcessWithoutReloading:(const Page*)arg1 ;
-(void)_webProcessDidBecomeUnresponsiveForPage:(const Page*)arg1 ;
-(void)_resetUnresponsiveWebProcessState:(int)arg1 ;
-(char)_areAnyUnresponsiveRelatedPagesInArrayDisplayingWebContent:(const Array*)arg1 ;
-(void)_terminateAndClosePage:(const Page*)arg1 andAllRelatedPages:(const Array*)arg2 forWebProcessID:(int)arg3 ;
-(void)_terminateAndReloadUnresponsivePage:(const Page*)arg1 ;
-(void)_terminateUnresponsivePageForClosing:(const Page*)arg1 ;
-(void)_willDisplayUnresponsiveWebProcessDialog;
-(char)isPageUnresponsive:(const Page*)arg1 ;
-(void)_handleUnresponsiveWebProcessDialogResponse:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_didDisplayUnresponsiveWebProcessDialog;
-(char)isAnyWebProcessUnresponsive;
-(void)terminateAllPagesInUnresponsiveWebProcesses;
-(void)_tryToCloseAllWindows;
-(void)_abortModalBeforeTerminating;
-(void)_tryToTerminate;
-(DownloadsManager *)downloadsManager;
-(void)showDownloadAlert:(id)arg1 ;
-(void)alertInvalidDownloadFileErrorForPath:(id)arg1 ;
-(void)alertInsufficientDiskSpaceSheetForDownloadWithFilename:(id)arg1 atPath:(id)arg2 ;
-(void)shouldTerminateAfterShowingDownloadsTerminationPrompt:(char)arg1 ;
-(id)_leadImageCache;
-(const Context*)processContext;
-(void)shouldAllowDownloadOnDomain:(id)arg1 originatingURL:(id)arg2 forBrowserViewController:(id)arg3 withDecisionHandler:(/*^block*/id)arg4 ;
-(id)_tabSnapshotSensitiveDataPurger;
-(void)_ensureTabSnapshotVendor;
-(id<TabSnapshotVending>)tabSnapshotVendor;
-(void)_toggleDigitalHealthOverlayGivenOverlayStates:(id)arg1 ;
-(ForYouRecommendationMediator *)existingForYouRecommendationMediator;
-(void)setExistingForYouRecommendationMediator:(ForYouRecommendationMediator *)arg1 ;
-(void)_sendToWebKitABTestingIsEnabled:(char)arg1 ;
-(void)privacyReportControllerWindowWillClose:(id)arg1 ;
-(void)downloadAlertsManagerWillAbortShowingTerminationAlert:(id)arg1 ;
-(void)downloadAlertsManager:(id)arg1 didShowTerminationAlertWithResult:(char)arg2 ;
-(void)downloadsManager:(id)arg1 allowDownloadOnPage:(const Page*)arg2 fromSecurityOrigin:(id)arg3 originatingURL:(id)arg4 withDecisionHandler:(/*^block*/id)arg5 ;
-(void)downloadsManager:(id)arg1 willStartDownloadAtURL:(id)arg2 onPage:(const Page*)arg3 ;
-(id)constituentMediaSourcesForMutableMediaStateTracker:(id)arg1 ;
-(id)mutableMediaStateTracker:(id)arg1 mediaSourcesWithMutableMediaState:(unsigned long long)arg2 ;
-(id)targetMediaSourceToToggleMuteByMutableMediaStateTracker:(id)arg1 ;
-(id)targetMediaSourceToToggleScreenCaptureByMutableMediaStateTracker:(id)arg1 ;
-(void)updateCaptureIconsForMutableMediaStateTracker:(id)arg1 ;
-(char)canUpdateOverallAudioStateForMutableMediaStateTracker:(id)arg1 ;
-(void)mutableMediaStateTracker:(id)arg1 toggleMediaCaptureInSource:(id)arg2 ;
-(void)mutableMediaStateTracker:(id)arg1 focusMutableMediaSource:(id)arg2 ;
-(void)extensionBaseURIMapChangedForExtensionsController:(id)arg1 ;
-(void)extensionsController:(id)arg1 closeOpenExtensionTabsWithBaseURI:(id)arg2 ;
-(void)webExtensionsControllerDidStartListeningForWebRequestEvents:(id)arg1 ;
-(void)webExtensionsControllerDidStopListeningForWebRequestEvents:(id)arg1 ;
-(void)formTextStatusWasVerified:(id)arg1 ;
-(NSString *)bundleVersionString;
-(Dictionary*)initializationMessages;
-(SandboxRuntimeExtensionController *)sandboxRuntimeExtensionController;
-(SFAppAutoFillOneTimeCodeProvider *)oneTimeCodeProvider;
-(void)shouldTerminateAfterTryingToSaveChangesToCloudHistory;
-(char)hasFinishedLaunching;
-(void)exportBookmarks:(id)arg1 ;
-(void)showAcknowledgments:(id)arg1 ;
-(void)showPreferences:(id)arg1 ;
-(void)prefetchPrivacyReportData;
-(void)discardPrefetchedPrivacyReportData;
-(void)clearHistoryAndKeepWebsiteData:(id)arg1 ;
-(id)parentalControlAuthorization;
-(char)authorizeParent;
-(char)eventIsSelectNextTabKeyEquivalent:(id)arg1 ;
-(char)eventIsSelectPreviousTabKeyEquivalent:(id)arg1 ;
-(char)eventIsLegacySelectNextTabKeyEquivalent:(id)arg1 ;
-(char)eventIsLegacySelectPreviousTabKeyEquivalent:(id)arg1 ;
-(char)eventIsCloseTabOrWindowKeyEquivalent:(id)arg1 ;
-(char)eventIsQuitKeyEquivalent:(id)arg1 ;
-(char)eventIsHideKeyEquivalent:(id)arg1 ;
-(char)eventIsMinimizeKeyEquivalent:(id)arg1 ;
-(char)eventIsMinimizeAllKeyEquivalent:(id)arg1 ;
-(char)eventIsNewTabOrWindowKeyEquivalent:(id)arg1 ;
-(char)eventIsOpenFileOrLocationKeyEquivalent:(id)arg1 ;
-(char)eventIsReloadKeyEquivalent:(id)arg1 ;
-(char)eventIsOpenPreferencesKeyEquivalent:(id)arg1 ;
-(char)printingIsAvailable;
-(char)smoothScrollingIsEnabled;
-(char)confirmClosingAllWindows;
-(id)windowMenuItem;
-(id)environmentForSafariProcesses;
-(void)setUsesPerTabWebProcess:(char)arg1 ;
-(char)isUsingPrivateBrowsingInAnyWindow;
-(void)installBookmarksMenuIfNeeded;
-(CombinedFavoritesController *)combinedFavoritesController;
-(void)saveCloudTabsAndContinuityActivityForCurrentDeviceSoon;
-(void)muteAllPagesPlayingMutableMediaExcludingPageWithBrowserViewController:(id)arg1 ;
-(NSArray *)browserViewControllersPlayingMutableMedia;
-(char)updateMuteCurrentTabMenuItemStateIsCurrentTabPlayingMutableMedia:(char)arg1 isCurrentTabMuted:(char)arg2 isShowingVisualTabPicker:(char)arg3 ;
-(char)updateMuteOtherTabsMenuItemStateWithNumberOfOtherTabsPlayingMutableMedia:(unsigned long long)arg1 numberOfOtherUnmutedTabsPlayingMutableMedia:(unsigned long long)arg2 isCurrentTabPlayingMutableMedia:(char)arg3 ;
-(void)updateAddressBookAutoFillEnabled;
-(void)updateCreditCardAutoFillEnabled;
-(void)updatePerformanceTestingBindingsEnabled;
-(void)updatePasswordAutoFillEnabled;
-(void)remoteNotificationPermissionsChanged;
-(void)permissionToPromptForPushNotificationsChanged;
-(void)localFileRestrictionsChanged;
-(void)extensionsCrashReporterMessageChanged;
-(void)extensionCrashReporterMessageChangedForExtensionsController:(id)arg1 ;
-(void)contentBlockerCrashReporterMessageChanged;
-(void)webExtensionIdentifierToExtensionDataMapChanged:(id)arg1 ;
-(void)pageDidBecomeUnresponsive:(const Page*)arg1 ;
-(void)pageDidBecomeResponsive:(const Page*)arg1 ;
-(char)reloadsPagesWhenWebProcessExits;
-(void)processDidCrashForPage:(const Page*)arg1 reason:(long long)arg2 ;
-(void)pageDidClose:(const Page*)arg1 withRelatedPages:(const Array*)arg2 webProcessID:(int)arg3 ;
-(long long)handlePageCloseRequestForBrowserViewController:(id)arg1 ;
-(void)pageDidRefuseToUnloadForBrowserViewController:(id)arg1 ;
-(void)browserViewControllerDidIgnoreUnloadHandler:(id)arg1 ;
-(char)browserViewControllerShouldIgnoreUnloadHandler:(id)arg1 ;
-(void)terminateAndReloadPage:(const Page*)arg1 andAllRelatedPages:(const Array*)arg2 forWebProcessID:(int)arg3 ;
-(void)displayUnresponsiveWebProcessDialogForPage:(const Page*)arg1 withDialogTitle:(id)arg2 dialogMessage:(id)arg3 terminateButtonTitle:(id)arg4 cancelButtonTitle:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)applyResourceLoadStatisticsEnabled:(char)arg1 ;
-(void)tryToCloseAllWindowsWhenReady;
-(void)tryToTerminateWhenReady;
-(WBSTabDialogManager *)tabDialogManager;
-(WBSAutoplayPreferenceManager *)autoplayPreferenceManager;
-(WBSAutoplayQuirkWhitelistManager *)autoplayQuirksWhitelistManager;
-(WBSUserAgentQuirksManager *)userAgentQuirksManager;
-(TabSnapshotCacheWithPersistence *)tabSnapshotCacheWithPersistence;
-(unsigned long long)updateUsageStateForUnselectedURL:(id)arg1 fromWindow:(id)arg2 ;
-(id)createRecommendationMediatorOrReuseExistingOneIfPossible;
-(WBSDigitalHealthManager *)digitalHealthManager;
-(void)setBookmarksMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)newWindowMenuItem;
-(void)setNewWindowMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)translationMenuItem;
-(void)setTranslationMenuItem:(NSMenuItem *)arg1 ;
-(AutoFillLocalAuthenticationManager *)autoFillLocalAuthenticationManager;
-(ClosedTabOrWindowStateManager *)closedTabOrWindowStateManager;
-(BrowserTabViewItem *)mostRecentlyMutedTab;
-(void)setMostRecentlyMutedTab:(BrowserTabViewItem *)arg1 ;
-(MutableMediaStateTracker *)mutableMediaStateTracker;
-(void)setMutableMediaStateTracker:(MutableMediaStateTracker *)arg1 ;
-(ZoomPreferenceManager *)zoomPreferenceManager;
-(ContentBlockersPreferenceManager *)contentBlockersPreferenceManager;
-(WBSAutomaticReaderActivationManager *)automaticReaderActivationManager;
-(DownloadsPreferenceManager *)downloadsPreferenceManager;
-(PopUpWindowPreferenceManager *)popUpWindowPreferenceManager;
-(SafariAutomationController *)automationController;
-(ExternalJavaScriptEvaluationPolicyController *)externalJavaScriptEvaluationPolicyController;
-(id<EncryptionProvider>)sessionStateEncryptionProvider;
-(NSMenu *)fileMenu;
-(void)setFileMenu:(NSMenu *)arg1 ;
-(NSMenu *)editMenu;
-(void)setEditMenu:(NSMenu *)arg1 ;
-(NSMenu *)historyMenu;
-(NSMenuItem *)importBookmarksMenuItem;
-(void)setImportBookmarksMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)importFromMenuItem;
-(void)setImportFromMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)exportBookmarksMenuItem;
-(void)setExportBookmarksMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)exportMenuItem;
-(void)setExportMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)muteCurrentTabToggleMenuItem;
-(void)setMuteCurrentTabToggleMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)muteOtherTabsToggleMenuItem;
-(void)setMuteOtherTabsToggleMenuItem:(NSMenuItem *)arg1 ;
-(NSMenuItem *)menuItemCopy;
-(void)setMenuItemCopy:(NSMenuItem *)arg1 ;
-(NSMenuItem *)menuItemCopySearchTerms;
-(void)setMenuItemCopySearchTerms:(NSMenuItem *)arg1 ;
-(void)toggleAcceleratedCompositingDisabled:(id)arg1 ;
-(void)toggleCanvasAcceleratedDrawingDisabled:(id)arg1 ;
-(void)toggleAcceleratedDrawingDisabled:(id)arg1 ;
-(void)toggleSubpixelAntialiasedLayerTextEnabled:(id)arg1 ;
-(void)toggleHostLayersInSafari:(id)arg1 ;
-(void)toggleAcceleratedCompositingDebugBorders:(id)arg1 ;
-(void)toggleTiledScrollingIndicator:(id)arg1 ;
-(void)toggleSuppressesIncrementalRendering:(id)arg1 ;
-(void)toggleUseUISideCompositing:(id)arg1 ;
-(void)toggleUseGiantTiles:(id)arg1 ;
-(void)toggleAVFoundationDisabled:(id)arg1 ;
-(void)toggleMediaSourceEnabled:(id)arg1 ;
-(void)toggleLegacyEncryptedMediaAPIEnabled:(id)arg1 ;
-(void)toggleVideoNeedsUserAction:(id)arg1 ;
-(void)toggleAudioNeedsUserAction:(id)arg1 ;
-(void)toggleAllowMainContentAutoplay:(id)arg1 ;
-(void)toggleAllowInlineVideo:(id)arg1 ;
-(void)toggleInlineRequiresPlaysInlineAttribute:(id)arg1 ;
-(void)toggleNetworkInterfacesEnumeration:(id)arg1 ;
-(void)toggleShouldCaptureAudioInUIProcess:(id)arg1 ;
-(void)toggleDebugRegionOverlayVisible:(id)arg1 ;
-(void)toggleSimpleLineLayoutDisabled:(id)arg1 ;
-(void)toggleLegacyLineLayoutVisualCoverage:(id)arg1 ;
-(void)toggleAlwaysUseComplexTextCodePath:(id)arg1 ;
-(void)toggleAppNap:(id)arg1 ;
-(void)toggleBackForwardCacheDisabled:(id)arg1 ;
-(void)toggleBackgroundTabSuspensionDisabled:(id)arg1 ;
-(void)toggleDOMTimersThrottlingDisabled:(id)arg1 ;
-(void)toggleJavaScriptGarbageCollectorTimerEnabled:(id)arg1 ;
-(void)toggleJavaScriptJITDisabled:(id)arg1 ;
-(void)toggleHiddenPageTimerThrottling:(id)arg1 ;
-(void)toggleHiddenPageTimerThrottlingIncreases:(id)arg1 ;
-(void)toggleDiskCacheSpeculativeValidationDisabled:(id)arg1 ;
-(void)togglePasswordGenerationDisallowList:(id)arg1 ;
-(void)toggleTelephoneNumberDetection:(id)arg1 ;
-(void)toggleTiledFullScreenScalingMode:(id)arg1 ;
-(void)toggleWebKitFullScreenDisabled:(id)arg1 ;
-(void)toggleDiscolorFluidSwipeSnapshots:(id)arg1 ;
-(void)toggleLocalFileContentSniffing:(id)arg1 ;
-(void)toggleNewWindowsHavePerformanceBindings:(id)arg1 ;
-(void)toggleWebArchiveDebugMode:(id)arg1 ;
-(void)toggleShowWebProcessIDsInPageTitles:(id)arg1 ;
-(void)toggleUseSafariWebContentService:(id)arg1 ;
-(void)toggleInternalDebugFeature:(id)arg1 ;
-(void)toggleCloseTabsToRight:(id)arg1 ;
-(void)toggleAlwaysShowControlsInVTP:(id)arg1 ;
-(void)toggleShowTabPreviewOnHover:(id)arg1 ;
-(void)toggleNarrowTabs:(id)arg1 ;
-(void)togglePerTabWebProcessesPreference:(id)arg1 ;
-(void)toggleResourceUsageOverlay:(id)arg1 ;
-(void)toggleAutomationSession:(id)arg1 ;
-(void)openNewAutomationWindow:(id)arg1 ;
-(void)toggleShowSiriStartPageTopicsWithoutSuggestions:(id)arg1 ;
-(void)toggleSiriSuggestionDebugToolTips:(id)arg1 ;
-(void)toggleHistoryDeduplicationForSiriSuggestions:(id)arg1 ;
-(void)clearDataSourceWeights:(id)arg1 ;
-(void)showRecentTopics:(id)arg1 ;
-(void)recomputeTopSites:(id)arg1 ;
-(void)resetTopSites:(id)arg1 ;
-(void)resetAppExtensionsState:(id)arg1 ;
-(void)resetWebExtensionsState:(id)arg1 ;
-(void)toggleStubUnsupportedWebExtensionAPIs:(id)arg1 ;
-(void)syncCloudHistory:(id)arg1 ;
-(void)beginMigrationFromDAV:(id)arg1 ;
-(void)enableCloudKitBugNotifications:(id)arg1 ;
-(id)_forYouRecommendationMediator;
-(char)validate_toggleHostLayersInSafari:(id)arg1 ;
-(char)validate_toggleUseUISideCompositing:(id)arg1 ;
-(char)validate_toggleUseGiantTiles:(id)arg1 ;
-(char)validate_toggleDebugRegionOverlayVisible:(id)arg1 ;
-(char)validate_showNetworkingWindow:(id)arg1 ;
-(char)validate_toggleNewWindowsHavePerformanceBindings:(id)arg1 ;
-(void)toggleUseNewWebProcessCrashRecoveryUI:(id)arg1 ;
-(char)validate_toggleUseNewWebProcessCrashRecoveryUI:(id)arg1 ;
-(char)validate_toggleShowSiriStartPageTopicsWithoutSuggestions:(id)arg1 ;
-(char)validate_toggleHistoryDeduplicationForSiriSuggestions:(id)arg1 ;
-(char)validate_toggleSiriSuggestionDebugToolTips:(id)arg1 ;
-(void)toggleRocketEffectTestEnabled:(id)arg1 ;
-(char)validate_toggleRocketEffectTestEnabled:(id)arg1 ;
-(void)toggleAlwaysLoadReadingListArchives:(id)arg1 ;
-(char)validate_toggleCloseTabsToRight:(id)arg1 ;
-(char)validate_toggleAlwaysShowControlsInVTP:(id)arg1 ;
-(char)validate_toggleShowTabPreviewOnHover:(id)arg1 ;
-(char)validate_toggleNarrowTabs:(id)arg1 ;
-(char)validate_toggleAlwaysLoadReadingListArchives:(id)arg1 ;
-(char)validate_togglePerTabWebProcessesPreference:(id)arg1 ;
-(char)validate_toggleJavaScriptJITDisabled:(id)arg1 ;
-(char)validate_toggleShowWebProcessIDsInPageTitles:(id)arg1 ;
-(char)validate_toggleUseSafariWebContentService:(id)arg1 ;
-(char)validate_toggleStubUnsupportedWebExtensionAPIs:(id)arg1 ;
-(char)validate_togglePasswordGenerationDisallowList:(id)arg1 ;
-(char)validate_syncCloudHistory:(id)arg1 ;
-(char)validate_toggleBackgroundTabSuspensionDisabled:(id)arg1 ;
-(char)validate_toggleTelephoneNumberDetection:(id)arg1 ;
-(void)toggleJavaScriptConfigurationEnabled:(id)arg1 ;
-(char)validate_toggleJavaScriptConfigurationEnabled:(id)arg1 ;
-(char)validate_toggleJavaScriptGarbageCollectorTimerEnabled:(id)arg1 ;
-(char)validate_toggleAcceleratedDrawingDisabled:(id)arg1 ;
-(char)validate_toggleSimpleLineLayoutDisabled:(id)arg1 ;
-(char)validate_toggleLegacyLineLayoutVisualCoverage:(id)arg1 ;
-(char)validate_toggleAVFoundationDisabled:(id)arg1 ;
-(char)validate_toggleLegacyEncryptedMediaAPIEnabled:(id)arg1 ;
-(char)validate_toggleMediaSourceEnabled:(id)arg1 ;
-(char)validate_toggleShouldCaptureAudioInUIProcess:(id)arg1 ;
-(char)validate_toggleNetworkInterfacesEnumeration:(id)arg1 ;
-(char)validate_toggleVideoNeedsUserAction:(id)arg1 ;
-(char)validate_toggleAudioNeedsUserAction:(id)arg1 ;
-(char)validate_toggleAllowMainContentAutoplay:(id)arg1 ;
-(char)validate_toggleAllowInlineVideo:(id)arg1 ;
-(char)validate_toggleInlineRequiresPlaysInlineAttribute:(id)arg1 ;
-(char)validate_toggleWebKitFullScreenDisabled:(id)arg1 ;
-(char)validate_toggleCanvasAcceleratedDrawingDisabled:(id)arg1 ;
-(char)validate_toggleAcceleratedCompositingDisabled:(id)arg1 ;
-(char)validate_toggleTiledScrollingIndicator:(id)arg1 ;
-(char)validate_toggleResourceUsageOverlay:(id)arg1 ;
-(char)validate_toggleSubpixelAntialiasedLayerTextEnabled:(id)arg1 ;
-(char)validate_toggleAcceleratedCompositingDebugBorders:(id)arg1 ;
-(char)validate_toggleSuppressesIncrementalRendering:(id)arg1 ;
-(char)validate_toggleBackForwardCacheDisabled:(id)arg1 ;
-(char)validate_toggleDOMTimersThrottlingDisabled:(id)arg1 ;
-(char)validate_toggleDiskCacheSpeculativeValidationDisabled:(id)arg1 ;
-(char)validate_toggleTiledFullScreenScalingMode:(id)arg1 ;
-(char)validate_toggleWebArchiveDebugMode:(id)arg1 ;
-(char)validate_toggleLocalFileContentSniffing:(id)arg1 ;
-(char)validate_toggleDiscolorFluidSwipeSnapshots:(id)arg1 ;
-(void)clearCloudTabsForAllDevices:(id)arg1 ;
-(void)saveCloudTabsAsNewDevice:(id)arg1 ;
-(char)validate_toggleAppNap:(id)arg1 ;
-(char)validate_toggleHiddenPageTimerThrottling:(id)arg1 ;
-(char)validate_toggleHiddenPageTimerThrottlingIncreases:(id)arg1 ;
-(char)validate_toggleAutomationSession:(id)arg1 ;
-(char)validate_openNewAutomationWindow:(id)arg1 ;
-(char)validate_beginMigrationFromDAV;
-(void)validate_enableCloudKitBugNotifications:(id)arg1 ;
-(char)validate_toggleInternalDebugFeature:(id)arg1 ;
-(void)toggleAllowRemoteAutomation:(id)arg1 ;
-(void)showSnippetEditor:(id)arg1 ;
-(void)emptyCaches:(id)arg1 ;
-(void)toggleIntelligentTrackingPreventionDebugModeEnabled:(id)arg1 ;
-(void)toggleImagesDisabled:(id)arg1 ;
-(void)toggleStylesDisabled:(id)arg1 ;
-(void)toggleJavaScriptDisabled:(id)arg1 ;
-(void)toggleSiteSpecificHacksDisabled:(id)arg1 ;
-(void)toggleLocalFileRestrictionsDisabled:(id)arg1 ;
-(void)toggleCrossOriginRestrictionsDisabled:(id)arg1 ;
-(void)toggleAllowJavaScriptInUnifiedField:(id)arg1 ;
-(void)toggleAllowJavaScriptFromAppleEvents:(id)arg1 ;
-(void)toggleDisableExtensions:(id)arg1 ;
-(void)getSafariTechnologyPreview:(id)arg1 ;
-(void)toggleAllowUnsignedExtensions:(id)arg1 ;
-(void)toggleMediaCaptureOnInsecureSites:(id)arg1 ;
-(void)toggleICECandidateRestrictions:(id)arg1 ;
-(void)toggleMockCaptureDevices:(id)arg1 ;
-(char)isRemoteWebInspectorFront;
-(void)_togglePropertyWithEnabledStateBlock:(/*^block*/id)arg1 toggleBlock:(/*^block*/id)arg2 securePromptMessageText:(id)arg3 ;
-(char)validate_toggleIntelligentTrackingPreventionDebugModeEnabled:(id)arg1 ;
-(char)validate_toggleImagesDisabled:(id)arg1 ;
-(char)validate_toggleStylesDisabled:(id)arg1 ;
-(char)validate_toggleAllowJavaScriptFromAppleEvents:(id)arg1 ;
-(char)validate_toggleAllowJavaScriptInUnifiedField:(id)arg1 ;
-(char)validate_toggleDisableExtensions:(id)arg1 ;
-(char)validate_toggleAllowUnsignedExtensions:(id)arg1 ;
-(char)validate_toggleJavaScriptDisabled:(id)arg1 ;
-(char)validate_toggleSiteSpecificHacksDisabled:(id)arg1 ;
-(char)validate_toggleLocalFileRestrictionsDisabled:(id)arg1 ;
-(char)validate_toggleCrossOriginRestrictionsDisabled:(id)arg1 ;
-(char)validate_toggleAllowRemoteAutomation:(id)arg1 ;
-(char)validate_toggleMediaCaptureOnInsecureSites:(id)arg1 ;
-(char)validate_toggleICECandidateRestrictions:(id)arg1 ;
-(char)validate_toggleMockCaptureDevices:(id)arg1 ;
-(char)validate_getSafariTechnologyPreview:(id)arg1 ;
@end

