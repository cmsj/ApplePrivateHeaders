/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:07 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Safari.framework/Versions/A/Safari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Safari/Safari-Structs.h>
#import <Safari/WindowController.h>
#import <libobjc.A.dylib/BackgroundLoadControllerDelegate.h>
#import <libobjc.A.dylib/BrowserWindowContentSplitViewControllerDelegate.h>
#import <libobjc.A.dylib/BrowserWindowTabViewControllerDelegate.h>
#import <libobjc.A.dylib/FormTextStatusWatcherDelegate.h>
#import <libobjc.A.dylib/OverlayStatusWindowDelegate.h>
#import <libobjc.A.dylib/TabDraggingWindowDestination.h>
#import <libobjc.A.dylib/TabBarViewDelegate.h>
#import <libobjc.A.dylib/ToolbarControllerDelegate.h>
#import <libobjc.A.dylib/UnifiedFieldSecurityUIManagerDelegate.h>
#import <libobjc.A.dylib/VisualTabPickerDelegate.h>
#import <libobjc.A.dylib/FavoritesPickerVisibilityController.h>
#import <libobjc.A.dylib/FavoritesPickerVisibilityManagerDataSource.h>
#import <libobjc.A.dylib/WindowFunctionBarProviderDataSource.h>
#import <libobjc.A.dylib/WindowFunctionBarProviderDelegate.h>
#import <libobjc.A.dylib/WBSFluidProgressRocketEffectDelegate.h>
#import <libobjc.A.dylib/BrowserContentLoaderDelegate.h>
#import <libobjc.A.dylib/BrowserWindowDelegate.h>
#import <libobjc.A.dylib/Command1Through9Receiver.h>
#import <libobjc.A.dylib/ImageHopAnimationDelegate.h>
#import <libobjc.A.dylib/NSMenuDelegate.h>
#import <libobjc.A.dylib/NSMenuItemValidation.h>
#import <libobjc.A.dylib/NSSplitViewDelegate.h>
#import <libobjc.A.dylib/SearchableWKViewPlaybackControlsPresenter.h>
#import <libobjc.A.dylib/UnifiedFieldDelegate.h>
#import <libobjc.A.dylib/WBSFluidProgressControllerWindowDelegate.h>
#import <libobjc.A.dylib/WBSWebExtensionWindow.h>

@protocol OneStepBookmarkingButtonController, MultipleTabClosingContext;
@class NSString, NSArray, NSTextView, BookmarksSidebarTitleTextView, NSURL, StatusMessage, NSTimer, NSMutableSet, BrowserTabViewItem, SidebarViewController, NSView, BrowserWindowContentSplitViewController, PerSitePreferencesPopoverManager, BrowserWindowPersistentState, BrowserTabGroupPersistentState, BackgroundLoadController, VisualTabPickerViewController, BackgroundColorView, NSMutableArray, PopupWindowUnifiedFieldViewController, PopupWindowUnifiedField, NSTitlebarAccessoryViewController, OverlayStatusWindowController, FormTextStatusWatcher, UnifiedFieldSecurityUIManager, WindowFunctionBarProvider, FavoritesPickerVisibilityManager, TextFieldEditor, NSMapTable, AutomationTouchBarProvider, WBSFaviconRequestsController, NSPopover, BrowserViewController, PrivacyReportPopoverViewController, FavoritesBarView, NSMenu, CustomViewSnapshotCache, TabBarView, BrowserWindowTabViewController, UnifiedFieldEditor, SearchProvidersController, WBSFluidProgressController, NSUUID, ToolbarController, NSAlert, AutomaticReadingListContentProvider, ReadingListContentProvider, BrowserWindow, UnifiedField, WebViewController, TabContentViewController, WBSBrowserTabCompletionInfo;

@interface BrowserWindowController : WindowController <BackgroundLoadControllerDelegate, BrowserWindowContentSplitViewControllerDelegate, BrowserWindowTabViewControllerDelegate, FormTextStatusWatcherDelegate, OverlayStatusWindowDelegate, TabDraggingWindowDestination, TabBarViewDelegate, ToolbarControllerDelegate, UnifiedFieldSecurityUIManagerDelegate, VisualTabPickerDelegate, FavoritesPickerVisibilityController, FavoritesPickerVisibilityManagerDataSource, WindowFunctionBarProviderDataSource, WindowFunctionBarProviderDelegate, WBSFluidProgressRocketEffectDelegate, BrowserContentLoaderDelegate, BrowserWindowDelegate, Command1Through9Receiver, ImageHopAnimationDelegate, NSMenuDelegate, NSMenuItemValidation, NSSplitViewDelegate, SearchableWKViewPlaybackControlsPresenter, UnifiedFieldDelegate, WBSFluidProgressControllerWindowDelegate, WBSWebExtensionWindow> {

	NSTextView* _fieldEditorWithoutAutomaticSubstitution;
	BookmarksSidebarTitleTextView* _bookmarksSidebarTitleTextView;
	RefPtr<Safari::UnifiedFieldCompletionController, WTF::RawPtrTraits<Safari::UnifiedFieldCompletionController>, WTF::DefaultRefDerefTraits<Safari::UnifiedFieldCompletionController>>* _unifiedFieldCompletionController;
	NSURL* _completionListURLBeingActivated;
	id<OneStepBookmarkingButtonController> _oneStepBookmarkingButtonController;
	char _tabBarHiddenByJavaScript;
	char _readyToUpdateKeyboardLoop;
	char _windowWasLoaded;
	StatusMessage* _status;
	char _stopAndReloadButtonWillStop;
	char _hideToolbarOnEndSheet;
	NSTimer* _setInterpretsAllInputAsURLTimer;
	int _fullScreenState;
	double _topContentInsetBeforeEnteringFullScreen;
	char _didLockMenuBarInFullScreen;
	RefPtr<Safari::ExtensionBrowserWindow, WTF::RawPtrTraits<Safari::ExtensionBrowserWindow>, WTF::DefaultRefDerefTraits<Safari::ExtensionBrowserWindow>>* _browserWindowController;
	NSMutableSet* _imageHopAnimationControllers;
	BrowserTabViewItem* _closingTabView;
	long long _windowType;
	SidebarViewController* _cachedSidebarViewController;
	double _sidebarWidth;
	NSView* _windowContentSplitViewClipView;
	BrowserWindowContentSplitViewController* _windowContentSplitViewController;
	PerSitePreferencesPopoverManager* _perSitePreferencesPopoverManager;
	char _deferDeterminingFirstResponderUntilNextRunLoop;
	char _creatingNewTab;
	char _unifiedFieldShouldRetainFirstResponderWhileLoadingPage;
	NSTimer* _updateFirstResponderAfterTabSwitchTimer;
	unique_ptr<Safari::TabBarController, std::__1::default_delete<Safari::TabBarController>>* _tabBarController;
	char _isReplacingTabs;
	NSArray* _tabsForGoBack;
	BrowserTabViewItem* _selectedTabForGoBack;
	BrowserWindowPersistentState* _pendingClosedState;
	BrowserTabGroupPersistentState* _tabGroupStateForReplacedTabs;
	NSArray* _tabsForGoForward;
	BrowserTabViewItem* _selectedTabForGoForward;
	NSArray* _mostRecentBackgroundLoadURLs;
	BackgroundLoadController* _backgroundLoadController;
	char _didSeeNavigationToBackgroundLoadURL;
	char _fluidProgressControllerNeedsUpdateForBackgroundLoadCommit;
	VisualTabPickerViewController* _visualTabPickerViewController;
	BackgroundColorView* _visualTabPickerToolbarBackgroundView;
	char _visualTabPickerPendingEntryAnimation;
	char _canToggleTabBarInVisualTabPicker;
	char _canChangeTopInsetInVisualTabPicker;
	char _visualTabPickerIsHidingTabBar;
	char _shouldFocusSelectedTabContentViewAfterVisualTabPickerCloses;
	char _titlebarBlurringDisabled;
	BackgroundColorView* _titlebarOpaqueBackgroundView;
	double _titlebarHeightInWindow;
	NSMutableArray* _titlebarViewControllerOrder;
	NSMutableSet* _titlebarViewControllersAddedWhileInFullScreen;
	NSMutableSet* _titlebarViewControllersRemovedWhileInFullScreen;
	char _wasShowingTabBarBeforeEnteringFullScreen;
	PopupWindowUnifiedFieldViewController* _popupWindowUnifiedFieldViewController;
	PopupWindowUnifiedField* _popupWindowUnifiedField;
	NSTitlebarAccessoryViewController* _favoritesBarViewController;
	NSTitlebarAccessoryViewController* _tabBarViewController;
	BrowserWindowController* _detachedBrowserWindowController;
	OverlayStatusWindowController* _overlayStatusWindowController;
	char _statusOverlaysAreEnabled;
	char _isAnimatingReaderTransition;
	NSTimer* _coalescedUpdatesTimer;
	double _lastCoalescedUpdateTime;
	unsigned long long _pendingCoalescedUpdates;
	unsigned long long _postponedUnifiedFieldUpdates;
	char _isPerformingCoalescedUpdates;
	char _isPostponingUnifiedFieldUpdates;
	char _isPostponingNotSecureWarningUpdates;
	FormTextStatusWatcher* _formTextStatusWatcherForClose;
	FormTextStatusWatcher* _formTextStatusWatcherForClosingMultipleTabs;
	id<MultipleTabClosingContext> _multipleTabClosingContext;
	char _didSendOpenEventToExtensions;
	char _didSendCloseEventToExtensions;
	long long _numberOfVisiblePopovers;
	UnifiedFieldSecurityUIManager* _unifiedFieldSecurityUIManager;
	char _shouldIncludePinnedTabsInDeterminingTabBarVisibility;
	unsigned long long _tabIndexToSelectAfterPinnedTabsAreRestored;
	WindowFunctionBarProvider* _functionBarProvider;
	FavoritesPickerVisibilityManager* _favoritesPickerVisibilityManager;
	NSMutableSet* _functionBarTabViewItemsPendingReload;
	TextFieldEditor* _editorWithoutDFRAccessories;
	NSMapTable* _tabViewItemsToThumbnailProviders;
	AutomationTouchBarProvider* _automationTouchBarProvider;
	WBSFaviconRequestsController* _requestsController;
	char _buttonsDisabledInAttachedSheet;
	NSPopover* _contextFeedbackPopover;
	BrowserViewController* _viewControllerForPendingWebExtensionLoad;
	CGRect _windowFrameBeforeMaximization;
	char _maximizationCausedResize;
	PrivacyReportPopoverViewController* _privacyReportPopoverViewController;
	long long _batchTabManipulationEnabledCounter;
	char _isPopupWindow;
	char _windowIsClosing;
	char _areTabsBeingRearranged;
	char _shouldUpdateFocusOnBackgroundLoadCommit;
	char _prefersSidebarVisible;
	char _prefersSidebarVisibleWithStartPage;
	char _creatingNewSelectedTabRespectingNewTabBehavior;
	char _switchingTabs;
	char _forceEnableTitlebarBlurFilters;
	char _blocksAutomaticUpdatesOfUnifiedField;
	char _acceptsGenericIcon;
	char _disableTopContentInsetUpdateForSelectedTab;
	char _isClosingVisualTabPicker;
	int _currentTabLoadingStatus;
	FavoritesBarView* _favoritesBarView;
	NSMenu* _dynamicBackMenu;
	NSMenu* _dynamicForwardMenu;
	CustomViewSnapshotCache* _customViewSnapshotCache;
	double _idForWebExtensions;
	TabBarView* _tabBarView;
	BrowserWindowTabViewController* _tabViewController;
	UnifiedFieldEditor* _unifiedFieldEditor;
	SearchProvidersController* _searchProvidersController;
	WBSFluidProgressController* _fluidProgressController;
	unsigned long long _browsingMode;
	NSUUID* _uuid;
	ToolbarController* _toolbarController;
	unsigned long long _numberOfTabsToBeClosedBeforeClosingWindow;
	NSAlert* _alertWithButtonsEnabledOnlyWhenKeyWindow;
	NSView* _mainContentView;
	AutomaticReadingListContentProvider* _automaticReadingListContentProvider;
	NSView* _firstResponderViewBeforeFullScreenTransition;
	ReadingListContentProvider* _readingListContentProvider;
	NSView* _webContentSnapshotForSidebarAnimation;
	NSView* _backgroundSidebarAnimationView;
	NSView* _continuousBannerSidebarAnimationView;
	/*^block*/id _completionHandlerForLastSheetEndingOnWindow;
	CGPoint _lastMouseClickPosition;

}

@property (nonatomic,retain) NSView * firstResponderViewBeforeFullScreenTransition;                                                                      //@synthesize firstResponderViewBeforeFullScreenTransition=_firstResponderViewBeforeFullScreenTransition - In the implementation block
@property (nonatomic,retain) ReadingListContentProvider * readingListContentProvider;                                                                    //@synthesize readingListContentProvider=_readingListContentProvider - In the implementation block
@property (nonatomic,retain) NSView * webContentSnapshotForSidebarAnimation;                                                                             //@synthesize webContentSnapshotForSidebarAnimation=_webContentSnapshotForSidebarAnimation - In the implementation block
@property (nonatomic,retain) NSView * backgroundSidebarAnimationView;                                                                                    //@synthesize backgroundSidebarAnimationView=_backgroundSidebarAnimationView - In the implementation block
@property (nonatomic,retain) NSView * continuousBannerSidebarAnimationView;                                                                              //@synthesize continuousBannerSidebarAnimationView=_continuousBannerSidebarAnimationView - In the implementation block
@property (nonatomic,copy) id completionHandlerForLastSheetEndingOnWindow;                                                                               //@synthesize completionHandlerForLastSheetEndingOnWindow=_completionHandlerForLastSheetEndingOnWindow - In the implementation block
@property (assign,getter=isPopupWindowUnifiedFieldVisible,nonatomic) char popupWindowUnifiedFieldVisible; 
@property (nonatomic,readonly) BrowserWindow * browserWindow; 
@property (nonatomic,readonly) char windowIsClosing;                                                                                                     //@synthesize windowIsClosing=_windowIsClosing - In the implementation block
@property (getter=isClosed,nonatomic,readonly) char closed; 
@property (assign,nonatomic) char ignoresOrderFront; 
@property (nonatomic,retain) TabBarView * tabBarView;                                                                                                    //@synthesize tabBarView=_tabBarView - In the implementation block
@property (nonatomic,readonly) char shouldShowTabBar; 
@property (nonatomic,readonly) FavoritesBarView * favoritesBarView;                                                                                      //@synthesize favoritesBarView=_favoritesBarView - In the implementation block
@property (nonatomic,readonly) BrowserWindowTabViewController * tabViewController;                                                                       //@synthesize tabViewController=_tabViewController - In the implementation block
@property (nonatomic,readonly) char areTabsBeingRearranged;                                                                                              //@synthesize areTabsBeingRearranged=_areTabsBeingRearranged - In the implementation block
@property (nonatomic,readonly) UnifiedFieldEditor * unifiedFieldEditor;                                                                                  //@synthesize unifiedFieldEditor=_unifiedFieldEditor - In the implementation block
@property (nonatomic,readonly) UnifiedFieldCompletionController* unifiedFieldCompletionController; 
@property (nonatomic,retain) SearchProvidersController * searchProvidersController;                                                                      //@synthesize searchProvidersController=_searchProvidersController - In the implementation block
@property (assign,nonatomic) char shouldUpdateFocusOnBackgroundLoadCommit;                                                                               //@synthesize shouldUpdateFocusOnBackgroundLoadCommit=_shouldUpdateFocusOnBackgroundLoadCommit - In the implementation block
@property (nonatomic,readonly) char shouldPreloadTopHit; 
@property (nonatomic,readonly) WBSFluidProgressController * fluidProgressController;                                                                     //@synthesize fluidProgressController=_fluidProgressController - In the implementation block
@property (nonatomic,readonly) char sidebarAppearsAsOverlay; 
@property (nonatomic,readonly) NSView * sidebarContainerView; 
@property (getter=isSidebarVisible,nonatomic,readonly) char sidebarVisible; 
@property (nonatomic,readonly) char canToggleSidebar; 
@property (nonatomic,readonly) char canAnimateSidebar; 
@property (assign,nonatomic) char prefersSidebarVisible;                                                                                                 //@synthesize prefersSidebarVisible=_prefersSidebarVisible - In the implementation block
@property (assign,nonatomic) char prefersSidebarVisibleWithStartPage;                                                                                    //@synthesize prefersSidebarVisibleWithStartPage=_prefersSidebarVisibleWithStartPage - In the implementation block
@property (getter=isCreatingNewSelectedTabRespectingNewTabBehavior,nonatomic,readonly) char creatingNewSelectedTabRespectingNewTabBehavior;              //@synthesize creatingNewSelectedTabRespectingNewTabBehavior=_creatingNewSelectedTabRespectingNewTabBehavior - In the implementation block
@property (getter=isSwitchingTabs,nonatomic,readonly) char switchingTabs;                                                                                //@synthesize switchingTabs=_switchingTabs - In the implementation block
@property (nonatomic,readonly) unsigned long long browsingMode;                                                                                          //@synthesize browsingMode=_browsingMode - In the implementation block
@property (nonatomic,readonly) char usesPrivateBrowsing; 
@property (getter=isPopupWindow,nonatomic,readonly) char popupWindow;                                                                                    //@synthesize isPopupWindow=_isPopupWindow - In the implementation block
@property (nonatomic,readonly) char isShowingPopover; 
@property (assign,nonatomic) char forceEnableTitlebarBlurFilters;                                                                                        //@synthesize forceEnableTitlebarBlurFilters=_forceEnableTitlebarBlurFilters - In the implementation block
@property (nonatomic,readonly) BrowserTabViewItem * onlyUnpinnedDisposableTab; 
@property (nonatomic,retain) NSUUID * uuid;                                                                                                              //@synthesize uuid=_uuid - In the implementation block
@property (getter=isWindowMaximized,nonatomic,readonly) char windowMaximized; 
@property (getter=isFrontmost,nonatomic,readonly) char frontmost; 
@property (getter=_parsecFeedbackDispatcher,__weak,readonly) id<WBSParsecGlobalFeedbackDispatcher> parsecFeedbackDispatcher; 
@property (nonatomic,readonly) ToolbarController * toolbarController;                                                                                    //@synthesize toolbarController=_toolbarController - In the implementation block
@property (nonatomic,readonly) UnifiedField * unifiedField; 
@property (nonatomic,copy,readonly) NSString * unifiedFieldTextForRestoring; 
@property (nonatomic,readonly) char unifiedFieldIsReflectingSearchTerms; 
@property (nonatomic,readonly) char unifiedFieldIsFirstResponder; 
@property (nonatomic,readonly) char unifiedFieldTextLooksLikeWebSearch; 
@property (nonatomic,readonly) char nothingIsFirstResponder; 
@property (nonatomic,readonly) char webContentIsFirstResponder; 
@property (assign,nonatomic) char blocksAutomaticUpdatesOfUnifiedField;                                                                                  //@synthesize blocksAutomaticUpdatesOfUnifiedField=_blocksAutomaticUpdatesOfUnifiedField - In the implementation block
@property (assign,nonatomic) char acceptsGenericIcon;                                                                                                    //@synthesize acceptsGenericIcon=_acceptsGenericIcon - In the implementation block
@property (nonatomic,readonly) int currentTabLoadingStatus;                                                                                              //@synthesize currentTabLoadingStatus=_currentTabLoadingStatus - In the implementation block
@property (nonatomic,readonly) TabBarController* tabBarController; 
@property (nonatomic,readonly) NSArray * orderedTabViewItems; 
@property (nonatomic,readonly) NSArray * orderedUnpinnedTabViewItems; 
@property (nonatomic,readonly) CustomViewSnapshotCache * customViewSnapshotCache;                                                                        //@synthesize customViewSnapshotCache=_customViewSnapshotCache - In the implementation block
@property (assign,nonatomic) char disableTopContentInsetUpdateForSelectedTab;                                                                            //@synthesize disableTopContentInsetUpdateForSelectedTab=_disableTopContentInsetUpdateForSelectedTab - In the implementation block
@property (nonatomic,readonly) WebViewController * currentBrowserOrOverlayViewController; 
@property (assign,nonatomic) unsigned long long numberOfTabsToBeClosedBeforeClosingWindow;                                                               //@synthesize numberOfTabsToBeClosedBeforeClosingWindow=_numberOfTabsToBeClosedBeforeClosingWindow - In the implementation block
@property (assign,nonatomic) CGPoint lastMouseClickPosition;                                                                                             //@synthesize lastMouseClickPosition=_lastMouseClickPosition - In the implementation block
@property (assign,nonatomic,__weak) NSAlert * alertWithButtonsEnabledOnlyWhenKeyWindow;                                                                  //@synthesize alertWithButtonsEnabledOnlyWhenKeyWindow=_alertWithButtonsEnabledOnlyWhenKeyWindow - In the implementation block
@property (nonatomic,readonly) NSMenu * dynamicBackMenu;                                                                                                 //@synthesize dynamicBackMenu=_dynamicBackMenu - In the implementation block
@property (nonatomic,readonly) NSMenu * dynamicForwardMenu;                                                                                              //@synthesize dynamicForwardMenu=_dynamicForwardMenu - In the implementation block
@property (nonatomic,readonly) char isClosingVisualTabPicker;                                                                                            //@synthesize isClosingVisualTabPicker=_isClosingVisualTabPicker - In the implementation block
@property (nonatomic,readonly) TabContentViewController * currentTabContentViewController; 
@property (nonatomic,readonly) BrowserViewController * currentBrowserViewController; 
@property (nonatomic,readonly) BrowserViewController * currentBrowserViewControllerIgnoringVisualTabPickerVisibility; 
@property (nonatomic,readonly) BrowserViewController * currentBrowserViewControllerIncludingBackgroundLoad; 
@property (nonatomic,readonly) NSView * mainContentView;                                                                                                 //@synthesize mainContentView=_mainContentView - In the implementation block
@property (nonatomic,readonly) double topContentInset; 
@property (nonatomic,retain,readonly) AutomaticReadingListContentProvider * automaticReadingListContentProvider;                                         //@synthesize automaticReadingListContentProvider=_automaticReadingListContentProvider - In the implementation block
@property (nonatomic,readonly) BrowserViewController * currentBrowserViewControllerForNavigationPurposes; 
@property (getter=isCurrentTabPlayingAudio,nonatomic,readonly) char currentTabPlayingAudio; 
@property (nonatomic,readonly) char currentTabHasActiveMediaCaptureDevice; 
@property (nonatomic,readonly) char currentTabHasMediaCaptureDevice; 
@property (nonatomic,readonly) char currentTabHasVideoCaptureDevice; 
@property (nonatomic,readonly) char currentTabHasActiveDisplayCaptureDevice; 
@property (nonatomic,copy,readonly) NSArray * tabInfosForUnifiedFieldCompletion; 
@property (nonatomic,readonly) WBSBrowserTabCompletionInfo * selectedTabInfoForUnifiedFieldCompletion; 
@property (nonatomic,readonly) NSString * displayNameModifiers; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) double idForWebExtensions;                                                                                                //@synthesize idForWebExtensions=_idForWebExtensions - In the implementation block
@property (nonatomic,readonly) char isFocused; 
@property (nonatomic,readonly) char isPrivate; 
@property (nonatomic,readonly) CGRect webExtensionWindowGeometry; 
@property (nonatomic,copy,readonly) NSString * webExtensionWindowType; 
@property (nonatomic,copy,readonly) NSString * webExtensionWindowState; 
@property (nonatomic,copy,readonly) NSArray * webExtensionTabs; 
@property (nonatomic,readonly) id<WBSWebExtensionTab> activeWebExtensionTab; 
+(id)windowControllers;
+(id)buildTranslationMenuItem;
+(id)activeWindowController;
+(id)orderedWindowControllers;
+(id)browserWindowControllerForWindow:(id)arg1 ;
+(id)openEmptyBrowserWindowController;
+(id)allBrowserTabViewItemsFromAllWindows;
+(char)restoreStateIsForPrivateWindow:(id)arg1 ;
+(id)windowControllerForUUID:(id)arg1 ;
+(id)hiddenEmptyBrowserWindowControllerWithBrowsingMode:(unsigned long long)arg1 isPopupWindow:(char)arg2 ;
+(id)_windowControllersForDocuments:(id)arg1 ;
+(id)hiddenEmptyBrowserWindowControllerWithBrowsingMode:(unsigned long long)arg1 isPopupWindow:(char)arg2 restoringFromLastSession:(char)arg3 ;
+(id)windowControllerForIdForWebExtensions:(double)arg1 ;
-(void)dealloc;
-(id)init;
-(NSUUID *)uuid;
-(void)setUuid:(NSUUID *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)validateMenuItem:(id)arg1 ;
-(char)validateUserInterfaceItem:(id)arg1 ;
-(char)isTabBarVisible;
-(unsigned long long)numberOfTabs;
-(void)selectNextTab:(id)arg1 ;
-(void)selectPreviousTab:(id)arg1 ;
-(void)toggleTabBar:(id)arg1 ;
-(void)setTabBarVisible:(char)arg1 ;
-(void)_moveTabToNewWindow:(id)arg1 ;
-(unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2 ;
-(void)windowDidBecomeKey:(id)arg1 ;
-(id)touchBar;
-(void)encodeRestorableStateWithCoder:(id)arg1 ;
-(void)restoreStateWithCoder:(id)arg1 ;
-(void)doCommandBySelector:(SEL)arg1 ;
-(void)showWindow:(id)arg1 ;
-(char)windowShouldClose:(id)arg1 ;
-(id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2 ;
-(CGSize)windowWillResize:(id)arg1 toSize:(CGSize)arg2 ;
-(CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(CGRect)arg2 ;
-(CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(CGRect)arg3 ;
-(CGSize)window:(id)arg1 willUseFullScreenContentSize:(CGSize)arg2 ;
-(void)windowDidFailToEnterFullScreen:(id)arg1 ;
-(void)windowDidResize:(id)arg1 ;
-(void)windowDidMove:(id)arg1 ;
-(void)windowDidResignKey:(id)arg1 ;
-(void)windowDidBecomeMain:(id)arg1 ;
-(void)windowDidResignMain:(id)arg1 ;
-(void)windowWillClose:(id)arg1 ;
-(void)windowDidMiniaturize:(id)arg1 ;
-(void)windowDidDeminiaturize:(id)arg1 ;
-(void)windowWillBeginSheet:(id)arg1 ;
-(void)windowDidEndSheet:(id)arg1 ;
-(void)windowDidEndLiveResize:(id)arg1 ;
-(void)windowWillEnterFullScreen:(id)arg1 ;
-(void)windowDidEnterFullScreen:(id)arg1 ;
-(void)windowWillExitFullScreen:(id)arg1 ;
-(void)windowDidExitFullScreen:(id)arg1 ;
-(void)controlTextDidEndEditing:(id)arg1 ;
-(void)controlTextDidChange:(id)arg1 ;
-(char)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3 ;
-(void)menuNeedsUpdate:(id)arg1 ;
-(char)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id*)arg3 action:(SEL*)arg4 ;
-(void)cancel:(id)arg1 ;
-(void)synchronizeWindowTitleWithDocumentName;
-(char)isClosed;
-(id)windowNibName;
-(void)setDocument:(id)arg1 ;
-(char)shouldCloseDocument;
-(void)windowDidLoad;
-(unsigned long long)_numberOfUnpinnedTabs;
-(CGRect)frameForVisualTabPickerController:(id)arg1 ;
-(void)closeVisualTabPicker;
-(void)visualTabPickerControllerWillClose:(id)arg1 ;
-(void)visualTabPickerControllerDidBeginHiding:(id)arg1 ;
-(void)visualTabPickerControllerDidEndHiding:(id)arg1 ;
-(id)selectedTabViewItemForVisualTabPickerController:(id)arg1 ;
-(char)creatingNewTabWillCloseVisualTabPickerController:(id)arg1 ;
-(char)createNewTabForVisualTabPickerController:(id)arg1 ;
-(void)visualTabPickerController:(id)arg1 selectTab:(id)arg2 ;
-(id)destinationForTabDragOperation:(id)arg1 ;
-(void)noResponderFor:(SEL)arg1 ;
-(void)swipeWithEvent:(id)arg1 ;
-(id)_attachedSheet;
-(char)isFocused;
-(id)_windowContentView;
-(void)selectTabViewItem:(id)arg1 ;
-(unsigned long long)indexOfTabViewItem:(id)arg1 ;
-(char)isInFullScreenMode;
-(void)windowWillOrderOnScreen:(id)arg1 ;
-(void)loadWindow;
-(BrowserWindowTabViewController *)tabViewController;
-(void)willStartExitAnimationForVisualTabPickerController:(id)arg1 ;
-(char)isPrivate;
-(void)zoomIn:(id)arg1 ;
-(void)zoomOut:(id)arg1 ;
-(void)stopLoading:(id)arg1 ;
-(void)makeTextSmaller:(id)arg1 ;
-(void)reloadFromOrigin:(id)arg1 ;
-(void)searchForString:(id)arg1 ;
-(void)performWebSearch:(id)arg1 ;
-(char)_canGoBack;
-(char)usesPrivateBrowsing;
-(void)addBookmark:(id)arg1 ;
-(void)openNewTabsWithPasteboard:(id)arg1 ;
-(BrowserViewController *)currentBrowserViewController;
-(char)isFrontmost;
-(void)focusContentView;
-(void)_updateCloseKeyEquivalents;
-(void)togglePinTabFromMenu:(id)arg1 ;
-(void)duplicateTab:(id)arg1 ;
-(void)_parentalControlsDidChange;
-(void)togglePerSitePreferencesPopoverFromMenuItem:(id)arg1 ;
-(void)translateWebpageToLocale:(id)arg1 ;
-(void)toggleShowFrequentlyVisitedSites:(id)arg1 ;
-(char)isAvailableForForcedLocationUsingWindowPolicy:(long long)arg1 ;
-(id)makeNewEmptyBrowserViewControllerInTab;
-(void)cancelFluidProgressForBrowserViewController:(id)arg1 ;
-(void)selectTabForBrowserViewController:(id)arg1 ;
-(void)confirmClosingTabWithUnsavedCredentials:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)toggleFavoritesBar:(id)arg1 ;
-(char)isShowingDownloadsPopover;
-(void)reloadObeyingUnifiedField:(id)arg1 ;
-(void)reloadWithInvertedContentBlockersEnabledSetting:(id)arg1 ;
-(char)isShowingVisualTabPicker;
-(unsigned long long)browsingMode;
-(char)isPopupWindow;
-(void)beginBatchTabManipulation;
-(void)resetFirstResponder;
-(NSArray *)orderedTabViewItems;
-(void)consolidateTabViewItemsFromOtherWindows:(id)arg1 ;
-(void)endBatchTabManipulation;
-(void)sessionStateDidChange;
-(void)toggleDownloadsPopover:(id)arg1 ;
-(char)closeKeyEquivalentClosesTab;
-(void)toggleLocationBar:(id)arg1 ;
-(void)showReadingListSidebar;
-(id)firstTabWithUnsavedCredentials;
-(unsigned long long)numberOfNonDisposableTabs;
-(void)changeTextEncoding:(id)arg1 ;
-(id)selectedTab;
-(void)setOverlayStatusBarEnabled:(char)arg1 ;
-(unsigned long long)numberOfTabsToBeClosedBeforeClosingWindow;
-(void)setNumberOfTabsToBeClosedBeforeClosingWindow:(unsigned long long)arg1 ;
-(void)closeWindowWithoutConfirming;
-(void)cancelClosingWindowDueToPageRefusingToUnload;
-(void)formTextStatusWasVerified:(id)arg1 ;
-(id)_parsecFeedbackDispatcher;
-(ToolbarController *)toolbarController;
-(ExtensionBrowserWindow*)extensionBrowserWindow;
-(char)tryToCommitBackgroundLoadDueToEventRequiringUserIntervention:(id)arg1 ;
-(void)cancelBackgroundLoadSoonOrReissueLoadIfCommitted:(id)arg1 ;
-(void)progressDidCancelInBrowserViewController:(id)arg1 ;
-(id)makeBrowserViewControllerInTabOfType:(int)arg1 withWindowPolicy:(long long)arg2 shouldSelectTab:(char)arg3 ;
-(void)didFinishSettingUpBackgroundNavigationInBrowserTabViewItem:(id)arg1 ;
-(void)progressDidStartInBrowserViewController:(id)arg1 ;
-(void)progressDidFinishInBrowserViewController:(id)arg1 ;
-(char)isInContinuousMode;
-(void)cancelBackgroundLoad:(id)arg1 ;
-(void)forceCommittedBackgroundLoadToBeShown:(id)arg1 ;
-(void)loadWebExtensionURL:(id)arg1 inBrowserViewController:(id)arg2 ;
-(id)loadUsingBackgroundLoadForURL:(id)arg1 inBrowserTabViewItem:(id)arg2 ;
-(void)setAcceptsGenericIcon:(char)arg1 ;
-(void)loadDidStartInBrowserViewController:(id)arg1 ;
-(void)loadDidFinishInBrowserViewController:(id)arg1 ;
-(void)unifiedFieldURLDidChangeInBrowserViewController:(id)arg1 ;
-(char)shouldBlockUserInteractionAfterShowingAutomationAlert;
-(id)backgroundLoadWithIdentifier:(id)arg1 ;
-(id)makeBrowserViewControllerForBackgroundLoadController:(id)arg1 configuration:(id)arg2 urls:(id)arg3 ;
-(id)backgroundLoadController:(id)arg1 browserViewControllerForSettingUpBackgroundLoad:(id)arg2 ;
-(void)backgroundLoadController:(id)arg1 didReissueBackgroundLoad:(id)arg2 ;
-(void)backgroundLoadController:(id)arg1 willCancelBackgroundLoad:(id)arg2 ;
-(id)browserDocument;
-(void)backgroundLoadController:(id)arg1 didCancelBackgroundLoad:(id)arg2 beingCommittedIntoTabViewItem:(id)arg3 ;
-(id)backgroundLoadController:(id)arg1 destinationTabViewItemForCommittingBackgroundLoad:(id)arg2 ;
-(void)backgroundLoadController:(id)arg1 didDeferCommitOfBackgroundLoad:(id)arg2 ;
-(char)backgroundLoadController:(id)arg1 handleBackgroundLoadDidPerformFirstVisuallyNonEmptyLayout:(id)arg2 ;
-(void)backgroundLoadController:(id)arg1 willCommitBackgroundLoad:(id)arg2 wasDeferred:(char)arg3 ;
-(void)backgroundLoadController:(id)arg1 didCommitBackgroundLoad:(id)arg2 intoTabViewItem:(id)arg3 ;
-(id)backgroundLoadWithBrowserViewController:(id)arg1 ;
-(char)commitBackgroundLoad:(id)arg1 ;
-(void)_popoverWillShow:(id)arg1 ;
-(double)idForWebExtensions;
-(id)makeBrowserViewControllerInTabOfType:(int)arg1 andSelect:(char)arg2 ;
-(BrowserViewController *)currentBrowserViewControllerIgnoringVisualTabPickerVisibility;
-(char)canHandleCommand1Through9ActionForIndex:(unsigned long long)arg1 ;
-(void)handleCommand1Through9ActionForIndex:(unsigned long long)arg1 ;
-(void)addBookmarkFolder:(id)arg1 ;
-(NSView *)mainContentView;
-(void)goHome:(id)arg1 ;
-(void)didCollectPageLayoutInformationForSidebarAnimationBeforeResize;
-(void)didForceContentRepaintAndCollectPageLayoutInformationForSidebarAnimationAfterResize:(id)arg1 ;
-(id)backgroundLoadBeingCommittedIntoBrowserViewController:(id)arg1 ;
-(CGSize)currentWebViewSize;
-(WBSFluidProgressController *)fluidProgressController;
-(char)anyToolbarsVisible;
-(double)topContentInset;
-(void)mainDocumentDidFirstLayoutInBrowserViewController:(id)arg1 ;
-(void)mainDocumentDidFirstMeaningfulPaintInBrowserViewController:(id)arg1 ;
-(void)browserViewControllerDidFirstMeaningfulPaint:(id)arg1 ;
-(void)mainDocumentDidLoadInBrowserViewController:(id)arg1 ;
-(void)secureContentStatusDidChangeInBrowserViewController:(id)arg1 ;
-(void)pageTitleDidChangeInBrowserViewController:(id)arg1 ;
-(void)updateReaderButtonNow;
-(void)currentURLDidChangeInBrowserViewController:(id)arg1 ;
-(void)loadingStatusDidChangeInBrowserViewController:(id)arg1 ;
-(void)notSecureWarningStatusDidChangeInBrowserViewController:(id)arg1 ;
-(void)mainContentViewDidChangeInBrowserViewController:(id)arg1 ;
-(void)loadDidCommitInBrowserViewController:(id)arg1 ;
-(void)willLoadURLRequestForBrowserViewController:(id)arg1 ;
-(void)didStartBrowserInitiatedLoadInBrowserViewController:(id)arg1 ;
-(id)startSpawnedTabBackgroundLoadWithURL:(id)arg1 ;
-(BrowserTabViewItem *)onlyUnpinnedDisposableTab;
-(void)commitBackgroundLoad:(id)arg1 withParentBrowserViewController:(id)arg2 andSelect:(char)arg3 ;
-(void)closeTabViewItemWithoutConfirming:(id)arg1 ;
-(void)updateUnifiedFieldTextSoon;
-(char)isInteractionBlockedByModalWindow;
-(void)updateUnifiedFieldIconSoon;
-(void)updateOneStepBookmarkingButtonSoon;
-(void)pageTypeDidChangeInBrowserViewController:(id)arg1 ;
-(void)setIgnoresOrderFront:(char)arg1 ;
-(void)setFrameProgrammatically:(CGRect)arg1 ;
-(void)didClearBlockedWindowConfigurationCaches;
-(id)makeBrowserViewControllerInTabOfType:(int)arg1 configuration:(id)arg2 andSelect:(char)arg3 ;
-(void)setToolbarsVisible:(char)arg1 ;
-(void)cancelCommittedBackgroundLoadAndReissueLoadSoon:(id)arg1 ;
-(void)startFluidProgressForBrowserViewController:(id)arg1 ;
-(BrowserWindow *)browserWindow;
-(void)_setStatusMessage:(id)arg1 ;
-(void)statusDidChangeInBrowserViewController:(id)arg1 ;
-(char)isCreatingNewSelectedTabRespectingNewTabBehavior;
-(char)webContentIsFirstResponder;
-(void)startRocketEffectForBrowserViewController:(id)arg1 ;
-(void)updateShareButtonSoon;
-(void)updateReaderButtonSoon;
-(void)browserViewController:(id)arg1 didUpdateContextResponse:(id)arg2 ;
-(char)isShowingPopover;
-(void)readerWillActivateInBrowserViewController:(id)arg1 ;
-(void)readerDidActivateInBrowserViewController:(id)arg1 ;
-(void)readerWillDeactivateInBrowserViewController:(id)arg1 ;
-(void)readerDidDeactivateInBrowserViewController:(id)arg1 ;
-(void)readerDidBecomeUnavailableUnexpectedlyInBrowserViewController:(id)arg1 ;
-(void)openPreviewBrowserViewControllerInTab:(id)arg1 andSelect:(char)arg2 ;
-(void)updateTabTitlesSoon;
-(void)updateWindowTitleSoon;
-(void)mutedStateDidChangeForTabViewItem:(id)arg1 ;
-(void)setDisableTopContentInsetUpdateForSelectedTab:(char)arg1 ;
-(void)tryToCloseTabWhenReady:(id)arg1 ;
-(void)updateWindowTitlebarBlurFilters;
-(void)moveBackgroundLoad:(id)arg1 toWindowController:(id)arg2 ;
-(void)startReadingListHopAnimationFromMouseLocation;
-(void)startHopAnimationFromPoint:(CGPoint)arg1 ;
-(void)browserViewControllerBlockedFromKeyViewLoopDidChange:(id)arg1 ;
-(void)installedBannersDidChangeInBrowserViewController:(id)arg1 ;
-(void)frameRestrictionsChanged;
-(void)updateUnifiedFieldPlaceholderString;
-(void)progressValueDidChangeInBrowserViewController:(id)arg1 ;
-(void)tabDialogDidChangeInBrowserViewController:(id)arg1 isHTTPAuthenticationDialog:(char)arg2 ;
-(id)_unifiedFieldFallbackURLForAboutBlank;
-(void)releaseTabsForGoingForward;
-(void)addHistoryOperation:(id)arg1 forBackgroundLoad:(id)arg2 ;
-(id)initWithBrowsingMode:(unsigned long long)arg1 isPopupWindow:(char)arg2 ;
-(void)setSearchProvidersController:(SearchProvidersController *)arg1 ;
-(char)canShowUnifiedField;
-(NSString *)displayNameModifiers;
-(id)toolbarViewWindow;
-(void)selectUnifiedField:(id)arg1 ;
-(void)focusVisualTabPickerSearchField;
-(WebViewController *)currentBrowserOrOverlayViewController;
-(void)openLocation:(id)arg1 ;
-(char)trySwitchingToPinnedTabOnNavigationToURL:(id)arg1 ;
-(BrowserViewController *)currentBrowserViewControllerForNavigationPurposes;
-(NSMenu *)dynamicBackMenu;
-(NSMenu *)dynamicForwardMenu;
-(id)sidebarViewController;
-(char)checkIfBookmarksChangesAreAllowedPromptingIfNecessary;
-(void)showBookmarksSidebar:(id)arg1 ;
-(int)currentTabLoadingStatus;
-(char)isClosingVisualTabPicker;
-(void)showTopSitesWall:(id)arg1 ;
-(void)showStartPage:(id)arg1 ;
-(void)showFavorites:(id)arg1 ;
-(void)toggleBookmarksEditView:(id)arg1 ;
-(void)toggleHistoryInBookmarksView:(id)arg1 ;
-(void)setPrefersSidebarVisible:(char)arg1 ;
-(void)setPrefersSidebarVisibleWithStartPage:(char)arg1 ;
-(char)shouldOpenNewTabFromFileMenu;
-(char)openNewTabInCurrentContext:(char)arg1 ;
-(char)openNewTab;
-(void)closeInactiveTabs:(id)arg1 ;
-(long long)windowPolicyRespectingVisualTabPickerVisibility:(long long)arg1 ;
-(void)tryToCloseTab:(id)arg1 ;
-(NSArray *)orderedUnpinnedTabViewItems;
-(void)restoreTabStates:(id)arg1 selectTabIndex:(unsigned long long)arg2 ;
-(id)restoreClosedTab:(id)arg1 atIndex:(unsigned long long)arg2 andSelect:(char)arg3 ;
-(TabBarController*)tabBarController;
-(id)backgroundLoadBrowserViewControllerForTab:(id)arg1 ;
-(char)shouldSuppressExtensionWindowEvents;
-(void)closeTabOrWindowWithoutConfirming:(id)arg1 ;
-(char)continuousPageViewIsHandlingPageTransitionOrLoadingPageItem;
-(id)audioMenuForBrowserTabViewItem:(id)arg1 ;
-(id)mediaAndDisplayCaptureIndicatorMenuForBrowserTabViewItem:(id)arg1 ;
-(void)insertUnpinnedTabIfNecessary;
-(void)openNewTabsWithStates:(id)arg1 ;
-(void)replaceTabsWithStates:(id)arg1 allowGoBack:(char)arg2 allowJavaScript:(char)arg3 selectTabIndex:(unsigned long long)arg4 ;
-(void)goToURLInNewProcessIfPossible:(id)arg1 withTitle:(id)arg2 windowPolicy:(long long)arg3 tabPlacementHint:(const TabPlacementHint*)arg4 ;
-(void)handlePerformSelectNextOrPreviousTabKeyEquivalentWithEvent:(id)arg1 navigationDirection:(int)arg2 ;
-(void)handleClickInWindowNotHandledByAnyView;
-(void)willShowCustomizeToolbarSheet;
-(void)tryToCloseWindowWhenReady;
-(void)windowTitleNeedsUpdate;
-(id)browserWindow:(id)arg1 shouldMakeFirstResponder:(id)arg2 ;
-(void)firstResponderMightHaveChanged;
-(TabContentViewController *)currentTabContentViewController;
-(char)isTogglingFullScreenMode;
-(void)prepareForWindowToEnterFullScreen;
-(char)windowShouldDeferFullScreenTransitions;
-(void)prepareForWindowToExitFullScreen;
-(void)insertInOrderedTabViewItems:(id)arg1 ;
-(void)insertInOrderedTabViewItems:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)replaceInOrderedTabViewItems:(id)arg1 atIndex:(unsigned)arg2 ;
-(void)removeFromOrderedTabViewItemsAtIndex:(unsigned)arg1 ;
-(char)ignoresOrderFront;
-(id)_currentSidebarViewController;
-(char)isSidebarAnimationInProgress;
-(char)sidebarAppearsAsOverlay;
-(double)sidebarWidth;
-(void)forceContentRepaintAndCollectPageLayoutInformationForSidebarAnimationAfterResize;
-(void)collectPageLayoutInformationForSidebarAnimationBeforeResize;
-(void)browserWindowContentSplitViewControllerWillShowOverlaySidebar:(id)arg1 ;
-(void)browserWindowContentSplitViewControllerWillHideOverlaySidebar:(id)arg1 ;
-(void)browserWindowContentSplitViewControllerDidShowOrHideSidebar:(id)arg1 ;
-(char)prefersSidebarVisibleWithStartPage;
-(char)prefersSidebarVisible;
-(void)hideOverlaySidebarIfNeeded;
-(id)_backgroundLoadConfigurationForNonSpeculativeLoadInCurrentWindow;
-(id)_browserViewControllerToInstallBookmarksOrHistoryView;
-(id)makeBrowserViewControllerInTabAtIndex:(unsigned long long)arg1 andSelect:(char)arg2 ;
-(void)_applyNewBrowserViewBehavior:(long long)arg1 toBrowserViewController:(id)arg2 usingReferenceBrowserViewController:(id)arg3 ;
-(char)_makeUnifiedFieldFirstResponderProgrammatically;
-(void)_showTabBarAndUpdateCloseKeyEquivalentsIfNeeded;
-(void)_browserTabsDidChange;
-(char)isWindowMaximized;
-(CGRect)_restrictedFrameForFrame:(CGRect)arg1 ;
-(void)_updateReaderButton:(int)arg1 ;
-(BrowserViewController *)currentBrowserViewControllerIncludingBackgroundLoad;
-(UnifiedField *)unifiedField;
-(void)_didReplaceBrowserWKViewInTab:(id)arg1 shouldUpdateFluidProgressController:(char)arg2 ;
-(char)_canAddBookmark;
-(char)bookmarksSidebarIsShowing;
-(void)toggleBookmarksSidebar:(id)arg1 ;
-(char)_canCloseTabFromMenuAndCloseButton:(id)arg1 ;
-(unsigned long long)_firstUnpinnedTabIndex;
-(void)selectTabAtIndex:(unsigned long long)arg1 ;
-(void)tryToCloseOtherTabsWhenReady:(id)arg1 ;
-(void)goBackInWindow:(id)arg1 ;
-(TabPlacementHint)_currentTabPlacementHint;
-(char)unifiedFieldIsFirstResponder;
-(void)clearFirstResponder;
-(void)_goBackInWindowUsingPolicy:(long long)arg1 ;
-(id)_replaceCurrentTabsWithExtractedTabs:(id)arg1 selectedTab:(id)arg2 getPreviouslySelectedTab:(id*)arg3 ;
-(void)goForwardInWindow:(id)arg1 ;
-(char)_canGoForward;
-(id)_goToUnifiedFieldURLWithWindowPolicy:(long long)arg1 httpReferrer:(id)arg2 ;
-(id)_goToUnifiedFieldURLWithWindowPolicy:(long long)arg1 ;
-(char)_moreThanOneTabShowing;
-(char)_isTabEquivalentToNewlyCreatedTabRespectingNewTabBehavior:(id)arg1 ;
-(id)_createBrowserViewControllerInNewTabOfType:(int)arg1 respectingNewTabBehavior:(char)arg2 andSelect:(char)arg3 ;
-(void)_performWebSearchWithWindowPolicy:(long long)arg1 ;
-(char)_canPrintFromToolbar;
-(char)_makeUnifiedFieldFirstResponder;
-(UnifiedFieldCompletionController*)_unifiedFieldCompletionController;
-(char)_unifiedFieldIsEmpty;
-(void)showPopUpWindowBlockedUI;
-(void)_updatePopUpWindowBlockedUI;
-(unsigned long long)selectedTabIndex;
-(char)_unifiedFieldIsShowing;
-(char)_unifiedFieldIsReflectingCurrentURL;
-(char)_unifiedFieldTextIsWorthyOfHonoringOnReload;
-(void)_performUnifiedFieldActionWithWindowPolicy:(long long)arg1 ;
-(void)_reloadHonoringUnifiedField:(char)arg1 ;
-(void)_reloadTab:(id)arg1 ;
-(char)canReloadTab:(id)arg1 ;
-(id)_tabsSortedByTitle;
-(void)_reorderTabsToMatchingOrderingOfArray:(id)arg1 ;
-(id)_tabsSortedByWebsite;
-(void)togglePinnedStateForTab:(id)arg1 ;
-(char)shouldShowTabBar;
-(void)_toggleTabBarWithAnimation:(char)arg1 ;
-(void)_moveTab:(id)arg1 toIndex:(unsigned long long)arg2 isChangingPinnedness:(char)arg3 ;
-(id)duplicateTabViewItem:(id)arg1 ;
-(id)_browserTabPersistentStateForTab:(id)arg1 ;
-(id)makeBrowserViewControllerInTabAtIndex:(unsigned long long)arg1 configuration:(id)arg2 andSelect:(char)arg3 ;
-(id)_setUpTabWithBrowserViewController:(id)arg1 atIndex:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
-(void)insertPreservedTab:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)_insertTabViewItem:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)moveTab:(id)arg1 toIndex:(unsigned long long)arg2 ;
-(id)deselectPinnedTabIfNecessary;
-(void)_closeTabWithoutConfirming:(id)arg1 allowUndo:(char)arg2 ;
-(void)_closeWindowIfPossible;
-(char)isEnteringOrInFullScreenMode;
-(void)_toggleLocationBar:(id)arg1 suppressToolbarConfigurationAutosave:(char)arg2 ;
-(void)_updateKeyboardLoopIfReady;
-(void)_updateVisualTabPickerFrame;
-(char)_windowIsFullHeight;
-(void)_toggleToolbarIgnoringCurrentEvent:(id)arg1 ;
-(void)_toggleFavoritesBarWithAnimation:(char)arg1 ;
-(char)isFavoritesBarVisible;
-(void)_setReaderButtonState:(long long)arg1 animate:(char)arg2 ;
-(char)_canShowSharingServicePicker;
-(id)_originatingViewForSharingServicePicker;
-(void)_togglePerSitePreferencesPopoverRelativeToRect:(CGRect)arg1 inView:(id)arg2 ;
-(void)togglePerSitePreferencesPopoverFromMenuItem;
-(CGRect)_translateBoundsOfViewForPerSitePreferencesPopover:(id)arg1 ;
-(char)_canShowPerSitePreferencesPopover;
-(char)_canShowPrivacyReportPopover;
-(MutableMediaPlaybackAndMuteState)_gatherTabAudioPlaybackAndMuteStateForTargetTab:(id)arg1 ;
-(id)_localeIdentifierFromTranslationMenuItem:(id)arg1 ;
-(char)canToggleSidebar;
-(char)isSidebarVisible;
-(void)uninstallSidebarFromUserGesture;
-(void)installSidebarFromUserGesture;
-(void)safari_toggleSidebar:(id)arg1 ;
-(void)_showSidebar:(id)arg1 ;
-(void)toggleBookmarksEditViewWithSidebarVisible:(char)arg1 animated:(char)arg2 ;
-(char)_isShowingBookmarksInCurrentBrowserView;
-(void)uninstallSidebarWithAnimation:(char)arg1 ;
-(void)installSidebarWithAnimation:(char)arg1 ;
-(char)_isShowingHistoryInCurrentBrowserView;
-(char)readingListSidebarIsShowing;
-(void)_setSidebarVisibilityPreference:(char)arg1 ;
-(char)canAnimateSidebar;
-(void)hideAllBannersForCurrentBrowserContentViewController;
-(void)_updateSidebarSeparator;
-(char)_isReaderInstalled;
-(Page*)_pageForSidebarAnimation;
-(void)_startReadingListHopAnimationUsingStartPoint:(CGPoint)arg1 withImage:(id)arg2 ;
-(void)_startHopAnimationFromPoint:(CGPoint)arg1 toDestination:(int)arg2 withImage:(id)arg3 ;
-(void)startReadingListHopAnimationUsingStartPoint:(CGPoint)arg1 ;
-(void)_startHopAnimationFromPoint:(CGPoint)arg1 withImage:(id)arg2 ;
-(CGPoint)_siteIconHopAnimationStartPoint;
-(CGPoint)_hopAnimationEndPointForDestination:(int)arg1 ;
-(void)_startHopAnimationWithStartPoint:(CGPoint)arg1 endPoint:(CGPoint)arg2 image:(id)arg3 ;
-(void)_showStartPage;
-(char)_isReaderFirstResponder;
-(void)toggleReader:(id)arg1 ;
-(char)_unifiedFieldIsReflectingUnifiedFieldURL;
-(void)_revertEditsInUnifiedField;
-(void)_startObservingContentLayoutRectChanges;
-(void)_insertTitlebarViewController:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(char)_newWindowShouldBeUnbuffered;
-(char)isLocationBarVisible;
-(char)isPopupWindowUnifiedFieldVisible;
-(void)_startPostponingCoalescedUnifiedFieldUpdates;
-(void)_ensureLocationBarIsVisibleIfWindowIsNotInFullScreen;
-(void)_setUpTabBar;
-(void)_setUpLocationBar;
-(void)_showFavoritesBarIfNeeded;
-(void)_setUpStatusBar;
-(void)_setUpPopupWindow;
-(void)updateSidebarButtonNow;
-(void)_updateVisualTabPickerButton;
-(void)updateSidebarVisibility;
-(id)_setUpBackgroundTabAfterLastTabWithBrowserViewController:(id)arg1 ;
-(void)_recentSearchesCleared:(id)arg1 ;
-(void)_downloadDidBegin:(id)arg1 ;
-(void)_downloadEntryStageDidChange:(id)arg1 ;
-(void)_mutableMediaPlayingStateDidChange:(id)arg1 ;
-(void)_popoverWillClose:(id)arg1 ;
-(void)_overallAudioStateDidChange:(id)arg1 ;
-(void)_updatePinnedTabIconsNow:(id)arg1 ;
-(char)_shouldUseOpenBookmarksInTabsNewWindowBehavior;
-(char)windowIsClosing;
-(void)_tellUserThatAppIsHosed;
-(void)_sendWillOpenEventToExtensions;
-(void)setFirstResponderViewBeforeFullScreenTransition:(NSView *)arg1 ;
-(CGRect)defaultFrame;
-(void)_updatePageTitleInUnifiedField;
-(char)frameAutosaveIsAllowed;
-(id)_functionBarProviderCreatingIfNeeded;
-(id)_automationTouchBarProviderCreatingIfNeeded;
-(unsigned long long)_selectedFunctionBarTabIndex;
-(void)_cancelCoalescedUpdate:(unsigned long long)arg1 ;
-(unsigned long long)_functionBarTabIndexFromRealTabIndex:(unsigned long long)arg1 ;
-(unsigned long long)_realTabIndexFromFunctionBarTabIndex:(unsigned long long)arg1 ;
-(long long)_resolveReaderButtonState;
-(char)_canShowVisualTabPicker;
-(char)_canGoHome;
-(char)_canToggleHistoryOrBookmarks;
-(char)_canAutoFill;
-(char)_canToggleWebInspector;
-(unsigned long long)_realTabIndexFromFunctionBarTabIndex:(unsigned long long)arg1 realTabOffset:(unsigned long long)arg2 ;
-(unsigned long long)_functionBarTabIndexFromRealTabIndex:(unsigned long long)arg1 realTabOffset:(unsigned long long)arg2 ;
-(void)_updateFirstResponderAfterTabSwitch;
-(void)showSharingServicePicker:(id)arg1 ;
-(void)toggleVisualTabPicker:(id)arg1 ;
-(void)autoFill:(id)arg1 ;
-(UnifiedFieldEditor *)unifiedFieldEditor;
-(void)_toggleLocationBarWithoutSavingConfiguration;
-(char)_isTitlebarAccessoryViewControllerVisible:(id)arg1 ;
-(void)_setTabBarVisible:(char)arg1 ;
-(void)setLocationBarVisible:(char)arg1 ;
-(char)_shouldShowFavoritesBar;
-(void)setFavoritesBarVisible:(char)arg1 ;
-(char)_alwaysShowTabBar;
-(void)cancelVisualTabPickerPendingEntryAnimation;
-(void)setUpVisualTabPickerView;
-(id)_favoritesBarViewController;
-(void)searchForString:(id)arg1 withWindowPolicy:(long long)arg2 ;
-(char)_setUnifiedFieldNonURLText:(id)arg1 ;
-(id)_searchWebForString:(id)arg1 withWindowPolicy:(long long)arg2 ;
-(id)_unifiedFieldText;
-(char)_updateUnifiedFieldTextNowIsSelectingNewTab:(char)arg1 ;
-(void)_updateUnifiedFieldIconNow;
-(void)_startDownloadHopAnimationFromPoint:(CGPoint)arg1 ;
-(void)_updateContentViewTopContentInset;
-(id)_createTabWithBrowserViewController:(id)arg1 atIndex:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
-(void)willSelectTabViewItem:(id)arg1 ;
-(void)didSelectTabViewItem;
-(void)showVisualTabPicker;
-(void)_moveTabViewItem:(id)arg1 toIndex:(unsigned long long)arg2 isChangingPinnedness:(char)arg3 ;
-(void)newTabWithinWindow:(id)arg1 ;
-(void)reloadAllTabs:(id)arg1 ;
-(void)closeTabFromMenu:(id)arg1 ;
-(char)_canCloseOtherTabsExcludingTab:(id)arg1 ;
-(void)closeOtherTabsFromMenu:(id)arg1 ;
-(char)_canCloseTabsToRightOfTab:(id)arg1 ;
-(void)_closeTabsToRightFromMenu:(id)arg1 ;
-(char)_canCloseTabsToLeftOfTab:(id)arg1 ;
-(void)_closeTabsToLeftFromMenu:(id)arg1 ;
-(void)moveTabToNewWindowFromMenu:(id)arg1 ;
-(void)sortTabsByTitle:(id)arg1 ;
-(void)sortTabsByWebsite:(id)arg1 ;
-(void)toggleMuteTabFromMenu:(id)arg1 ;
-(id)_unpinnedTabs;
-(char)_isPinningAllowed;
-(void)moveTabFromOtherWindow:(id)arg1 toIndex:(unsigned long long)arg2 andSelect:(char)arg3 ;
-(unsigned long long)_dragOperationForTabDraggingInfo:(id)arg1 ;
-(void)_replaceEmptyTabInNewWindowWithTabs:(id)arg1 ;
-(char)_handleDroppingURLs:(id)arg1 onTabButtonWithIndex:(unsigned long long)arg2 ;
-(void)_performTabBarDragOperationForURLs:(id)arg1 droppedAtIndex:(unsigned long long)arg2 honorWindowPolicy:(char)arg3 ;
-(void)_performTabBarDragOperationForTabViewItem:(id)arg1 URL:(id)arg2 ;
-(char)_canCloseTabFromCloseButton:(id)arg1 ;
-(char)_canTogglePinnedStateAllowedForTabViewItem:(id)arg1 ;
-(id)_browserTabViewItemWithBackgroundNavigationBackgroundLoad:(id)arg1 ;
-(id)_backgroundLoadConfigurationForSpeculativeLoadInCurrentWindow;
-(id)_updateUniqueBackgroundLoadURLs:(id)arg1 isSpeculative:(char)arg2 withTabLabel:(id)arg3 identifier:(id)arg4 httpReferrer:(id)arg5 ;
-(id)_beginUniqueBackgroundLoadWithURLs:(id)arg1 tabLabel:(id)arg2 isSpeculative:(char)arg3 identifier:(id)arg4 httpReferrer:(id)arg5 ;
-(void)_updateWindowWithCurrentTabInfoUpdatingFluidProgressController:(char)arg1 shouldUpdateKeyboardLoop:(char)arg2 isSelectingNewTab:(char)arg3 ;
-(void)setShouldUpdateFocusOnBackgroundLoadCommit:(char)arg1 ;
-(void)updateLoadingStatus;
-(char)unifiedFieldIsReflectingSearchTerms;
-(void)updateFirstResponderOnPageLoadCommit;
-(void)_updateThumbnailForTabViewItemSoon:(id)arg1 ;
-(id)_tryGoToURLsInNewProcessUsingBackgroundLoad:(id)arg1 withTabLabel:(id)arg2 httpReferrer:(id)arg3 ;
-(char)_shouldReloadTabAfterAutomaticallySwitchedTo:(id)arg1 ;
-(void)_closePreviouslySelectedTabIfNecessaryAfterSwitchingTabs:(id)arg1 wasShowingVisualTabPicker:(char)arg2 ;
-(void)_selectTab:(id)arg1 ;
-(void)_confirmClosingEditedTab:(id)arg1 ;
-(void)_closePageAfterConfirmPageUnloadWithPIPVideo:(id)arg1 ;
-(void)_closePageAfterChecks:(id)arg1 ;
-(void)setCompletionHandlerForLastSheetEndingOnWindow:(id)arg1 ;
-(char)_canCloseTab:(id)arg1 ;
-(void)_tryToCloseMultipleTabsWhenReady:(id)arg1 ;
-(void)_tryToCloseMultipleTabs:(id)arg1 ;
-(void)_confirmClosingMultipleTabsIfAnyAreEdited:(id)arg1 ;
-(void)_performBatchTabInsertions:(/*^block*/id)arg1 ;
-(id)_extractTabsForBackForwardAndGetSelectedTab:(id*)arg1 ;
-(void)_releaseTabsForBackForward;
-(void)_releaseTabs:(id)arg1 andSendWillCloseTabMessages:(char)arg2 ;
-(void)_updateDocumentIsEdited;
-(void)_updateTabTitlesNowUseFastPath:(char)arg1 ;
-(void)_closeTabViewItem:(id)arg1 ;
-(void)_updateSelectedFunctionBarTabNow;
-(void)_updateDFRForMovingTabViewItem:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3 isChangingPinnedness:(char)arg4 ;
-(void)tabsWereRearranged;
-(void)_insertTabFromOtherWindow:(id)arg1 atIndex:(unsigned long long)arg2 andSelect:(char)arg3 ;
-(void)_notifyPageAboutBarsStatesAfterMovingToNewWindow:(id)arg1 ;
-(void)_closeWindowIfNoUnpinnedTabsLeft;
-(SearchProvidersController *)searchProvidersController;
-(void)_updateWindowTitleNow;
-(void)_makeFirstResponder:(id)arg1 ;
-(char)nothingIsFirstResponder;
-(void)updateStopReloadButtonSoon;
-(void)performTasksAfterFirstPageLoadIfNeeded;
-(void)_releaseBackTabsIfNecessary;
-(void)goBackOrForwardFromSegmentedControl:(id)arg1 ;
-(void)_releaseForwardTabsIfNecessary;
-(void)zoomInOrOutFromSegmentedControl:(id)arg1 ;
-(void)printFromToolbar:(id)arg1 ;
-(void)makeTextBigger:(id)arg1 ;
-(void)zoomToStandardSize:(id)arg1 ;
-(void)toggleMuteCurrentTab:(id)arg1 ;
-(char)_updateMuteCurrentTabMenuItemWithTabAudioState:(MutableMediaPlaybackAndMuteState)arg1 ;
-(void)toggleMuteOtherTabs:(id)arg1 ;
-(char)_updateMuteOtherTabsMenuItemWithTabAudioState:(MutableMediaPlaybackAndMuteState)arg1 ;
-(void)moveCurrentTabToNewWindow:(id)arg1 ;
-(void)closeCurrentTab:(id)arg1 ;
-(char)canCloseSelectedTab;
-(void)reloadTabFromMenu:(id)arg1 ;
-(void)toggleCloudTabsPopover:(id)arg1 ;
-(char)_canShowCloudTabsPopover;
-(void)togglePerSitePreferencesPopoverFromToolbarButton:(id)arg1 ;
-(void)toggleContextFeedbackPopoverFromToolbarButton:(id)arg1 ;
-(void)togglePrivacyReportPopoverFromToolbarButton:(id)arg1 ;
-(char)_hidesToolbarInFullScreen;
-(char)_canToggleTabBarVisibility;
-(char)_allowReloadMenuActions;
-(char)canReloadObeyingUnifiedField;
-(void)toggleVisualTabPickerFromMenu:(id)arg1 ;
-(void)toggleReadingListSidebar:(id)arg1 ;
-(void)toggleBookmarks:(id)arg1 ;
-(void)viewOriginalWebpage:(id)arg1 ;
-(void)changePreferredLanguages:(id)arg1 ;
-(void)internalTranslationRadar:(id)arg1 ;
-(void)translationFeedback:(id)arg1 ;
-(void)_updateFunctionBarItems;
-(void)_sendWillActivateEventToExtensions;
-(void)_updateUsageTrackingInformation;
-(void)_sendWillDeactivateEventToExtensions;
-(void)_windowDidResizeToEnterFullScreen;
-(void)_windowDidResizeToExitFullScreen;
-(void)goBackAndFlashToolbarButton:(id)arg1 ;
-(void)goForwardAndFlashToolbarButton:(id)arg1 ;
-(void)_stopSetInterpretsAllInputAsURLTimer;
-(void)_setInterpretsAllInputAsURL;
-(void)_updateUnifiedFieldInputTypeCuesIfNeeded;
-(FavoritesBarView *)favoritesBarView;
-(char)_displayCloseConfirmation;
-(void)_updatePendingClosedWindowState;
-(void)_stopObservingContentLayoutRectChanges;
-(void)setAlertWithButtonsEnabledOnlyWhenKeyWindow:(NSAlert *)arg1 ;
-(void)_sendWillCloseEventToExtensions;
-(void)_tellAppControllerWindowWillClose;
-(id)_takePendingClosedWindowState;
-(void)_cancelAllCoalescedUpdates;
-(char)_shouldMakeWebViewFirstResponder:(id)arg1 ;
-(void)_clearEditedUnifiedFieldStringForSelectedTab;
-(char)_shouldBlockAutomaticUpdatesOfUnifiedFieldIfLoading;
-(id)_windowURL;
-(void)_updateStopReloadButtonNow;
-(void)_updateSecurityUIVisibility;
-(void)_updateUnifiedFieldWritingDirection;
-(char)unifiedFieldTextLooksLikeWebSearch;
-(void)_performUnifiedFieldAction:(id)arg1 ;
-(char)_canEnterQuickWebsiteSearchMode;
-(void)_enterQuickWebsiteSearchMode;
-(char)_shouldExitQuickWebsiteSearchMode;
-(void)_exitQuickWebsiteSearchMode;
-(char)_appendSlashAndCollapseSelectionInUnifiedField;
-(void)stopOrReloadOrShowReaderAppearanceCustomizationPopover:(id)arg1 ;
-(void)showCertificateSheet:(id)arg1 ;
-(void)_unmuteAllTabs:(id)arg1 ;
-(void)_muteAllTabs:(id)arg1 ;
-(void)_searchButtonWasClicked;
-(id)_backListMenuForButton:(id)arg1 ;
-(id)_forwardListMenuForButton:(id)arg1 ;
-(char)_isShowingWebExtensionOverridePage;
-(char)_shouldBeTreatedAsStartPage;
-(void)_updateWindowWithNewSelectedTabInfoUpdatingFluidProgressController:(char)arg1 ;
-(char)_shouldSetUnifiedFieldAsFirstResponderImmediatelyAfterCurrentTabWasSelected;
-(char)_makeCurrentContentViewOfSelectedTabFirstResponderIfNecessary;
-(void)_updateFunctionBarTabThumbnailsSoon;
-(void)_updateNotSecureWarningUI;
-(char)_shouldForceTitlebarBlurringDuringReaderAnimation:(id)arg1 ;
-(void)setForceEnableTitlebarBlurFilters:(char)arg1 ;
-(void)_clearStatus;
-(char)_shouldUpdateFluidProgressForBrowserViewController:(id)arg1 ;
-(void)updateFluidProgressForBrowserViewController:(id)arg1 ;
-(void)finishFluidProgressForBrowserViewController:(id)arg1 ;
-(void)updateFirstResponderOnPageLoadStart;
-(UnifiedFieldCompletionController*)unifiedFieldCompletionController;
-(void)_updateTranslationUI;
-(void)_updateSecurityUI;
-(void)pageTypeDidChangeForBrowserViewController:(id)arg1 ;
-(void)updateSidebarButtonSoon;
-(id)_unifiedFieldURL;
-(void)_updateUnifiedFieldAuthenticationTextSoon;
-(void)updateStatusMessage;
-(void)performBlockWhileFocusingUnifiedFieldProgrammatically:(/*^block*/id)arg1 ;
-(void)_setTitlebarBlurFiltersDisabled:(char)arg1 ;
-(char)_currentPageIsSecureEnoughToShowLock;
-(void)_stopUpdateFirstResponderAfterTabSwitchTimer;
-(void)_extensionsWereInstalled:(id)arg1 ;
-(void)_translationAvailabilityDidChange:(id)arg1 ;
-(void)_translationStateDidChange:(id)arg1 ;
-(id)initAsPopupWindow:(char)arg1 ;
-(void)updateOneStepBookmarkingButton;
-(void)_invalidateCoalescedUpdatesTimer;
-(void)_coalescedUpdateTimerFired:(id)arg1 ;
-(void)_performCoalescedUpdates;
-(void)_performCoalescedUpdateSoon:(unsigned long long)arg1 ;
-(void)_performPostponedUpdatesToNotSecureWarningStatusDueToTabSwitch;
-(void)_setUnifiedFieldIcon:(id)arg1 ;
-(RefPtr<Safari::CompletionListItem, WTF::RawPtrTraits<Safari::CompletionListItem>, WTF::DefaultRefDerefTraits<Safari::CompletionListItem>>*)_selectedParsecCompletionListItem;
-(id)_completionIconForParsecCompletionListItem:(CompletionListItem*)arg1 ;
-(id)_urlStringForUnifiedFieldIcon;
-(void)_updateUIAfterProgrammaticUnifiedFieldTextChange;
-(char)_stopReloadButtonShouldBeVisible;
-(void)_updateShareButtonNow;
-(void)_updateOneStepBookmarkingButtonNow;
-(void)_updateFunctionBarTabThumbnailsNow;
-(void)_updateUnifiedFieldAuthenticationTextNow;
-(void)_updateAudioIndicatorInUnifiedField;
-(id)_tabContentViewOfCurrentTab;
-(void)_showTitlebarViewController:(id)arg1 ;
-(void)_hideTitlebarViewController:(id)arg1 ;
-(char)_shouldShowTabBarIgnoringVisualTabPicker;
-(unsigned long long)_numberOfTabsForDeterminingTabBarVisibility;
-(void)_toggleTitlebarViewController:(id)arg1 withAnimation:(char)arg2 isShowing:(char)arg3 ;
-(void)_toolbarsVisibilityDidChange;
-(char)_isClosingLastUnpinnedTab:(id)arg1 ;
-(char)_canCloseLastUnpinnedTabWithoutClosingWindow:(id)arg1 ;
-(void)_willInsertTab;
-(void)_didInsertTab;
-(int)_newTabTypeRespectingVisualTabPickerVisibility:(int)arg1 ;
-(void)_insertTab:(id)arg1 atIndex:(unsigned long long)arg2 andSelect:(char)arg3 ;
-(void)_didSelectNewTab:(id)arg1 withLastSelectedTab:(id)arg2 ;
-(void)_updateSelectedFunctionBarTabSoon;
-(void)_postponeUpdatesToNotSecureWarningStatusDueToTabSwitch;
-(void)_willUnselectTab:(id)arg1 ;
-(char)_shouldHideTabBarAfterClosingBrowserTabViewItem:(id)arg1 ;
-(void)_removeAllTabCloseUndoActions;
-(void)_unsuspendTab:(id)arg1 ;
-(void)_suspendAndCloseTab:(id)arg1 ;
-(void)_releaseTabsForGoingBack;
-(char)_displayCloseWindowConfirmSheetForPIPIfNecessary;
-(void)_closeWindowAfterChecks;
-(void)_closeMultipleTabsAfterConfirmingClosingVideoWithPIPIfNecessary:(id)arg1 ;
-(void)_closeMultipleTabsWithoutConfirming:(id)arg1 ;
-(long long)_unifiedFieldSecurityLockState;
-(id)_defaultSearchProviderDisplayName;
-(id)_unifiedFieldPlaceholderString;
-(void)_abortUnifiedFieldCompletion;
-(void)_updateUnifiedFieldTextNowIfDirty;
-(char)_unifiedFieldIsReflectingURL:(id)arg1 ;
-(void)_completionListSelectionDidChange:(id)arg1 ;
-(void)_completionListHintDidChange:(id)arg1 ;
-(void)_unifiedFieldCompletionListDidHide:(id)arg1 ;
-(void)_unifiedFieldCompletionListDidShow:(id)arg1 ;
-(id)backgroundLoadForCurrentBrowserViewController;
-(void)setPopupWindowUnifiedFieldVisible:(char)arg1 ;
-(void)_stopPostponingCoalescedUnifiedFieldUpdates;
-(void)_toggleTitlebarViewController:(id)arg1 toBeVisible:(char)arg2 ;
-(void)_setUpOverlayStatusWindowController;
-(char)isBackgroundLoadBrowserViewController:(id)arg1 ;
-(id)_reflectedURLForPossibleURL:(id)arg1 ifPossibleURLMatchesUserTypedString:(id)arg2 ;
-(id)_tryMultipleURLs:(unique_ptr<WTF::Deque<NSURL *, 0>, std::__1::default_delete<WTF::Deque<NSURL *, 0>>>*)arg1 windowPolicy:(long long)arg2 httpReferrer:(id)arg3 ;
-(long long)_readerButtonState;
-(id)_screenForWindow;
-(CGPoint)_downloadHopStartPoint;
-(CGPoint)_downloadHopEndPoint;
-(void)_setShouldDisableFrameSizeUpdates:(char)arg1 ;
-(void)_setShouldDeferWKViewInWindowChanges:(char)arg1 ;
-(void)_prepareBarsToEnterFullScreen;
-(void)_prepareBarsToExitFullScreen;
-(void)_finishExitingFullScreen;
-(void)_updateWKViewLayoutMode;
-(void)_unlockMenuBarIfNeeded;
-(char)_automaticallyHidesToolbar;
-(char)_visualTabPickerShouldAnimateSidebar;
-(void)_visualTabPickerInsertToolbarBackground;
-(void)_visualTabPickerFadeOutToolbarBackground;
-(void)_createTabBarWhenHidingVisualTabPickerIfNeeded;
-(void)_showTabBarAndNewTabButtonWhenHidingVisualTabPickerIfNeeded;
-(void)_showTabSwitcherAndSidebarWhenHidingVisualTabPickerIfNeeded;
-(CGRect)visualTabPickerRootViewFrame;
-(void)_takeOffscreenToolbarSnapshotForVisualTabPickerAnimation;
-(void)_loadTabURL:(id)arg1 withWindowPolicy:(long long)arg2 ;
-(void)_updateVisualTabPickerTabBarSnapshot;
-(char)_isToolbarBlurringEnabledInFullScreen;
-(void)_keyWindowStateDidChange:(id)arg1 ;
-(double)_topContentInsetForTransitionFromFullScreen;
-(void)_notifyVoiceOverIfNeededThatMediaStateChangedInTabViewItem:(id)arg1 notificationPayload:(id)arg2 ;
-(id)_tabSwitchingMenuItemsForBrowserViewControllers:(id)arg1 ;
-(void)_unmuteAllTabsExcludingTabWithBrowserViewController:(id)arg1 ;
-(char)_currentTabIsOnlyTabPlayingAudio;
-(id)_menuAppendingTabSwitchingMenuItems:(id)arg1 withTabSectionTitle:(id)arg2 toMenu:(id)arg3 ;
-(id)_mediaCaptureIndicatorPauseCaptureTitleMenuItemTitle;
-(void)_setShouldAlwaysUseMediaCapturePreference:(id)arg1 domain:(id)arg2 shouldUse:(char)arg3 ;
-(char)currentTabHasMediaCaptureDevice;
-(char)currentTabHasDisplayCaptureDevice;
-(void)_audioMenuTabMenuItemClicked:(id)arg1 ;
-(char)isCurrentTabPlayingAudio;
-(void)browserWindowTabViewController:(id)arg1 willSelectTabViewItem:(id)arg2 ;
-(void)browserWindowTabViewController:(id)arg1 didSelectTabViewItem:(id)arg2 ;
-(id)parentWindowForOverlayStatusWindowController:(id)arg1 ;
-(id)contentViewForOverlayStatusWindowController:(id)arg1 ;
-(char)canShowStatusMessageInOverlayStatusWindow:(id)arg1 ;
-(void)tabBarViewDidZoomIn:(id)arg1 ;
-(void)createNewTabInTabBarView:(id)arg1 ;
-(void)tabBarView:(id)arg1 selectTabBarViewItem:(id)arg2 ;
-(id)selectedTabBarViewItemAfterClosingCurrentTabInTabBarView:(id)arg1 ;
-(void)tabBarView:(id)arg1 closeTabBarViewItem:(id)arg2 ;
-(void)tabBarView:(id)arg1 didMoveTabBarViewItem:(id)arg2 toIndex:(unsigned long long)arg3 isChangingPinnedness:(char)arg4 ;
-(id)tabBarView:(id)arg1 menuForTabBarViewItem:(id)arg2 event:(id)arg3 ;
-(unsigned long long)tabBarView:(id)arg1 validateTabDrop:(id)arg2 ;
-(char)tabBarView:(id)arg1 acceptTabDrop:(id)arg2 index:(unsigned long long)arg3 ;
-(id)tabBarView:(id)arg1 detachedWindowImageForDraggedTabBarViewItem:(id)arg2 ;
-(id)tabBarView:(id)arg1 destinationWindowForDetachedTabBarViewItem:(id)arg2 ;
-(void)tabBarView:(id)arg1 didFinishTransitionAnimationForWindow:(id)arg2 ;
-(unsigned long long)tabBarView:(id)arg1 validateDrop:(id)arg2 ;
-(char)tabBarView:(id)arg1 acceptDrop:(id)arg2 index:(unsigned long long)arg3 ;
-(char)shouldAnimateTabSelectionInTabBarView:(id)arg1 ;
-(id)tabBarView:(id)arg1 tabPreviewDataSourceForTabBarViewItem:(id)arg2 ;
-(char)canShowTabHoverPreviewForTabBarView:(id)arg1 ;
-(void)tabBarView:(id)arg1 didBeginDraggingTab:(id)arg2 ;
-(char)tabBarView:(id)arg1 canDragToPinTab:(id)arg2 ;
-(char)tabBarView:(id)arg1 canDetachTabBarViewItem:(id)arg2 ;
-(id)placeholderTextInEmptyUnpinnedRegionOfTabBarView:(id)arg1 ;
-(char)tabBarView:(id)arg1 canCloseTabBarViewItem:(id)arg2 ;
-(char)shouldAllowUserCustomizationForToolbarController:(id)arg1 ;
-(id)backMenuForBackForwardSegmentedControlInToolbarController:(id)arg1 ;
-(id)forwardMenuForBackForwardSegmentedControlInToolbarController:(id)arg1 ;
-(void)mouseDidExitVisualTabPickerButtonInToolbarController:(id)arg1 ;
-(void)mouseDownInVisualTabPickerButtonInToolbarController:(id)arg1 ;
-(id)toolbarItemTargetForToolbarController:(id)arg1 ;
-(void)unifiedFieldSecurityUIManagerDidEndShowingCertificateSheet:(id)arg1 ;
-(id)browserTabViewItemsForVisualTabPickerController:(id)arg1 ;
-(void)visualTabPickerController:(id)arg1 openCloudTab:(id)arg2 ;
-(void)showFavoritesPickerFromVisibilityManager:(id)arg1 ;
-(void)dismissFavoritesPickerFromVisibilityManager:(id)arg1 ;
-(char)visibilityManagerIsWindowCurrentlySwitchingTabs:(id)arg1 ;
-(char)visibilityManagerWantsFavoritesInCompletionList:(id)arg1 ;
-(char)visibilityManagerIsCurrentWindowMain:(id)arg1 ;
-(char)visibilityManager:(id)arg1 isBrowserContentViewControllerCurrentlyActive:(id)arg2 ;
-(char)visibilityManagerIsUnifiedFieldBeingEdited:(id)arg1 ;
-(id)visibilityManagerInputContextForKeyboardMethodsBarVisibility:(id)arg1 ;
-(unsigned long long)numberOfTabsForFunctionBarProvider:(id)arg1 ;
-(id)functionBarProvider:(id)arg1 thumbnailProviderForTabAtIndex:(unsigned long long)arg2 ;
-(id)functionBarProvider:(id)arg1 accessibilityDescriptionForTabAtIndex:(unsigned long long)arg2 ;
-(char)canFocusUnifiedFieldFromFunctionBarProvider:(id)arg1 ;
-(char)canOpenNewTabFromFunctionBarProvider:(id)arg1 ;
-(char)canGoBackFromFunctionBarProvider:(id)arg1 ;
-(char)canGoForwardFromFunctionBarProvider:(id)arg1 ;
-(char)canAddBookmarkFromFunctionBarProvider:(id)arg1 ;
-(char)canShareFromFunctionBarProvider:(id)arg1 ;
-(char)canToggleReaderFromFunctionBarProvider:(id)arg1 ;
-(char)canToggleVisualTabPickerFromFunctionBarProvider:(id)arg1 ;
-(char)canGoHomeFromFunctionBarProvider:(id)arg1 ;
-(char)canToggleHistoryFromFunctionBarProvider:(id)arg1 ;
-(char)canToggleSidebarFromFunctionBarProvider:(id)arg1 ;
-(char)canToggleFavoritesBarFromFunctionBarProvider:(id)arg1 ;
-(char)canAutoFillFromFunctionBarProvider:(id)arg1 ;
-(char)canToggleWebInspectorFromFunctionBarProvider:(id)arg1 ;
-(long long)readerButtonStateForFunctionBarProvider:(id)arg1 ;
-(void)willChangeFunctionBarItemsForProvider:(id)arg1 ;
-(void)didChangeFunctionBarItemsForProvider:(id)arg1 ;
-(void)didBeginScrubbingTabsInFunctionBarWithProvider:(id)arg1 ;
-(void)didEndScrubbingTabsInFunctionBarWithProvider:(id)arg1 ;
-(void)functionBarProvider:(id)arg1 didSelectTabAtIndex:(unsigned long long)arg2 ;
-(void)openNewTabFromFunctionBarProvider:(id)arg1 ;
-(void)focusUnifiedFieldFromFunctionBarProvider:(id)arg1 ;
-(void)goBackFromFunctionBarProvider:(id)arg1 ;
-(void)goForwardFromFunctionBarProvider:(id)arg1 ;
-(void)addBookmarkFromFunctionBarProvider:(id)arg1 ;
-(void)shareFromFunctionBarProvider:(id)arg1 ;
-(void)toggleReaderFromFunctionBarProvider:(id)arg1 ;
-(void)toggleVisualTabPickerFromFunctionBarProvider:(id)arg1 ;
-(void)goHomeFromFunctionBarProvider:(id)arg1 ;
-(void)toggleHistoryFromFunctionBarProvider:(id)arg1 ;
-(void)toggleSidebarFromFunctionBarProvider:(id)arg1 ;
-(void)toggleFavoritesBarFromFunctionBarProvider:(id)arg1 ;
-(void)toggleWebInspectorFromFunctionBarProvider:(id)arg1 ;
-(void)performAutoFillFromFunctionBarProvider:(id)arg1 ;
-(void)windowFunctionBarProvider:(id)arg1 didSelectFavorite:(id)arg2 ;
-(void)didHideFavoritesPickerForFunctionBarProvider:(id)arg1 ;
-(id)mediaPlaybackControlsViewForFunctionBarProvider:(id)arg1 ;
-(char)isRocketEffectTestEnabled;
-(char)window:(id)arg1 performKeyEquivalent:(id)arg2 ;
-(char)window:(id)arg1 willHandleKeyEvent:(id)arg2 ;
-(char)window:(id)arg1 willHandleMouseDownEvent:(id)arg2 ;
-(char)window:(id)arg1 willHandleMouseDraggedEvent:(id)arg2 ;
-(id)browserWindowTitleBarURL:(id)arg1 ;
-(void)browserWindow:(id)arg1 shouldGoToURL:(id)arg2 ;
-(id)imageHopParentWindow;
-(void)imageHopAnimationDidFinish:(id)arg1 ;
-(void)addMediaPlaybackControlsView:(id)arg1 forWKView:(id)arg2 ;
-(void)removeMediaPlaybackControlsViewForWKView:(id)arg1 ;
-(void)unifiedFieldDidMoveToWindow:(id)arg1 ;
-(void)unifiedFieldBecameFirstResponder:(id)arg1 ;
-(void)unifiedFieldResignedFirstResponder:(id)arg1 ;
-(void)unifiedFieldAutocompleteSelectionDidChange:(id)arg1 ;
-(void)unifiedFieldMarkedTextDidChange:(id)arg1 ;
-(char)unifiedFieldShouldSelectAllAfterMouseDown:(id)arg1 ;
-(void)unifiedFieldWasClicked:(id)arg1 ;
-(void)unifiedFieldPerformRightmostButtonAction:(id)arg1 ;
-(void)unifiedFieldPerformSecurityPillAction:(id)arg1 ;
-(void)unifiedFieldPerformAudioIndicatorAction:(id)arg1 ;
-(id)unifiedFieldAudioIndicatorMenu:(id)arg1 ;
-(id)unifiedFieldReaderMenu:(id)arg1 ;
-(id)unifiedFieldReloadMenu:(id)arg1 ;
-(id)unifiedFieldTranslationMenu:(id)arg1 ;
-(void)unifiedFieldSearchButtonWasClicked:(id)arg1 ;
-(id)bookmarkToDragFromSiteIconInUnifiedField:(id)arg1 ;
-(void)unifiedFieldURLDropped:(id)arg1 ;
-(void)unifiedFieldDidChangePageTitle:(id)arg1 ;
-(char)unifiedFieldCanShowPerSitePreferences:(id)arg1 ;
-(void)unifiedFieldPerSitePreferencesContextMenuItemWasSelected:(id)arg1 ;
-(id)unifiedFieldFallbackURLForAboutBlank:(id)arg1 ;
-(void)fluidProgressRocketAnimationDidComplete;
-(id)currentFluidProgressStateSource;
-(CGRect)webExtensionWindowGeometry;
-(NSString *)webExtensionWindowType;
-(NSString *)webExtensionWindowState;
-(NSArray *)webExtensionTabs;
-(id<WBSWebExtensionTab>)activeWebExtensionTab;
-(void)showBookmarksWithExactSearchString:(id)arg1 ;
-(void)showBookmarksAndRevealBookmark:(id)arg1 ;
-(id)createNewTabForWebExtensionsAtIndex:(unsigned long long)arg1 withURL:(id)arg2 shouldBeSelected:(char)arg3 ;
-(void)applyNewTabBehaviorToCurrentTab;
-(void)toggleMaximizeWindowIfNeeded:(char)arg1 ;
-(void)userInteractedWithPageDuringSwipeGesture;
-(void)didReplaceBrowserWKViewInTab:(id)arg1 ;
-(void)goToActivatedCompletionListURL:(id)arg1 referrer:(id)arg2 searchState:(id)arg3 isPunchoutURL:(char)arg4 ;
-(void)goToUnifiedFieldURL:(id)arg1 ;
-(void)attemptToShowFavoritesViewIfUnifiedFieldIsEmpty;
-(void)reloadIgnoringUnifiedField:(id)arg1 ;
-(void)insertTabsWithStates:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)syncPinnedTabs;
-(void)showFavoritesBarForReadingListAnimation:(id)arg1 ;
-(void)hideFavoritesBarAfterReadingListAnimation:(id)arg1 ;
-(void)showHistoryInBookmarksView:(id)arg1 ;
-(void)currentWKViewDidSwipeSnapshotToRect:(CGRect)arg1 ;
-(void)startSiteIconHopAnimationToDestination:(int)arg1 ;
-(NSString *)unifiedFieldTextForRestoring;
-(void)restoreUnifiedFieldText:(id)arg1 ;
-(void)downloadFailedToHopToDockFromPoint:(CGPoint)arg1 ;
-(char)shouldPreloadTopHit;
-(void)startUniqueBackgroundLoadWithURL:(id)arg1 identifier:(id)arg2 ;
-(void)tryToCloseOtherTabs:(id)arg1 ;
-(void)restoreTabStates:(id)arg1 selectingTabWithIndexAfterPinnedTabsAreRestored:(unsigned long long)arg2 ;
-(void)didRestorePinnedTabsWithRestorationMode:(unsigned long long)arg1 ;
-(void)_moveTabViewItem:(id)arg1 toIndex:(unsigned long long)arg2 ;
-(void)preserveTabToBeMovedToAnotherWindowLater:(id)arg1 ;
-(void)closeAllTabPreviews;
-(void)makeUnifiedFieldOrWindowFirstResponder;
-(void)updateFirstResponderOnTransitionToContinuousReadingViewPage;
-(void)userDidScrollDownInBrowserViewController:(id)arg1 ;
-(id)extensionEventTargetForBackgroundLoad:(id)arg1 ;
-(void)updateAllTabTitlesSoon;
-(ReadingListContentProvider *)readingListContentProvider;
-(char)_shouldHideTabBarForTabSwitcher:(id)arg1 ;
-(void)closeTabWithoutConfirmingWithUUID:(id)arg1 ;
-(void)closeTabGroupWhileRedoing:(id)arg1 ;
-(void)undoCloseTab:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)_lockMenuBarIfNeeded;
-(id)_setAutoresizingMasksForOrderedViews:(id)arg1 toResizeOnly:(id)arg2 ;
-(NSView *)sidebarContainerView;
-(void)setSidebarWidth:(double)arg1 ;
-(char)_hasAttachedSheet;
-(void)performSearchWithQuery:(id)arg1 usingQuickWebsiteSearchProvider:(id)arg2 ;
-(void)toggleResponsiveDesignMode:(id)arg1 ;
-(char)validate_toggleResponsiveDesignMode:(id)arg1 ;
-(void)updateThumbnailSnapshotForTabContentViewController:(id)arg1 ;
-(void)cancelThumbnailSnapshotUpdateForTabContentViewController:(id)arg1 ;
-(void)tabContentViewControllerWillChangeCurrentViewController:(id)arg1 ;
-(void)tabContentViewControllerDidChangeCurrentViewController:(id)arg1 ;
-(char)currentTabHasActiveMediaCaptureDevice;
-(char)currentTabHasVideoCaptureDevice;
-(char)currentTabHasActiveDisplayCaptureDevice;
-(NSArray *)tabInfosForUnifiedFieldCompletion;
-(WBSBrowserTabCompletionInfo *)selectedTabInfoForUnifiedFieldCompletion;
-(void)switchToTabWithUUID:(id)arg1 ;
-(void)webExtensionContextMenuItemActivated:(id)arg1 ;
-(CustomViewSnapshotCache *)customViewSnapshotCache;
-(TabBarView *)tabBarView;
-(void)setTabBarView:(TabBarView *)arg1 ;
-(char)areTabsBeingRearranged;
-(char)shouldUpdateFocusOnBackgroundLoadCommit;
-(char)isSwitchingTabs;
-(char)forceEnableTitlebarBlurFilters;
-(char)blocksAutomaticUpdatesOfUnifiedField;
-(void)setBlocksAutomaticUpdatesOfUnifiedField:(char)arg1 ;
-(char)acceptsGenericIcon;
-(char)disableTopContentInsetUpdateForSelectedTab;
-(CGPoint)lastMouseClickPosition;
-(void)setLastMouseClickPosition:(CGPoint)arg1 ;
-(NSAlert *)alertWithButtonsEnabledOnlyWhenKeyWindow;
-(AutomaticReadingListContentProvider *)automaticReadingListContentProvider;
-(NSView *)firstResponderViewBeforeFullScreenTransition;
-(void)setReadingListContentProvider:(ReadingListContentProvider *)arg1 ;
-(NSView *)webContentSnapshotForSidebarAnimation;
-(void)setWebContentSnapshotForSidebarAnimation:(NSView *)arg1 ;
-(NSView *)backgroundSidebarAnimationView;
-(void)setBackgroundSidebarAnimationView:(NSView *)arg1 ;
-(NSView *)continuousBannerSidebarAnimationView;
-(void)setContinuousBannerSidebarAnimationView:(NSView *)arg1 ;
-(id)completionHandlerForLastSheetEndingOnWindow;
@end

