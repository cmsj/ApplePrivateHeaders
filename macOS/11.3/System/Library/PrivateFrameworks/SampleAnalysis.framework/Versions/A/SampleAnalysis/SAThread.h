/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:17 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SampleAnalysis.framework/Versions/A/SampleAnalysis
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SampleAnalysis/SampleAnalysis-Structs.h>
#import <libobjc.A.dylib/SASerializable.h>

@class NSMutableArray, SATimestamp, SAFrame, NSString, NSArray;

@interface SAThread : NSObject <SASerializable> {

	NSMutableArray* _threadStates;
	char _isGlobalForcedIdle;
	char _isMainThread;
	unsigned long long _threadId;
	SATimestamp* _creationTimestamp;
	SATimestamp* _exitTimestamp;
	SAFrame* _resampledLeafUserFrame;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) unsigned long long threadId;                   //@synthesize threadId=_threadId - In the implementation block
@property (readonly) SATimestamp * creationTimestamp; 
@property (readonly) SATimestamp * exitTimestamp; 
@property (readonly) char isGlobalForcedIdle; 
@property (readonly) char isProcessorIdleThread; 
@property (readonly) char isMainThread; 
@property (readonly) NSArray * threadStates;                        //@synthesize threadStates=_threadStates - In the implementation block
+(id)classDictionaryKey;
+(id)newInstanceWithoutReferencesFromSerializedBuffer:(const void*)arg1 bufferLength:(unsigned long long)arg2 ;
-(unsigned long long)sizeInBytesForSerializedVersion;
-(void)addSelfToSerializationDictionary:(id)arg1 ;
-(char)addSelfToBuffer:(SCD_Struct_SA14*)arg1 bufferLength:(unsigned long long)arg2 withCompletedSerializationDictionary:(id)arg3 ;
-(void)populateReferencesUsingBuffer:(const void*)arg1 bufferLength:(unsigned long long)arg2 andDeserializationDictionary:(id)arg3 andDataBufferDictionary:(id)arg4 ;
-(NSArray *)threadStates;
-(SATimestamp *)exitTimestamp;
-(void)enumerateThreadStatesBetweenStartTime:(id)arg1 endTime:(id)arg2 reverseOrder:(char)arg3 withSampleIndex:(char)arg4 block:(/*^block*/id)arg5 ;
-(unsigned long long)indexOfFirstThreadStateOnOrAfterTime:(id)arg1 withSampleIndex:(char)arg2 ;
-(unsigned long long)indexOfLastThreadStateOnOrBeforeTime:(id)arg1 withSampleIndex:(char)arg2 ;
-(id)firstThreadStateOnOrAfterTime:(id)arg1 withSampleIndex:(char)arg2 ;
-(id)lastThreadStateOnOrBeforeTime:(id)arg1 withSampleIndex:(char)arg2 ;
-(unsigned long long)sampleCountInTimestampRangeStart:(id)arg1 end:(id)arg2 ;
-(id)patchedStackForTruncatedStack:(id)arg1 ;
-(char)isProcessorIdleThread;
-(char)isGlobalForcedIdle;
-(NSString *)debugDescription;
-(char)isMainThread;
-(SATimestamp *)creationTimestamp;
-(unsigned long long)threadId;
-(id)initWithId:(unsigned long long)arg1 ;
@end

