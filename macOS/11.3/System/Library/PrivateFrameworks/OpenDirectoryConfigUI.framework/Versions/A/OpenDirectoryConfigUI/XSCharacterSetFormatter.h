/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:50 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/OpenDirectoryConfigUI.framework/Versions/A/OpenDirectoryConfigUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <OpenDirectoryConfigUI/OpenDirectoryConfigUI-Structs.h>
#import <Foundation/NSFormatter.h>

@class NSCharacterSet, NSString;

@interface XSCharacterSetFormatter : NSFormatter {

	NSCharacterSet* _validCharacters;
	unsigned long long _maxLength;
	unsigned long long _minLength;
	char _lengthIsLimitedByBytes;
	NSString* _charactersInCustomSet;
	char _allowsNilValue;
	char _allowsEmptyString;

}

@property (copy) NSString * allowedCharactersString; 
@property (copy) NSCharacterSet * allowedCharacters;              //@synthesize validCharacters=_validCharacters - In the implementation block
@property (assign) unsigned long long maximumLength;              //@synthesize maxLength=_maxLength - In the implementation block
@property (assign) unsigned long long minimumLength;              //@synthesize minLength=_minLength - In the implementation block
@property (assign) char lengthIsLimitedByBytes;                   //@synthesize lengthIsLimitedByBytes=_lengthIsLimitedByBytes - In the implementation block
@property (assign) char allowsNilValue;                           //@synthesize allowsNilValue=_allowsNilValue - In the implementation block
@property (assign) char allowsEmptyString;                        //@synthesize allowsEmptyString=_allowsEmptyString - In the implementation block
+(id)formatter;
+(id)formatterWithAllowedCharacters:(id)arg1 maximumLength:(unsigned long long)arg2 ;
+(id)formatterWithAllowedCharacters:(id)arg1 ;
+(id)formatterWithAllowedCharacters:(id)arg1 minimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)stringForObjectValue:(id)arg1 ;
-(char)getObjectValue:(id*)arg1 forString:(id)arg2 errorDescription:(id*)arg3 ;
-(char)isPartialStringValid:(id)arg1 newEditingString:(id*)arg2 errorDescription:(id*)arg3 ;
-(void)setMaximumLength:(unsigned long long)arg1 ;
-(void)setAllowedCharacters:(NSCharacterSet *)arg1 ;
-(NSCharacterSet *)allowedCharacters;
-(unsigned long long)maximumLength;
-(id)initWithAllowedCharacters:(id)arg1 ;
-(id)initWithAllowedCharacters:(id)arg1 maximumLength:(unsigned long long)arg2 ;
-(id)initWithAllowedCharacters:(id)arg1 minimumLength:(unsigned long long)arg2 maximumLength:(unsigned long long)arg3 ;
-(void)setMinimumLength:(unsigned long long)arg1 ;
-(void)setAllowsEmptyString:(char)arg1 ;
-(void)setLengthIsLimitedByBytes:(char)arg1 ;
-(void)setCharactersInCustomSet:(id)arg1 ;
-(unsigned long long)minimumLength;
-(char)allowsEmptyString;
-(char)lengthIsLimitedByBytes;
-(id)charactersInCustomSet;
-(char)_stringIsValid:(id)arg1 ;
-(char)allowsNilValue;
-(void)setAllowsNilValue:(char)arg1 ;
-(NSString *)allowedCharactersString;
-(void)setAllowedCharactersString:(NSString *)arg1 ;
@end

