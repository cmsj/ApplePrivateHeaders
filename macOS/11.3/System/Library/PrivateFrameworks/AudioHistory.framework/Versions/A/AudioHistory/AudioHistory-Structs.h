/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:23 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioHistory.framework/Versions/A/AudioHistory
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct shared_ptr<AudioHistory::ObjCObjectDelegateAdapter> {
	ObjCObjectDelegateAdapter __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<AudioHistory::ObjCObjectDelegateAdapter>;

typedef struct shared_ptr<AudioHistory::Object> {
	Object __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<AudioHistory::Object>;

typedef struct shared_ptr<AudioHistory::API> {
	API __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<AudioHistory::API>;

typedef struct shared_ptr<std::__1::recursive_mutex> {
	const ecursive_mutex __ptr_;
	__shared_weak_count __cntrl_;
} shared_ptr<std::__1::recursive_mutex>;

typedef struct shared_ptr_mutex<std::__1::recursive_mutex> {
	shared_ptr<std::__1::recursive_mutex> mMutex;
} shared_ptr_mutex<std::__1::recursive_mutex>;

typedef struct synchronized<std::__1::shared_ptr<AudioHistory::API>, caulk::shared_ptr_mutex<std::__1::recursive_mutex>, caulk::empty_atomic_interface<std::__1::shared_ptr<AudioHistory::API>>> {
	shared_ptr_mutex<std::__1::recursive_mutex> mMutex;
	shared_ptr<AudioHistory::API> mObject;
} synchronized<std::__1::shared_ptr<AudioHistory::API>, caulk::shared_ptr_mutex<std::__1::recursive_mutex>, caulk::empty_atomic_interface<std::__1::shared_ptr<AudioHistory::API>>>;

typedef struct optional<caulk::synchronized<std::__1::shared_ptr<AudioHistory::API>, caulk::shared_ptr_mutex<std::__1::recursive_mutex>, caulk::empty_atomic_interface<std::__1::shared_ptr<AudioHistory::API>>>> {
	/*function pointer*/void* ;
	char __null_state_;
	synchronized<std::__1::shared_ptr<AudioHistory::API>, caulk::shared_ptr_mutex<std::__1::recursive_mutex>, caulk::empty_atomic_interface<std::__1::shared_ptr<AudioHistory::API>>>) __val_;
	BOOL __engaged_;
} optional<caulk::synchronized<std::__1::shared_ptr<AudioHistory::API>, caulk::shared_ptr_mutex<std::__1::recursive_mutex>, caulk::empty_atomic_interface<std::__1::shared_ptr<AudioHistory::API>>>>;

