/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:34 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AuthKitUI.framework/Versions/A/AuthKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AuthKitUI/AuthKitUI-Structs.h>
#import <libobjc.A.dylib/WebFrameLoadDelegate.h>
#import <libobjc.A.dylib/WebResourceLoadDelegate.h>
#import <libobjc.A.dylib/WebUIDelegate.h>

@protocol AKWebKitControllerDelegate;
@class WebPreferences, WebView, NSString;

@interface AKWebKitController : NSObject <WebFrameLoadDelegate, WebResourceLoadDelegate, WebUIDelegate> {

	WebPreferences* _webPreferences;
	WebView* _webView;
	struct {
		unsigned webViewSetFrame : 1;
		unsigned delegateConfigureForFrame : 1;
		unsigned delegateDidCreateJavaScriptContextFrame : 1;
		unsigned delegateDidCancel : 1;
		unsigned delegateDidSucceed : 1;
		unsigned delegateDidFailLoading : 1;
		unsigned delegateDidFinishLoading : 1;
		unsigned delegateDidReceiveResponse : 1;
		unsigned delegateSignRequest : 1;
		unsigned padding : 1;
	}  _delegateFlags;
	id<AKWebKitControllerDelegate> _delegate;

}

@property (nonatomic,retain) WebPreferences * webPreferences;                             //@synthesize webPreferences=_webPreferences - In the implementation block
@property (nonatomic,retain) WebView * webView;                                           //@synthesize webView=_webView - In the implementation block
@property (assign,nonatomic,__weak) id<AKWebKitControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id<AKWebKitControllerDelegate>)delegate;
-(void)setDelegate:(id<AKWebKitControllerDelegate>)arg1 ;
-(void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3 ;
-(id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5 ;
-(WebView *)webView;
-(void)reload;
-(void)setWebView:(WebView *)arg1 ;
-(id)initInView:(id)arg1 ;
-(void)loadURLRequest:(id)arg1 ;
-(id)webViewURL;
-(void)loadHTMLString:(id)arg1 withParentURL:(id)arg2 ;
-(void)loadHTMLString:(id)arg1 ;
-(void)setWebPreferences:(WebPreferences *)arg1 ;
-(WebPreferences *)webPreferences;
-(void)webView:(id)arg1 didCreateJavaScriptContext:(id)arg2 forFrame:(id)arg3 ;
-(void)webView:(id)arg1 resource:(id)arg2 didReceiveResponse:(id)arg3 fromDataSource:(id)arg4 ;
-(void)webView:(id)arg1 setFrame:(CGRect)arg2 ;
-(id)webView:(id)arg1 contextMenuItemsForElement:(id)arg2 defaultMenuItems:(id)arg3 ;
-(unsigned long long)webView:(id)arg1 dragDestinationActionMaskForDraggingInfo:(id)arg2 ;
@end

