/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:34 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AuthKitUI.framework/Versions/A/AuthKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AppKit/NSViewController.h>

@protocol AKiCDPValidationDelegate, MBSecondPartyHost;
@class AKiCDPEnrollmentDeviceListViewController, AKiCDPEnrollmentDevicePasscodeViewController, AKiCDPWaitForApprovalViewController, OBTemplateView, AKiCDPValidationDevice, NSArray;

@interface AKiCDPDeviceValidationFlowViewController : NSViewController {

	id<AKiCDPValidationDelegate> delegate;
	unsigned long long state;
	AKiCDPEnrollmentDeviceListViewController* deviceListVC;
	AKiCDPEnrollmentDevicePasscodeViewController* passcodeVC;
	AKiCDPWaitForApprovalViewController* approvalVC;
	OBTemplateView* _templateView;
	AKiCDPValidationDevice* _selectedDevice;
	id<MBSecondPartyHost> _assistant;

}

@property (assign) unsigned long long state; 
@property (retain) AKiCDPEnrollmentDeviceListViewController * deviceListVC; 
@property (retain) AKiCDPEnrollmentDevicePasscodeViewController * passcodeVC; 
@property (retain) AKiCDPWaitForApprovalViewController * approvalVC; 
@property (nonatomic,retain) OBTemplateView * templateView;                                //@synthesize templateView=_templateView - In the implementation block
@property (readonly) NSArray * devices; 
@property (retain) AKiCDPValidationDevice * selectedDevice;                                //@synthesize selectedDevice=_selectedDevice - In the implementation block
@property (assign) id<AKiCDPValidationDelegate> delegate; 
@property (assign) id<MBSecondPartyHost> assistant;                                        //@synthesize assistant=_assistant - In the implementation block
-(id<AKiCDPValidationDelegate>)delegate;
-(void)setDelegate:(id<AKiCDPValidationDelegate>)arg1 ;
-(unsigned long long)state;
-(void)setState:(unsigned long long)arg1 ;
-(OBTemplateView *)templateView;
-(NSArray *)devices;
-(id<MBSecondPartyHost>)assistant;
-(id)initWithDelegate:(id)arg1 assistant:(id)arg2 ;
-(void)startiCDPValidationFlow;
-(void)setAssistant:(id<MBSecondPartyHost>)arg1 ;
-(void)setTemplateView:(OBTemplateView *)arg1 ;
-(void)switchToDevicePicker:(unsigned long long)arg1 ;
-(void)switchToDeviceCodeEntry;
-(void)setSelectedDevice:(AKiCDPValidationDevice *)arg1 ;
-(void)switchToApproveFromAnotherDevice;
-(void)showRunOutOfDevicesOptionsSheetForDevice:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(AKiCDPEnrollmentDeviceListViewController *)deviceListVC;
-(void)setDeviceListVC:(AKiCDPEnrollmentDeviceListViewController *)arg1 ;
-(void)completelyFillWithView:(id)arg1 ;
-(AKiCDPEnrollmentDevicePasscodeViewController *)passcodeVC;
-(void)setPasscodeVC:(AKiCDPEnrollmentDevicePasscodeViewController *)arg1 ;
-(AKiCDPWaitForApprovalViewController *)approvalVC;
-(void)setApprovalVC:(AKiCDPWaitForApprovalViewController *)arg1 ;
-(void)showLoginAlertWithTitle:(id)arg1 message:(id)arg2 buttleTitle:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(AKiCDPValidationDevice *)selectedDevice;
-(char)shouldUseJustDeviceNameForDevice:(id)arg1 ;
-(id)localizedStringForKey:(id)arg1 deviceClass:(id)arg2 ;
-(void)showLoginAlertWithTitle:(id)arg1 message:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
@end

