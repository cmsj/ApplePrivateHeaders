/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:34 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AuthKitUI.framework/Versions/A/AuthKitUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AuthKitUI/AuthKitUI-Structs.h>
#import <AuthKitUI/AKAppleIDAuthenticationInAppContext.h>
#import <libobjc.A.dylib/AKAppleIDAuthenticationUIProvider.h>
#import <libobjc.A.dylib/NSTextFieldDelegate.h>
#import <AuthKitUI/AuthWebViewDelegate.h>
#import <libobjc.A.dylib/MBUIDelegate.h>
#import <libobjc.A.dylib/MBWebKitViewControllerDelegate.h>
#import <libobjc.A.dylib/AKSecondFactorCodeEntryDelegate.h>
#import <libobjc.A.dylib/AKiCDPValidationDelegate.h>
#import <libobjc.A.dylib/AKiCDPRecoveryKeyDelegate.h>
#import <libobjc.A.dylib/AKAppleIDAuthenticationInAppContextPasswordDelegate.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol AKAppleIDAuthenticationAssistant, CDPRecoveryKeyValidator;
@class NSArray, NSObject, NSMutableArray, NSTextField, NSSecureTextField, NSLayoutConstraint, NSProgressIndicator, AKAuthWebTabView, AKInAssistantSecondFactorCodeEntry, AKiCDPDeviceValidationFlowViewController, AKiCDPRecoveryKeyViewController, NSMutableDictionary, CDPRemoteDeviceSecretValidator, NSWindow, NSString;

@interface AKAppleIDAuthenticationInAssistantContext : AKAppleIDAuthenticationInAppContext <AKAppleIDAuthenticationUIProvider, NSTextFieldDelegate, AuthWebViewDelegate, MBUIDelegate, MBWebKitViewControllerDelegate, AKSecondFactorCodeEntryDelegate, AKiCDPValidationDelegate, AKiCDPRecoveryKeyDelegate, AKAppleIDAuthenticationInAppContextPasswordDelegate, NSSecureCoding> {

	char layoutOnceToken;
	char _hasButtonControl;
	char _continueMeansOptOut;
	char _offerRemoteApproval;
	char _offerToUseRecoveryKey;
	NSObject*<AKAppleIDAuthenticationAssistant> _assistant;
	unsigned long long _state;
	id _previousButtonTarget;
	SEL _previousButtonAction;
	/*^block*/id _previousBlock;
	NSMutableArray* _previousBlockNavigationStack;
	id _nextButtonTarget;
	SEL _nextButtonAction;
	/*^block*/id _nextBlock;
	NSMutableArray* _nextBlockNavigationStack;
	id _alternateButtonTarget;
	SEL _alternateButtonAction;
	/*^block*/id _alternateBlock;
	NSMutableArray* _alternateBlockNavigationStack;
	/*^block*/id _forgotBlock;
	/*^block*/id _createBlock;
	NSTextField* _usernameField;
	NSTextField* _usernameLabel;
	NSSecureTextField* _passwordField;
	NSTextField* _passwordLabel;
	NSLayoutConstraint* _containerViewHeight;
	NSProgressIndicator* _spinner;
	AKAuthWebTabView* _webViewUI;
	AKInAssistantSecondFactorCodeEntry* _secondFactorUI;
	AKiCDPDeviceValidationFlowViewController* _flowController;
	AKiCDPRecoveryKeyViewController* _recoveryViewController;
	NSMutableArray* _clientDevices;
	NSMutableDictionary* _cdpDevices;
	CDPRemoteDeviceSecretValidator* _deviceValidator;
	id<CDPRecoveryKeyValidator> _recoveryKeyValidator;
	/*^block*/id _recoveryKeyValidationCompletionBlock;
	/*^block*/id _passwordHandler;
	NSWindow* _assistantWindow;

}

@property (assign) unsigned long long state;                                                            //@synthesize state=_state - In the implementation block
@property (assign) char hasButtonControl;                                                               //@synthesize hasButtonControl=_hasButtonControl - In the implementation block
@property (assign) char continueMeansOptOut;                                                            //@synthesize continueMeansOptOut=_continueMeansOptOut - In the implementation block
@property (nonatomic,retain) id previousButtonTarget;                                                   //@synthesize previousButtonTarget=_previousButtonTarget - In the implementation block
@property (assign,nonatomic) SEL previousButtonAction;                                                  //@synthesize previousButtonAction=_previousButtonAction - In the implementation block
@property (nonatomic,copy) id previousBlock;                                                            //@synthesize previousBlock=_previousBlock - In the implementation block
@property (nonatomic,retain) NSMutableArray * previousBlockNavigationStack;                             //@synthesize previousBlockNavigationStack=_previousBlockNavigationStack - In the implementation block
@property (nonatomic,retain) id nextButtonTarget;                                                       //@synthesize nextButtonTarget=_nextButtonTarget - In the implementation block
@property (assign,nonatomic) SEL nextButtonAction;                                                      //@synthesize nextButtonAction=_nextButtonAction - In the implementation block
@property (nonatomic,copy) id nextBlock;                                                                //@synthesize nextBlock=_nextBlock - In the implementation block
@property (nonatomic,retain) NSMutableArray * nextBlockNavigationStack;                                 //@synthesize nextBlockNavigationStack=_nextBlockNavigationStack - In the implementation block
@property (nonatomic,retain) id alternateButtonTarget;                                                  //@synthesize alternateButtonTarget=_alternateButtonTarget - In the implementation block
@property (assign,nonatomic) SEL alternateButtonAction;                                                 //@synthesize alternateButtonAction=_alternateButtonAction - In the implementation block
@property (nonatomic,copy) id alternateBlock;                                                           //@synthesize alternateBlock=_alternateBlock - In the implementation block
@property (nonatomic,retain) NSMutableArray * alternateBlockNavigationStack;                            //@synthesize alternateBlockNavigationStack=_alternateBlockNavigationStack - In the implementation block
@property (nonatomic,copy) id forgotBlock;                                                              //@synthesize forgotBlock=_forgotBlock - In the implementation block
@property (nonatomic,copy) id createBlock;                                                              //@synthesize createBlock=_createBlock - In the implementation block
@property (retain) NSTextField * usernameField;                                                         //@synthesize usernameField=_usernameField - In the implementation block
@property (retain) NSTextField * usernameLabel;                                                         //@synthesize usernameLabel=_usernameLabel - In the implementation block
@property (retain) NSSecureTextField * passwordField;                                                   //@synthesize passwordField=_passwordField - In the implementation block
@property (retain) NSTextField * passwordLabel;                                                         //@synthesize passwordLabel=_passwordLabel - In the implementation block
@property (retain) NSLayoutConstraint * containerViewHeight;                                            //@synthesize containerViewHeight=_containerViewHeight - In the implementation block
@property (retain) NSProgressIndicator * spinner;                                                       //@synthesize spinner=_spinner - In the implementation block
@property (retain) AKAuthWebTabView * webViewUI;                                                        //@synthesize webViewUI=_webViewUI - In the implementation block
@property (retain) AKInAssistantSecondFactorCodeEntry * secondFactorUI;                                 //@synthesize secondFactorUI=_secondFactorUI - In the implementation block
@property (retain) AKiCDPDeviceValidationFlowViewController * flowController;                           //@synthesize flowController=_flowController - In the implementation block
@property (retain) AKiCDPRecoveryKeyViewController * recoveryViewController;                            //@synthesize recoveryViewController=_recoveryViewController - In the implementation block
@property (retain) NSMutableArray * clientDevices;                                                      //@synthesize clientDevices=_clientDevices - In the implementation block
@property (retain) NSMutableDictionary * cdpDevices;                                                    //@synthesize cdpDevices=_cdpDevices - In the implementation block
@property (retain) CDPRemoteDeviceSecretValidator * deviceValidator;                                    //@synthesize deviceValidator=_deviceValidator - In the implementation block
@property (retain) id<CDPRecoveryKeyValidator> recoveryKeyValidator;                                    //@synthesize recoveryKeyValidator=_recoveryKeyValidator - In the implementation block
@property (copy) id recoveryKeyValidationCompletionBlock;                                               //@synthesize recoveryKeyValidationCompletionBlock=_recoveryKeyValidationCompletionBlock - In the implementation block
@property (assign) char offerRemoteApproval;                                                            //@synthesize offerRemoteApproval=_offerRemoteApproval - In the implementation block
@property (assign) char offerToUseRecoveryKey;                                                          //@synthesize offerToUseRecoveryKey=_offerToUseRecoveryKey - In the implementation block
@property (copy) id passwordHandler;                                                                    //@synthesize passwordHandler=_passwordHandler - In the implementation block
@property (assign) NSWindow * assistantWindow;                                                          //@synthesize assistantWindow=_assistantWindow - In the implementation block
@property (assign,nonatomic,__weak) NSObject*<AKAppleIDAuthenticationAssistant> assistant;              //@synthesize assistant=_assistant - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) NSArray * devices; 
@property (readonly) char offerServerRecovery; 
@property (readonly) char approvalOnlyMode; 
@property (readonly) char allowCancel; 
+(char)supportsSecureCoding;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(unsigned long long)state;
-(void)setState:(unsigned long long)arg1 ;
-(void)controlTextDidChange:(id)arg1 ;
-(NSArray *)devices;
-(id)nextBlock;
-(void)setNextBlock:(id)arg1 ;
-(NSSecureTextField *)passwordField;
-(NSTextField *)usernameField;
-(void)setUsernameField:(NSTextField *)arg1 ;
-(void)setPasswordField:(NSSecureTextField *)arg1 ;
-(void)presentBasicLoginUIWithCompletion:(/*^block*/id)arg1 ;
-(void)dismissBasicLoginUIWithCompletion:(/*^block*/id)arg1 ;
-(void)presentLoginAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)presentSecondFactorUIWithCompletion:(/*^block*/id)arg1 ;
-(void)dismissSecondFactorUIWithCompletion:(/*^block*/id)arg1 ;
-(void)presentSecondFactorAlertWithError:(id)arg1 title:(id)arg2 message:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)presentBiometricOrPasscodeValidationForAppleID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)presentServerProvidedUIWithConfiguration:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)dismissServerProvidedUIWithCompletion:(/*^block*/id)arg1 ;
-(void)createButtonPressed:(id)arg1 ;
-(void)endWebView:(id)arg1 ;
-(void)sizeChangedFrom:(CGSize)arg1 toSize:(CGSize)arg2 webViewName:(id)arg3 callback:(id)arg4 ;
-(char)shouldHideCancelButton;
-(void)loadFailed:(id)arg1 withError:(id)arg2 ;
-(void)skipAndContinueSignIn;
-(id)passwordHandler;
-(void)setPasswordHandler:(id)arg1 ;
-(void)context:(id)arg1 needsPasswordWithCompletion:(/*^block*/id)arg2 ;
-(void)setNextBlockNavigationStack:(NSMutableArray *)arg1 ;
-(void)setPreviousBlockNavigationStack:(NSMutableArray *)arg1 ;
-(void)setAlternateBlockNavigationStack:(NSMutableArray *)arg1 ;
-(NSObject*<AKAppleIDAuthenticationAssistant>)assistant;
-(void)_makeLoginUIVisible;
-(void)setupNoUILoginNavigationWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)layoutLoginControls;
-(void)setupLoginNavigationWithCompletionBlock:(/*^block*/id)arg1 ;
-(char)_usesTemplateView;
-(void)setAssistantWindow:(NSWindow *)arg1 ;
-(NSProgressIndicator *)spinner;
-(void)_enableUserInteraction;
-(void)_refrehNextButtonState;
-(void)_centerUsernameAndPasswordFields;
-(void)_showTemplateTopImage;
-(void)switchToNonWebView:(id)arg1 ;
-(void)switchToFullAssistantView:(id)arg1 ;
-(void)completelyFillView:(id)arg1 withView:(id)arg2 ;
-(AKInAssistantSecondFactorCodeEntry *)secondFactorUI;
-(void)setSecondFactorUI:(AKInAssistantSecondFactorCodeEntry *)arg1 ;
-(void)setupSecondFactorAuthNavigation;
-(NSWindow *)assistantWindow;
-(void)setNavigationControls;
-(void)_presentIDPProvidedUIWithConfiguration:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_presentServerProvidedUIWithConfiguration:(id)arg1 completion:(/*^block*/id)arg2 ;
-(AKAuthWebTabView *)webViewUI;
-(void)setWebViewUI:(AKAuthWebTabView *)arg1 ;
-(void)setupViewNavigation:(id)arg1 ;
-(void)switchToWebView:(id)arg1 ;
-(void)_tearDownWebViewIfNecessaryWithError:(id)arg1 ;
-(void)nextButtonPressed:(id)arg1 ;
-(void)setUsernameLabel:(NSTextField *)arg1 ;
-(NSTextField *)usernameLabel;
-(void)setPasswordLabel:(NSTextField *)arg1 ;
-(NSTextField *)passwordLabel;
-(void)forgotButtonPressed:(id)arg1 ;
-(void)_layoutPassword;
-(void)setSpinner:(NSProgressIndicator *)arg1 ;
-(void)_layoutUsername;
-(void)layoutView:(id)arg1 centeredInView:(id)arg2 ;
-(void)setContainerViewHeight:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)containerViewHeight;
-(void)setLoginContolsEnabled:(char)arg1 ;
-(void)_setPasswordFieldHidden:(char)arg1 ;
-(char)_isSatisfyingPasswordRequirements;
-(void)setContinueMeansOptOut:(char)arg1 ;
-(void)setPreviousBlock:(id)arg1 ;
-(char)continueMeansOptOut;
-(void)setForgotBlock:(id)arg1 ;
-(void)setCreateBlock:(id)arg1 ;
-(id)previousBlock;
-(NSMutableArray *)previousBlockNavigationStack;
-(NSMutableArray *)nextBlockNavigationStack;
-(void)setAlternateBlock:(id)arg1 ;
-(void)popNavigationStack;
-(NSMutableArray *)alternateBlockNavigationStack;
-(void)previousButtonPressed:(id)arg1 ;
-(void)alternateButtonPressed:(id)arg1 ;
-(char)hasButtonControl;
-(void)setHasButtonControl:(char)arg1 ;
-(id)alternateBlock;
-(id)forgotBlock;
-(id)createBlock;
-(void)setCdpDevices:(NSMutableDictionary *)arg1 ;
-(void)setOfferRemoteApproval:(char)arg1 ;
-(void)setDeviceValidator:(CDPRemoteDeviceSecretValidator *)arg1 ;
-(void)setOfferToUseRecoveryKey:(char)arg1 ;
-(void)setClientDevices:(NSMutableArray *)arg1 ;
-(NSMutableArray *)clientDevices;
-(NSMutableDictionary *)cdpDevices;
-(void)setFlowController:(AKiCDPDeviceValidationFlowViewController *)arg1 ;
-(AKiCDPDeviceValidationFlowViewController *)flowController;
-(void)setRecoveryKeyValidator:(id<CDPRecoveryKeyValidator>)arg1 ;
-(void)setRecoveryKeyValidationCompletionBlock:(id)arg1 ;
-(void)setRecoveryViewController:(AKiCDPRecoveryKeyViewController *)arg1 ;
-(AKiCDPRecoveryKeyViewController *)recoveryViewController;
-(CDPRemoteDeviceSecretValidator *)deviceValidator;
-(void)cancelApproveFromAnotherDevice;
-(id<CDPRecoveryKeyValidator>)recoveryKeyValidator;
-(id)recoveryKeyValidationCompletionBlock;
-(void)mbWebkitViewSetWindowTitle:(id)arg1 ;
-(void)mbWebkitViewSetWindowMessage:(id)arg1 ;
-(void)mbWebkitViewSetPageImageIsHidden:(char)arg1 ;
-(void)mbWebkitViewSetPageSymbol:(id)arg1 ;
-(void)mbWebkitViewSetLeftNavigationButtonTitle:(id)arg1 ;
-(void)mbWebkitViewSetLeftNavigationButtonEnabled:(char)arg1 ;
-(void)mbWebkitViewSetRightNavigationButtonTitle:(id)arg1 ;
-(void)mbWebkitViewSetRightNavigationButtonEnabled:(char)arg1 ;
-(void)mbWebkitViewSetAlternateNavigationButtonTitle:(id)arg1 ;
-(void)mbWebkitViewSetAlternateNavigationButtonEnabled:(char)arg1 ;
-(void)mbRunAppleIDOptOut:(id)arg1 ;
-(void)mbWebkitViewSaveFile:(id)arg1 content:(id)arg2 ;
-(void)mbWebkitViewSaveFile:(id)arg1 withLocalizedDisplayName:(id)arg2 content:(id)arg3 ;
-(void)mbConfirmLocalPasswordWithCompletion:(id)arg1 ;
-(void)mbWebkitViewControllerDidCancel;
-(void)mbWebkitViewControllerDidDismissWithReason:(id)arg1 ;
-(void)mbWebkitViewControllerDidSucceed;
-(void)mbWebkitViewControllerDidFinishLoading;
-(void)mbWebkitViewControllerDidFailWithError:(id)arg1 ;
-(void)mbWebkitViewControllerSkipSignIn;
-(void)mbWebkitViewControllerModifyURLRequest:(id)arg1 ;
-(void)pinEntryComplete:(char)arg1 ;
-(void)validateDevice:(id)arg1 withSecret:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)approveFromAnotherDevice;
-(void)triggerEscapeHatch;
-(void)userSkipped;
-(char)offerRemoteApproval;
-(char)offerToUseRecoveryKey;
-(char)offerServerRecovery;
-(void)userCancelled;
-(char)allowCancel;
-(void)validateRecoveryKey:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)userCancelledRecoveryKeyEntry;
-(char)requireRecoveryKeyEntry;
-(char)_shouldSkipInitialReachabilityCheck;
-(void)presentServerUIErrorAlertWithTitle:(id)arg1 message:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)switchToCenteredView:(id)arg1 ;
-(void)grantButtonControl;
-(void)revokeButtonControl;
-(void)setSkipLoginOnContinue:(char)arg1 ;
-(void)cdpContext:(id)arg1 promptForLocalSecretWithCompletion:(/*^block*/id)arg2 ;
-(void)cdpContext:(id)arg1 promptForRemoteSecretWithDevices:(id)arg2 offeringRemoteApproval:(char)arg3 validator:(id)arg4 ;
-(void)cdpContext:(id)arg1 promptForICSCWithIsNumeric:(char)arg2 numericLength:(id)arg3 isRandom:(char)arg4 validator:(id)arg5 ;
-(void)cdpContext:(id)arg1 promptForAdoptionOfMultipleICSC:(/*^block*/id)arg2 ;
-(void)cdpContext:(id)arg1 promptToInformUserOfAccountUnlockWithCompletion:(/*^block*/id)arg2 ;
-(void)cdpContext:(id)arg1 promptToInformUserOfAccountLockOutWithCompletion:(/*^block*/id)arg2 ;
-(void)cdpContext:(id)arg1 promptForInteractiveAuthenticationWithCompletion:(/*^block*/id)arg2 ;
-(void)cdpContext:(id)arg1 showError:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)cdpContext:(id)arg1 promptForRecoveryKeyWithValidator:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setAssistant:(NSObject*<AKAppleIDAuthenticationAssistant>)arg1 ;
-(id)previousButtonTarget;
-(void)setPreviousButtonTarget:(id)arg1 ;
-(SEL)previousButtonAction;
-(void)setPreviousButtonAction:(SEL)arg1 ;
-(id)nextButtonTarget;
-(void)setNextButtonTarget:(id)arg1 ;
-(SEL)nextButtonAction;
-(void)setNextButtonAction:(SEL)arg1 ;
-(id)alternateButtonTarget;
-(void)setAlternateButtonTarget:(id)arg1 ;
-(SEL)alternateButtonAction;
-(void)setAlternateButtonAction:(SEL)arg1 ;
@end

