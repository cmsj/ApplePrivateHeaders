/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:29 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MailCore.framework/Versions/A/MailCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MailCore/MailCore-Structs.h>
#import <libobjc.A.dylib/EFLoggable.h>
#import <libobjc.A.dylib/MCConnectionLogging.h>

@protocol MCAccount;
@class MCSocket, NSDate, NSData, ECSASLClient, NSFileHandle, NSArray, NSString;

@interface MCConnection : NSObject <EFLoggable, MCConnectionLogging> {

	id _accountLock;
	id<MCAccount> _account;
	char _isBackground;
	MCSocket* _socket;
	double _connectTimeout;
	double _readWriteTimeout;
	unsigned long long _totalBytesRead;
	NSDate* _readTimestamp;
	void* _buffer;
	long long _bufferRemainingBytes;
	unsigned long long _bufferStart;
	unsigned long long _bufferLength;
	NSData* _logHeader;
	ECSASLClient* _saslClient;
	NSFileHandle* _logFile;

}

@property (assign,nonatomic) void* buffer;                                           //@synthesize buffer=_buffer - In the implementation block
@property (assign,nonatomic) long long bufferRemainingBytes;                         //@synthesize bufferRemainingBytes=_bufferRemainingBytes - In the implementation block
@property (assign,nonatomic) unsigned long long bufferStart;                         //@synthesize bufferStart=_bufferStart - In the implementation block
@property (assign,nonatomic) unsigned long long bufferLength;                        //@synthesize bufferLength=_bufferLength - In the implementation block
@property (nonatomic,retain) NSData * logHeader;                                     //@synthesize logHeader=_logHeader - In the implementation block
@property (nonatomic,retain) ECSASLClient * saslClient;                              //@synthesize saslClient=_saslClient - In the implementation block
@property (retain) NSFileHandle * logFile;                                           //@synthesize logFile=_logFile - In the implementation block
@property (assign,nonatomic) unsigned long long totalBytesRead;                      //@synthesize totalBytesRead=_totalBytesRead - In the implementation block
@property (nonatomic,retain) MCSocket * socket;                                      //@synthesize socket=_socket - In the implementation block
@property (nonatomic,readonly) char supportsPlainTextSchemes; 
@property (assign,nonatomic) double connectTimeout;                                  //@synthesize connectTimeout=_connectTimeout - In the implementation block
@property (assign,nonatomic) double readWriteTimeout;                                //@synthesize readWriteTimeout=_readWriteTimeout - In the implementation block
@property (__weak) id<MCAccount> account; 
@property (assign) char isBackground;                                                //@synthesize isBackground=_isBackground - In the implementation block
@property (nonatomic,readonly) char isExpensive; 
@property (nonatomic,readonly) unsigned cipherKeyLength; 
@property (nonatomic,copy,readonly) NSArray * authenticationMechanisms; 
@property (nonatomic,readonly) char hasBytesAvailable; 
@property (nonatomic,retain) NSDate * readTimestamp;                                 //@synthesize readTimestamp=_readTimestamp - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)log;
+(char)_defaultsToBackground;
+(id)loggingDelegate;
+(char)shouldLogActivityForHost:(id)arg1 port:(long long)arg2 ;
+(void)setLoggingDelegate:(id)arg1 ;
+(char)logAllSocketActivity;
+(void)setLogAllSocketActivity:(char)arg1 ;
+(id)logActivityOnPorts;
+(void)setLogActivityOnPorts:(id)arg1 ;
+(id)logActivityOnHosts;
+(void)setLogActivityOnHosts:(id)arg1 ;
+(char)logActivityToFile;
+(void)setLogActivityToFile:(char)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(char)hasBytesAvailable;
-(void*)buffer;
-(MCSocket *)socket;
-(void)disconnect;
-(void)quit;
-(id<MCAccount>)account;
-(void)setAccount:(id<MCAccount>)arg1 ;
-(void)setBuffer:(void*)arg1 ;
-(void)setSocket:(MCSocket *)arg1 ;
-(void)_setupConnection;
-(void)logData:(id)arg1 ;
-(unsigned long long)bufferLength;
-(void)logString:(id)arg1 ;
-(void)setIsBackground:(char)arg1 ;
-(char)isBackground;
-(void)setTotalBytesRead:(unsigned long long)arg1 ;
-(unsigned long long)totalBytesRead;
-(char)authenticate;
-(char)isExpensive;
-(char)_fillBuffer:(id*)arg1 ;
-(NSArray *)authenticationMechanisms;
-(void)flushLog;
-(void)setConnectTimeout:(double)arg1 ;
-(double)connectTimeout;
-(char)isValidAllowNetworking:(char)arg1 ;
-(char)connectDiscoveringBestSettings:(char)arg1 ;
-(void)setReadWriteTimeout:(double)arg1 ;
-(void)_setupConnectionErrorForMonitorWithPort:(long long)arg1 usingSSL:(char)arg2 serverTrust:(SecTrustRef)arg3 ;
-(void)discoverAccountSettings;
-(char)_startTLS;
-(char)_writeData:(id)arg1 dontLogBytesInRange:(NSRange)arg2 error:(id*)arg3 ;
-(char)_readLineIntoData:(id)arg1 error:(id*)arg2 ;
-(char)_completeConnectionWithResult:(char)arg1 ;
-(char)_authenticateWithSASLClient:(id)arg1 ;
-(id)_authenticateWithNonPlainTextSchemes;
-(id)_authenticateWithPlainTextSchemes;
-(char)supportsPlainTextSchemes;
-(double)readWriteTimeout;
-(ECSASLClient *)saslClient;
-(char)_readBytesIntoData:(id)arg1 desiredLength:(long long)arg2 error:(id*)arg3 ;
-(void)setReadTimestamp:(NSDate *)arg1 ;
-(NSDate *)readTimestamp;
-(void)_loggingDidChange:(id)arg1 ;
-(void)_logToFileDidChange:(id)arg1 ;
-(unsigned)cipherKeyLength;
-(id)_newConnectionAttemptsConfigureDynamically:(char)arg1 ;
-(void)_resetLogHeaderWithPort:(long long)arg1 ;
-(NSData *)logHeader;
-(void)_logEventWithPrefix:(const char*)arg1 bytes:(const void*)arg2 length:(unsigned long long)arg3 maskStartIndex:(unsigned long long)arg4 maskLength:(unsigned long long)arg5 ;
-(void)_setupSocketWithSecurityLayer:(long long)arg1 disableEphemeralDiffieHellmanCiphers:(char)arg2 connectTimeout:(double)arg3 ;
-(void)_clearBuffer;
-(long long)bufferRemainingBytes;
-(void)setBufferRemainingBytes:(long long)arg1 ;
-(void)setBufferStart:(unsigned long long)arg1 ;
-(id)renewCredentialsIfNeededForAccount:(id)arg1 ;
-(char)_authenticateWithAuthenticationMechanisms:(id)arg1 allowPlainText:(char)arg2 ;
-(char)_shouldKeepTryingAfterProcessingAuthenticationFailureAllowingReconnect:(char)arg1 bestError:(id*)arg2 ;
-(void)setSaslClient:(ECSASLClient *)arg1 ;
-(unsigned long long)bufferStart;
-(long long)_readBytesFromSocketIntoBuffer:(void*)arg1 amount:(unsigned long long)arg2 requireAllBytes:(char)arg3 error:(id*)arg4 ;
-(void)setBufferLength:(unsigned long long)arg1 ;
-(void)_setupReadErrorForMonitor;
-(void)_setupWriteErrorForMonitor;
-(char)_isSSLError:(id)arg1 ;
-(id)_adjustedSSLErrorWithHostname:(id)arg1 serverTrust:(SecTrustRef)arg2 ;
-(NSFileHandle *)logFile;
-(void)logBytes:(void*)arg1 length:(unsigned long long)arg2 ;
-(void)logData:(id)arg1 range:(NSRange)arg2 ;
-(void)setLogFile:(NSFileHandle *)arg1 ;
-(void)setLogHeader:(NSData *)arg1 ;
@end

