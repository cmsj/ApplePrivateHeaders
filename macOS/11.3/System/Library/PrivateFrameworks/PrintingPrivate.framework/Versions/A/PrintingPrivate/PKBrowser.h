/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:50 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PrintingPrivate.framework/Versions/A/PrintingPrivate
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/PMXPCSupportDelegate.h>

@protocol PKBrowserDelegate;
@class NSMutableDictionary, PMXPCSupport, NSArray, NSString;

@interface PKBrowser : NSObject <PMXPCSupportDelegate> {

	id<PKBrowserDelegate> _delegate;
	char _browsing;
	NSMutableDictionary* _devices;
	PMXPCSupport* _xpc;

}

@property (nonatomic,retain) NSMutableDictionary * devices;              //@synthesize devices=_devices - In the implementation block
@property (assign,nonatomic) char browsing;                              //@synthesize browsing=_browsing - In the implementation block
@property (retain) PMXPCSupport * xpc;                                   //@synthesize xpc=_xpc - In the implementation block
@property (assign) id<PKBrowserDelegate> delegate;                       //@synthesize delegate=_delegate - In the implementation block
@property (assign) unsigned long long browsingMask; 
@property (readonly) NSArray * deviceList; 
@property (readonly) NSArray * filteredDeviceList; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(id<PKBrowserDelegate>)delegate;
-(void)setDelegate:(id<PKBrowserDelegate>)arg1 ;
-(void)start;
-(void)stop;
-(id)initWithDelegate:(id)arg1 ;
-(NSMutableDictionary *)devices;
-(NSArray *)deviceList;
-(void)setDevices:(NSMutableDictionary *)arg1 ;
-(PMXPCSupport *)xpc;
-(void)setBrowsing:(char)arg1 ;
-(char)browsing;
-(void)printerAdded:(id)arg1 more:(char)arg2 ;
-(void)printerRemoved:(id)arg1 more:(char)arg2 ;
-(void)setXpc:(PMXPCSupport *)arg1 ;
-(void)handleEventForCommand:(int)arg1 status:(int)arg2 event:(id)arg3 ;
-(id)queueList;
-(void)printerUpdated:(id)arg1 more:(char)arg2 ;
-(unsigned long long)browsingMask;
-(void)setBrowsingMask:(unsigned long long)arg1 ;
-(NSArray *)filteredDeviceList;
@end

