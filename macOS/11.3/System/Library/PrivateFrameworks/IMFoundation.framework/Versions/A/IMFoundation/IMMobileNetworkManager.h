/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/IMFoundation.framework/Versions/A/IMFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSRecursiveLock, NSMutableSet, NSNumber;

@interface IMMobileNetworkManager : NSObject {

	char _registered;
	char _shouldBringUpDataContext;
	char _isDataPossible;
	char _isDataContextActive;
	char _isDataIndicatorNone;
	char _isDataContextUsable;
	NSRecursiveLock* _lock;
	NSMutableSet* _cellAutoAssociationTokens;

}

@property (nonatomic,retain) NSRecursiveLock * lock;                                    //@synthesize lock=_lock - In the implementation block
@property (nonatomic,retain) NSMutableSet * cellularAutoAssociationTokens;              //@synthesize cellAutoAssociationTokens=_cellAutoAssociationTokens - In the implementation block
@property (assign,nonatomic) char registered;                                           //@synthesize registered=_registered - In the implementation block
@property (assign,nonatomic) char shouldBringUpDataContext;                             //@synthesize shouldBringUpDataContext=_shouldBringUpDataContext - In the implementation block
@property (assign,nonatomic) char isDataPossible;                                       //@synthesize isDataPossible=_isDataPossible - In the implementation block
@property (assign,nonatomic) char isDataContextActive;                                  //@synthesize isDataContextActive=_isDataContextActive - In the implementation block
@property (assign,nonatomic) char isDataIndicatorNone;                                  //@synthesize isDataIndicatorNone=_isDataIndicatorNone - In the implementation block
@property (assign,nonatomic) char isDataContextUsable;                                  //@synthesize isDataContextUsable=_isDataContextUsable - In the implementation block
@property (nonatomic,readonly) char isAirplaneModeEnabled; 
@property (nonatomic,readonly) char isWiFiEnabled; 
@property (nonatomic,readonly) char isWiFiUsable; 
@property (nonatomic,readonly) char isWiFiAssociated; 
@property (nonatomic,readonly) char isWiFiCaptive; 
@property (nonatomic,readonly) char isHostingWiFiHotSpot; 
@property (nonatomic,readonly) char autoAssociateWiFi; 
@property (nonatomic,readonly) char autoAssociateCellular; 
@property (nonatomic,readonly) char disableFastDormancy; 
@property (nonatomic,readonly) char willTryToSearchForWiFiNetwork; 
@property (nonatomic,readonly) char willTryToAutoAssociateWiFiNetwork; 
@property (nonatomic,retain,readonly) NSNumber * wiFiSignalStrength; 
@property (nonatomic,retain,readonly) NSNumber * wiFiScaledRSSI; 
@property (nonatomic,retain,readonly) NSNumber * wiFiScaledRate; 
@property (nonatomic,readonly) char dataConnectionExists; 
@property (nonatomic,readonly) char has2GDataConnection; 
@property (nonatomic,readonly) char hasLTEDataConnection; 
@property (nonatomic,readonly) char isDataSwitchEnabled; 
@property (nonatomic,readonly) char isDataConnectionActive; 
@property (nonatomic,readonly) char inValidSIMState; 
@property (nonatomic,readonly) char requiresSIMInserted; 
@property (nonatomic,readonly) char isSIMLocked; 
@property (nonatomic,readonly) char isSIMRemoved; 
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(NSRecursiveLock *)lock;
-(char)registered;
-(void)setDataConnectionActive:(char)arg1 ;
-(char)isDataConnectionActive;
-(void)_adjustCellularAutoAssociation;
-(char)disableFastDormancy;
-(void)addFastDormancyDisableToken:(id)arg1 ;
-(void)removeFastDormancyDisableToken:(id)arg1 ;
-(char)isHostingWiFiHotSpot;
-(char)willTryToAutoAssociateWiFiNetwork;
-(char)willTryToSearchForWiFiNetwork;
-(NSNumber *)wiFiSignalStrength;
-(NSNumber *)wiFiScaledRSSI;
-(NSNumber *)wiFiScaledRate;
-(char)isWiFiEnabled;
-(char)isWiFiAssociated;
-(char)isWiFiCaptive;
-(char)autoAssociateWiFi;
-(void)addWiFiAutoAssociationClientToken:(id)arg1 ;
-(void)removeWiFiAutoAssociationClientToken:(id)arg1 ;
-(void)showNetworkOptions;
-(void)_lockedAdjustCellularAutoAssociation;
-(char)isAirplaneModeEnabled;
-(char)isWiFiUsable;
-(char)autoAssociateCellular;
-(void)addCellularAutoAssociationClientToken:(id)arg1 ;
-(void)removeCellularAutoAssociationClientToken:(id)arg1 ;
-(char)_isDataConnectionAvailable;
-(void)_makeDataConnectionAvailable:(char)arg1 ;
-(char)requiresSIMInserted;
-(char)isSIMRemoved;
-(char)isSIMLocked;
-(id)_telephonyDataSIMStatus;
-(void)showSIMUnlock;
-(char)inValidSIMState;
-(char)_legacy_inValidSIMState;
-(char)dataConnectionExists;
-(char)has2GDataConnection;
-(char)hasLTEDataConnection;
-(char)isDataSwitchEnabled;
-(void)setLock:(NSRecursiveLock *)arg1 ;
-(NSMutableSet *)cellularAutoAssociationTokens;
-(void)setCellularAutoAssociationTokens:(NSMutableSet *)arg1 ;
-(void)setRegistered:(char)arg1 ;
-(char)shouldBringUpDataContext;
-(void)setShouldBringUpDataContext:(char)arg1 ;
-(char)isDataPossible;
-(void)setIsDataPossible:(char)arg1 ;
-(char)isDataContextActive;
-(void)setIsDataContextActive:(char)arg1 ;
-(char)isDataIndicatorNone;
-(void)setIsDataIndicatorNone:(char)arg1 ;
-(char)isDataContextUsable;
-(void)setIsDataContextUsable:(char)arg1 ;
@end

