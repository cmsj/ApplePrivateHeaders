/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:22 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Email.framework/Versions/A/Email
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Email/Email-Structs.h>
#import <Email/EMRepositoryObject.h>
#import <libobjc.A.dylib/EFLoggable.h>
#import <libobjc.A.dylib/EMMessageBuilder.h>
#import <libobjc.A.dylib/EMExtendedContentItem.h>
#import <libobjc.A.dylib/EMMutableMessageListItem.h>
#import <libobjc.A.dylib/EMMessageListItem.h>
#import <libobjc.A.dylib/EMContentItem.h>

@protocol ECEmailAddressConvertible;
@class NSArray, NSUUID, NSDate, ECSubject, NSString, ECMessageFlags, NSIndexSet, EMObjectID, EFFuture, EMMailDropMetadata, EMMessageRepository;

@interface EMMessage : EMRepositoryObject <EFLoggable, EMMessageBuilder, EMExtendedContentItem, EMMutableMessageListItem, EMMessageListItem, EMContentItem> {

	unsigned long long _isEditable;
	NSArray* _mailboxes;
	NSArray* _mailboxObjectIDs;
	os_unfair_lock_s _mailboxesLock;
	char _isVIP;
	char _isBlocked;
	char _hasAttachments;
	char _isToMe;
	char _isCCMe;
	char _isAvailableLocally;
	int _exchangeEventUID;
	NSDate* _date;
	ECSubject* _subject;
	NSString* _summary;
	ECMessageFlags* _flags;
	long long _conversationNotificationLevel;
	long long _conversationID;
	NSArray* _toList;
	NSArray* _ccList;
	long long _dataTransferByteCount;
	long long _storageByteCount;
	EMMailDropMetadata* _mailDropMetadata;
	/*^block*/id _loaderBlock;
	long long __internalID;
	id<ECEmailAddressConvertible> _senderAddress;
	NSArray* _bccList;
	NSUUID* _documentID;

}

@property (nonatomic,readonly) EMMessageRepository * repository; 
@property (nonatomic,retain) id<ECEmailAddressConvertible> senderAddress;              //@synthesize senderAddress=_senderAddress - In the implementation block
@property (nonatomic,copy) NSArray * bccList;                                          //@synthesize bccList=_bccList - In the implementation block
@property (nonatomic,copy) NSUUID * documentID;                                        //@synthesize documentID=_documentID - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSArray * availableRepresentations; 
@property (assign,nonatomic) char isAvailableLocally;                                  //@synthesize isAvailableLocally=_isAvailableLocally - In the implementation block
@property (nonatomic,copy) NSString * displayName; 
@property (nonatomic,copy) NSString * contentID; 
@property (nonatomic,copy) NSString * UTType; 
@property (assign,nonatomic) char isSinglePagePDF; 
@property (assign,nonatomic) long long dataTransferByteCount;                          //@synthesize dataTransferByteCount=_dataTransferByteCount - In the implementation block
@property (assign,nonatomic) long long storageByteCount;                               //@synthesize storageByteCount=_storageByteCount - In the implementation block
@property (nonatomic,copy) EMMailDropMetadata * mailDropMetadata;                      //@synthesize mailDropMetadata=_mailDropMetadata - In the implementation block
@property (assign,nonatomic) int exchangeEventUID;                                     //@synthesize exchangeEventUID=_exchangeEventUID - In the implementation block
@property (nonatomic,copy) id loaderBlock;                                             //@synthesize loaderBlock=_loaderBlock - In the implementation block
@property (nonatomic,copy,readonly) EMObjectID * objectID; 
@property (nonatomic,copy,readonly) NSString * ef_publicDescription; 
@property (retain) NSDate * date;                                                      //@synthesize date=_date - In the implementation block
@property (retain) ECSubject * subject;                                                //@synthesize subject=_subject - In the implementation block
@property (copy) NSString * summary;                                                   //@synthesize summary=_summary - In the implementation block
@property (copy) NSArray * senderList; 
@property (copy) NSArray * toList;                                                     //@synthesize toList=_toList - In the implementation block
@property (copy) NSArray * ccList;                                                     //@synthesize ccList=_ccList - In the implementation block
@property (assign) char isToMe;                                                        //@synthesize isToMe=_isToMe - In the implementation block
@property (assign) char isCCMe;                                                        //@synthesize isCCMe=_isCCMe - In the implementation block
@property (retain) ECMessageFlags * flags;                                             //@synthesize flags=_flags - In the implementation block
@property (assign) char hasUnflagged; 
@property (copy) NSIndexSet * flagColors; 
@property (assign) char isVIP;                                                         //@synthesize isVIP=_isVIP - In the implementation block
@property (assign) char isBlocked;                                                     //@synthesize isBlocked=_isBlocked - In the implementation block
@property (assign) char hasAttachments;                                                //@synthesize hasAttachments=_hasAttachments - In the implementation block
@property (assign) long long conversationNotificationLevel;                            //@synthesize conversationNotificationLevel=_conversationNotificationLevel - In the implementation block
@property (assign) unsigned long long count; 
@property (assign) long long conversationID;                                           //@synthesize conversationID=_conversationID - In the implementation block
@property (copy) NSArray * mailboxObjectIDs; 
@property (copy) NSArray * mailboxes; 
@property (retain) id<EMCollectionItemID> displayMessageItemID; 
@property (assign) long long _internalID;                                              //@synthesize _internalID=__internalID - In the implementation block
@property (readonly) EMObjectID * displayMessageObjectID; 
@property (readonly) EFFuture * displayMessage; 
@property (readonly) char deleteMovesToTrash; 
@property (readonly) char supportsArchiving; 
@property (readonly) char shouldArchiveByDefault; 
@property (readonly) char isEditable; 
@property (nonatomic,readonly) id<EMCollectionItemID> itemID; 
+(char)supportsSecureCoding;
+(id)log;
+(id)combinedFlagsForMessageListItems:(id)arg1 ;
+(id)messageIDHeaderFromMessageURL:(id)arg1 ;
+(id)internalIDFromInternalMessageURL:(id)arg1 ;
+(id)predicateForExcludingMessagesWithObjectIDs:(id)arg1 ;
+(id)predicateForMessagesWithObjectIDs:(id)arg1 ;
+(id)externalDataTypeIdentifiers;
+(id)UTType;
+(id)combinedFlagsForMessageListItems:(id)arg1 forDisplay:(char)arg2 ;
+(id)combinedFlagsForMessageListItemFlags:(id)arg1 forDisplay:(char)arg2 ;
+(id)predicateForMessageWithObjectID:(id)arg1 ;
+(id)_predicateForMessagesWithObjectIDConstantValue:(id)arg1 operatorType:(unsigned long long)arg2 ;
+(id)predicateForMessageWithItemID:(id)arg1 mailboxPredicate:(id)arg2 mailboxTypeResolver:(id)arg3 ;
+(id)predicateForMessageWithInternalID:(long long)arg1 ;
+(id)predicateForExcludingMessageWithObjectID:(id)arg1 ;
+(char)isMessageURL:(id)arg1 ;
+(char)isInternalMessageURL:(id)arg1 ;
-(ECMessageFlags *)flags;
-(NSString *)description;
-(NSString *)debugDescription;
-(unsigned long long)count;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSDate *)date;
-(id<EMCollectionItemID>)itemID;
-(NSString *)displayName;
-(char)isBlocked;
-(void)setCount:(unsigned long long)arg1 ;
-(void)setLoaderBlock:(id)arg1 ;
-(void)setFlags:(ECMessageFlags *)arg1 ;
-(char)isEditable;
-(void)setDisplayName:(NSString *)arg1 ;
-(void)setDate:(NSDate *)arg1 ;
-(void)setSubject:(ECSubject *)arg1 ;
-(ECSubject *)subject;
-(NSUUID *)documentID;
-(void)setSummary:(NSString *)arg1 ;
-(NSString *)summary;
-(EFFuture *)displayMessage;
-(void)setIsBlocked:(char)arg1 ;
-(EMMessageRepository *)repository;
-(void)setDocumentID:(NSUUID *)arg1 ;
-(NSArray *)toList;
-(void)setToList:(NSArray *)arg1 ;
-(void)setRepository:(EMMessageRepository *)arg1 ;
-(id)initWithObjectID:(id)arg1 ;
-(id<ECEmailAddressConvertible>)senderAddress;
-(void)setSenderAddress:(id<ECEmailAddressConvertible>)arg1 ;
-(long long)_internalID;
-(void)setHasAttachments:(char)arg1 ;
-(char)hasAttachments;
-(id)requestRepresentationWithOptions:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(long long)conversationID;
-(void)setConversationID:(long long)arg1 ;
-(NSString *)ef_publicDescription;
-(char)shouldArchiveByDefault;
-(id)requestRepresentationWithOptions:(id)arg1 delegate:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setSenderList:(NSArray *)arg1 ;
-(void)setCcList:(NSArray *)arg1 ;
-(void)setHasUnflagged:(char)arg1 ;
-(void)setFlagColors:(NSIndexSet *)arg1 ;
-(void)setIsVIP:(char)arg1 ;
-(long long)conversationNotificationLevel;
-(void)setConversationNotificationLevel:(long long)arg1 ;
-(void)setMailboxes:(NSArray *)arg1 ;
-(void)setDisplayMessageItemID:(id<EMCollectionItemID>)arg1 ;
-(id<EMCollectionItemID>)displayMessageItemID;
-(NSArray *)senderList;
-(NSArray *)ccList;
-(char)hasUnflagged;
-(NSIndexSet *)flagColors;
-(char)isVIP;
-(NSArray *)mailboxes;
-(NSArray *)mailboxObjectIDs;
-(EMObjectID *)displayMessageObjectID;
-(NSArray *)availableRepresentations;
-(NSString *)contentID;
-(NSString *)UTType;
-(EMMailDropMetadata *)mailDropMetadata;
-(char)isAvailableLocally;
-(char)isSinglePagePDF;
-(long long)dataTransferByteCount;
-(long long)storageByteCount;
-(int)exchangeEventUID;
-(id)loaderBlock;
-(void)setIsSinglePagePDF:(char)arg1 ;
-(void)setIsAvailableLocally:(char)arg1 ;
-(void)setAvailableRepresentations:(NSArray *)arg1 ;
-(void)setContentID:(NSString *)arg1 ;
-(void)setUTType:(NSString *)arg1 ;
-(void)setDataTransferByteCount:(long long)arg1 ;
-(void)setStorageByteCount:(long long)arg1 ;
-(void)setMailDropMetadata:(EMMailDropMetadata *)arg1 ;
-(void)setExchangeEventUID:(int)arg1 ;
-(void)_commonInitWithBuilder:(/*^block*/id)arg1 ;
-(NSArray *)bccList;
-(void)setMailboxObjectIDs:(NSArray *)arg1 ;
-(void)setIsToMe:(char)arg1 ;
-(void)setIsCCMe:(char)arg1 ;
-(void)setBccList:(NSArray *)arg1 ;
-(char)isToMe;
-(char)isCCMe;
-(char)deleteMovesToTrash;
-(char)supportsArchiving;
-(void)set_internalID:(long long)arg1 ;
-(id)initWithObjectID:(id)arg1 builder:(/*^block*/id)arg2 ;
-(void)setCachedMetadata:(id)arg1 forKey:(id)arg2 ;
-(id)cachedMetadataOfClass:(Class)arg1 forKey:(id)arg2 ;
-(char)isInManagedAccountWithSourceMailboxScope:(id)arg1 ;
@end

