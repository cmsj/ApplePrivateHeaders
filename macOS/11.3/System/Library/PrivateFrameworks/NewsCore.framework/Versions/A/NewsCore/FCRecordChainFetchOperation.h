/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:37 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/Versions/A/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <NewsCore/FCOperation.h>

@protocol FCContentContext;
@class NSArray, NSDictionary, FCEdgeCacheHint, FCHeldRecords, NSMutableSet, NSMutableArray;

@interface FCRecordChainFetchOperation : FCOperation {

	char _shouldReturnErrorWhenSomeRecordsMissing;
	char _shouldFailOnLimitExceededError;
	char _shouldBypassRecordSourcePersistence;
	id<FCContentContext> _context;
	NSArray* _topLevelRecordIDs;
	NSDictionary* _linkKeysByRecordType;
	NSDictionary* _cachePoliciesByRecordType;
	/*^block*/id _dynamicCachePolicyBlock;
	FCEdgeCacheHint* _edgeCacheHint;
	NSArray* _additionalRecordSources;
	/*^block*/id _cachedRecordsLookupBlock;
	/*^block*/id _recordChainCompletionHandler;
	NSArray* _recordSources;
	NSDictionary* _recordSourcesByRecordType;
	NSDictionary* _pbRecordTypesByRecordType;
	FCHeldRecords* _cachedRecords;
	NSMutableSet* _actualTopLevelRecordIDs;
	NSMutableSet* _skippedTopLevelRecordIDs;
	NSMutableSet* _missingCachedOnlyTopLevelRecordIDs;
	NSDictionary* _resultHeldRecordsByType;
	NSMutableArray* _mutableNetworkEvents;

}

@property (nonatomic,retain) id<FCContentContext> context;                              //@synthesize context=_context - In the implementation block
@property (nonatomic,copy) NSArray * topLevelRecordIDs;                                 //@synthesize topLevelRecordIDs=_topLevelRecordIDs - In the implementation block
@property (nonatomic,copy) NSDictionary * linkKeysByRecordType;                         //@synthesize linkKeysByRecordType=_linkKeysByRecordType - In the implementation block
@property (nonatomic,copy) NSDictionary * cachePoliciesByRecordType;                    //@synthesize cachePoliciesByRecordType=_cachePoliciesByRecordType - In the implementation block
@property (nonatomic,copy) id dynamicCachePolicyBlock;                                  //@synthesize dynamicCachePolicyBlock=_dynamicCachePolicyBlock - In the implementation block
@property (assign,nonatomic) char shouldReturnErrorWhenSomeRecordsMissing;              //@synthesize shouldReturnErrorWhenSomeRecordsMissing=_shouldReturnErrorWhenSomeRecordsMissing - In the implementation block
@property (assign,nonatomic) char shouldFailOnLimitExceededError;                       //@synthesize shouldFailOnLimitExceededError=_shouldFailOnLimitExceededError - In the implementation block
@property (nonatomic,copy) FCEdgeCacheHint * edgeCacheHint;                             //@synthesize edgeCacheHint=_edgeCacheHint - In the implementation block
@property (nonatomic,retain) NSArray * additionalRecordSources;                         //@synthesize additionalRecordSources=_additionalRecordSources - In the implementation block
@property (nonatomic,copy,readonly) NSArray * networkEvents; 
@property (assign,nonatomic) char shouldBypassRecordSourcePersistence;                  //@synthesize shouldBypassRecordSourcePersistence=_shouldBypassRecordSourcePersistence - In the implementation block
@property (nonatomic,copy) id cachedRecordsLookupBlock;                                 //@synthesize cachedRecordsLookupBlock=_cachedRecordsLookupBlock - In the implementation block
@property (nonatomic,copy) id recordChainCompletionHandler;                             //@synthesize recordChainCompletionHandler=_recordChainCompletionHandler - In the implementation block
-(id)init;
-(id<FCContentContext>)context;
-(void)setContext:(id<FCContentContext>)arg1 ;
-(void)performOperation;
-(void)prepareOperation;
-(NSArray *)networkEvents;
-(char)validateOperation;
-(void)operationWillFinishWithError:(id)arg1 ;
-(void)setAdditionalRecordSources:(NSArray *)arg1 ;
-(void)setTopLevelRecordIDs:(NSArray *)arg1 ;
-(void)setLinkKeysByRecordType:(NSDictionary *)arg1 ;
-(void)setEdgeCacheHint:(FCEdgeCacheHint *)arg1 ;
-(void)setDynamicCachePolicyBlock:(id)arg1 ;
-(void)setShouldReturnErrorWhenSomeRecordsMissing:(char)arg1 ;
-(void)setRecordChainCompletionHandler:(id)arg1 ;
-(void)setCachePoliciesByRecordType:(NSDictionary *)arg1 ;
-(NSDictionary *)linkKeysByRecordType;
-(NSArray *)additionalRecordSources;
-(NSArray *)topLevelRecordIDs;
-(id)recordChainCompletionHandler;
-(char)shouldBypassRecordSourcePersistence;
-(id)cachedRecordsLookupBlock;
-(id)dynamicCachePolicyBlock;
-(NSDictionary *)cachePoliciesByRecordType;
-(char)shouldReturnErrorWhenSomeRecordsMissing;
-(FCEdgeCacheHint *)edgeCacheHint;
-(char)shouldFailOnLimitExceededError;
-(void)setShouldFailOnLimitExceededError:(char)arg1 ;
-(void)setShouldBypassRecordSourcePersistence:(char)arg1 ;
-(void)setCachedRecordsLookupBlock:(id)arg1 ;
@end

