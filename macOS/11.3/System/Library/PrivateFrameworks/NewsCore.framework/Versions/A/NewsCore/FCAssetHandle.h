/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:37 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/NewsCore.framework/Versions/A/NewsCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FCContentArchivable.h>

@protocol FCAssetDataProvider, OS_dispatch_group, FCAssetHandleDelegate;
@class NSError, NSURL, FCOperation, NSHashTable, NSObject, NSDate, NFUnfairLock, FCInterestToken, NSString, NTPBAsset, FCContentArchive;

@interface FCAssetHandle : NSObject <FCContentArchivable> {

	id<FCAssetDataProvider> _dataProvider;
	NSError* _downloadError;
	NSURL* _remoteURL;
	FCOperation* _fetchOperation;
	NSHashTable* _downloadRequests;
	NSObject*<OS_dispatch_group> _fetchGroup;
	unsigned long long _countOfPenalizedDownloadAttempts;
	NSDate* _dateOfLastDownloadAttempt;
	NFUnfairLock* _stateLock;
	id<FCAssetHandleDelegate> _delegate;
	FCInterestToken* _holdToken;
	NSString* _assetKey;
	long long _lifetimeHint;
	NSString* _rawFilePath;
	NTPBAsset* _assetMetadata;

}

@property (retain) id<FCAssetDataProvider> dataProvider;                       //@synthesize dataProvider=_dataProvider - In the implementation block
@property (copy,readonly) NSString * filePath; 
@property (readonly) NSError * downloadError; 
@property (nonatomic,copy,readonly) NSString * uniqueKey; 
@property (nonatomic,readonly) NSURL * remoteURL; 
@property (nonatomic,readonly) FCContentArchive * contentArchive; 
-(void)dealloc;
-(NSString *)filePath;
-(NSError *)downloadError;
-(id<FCAssetDataProvider>)dataProvider;
-(NSString *)uniqueKey;
-(NSURL *)remoteURL;
-(void)setDataProvider:(id<FCAssetDataProvider>)arg1 ;
-(FCContentArchive *)contentArchive;
-(id)downloadIfNeededWithCompletion:(/*^block*/id)arg1 ;
-(id)downloadIfNeededWithPriority:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(id)downloadIfNeededWithCompletionQueue:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)downloadIfNeededWithGroup:(id)arg1 ;
-(id)fetchDataProviderWithCompletion:(/*^block*/id)arg1 ;
-(id)fetchDataProviderWithPriority:(long long)arg1 completion:(/*^block*/id)arg2 ;
@end

