/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:17 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/UIKitServices.framework/Versions/A/UIKitServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKitServices/UIKitServices-Structs.h>
#import <libobjc.A.dylib/BSXPCCoding.h>

@class NSArray, NSString;

@interface UISApplicationInitializationContextParameters : NSObject <BSXPCCoding> {

	unsigned long long _supportedInterfaceOrientations;
	NSArray* _deviceFamilies;
	char _requiresFullScreen;
	char _supportsMultiwindow;
	CGSize _usableDisplaySizeHint;
	char _preferSmallerDisplaySize;

}

@property (assign,nonatomic) unsigned long long supportedInterfaceOrientations;              //@synthesize supportedInterfaceOrientations=_supportedInterfaceOrientations - In the implementation block
@property (nonatomic,copy) NSArray * deviceFamilies;                                         //@synthesize deviceFamilies=_deviceFamilies - In the implementation block
@property (assign,nonatomic) char requiresFullScreen;                                        //@synthesize requiresFullScreen=_requiresFullScreen - In the implementation block
@property (assign,nonatomic) char supportsMultiwindow;                                       //@synthesize supportsMultiwindow=_supportsMultiwindow - In the implementation block
@property (assign,nonatomic) CGSize usableDisplaySizeHint;                                   //@synthesize usableDisplaySizeHint=_usableDisplaySizeHint - In the implementation block
@property (assign,nonatomic) char preferSmallerDisplaySize;                                  //@synthesize preferSmallerDisplaySize=_preferSmallerDisplaySize - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(char)supportsMultiwindow;
-(NSArray *)deviceFamilies;
-(void)encodeWithXPCDictionary:(id)arg1 ;
-(id)initWithXPCDictionary:(id)arg1 ;
-(unsigned long long)supportedInterfaceOrientations;
-(void)setSupportedInterfaceOrientations:(unsigned long long)arg1 ;
-(void)setSupportsMultiwindow:(char)arg1 ;
-(CGSize)usableDisplaySizeHint;
-(void)setDeviceFamilies:(NSArray *)arg1 ;
-(char)requiresFullScreen;
-(void)setRequiresFullScreen:(char)arg1 ;
-(void)setUsableDisplaySizeHint:(CGSize)arg1 ;
-(void)setPreferSmallerDisplaySize:(char)arg1 ;
-(char)preferSmallerDisplaySize;
@end

