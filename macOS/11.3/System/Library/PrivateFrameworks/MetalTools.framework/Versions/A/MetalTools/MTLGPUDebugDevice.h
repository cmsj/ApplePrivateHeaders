/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MetalTools/MetalTools-Structs.h>
#import <MetalTools/MTLToolsDevice.h>

@protocol MTLRenderPipelineState, MTLDepthStencilState;
@class NSData, NSMutableArray;

@interface MTLGPUDebugDevice : MTLToolsDevice {

	MetalBufferHeap* bufferHeap;
	Options boundsCheckOptions;
	GPUDebugDeviceOptions deviceOptions;
	GPUDebugBufferDescriptorHeap* globalBufferHeap;
	GPUDebugConstantBufferCache* constantBufferCache;
	GlobalResidentBufferList* globalICBBufferResidentList;
	NSData* _boundsCheckOptionsData;
	NSMutableArray* _argumentDescriptors;
	once_flag _deviceInitFlag;
	once_flag _icbPipelineInit;
	id<MTLRenderPipelineState> _icbInheritVertexPipelineState;
	id<MTLRenderPipelineState> _icbInheritNoneVertexPipelineState;
	id<MTLRenderPipelineState> _icbInheritBuffersVertexPipelineState;
	id<MTLDepthStencilState> _icbDepthStencilState;

}

@property (nonatomic,readonly) id<MTLRenderPipelineState> ICB_Inherit_PSO_VertexPipelineState; 
@property (nonatomic,readonly) id<MTLRenderPipelineState> ICB_Inherit_None_VertexPipelineState; 
@property (nonatomic,readonly) id<MTLRenderPipelineState> ICB_Inherit_Buffers_VertexPipelineState; 
@property (nonatomic,readonly) id<MTLDepthStencilState> ICB_DepthStencilState; 
-(void)dealloc;
-(id)initWithBaseObject:(id)arg1 parent:(id)arg2 ;
-(id<MTLRenderPipelineState>)ICB_Inherit_PSO_VertexPipelineState;
-(id<MTLDepthStencilState>)ICB_DepthStencilState;
-(id<MTLRenderPipelineState>)ICB_Inherit_None_VertexPipelineState;
-(id<MTLRenderPipelineState>)ICB_Inherit_Buffers_VertexPipelineState;
-(id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 ;
-(id)newInternalBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 ;
-(id)newArgumentEncoderWithArguments:(id)arg1 ;
-(id)_modifyPluginData:(id)arg1 ;
-(void)_modifyCompileOptions:(unsigned long long*)arg1 ;
-(void)_modifyRenderPipelineDescriptor:(id)arg1 ;
-(void)_modifyComputePipelineDescriptor:(id)arg1 ;
-(void)_modifyTileRenderPipelineDescriptor:(id)arg1 ;
-(id)newCommandQueueWithDescriptor:(id)arg1 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(id)unwrapAndModifyRenderPipelineDescriptor:(id)arg1 options:(unsigned long long*)arg2 ;
-(void)onRenderPipelineCreated:(id)arg1 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)unwrapAndModifyTileRenderPipelineDescriptor:(id)arg1 options:(unsigned long long*)arg2 ;
-(id)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(void)newRenderPipelineStateWithTileDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(id)unwrapAndModifyComputePipelineDescriptor:(id)arg1 options:(unsigned long long*)arg2 ;
-(void)onComputePipelineCreated:(id)arg1 ;
-(void)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(void)newComputePipelineStateWithDescriptor:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCommandCount:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
-(id)newLibraryWithCIFiltersForComputePipeline:(id)arg1 imageFilterFunctionInfo:(const SCD_Struct_MT50*)arg2 error:(id*)arg3 ;
-(id)newLibraryWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const SCD_Struct_MT50*)arg2 error:(id*)arg3 ;
-(id)newLibraryWithCIFilters:(id)arg1 imageFilterFunctionInfo:(const SCD_Struct_MT50*)arg2 error:(id*)arg3 ;
-(id)newDefaultLibrary;
-(id)newDefaultLibraryWithBundle:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithDAG:(id)arg1 functions:(id)arg2 error:(id*)arg3 ;
-(id)newLibraryWithFile:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithData:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithURL:(id)arg1 error:(id*)arg2 ;
-(id)newLibraryWithSource:(id)arg1 options:(id)arg2 error:(id*)arg3 ;
-(void)newLibraryWithSource:(id)arg1 options:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newBinaryArchiveWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(id)newBinaryLibraryWithOptions:(unsigned long long)arg1 url:(id)arg2 error:(id*)arg3 ;
-(id)newBufferWithBytes:(const void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
-(id)newBufferWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 deallocator:(/*^block*/id)arg4 ;
-(id)newHeapWithDescriptor:(id)arg1 ;
-(id)newArgumentEncoderWithArguments:(id)arg1 structType:(id*)arg2 ;
-(char)supportsGFXIndirectCommandBuffers;
-(char)supportsBinaryArchives;
-(char)supportsFunctionPointers;
-(id)newStageBufferArgumentEncoder;
-(id)newStageArgumentBuffer;
-(id)newCommandQueue;
-(id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)arg1 ;
-(id)newRenderPipelineStateWithDescriptor:(id)arg1 error:(id*)arg2 ;
-(void)newRenderPipelineStateWithDescriptor:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)newRenderPipelineStateWithTileDescriptor:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)newRenderPipelineStateWithTileDescriptor:(id)arg1 error:(id*)arg2 ;
-(id)newComputePipelineStateWithFunction:(id)arg1 error:(id*)arg2 ;
-(void)newComputePipelineStateWithFunction:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 reflection:(id*)arg3 error:(id*)arg4 ;
-(id)newBufferWithIOSurface:(IOSurfaceRef)arg1 ;
-(id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 gpuAddress:(unsigned long long)arg3 ;
-(id)newBufferWithBytes:(const void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 gpuAddress:(unsigned long long)arg4 ;
-(id)newBufferWithBytesNoCopy:(void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 gpuAddress:(unsigned long long)arg4 deallocator:(/*^block*/id)arg5 ;
-(id)newArgumentEncoderWithLayout:(id)arg1 ;
-(char)supportsArgumentBuffersTier2;
-(char)supportsCMPIndirectCommandBuffers;
-(char)supportsRaytracing;
-(char)supportsBinaryLibraries;
-(char)supportsBinaryFunctionPointers;
-(char)supportsDynamicLibraries;
@end

