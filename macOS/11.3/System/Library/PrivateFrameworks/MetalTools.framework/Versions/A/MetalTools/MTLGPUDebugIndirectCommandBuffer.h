/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:55 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MetalTools/MTLToolsIndirectCommandBuffer.h>

@protocol MTLBuffer;
@interface MTLGPUDebugIndirectCommandBuffer : MTLToolsIndirectCommandBuffer {

	BOOL _hasRender;
	BOOL _inheritsBuffers;
	BOOL _inheritsPipelineState;
	id<MTLBuffer> _argumentStorage;
	id<MTLBuffer> _drawIDBuffer;
	unsigned short _maxCommands;
	unsigned char _maxVertexBindings;
	unsigned char _maxFragmentBindings;
	unsigned short _commandByteStride;
	unsigned long long _originalResourceOptions;

}

@property (nonatomic,readonly) id<MTLBuffer> internalICBBuffer; 
@property (nonatomic,readonly) id<MTLBuffer> internalDrawIDBuffer; 
@property (nonatomic,readonly) unsigned long long maxCommands; 
@property (nonatomic,readonly) unsigned long long maxVertexBindings; 
@property (nonatomic,readonly) unsigned long long maxFragmentBindings; 
@property (nonatomic,readonly) unsigned long long commandByteStride; 
@property (nonatomic,readonly) char inheritsPipelineState; 
@property (nonatomic,readonly) char inheritsBuffers; 
-(void)dealloc;
-(char)inheritsBuffers;
-(char)inheritsPipelineState;
-(id<MTLBuffer>)internalICBBuffer;
-(id<MTLBuffer>)internalDrawIDBuffer;
-(unsigned long long)maxVertexBindings;
-(unsigned long long)maxFragmentBindings;
-(id)indirectComputeCommandAtIndex:(unsigned long long)arg1 ;
-(id)indirectRenderCommandAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)storageMode;
-(unsigned long long)cpuCacheMode;
-(unsigned long long)hazardTrackingMode;
-(unsigned long long)resourceOptions;
-(id)initWithIndirectCommandBuffer:(id)arg1 descriptor:(id)arg2 maxCommandCount:(unsigned long long)arg3 resourceOptions:(unsigned long long)arg4 device:(id)arg5 ;
-(void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3 forStage:(unsigned long long)arg4 commandIndex:(unsigned long long)arg5 ;
-(void)setRenderPipelineStateBuffers:(id)arg1 commandIndex:(unsigned long long)arg2 ;
-(void)setTessellationControlPointIndexBuffer:(id)arg1 offset:(unsigned long long)arg2 commandIndex:(unsigned long long)arg3 ;
-(unsigned long long)maxCommands;
-(unsigned long long)commandByteStride;
-(void)onExecuteWithRenderEncoder:(id)arg1 ;
-(void)onExecuteWithComputeEncoder:(id)arg1 ;
@end

