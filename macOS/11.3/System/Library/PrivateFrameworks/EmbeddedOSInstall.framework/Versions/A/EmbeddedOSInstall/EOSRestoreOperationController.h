/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:03 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/EmbeddedOSInstall.framework/Versions/A/EmbeddedOSInstall
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
@class NSError, EOSRestoreRequest, NSString, NSArray, NSObject, EOSOperation, NSDate;

@interface EOSRestoreOperationController : NSObject {

	char _logProgress;
	NSError* _error;
	EOSRestoreRequest* _request;
	NSString* _action;
	NSArray* _operations;
	NSObject*<OS_dispatch_queue> _operationQueue;
	long long _currentPhase;
	EOSOperation* _currentOperation;
	/*^block*/id _progressHandler;
	NSObject*<OS_dispatch_source> _progressTimer;
	double _completedTime;
	double _totalEstimatedTime;
	NSDate* _lastTimeRemainingEstimate;

}

@property (retain) EOSRestoreRequest * request;                              //@synthesize request=_request - In the implementation block
@property (retain) NSString * action;                                        //@synthesize action=_action - In the implementation block
@property (retain) NSArray * operations;                                     //@synthesize operations=_operations - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> operationQueue;              //@synthesize operationQueue=_operationQueue - In the implementation block
@property (retain) NSError * error;                                          //@synthesize error=_error - In the implementation block
@property (assign) long long currentPhase;                                   //@synthesize currentPhase=_currentPhase - In the implementation block
@property (assign) EOSOperation * currentOperation;                          //@synthesize currentOperation=_currentOperation - In the implementation block
@property (copy) id progressHandler;                                         //@synthesize progressHandler=_progressHandler - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> progressTimer;              //@synthesize progressTimer=_progressTimer - In the implementation block
@property (assign) double completedTime;                                     //@synthesize completedTime=_completedTime - In the implementation block
@property (assign) double totalEstimatedTime;                                //@synthesize totalEstimatedTime=_totalEstimatedTime - In the implementation block
@property (retain) NSDate * lastTimeRemainingEstimate;                       //@synthesize lastTimeRemainingEstimate=_lastTimeRemainingEstimate - In the implementation block
@property (assign) char logProgress;                                         //@synthesize logProgress=_logProgress - In the implementation block
-(id)init;
-(void)addOperation:(id)arg1 ;
-(NSError *)error;
-(NSString *)action;
-(void)setError:(NSError *)arg1 ;
-(void)setAction:(NSString *)arg1 ;
-(EOSRestoreRequest *)request;
-(NSObject*<OS_dispatch_queue>)operationQueue;
-(void)setOperationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(EOSOperation *)currentOperation;
-(NSArray *)operations;
-(double)_timeRemaining;
-(void)setCurrentOperation:(EOSOperation *)arg1 ;
-(void)setRequest:(EOSRestoreRequest *)arg1 ;
-(void)setProgressHandler:(id)arg1 ;
-(id)progressHandler;
-(void)_updateProgress;
-(void)setOperations:(NSArray *)arg1 ;
-(unsigned)_createPowerAssertion;
-(NSObject*<OS_dispatch_source>)progressTimer;
-(void)setProgressTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(id)initWithRequest:(id)arg1 action:(id)arg2 progressHandler:(/*^block*/id)arg3 ;
-(void)runOperations;
-(double)totalEstimatedTime;
-(void)setTotalEstimatedTime:(double)arg1 ;
-(void)_startProgressTimer;
-(void)setCurrentPhase:(long long)arg1 ;
-(double)completedTime;
-(void)setCompletedTime:(double)arg1 ;
-(void)_cancelProgressTimer;
-(long long)currentPhase;
-(void)_releasePowerAssertionWithID:(unsigned)arg1 ;
-(char)logProgress;
-(float)_progressPercentage;
-(NSDate *)lastTimeRemainingEstimate;
-(void)setLastTimeRemainingEstimate:(NSDate *)arg1 ;
-(void)setLogProgress:(char)arg1 ;
@end

