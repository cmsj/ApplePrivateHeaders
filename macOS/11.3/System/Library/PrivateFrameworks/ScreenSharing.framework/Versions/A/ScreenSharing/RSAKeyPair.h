/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:26 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ScreenSharing.framework/Versions/A/ScreenSharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ScreenSharing/ScreenSharing-Structs.h>
#import <libobjc.A.dylib/RSAKeyPairProtocol.h>

@class NSData, NSString;

@interface RSAKeyPair : NSObject <RSAKeyPairProtocol> {

	_SecKey* rsaPublicKey;
	_SecKey* rsaPrivateKey;
	NSData* rsaPrivateKeyData;
	NSData* rsaPublicKeyData;

}

@property (retain) NSData * rsaPrivateKeyData; 
@property (retain) NSData * rsaPublicKeyData; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)appName;
+(id)basePath;
+(_SecKey*)importRSAPublicKey:(id)arg1 label:(id)arg2 ;
+(SecKeychainRef)privateKeyKeychain;
+(_SecKey*)fetchKeyFromKeychainWithName:(id)arg1 class:(id)arg2 ;
+(void)RaiseEUID:(const char*)arg1 ;
+(id)keysPath;
+(void)LowerEUID:(const char*)arg1 ;
+(id)privateKeychainPath;
+(void)removePrivateKeychain;
+(SecKeychainRef)openKeychainWithPath:(const char*)arg1 private:(char)arg2 ;
+(unsigned char)rsaKeyPairSimpleHash:(id)arg1 ;
+(id)rsaPublicKeyStoragePath;
+(id)pathForRSAPublicKeyWithLabel:(id)arg1 ;
+(id)keySubpath;
+(char)saveRSAPublicKey:(id)arg1 label:(id)arg2 ;
+(_SecKey*)secKeyRefFromKeyData:(id)arg1 ;
+(id)loadRSAPublicKeyWithLabel:(id)arg1 ;
+(void)TerminateApp;
+(_SecKey*)retrieveRSAPublicKeyWithLabel:(id)arg1 ;
+(void)removeRSAPublicKeyWithLabel:(id)arg1 ;
+(id)encryptWithKey:(_SecKey*)arg1 data:(const char*)arg2 length:(long long)arg3 ;
-(void)dealloc;
-(id)init;
-(_SecKey*)publicKey;
-(_SecKey*)privateKey;
-(id)decrypt:(id)arg1 ;
-(void)freeKeys;
-(void)setRsaPrivateKeyData:(NSData *)arg1 ;
-(void)setRsaPublicKeyData:(NSData *)arg1 ;
-(void)purgeKeyPair;
-(_SecKey*)publicKeyFromKeychain;
-(_SecKey*)privateKeyFromKeychain;
-(id)exportedRSAPublicKeyNoCache:(_SecKey*)arg1 ;
-(NSData *)rsaPublicKeyData;
-(id)exportedRSAPrivateKeyNoCache:(_SecKey*)arg1 ;
-(NSData *)rsaPrivateKeyData;
-(_SecKey*)publicKeyFromCache;
-(_SecKey*)privateKeyFromCache;
-(char)generateKeyPairWithKeySize:(id)arg1 ;
-(id)attributesForPrivateKey;
-(id)preferredKeySizeInBits;
-(char)makeKeysWithKeySize:(id)arg1 ;
-(void)deprecateKeyPair:(int)arg1 ;
-(id)exportedRSAPublicKey;
-(char)loadAndVerifyKeys;
-(id)encrypt:(const char*)arg1 length:(long long)arg2 ;
@end

