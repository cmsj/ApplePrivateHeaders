/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:26 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ScreenSharing.framework/Versions/A/ScreenSharing
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ScreenSharing/ScreenSharing-Structs.h>
#import <AppKit/NSView.h>
#import <libobjc.A.dylib/IDSSessionDelegate.h>
#import <libobjc.A.dylib/SSConnectionProgressViewControllerDelegate.h>
#import <libobjc.A.dylib/SSSessionSelectViewControllerDelegate.h>
#import <libobjc.A.dylib/SSCurtainMessageViewControllerDelegate.h>
#import <libobjc.A.dylib/SSConnectionPromptObserver.h>
#import <libobjc.A.dylib/AVConferenceDelegate.h>
#import <libobjc.A.dylib/AVCRemoteVideoClientDelegate.h>
#import <libobjc.A.dylib/CALayerDelegate.h>
#import <libobjc.A.dylib/SSSessionDelegate.h>
#import <libobjc.A.dylib/SSFrameBufferViewDelegate.h>
#import <libobjc.A.dylib/SSAddressResolutionObserver.h>
#import <libobjc.A.dylib/SSCredentialsRequester.h>
#import <libobjc.A.dylib/SSFadeViewDelegate.h>
#import <libobjc.A.dylib/NSWindowDelegate.h>
#import <libobjc.A.dylib/NSWindowRestoration.h>

@protocol OS_dispatch_semaphore, SSSessionFileTransferDelegate, SSSessionViewDelegate;
@class NSOrderedSet, NSShadow, NSObject, NSCursor, SSSession, SSFrameBufferView, SSPanningScrollView, SSFadeView, SSConnectionWindowController, SSSessionSelectViewController, SSConnectionProgressViewController, SSConnectionAddressViewController, SSConnectionAuthenticationViewController, NSString, SSCredentials, NSMutableOrderedSet, NSDate, NSArray, NSMutableArray, NSTimer, NSTrackingArea, NSMutableDictionary, CALayer, IDSSession, NSImage, AVConference, AVCRemoteVideoClient, SSScreenInfo, SSBorderView, SSCurtainMessageViewController, SSNotificationOverlayViewController, NSXPCConnection, NWDatagramConnection, NWConnectionManager, NSDictionary, NSNumber, IDSService, NSView;

@interface SSSessionView : NSView <IDSSessionDelegate, SSConnectionProgressViewControllerDelegate, SSSessionSelectViewControllerDelegate, SSCurtainMessageViewControllerDelegate, SSConnectionPromptObserver, AVConferenceDelegate, AVCRemoteVideoClientDelegate, CALayerDelegate, SSSessionDelegate, SSFrameBufferViewDelegate, SSAddressResolutionObserver, SSCredentialsRequester, SSFadeViewDelegate, NSWindowDelegate, NSWindowRestoration> {

	NSOrderedSet* _preferredURLs;
	long long _callID;
	double _borderSpacing;
	double _borderWidth;
	CGColorRef _borderColor;
	NSShadow* _borderShadow;
	NSObject*<OS_dispatch_semaphore> _AVConferenceSemaphore;
	NSObject*<OS_dispatch_semaphore> _AVConferenceJ99Semaphore;
	NSObject*<OS_dispatch_semaphore> _stopCallIDSemaphore;
	char _assistModeWithMouseUp;
	char _curtained;
	char _shouldShowCursorForUnknownCursorState;
	char quarantined;
	char _fillsWindow;
	char _shouldSharePasteboard;
	char _shouldAllowSendPasteboard;
	char _allowsFileTransferToRemote;
	char _allowsFileTransferFromRemote;
	char allowsSSHTunnelForLegacyVNC;
	char shouldWarnUserForUnencryptedLegacyVNC;
	char hasEntireScreen;
	char shouldReauthenticate;
	char isOffConsole;
	char showingFullScreenMenuBar;
	char simulatingLiveResize;
	char isUsingVirtualDisplay;
	char clientChangedCurtainMode;
	char userEndedConnection;
	char shouldNotifyOfFailureToEnterCurtainMode;
	char shouldNotifyOfFailureToExitCurtainMode;
	char userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC;
	char animatingResize;
	char switchedDisplay;
	char changingFullScreenMode;
	char mouseButtonIsDown;
	char menuBarIsLocked;
	char loggedAppleIDEndSessionMessage;
	char userClosedSessionWindow;
	char _idsInviteAcceptedWithScreenSharingQRService;
	char _useAVConference;
	char _hasUnknownCursorState;
	BOOL _audioChatStatusFromAgent;
	BOOL _audioMuteStatusFromAgent;
	char _AVConferenceVideoAtttributesSet;
	char _sessionAllowsControl;
	char _requestedControl;
	char _canToggleCurtainMode;
	char _shouldNotifyOfVirtualDisplayStateChange;
	char _shouldNotifyOfAllowsControlStateChange;
	char _shouldSuppressFirstControlStateOverlay;
	char _deferredRequestUpdates;
	char _shouldSkipAddressWindow;
	char _stoppingSession;
	char _AppleIDInviteWasAcceptedOrDeclined;
	char _audioCanBeEnabled;
	char _sessionPaused;
	int sessionState;
	unsigned _desiredLayerRotation;
	long long _controlMode;
	NSCursor* _observeCursor;
	NSCursor* _hilightCursor;
	NSCursor* _controlCursor;
	id<SSSessionFileTransferDelegate> _fileTransferDelegate;
	SSSession* session;
	SSFrameBufferView* frameBufferView;
	SSPanningScrollView* scrollView;
	SSFadeView* reconnectOverlay;
	SSConnectionWindowController* connectionWindowController;
	SSSessionSelectViewController* sessionSelectViewController;
	SSConnectionProgressViewController* connectionProgressViewController;
	SSConnectionAddressViewController* connectionAddressViewController;
	SSConnectionAuthenticationViewController* connectionAuthenticationViewController;
	OpaqueEventHandlerRefRef menuAutoShowEventHandler;
	NSString* currentConsoleUser;
	long long chosenSessionSelectionAction;
	NSString* requestConsoleCommand;
	SSCredentials* cachedCredentials;
	NSMutableOrderedSet* availableKerberosIdentities;
	NSDate* resolveStartTime;
	NSString* bonjourDisplayName;
	NSArray* resolvedAddresses;
	NSString* userEnteredAddressString;
	NSString* cachedURL;
	NSMutableArray* attemptedAuthTypes;
	NSString* kerberosClientPrincipal;
	NSString* lastRetainedKerberosClientPrincipal;
	NSTimer* connectionProgressTimer;
	NSTimer* connectionProgressTimeoutTimer;
	NSTrackingArea* menuBarTrackingArea;
	NSMutableDictionary* netAuthContext;
	CALayer* AVConferenceVideoLayer;
	IDSSession* _idsSession;
	IDSSession* _idsSessionOSX_QR;
	IDSSession* _idsSessionThatWasAccepted;
	IDSSession* _idsSessionThatWasDeclined;
	id<SSSessionViewDelegate> _delegate;
	NSArray* _screens;
	NSImage* _userPicture;
	double _lastResignTime;
	id _connectionToInvitationAgent;
	NSString* _connectionIDFromInvitationAgent;
	AVConference* _avConference;
	AVCRemoteVideoClient* _remoteVideoClient;
	SSScreenInfo* __selectedScreen;
	SSBorderView* __borderView;
	SSCurtainMessageViewController* _curtainMessageViewController;
	SSNotificationOverlayViewController* _overlayNotificationViewController;
	NSXPCConnection* _xpcConnection;
	NSString* _curtainMessage;
	NSMutableOrderedSet* _attemptedURLs;
	NSOrderedSet* _preferredCredentials;
	NSMutableOrderedSet* _attemptedCredentials;
	NSArray* _unresolvedAddresses;
	NSTimer* _menuBarUnlockTimer;
	NSMutableArray* _cursorTrackingAreas;
	unsigned long long _menuBarLockCounter;
	NWDatagramConnection* _datagramConnection;
	NWConnectionManager* _datagramConnectionManager;
	NSDictionary* _AVConferenceAcceptDictionary;
	NSNumber* _osVersion;
	NSString* _osType;
	double _occlusionScaleFactor;
	IDSService* _serviceMessageIDSService;
	NSString* _serviceMessageDestination;
	CGRect _screenFrame;
	CGRect _deferredRequestFrameRect;
	CGRect _occlusionFrame;
	SSOrientationDetails savedScreenOrientation;

}

@property (assign) long long _controlMode;                                                                         //@synthesize controlMode=_controlMode - In the implementation block
@property (assign) char _curtained;                                                                                //@synthesize curtained=_curtained - In the implementation block
@property (assign) char _shouldShowCursorForUnknownCursorState;                                                    //@synthesize shouldShowCursorForUnknownCursorState=_shouldShowCursorForUnknownCursorState - In the implementation block
@property (retain) NSCursor * _observeCursor;                                                                      //@synthesize observeCursor=_observeCursor - In the implementation block
@property (retain) NSCursor * _hilightCursor;                                                                      //@synthesize hilightCursor=_hilightCursor - In the implementation block
@property (retain) NSCursor * _controlCursor;                                                                      //@synthesize controlCursor=_controlCursor - In the implementation block
@property (assign) char _fillsWindow;                                                                              //@synthesize fillsWindow=_fillsWindow - In the implementation block
@property (assign) char _shouldSharePasteboard;                                                                    //@synthesize shouldSharePasteboard=_shouldSharePasteboard - In the implementation block
@property (assign) char _shouldAllowSendPasteboard;                                                                //@synthesize shouldAllowSendPasteboard=_shouldAllowSendPasteboard - In the implementation block
@property (assign) char _allowsFileTransferToRemote;                                                               //@synthesize allowsFileTransferToRemote=_allowsFileTransferToRemote - In the implementation block
@property (assign) char _allowsFileTransferFromRemote;                                                             //@synthesize allowsFileTransferFromRemote=_allowsFileTransferFromRemote - In the implementation block
@property (assign) id<SSSessionFileTransferDelegate> _fileTransferDelegate;                                        //@synthesize fileTransferDelegate=_fileTransferDelegate - In the implementation block
@property (retain) SSScreenInfo * _selectedScreen;                                                                 //@synthesize _selectedScreen=__selectedScreen - In the implementation block
@property (copy) NSArray * screens;                                                                                //@synthesize screens=_screens - In the implementation block
@property (retain) NSImage * userPicture;                                                                          //@synthesize userPicture=_userPicture - In the implementation block
@property (assign) char hasUnknownCursorState;                                                                     //@synthesize hasUnknownCursorState=_hasUnknownCursorState - In the implementation block
@property (retain) SSSession * session; 
@property (retain) SSFrameBufferView * frameBufferView; 
@property (retain) SSPanningScrollView * scrollView; 
@property (retain) SSBorderView * _borderView;                                                                     //@synthesize _borderView=__borderView - In the implementation block
@property (retain) SSFadeView * reconnectOverlay; 
@property (retain) SSSessionSelectViewController * sessionSelectViewController; 
@property (retain) SSConnectionProgressViewController * connectionProgressViewController; 
@property (retain) SSConnectionAddressViewController * connectionAddressViewController; 
@property (retain) SSConnectionAuthenticationViewController * connectionAuthenticationViewController; 
@property (retain) SSCurtainMessageViewController * curtainMessageViewController;                                  //@synthesize curtainMessageViewController=_curtainMessageViewController - In the implementation block
@property (retain) SSNotificationOverlayViewController * overlayNotificationViewController;                        //@synthesize overlayNotificationViewController=_overlayNotificationViewController - In the implementation block
@property (retain) NSXPCConnection * xpcConnection;                                                                //@synthesize xpcConnection=_xpcConnection - In the implementation block
@property (assign) OpaqueEventHandlerRefRef menuAutoShowEventHandler; 
@property (assign) int sessionState; 
@property (readonly) char isDisconnected; 
@property (readonly) char isNotConnected; 
@property (assign) char hasEntireScreen; 
@property (assign) char shouldReauthenticate; 
@property (assign) char sessionAllowsControl;                                                                      //@synthesize sessionAllowsControl=_sessionAllowsControl - In the implementation block
@property (assign) char requestedControl;                                                                          //@synthesize requestedControl=_requestedControl - In the implementation block
@property (assign) char isOffConsole; 
@property (assign) char canToggleCurtainMode;                                                                      //@synthesize canToggleCurtainMode=_canToggleCurtainMode - In the implementation block
@property (readonly) char isBonjourSession; 
@property (readonly) char isForcedViewer; 
@property (assign) char showingFullScreenMenuBar; 
@property (assign) char simulatingLiveResize; 
@property (assign) char isUsingVirtualDisplay; 
@property (assign) char clientChangedCurtainMode; 
@property (assign) char userEndedConnection; 
@property (assign) char shouldNotifyOfVirtualDisplayStateChange;                                                   //@synthesize shouldNotifyOfVirtualDisplayStateChange=_shouldNotifyOfVirtualDisplayStateChange - In the implementation block
@property (assign) char shouldNotifyOfFailureToEnterCurtainMode; 
@property (assign) char shouldNotifyOfFailureToExitCurtainMode; 
@property (assign) char shouldNotifyOfAllowsControlStateChange;                                                    //@synthesize shouldNotifyOfAllowsControlStateChange=_shouldNotifyOfAllowsControlStateChange - In the implementation block
@property (assign) char shouldSuppressFirstControlStateOverlay;                                                    //@synthesize shouldSuppressFirstControlStateOverlay=_shouldSuppressFirstControlStateOverlay - In the implementation block
@property (assign) char userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC; 
@property (getter=isAnimatingResize) char animatingResize; 
@property (assign) char deferredRequestUpdates;                                                                    //@synthesize deferredRequestUpdates=_deferredRequestUpdates - In the implementation block
@property (assign) CGRect deferredRequestFrameRect;                                                                //@synthesize deferredRequestFrameRect=_deferredRequestFrameRect - In the implementation block
@property (assign) char switchedDisplay; 
@property (assign) char shouldSkipAddressWindow;                                                                   //@synthesize shouldSkipAddressWindow=_shouldSkipAddressWindow - In the implementation block
@property (retain) NSTimer * connectionProgressTimer; 
@property (retain) NSTimer * connectionProgressTimeoutTimer; 
@property (copy) NSString * curtainMessage;                                                                        //@synthesize curtainMessage=_curtainMessage - In the implementation block
@property (copy) NSString * cachedURL; 
@property (copy) NSOrderedSet * preferredURLs; 
@property (retain) NSMutableOrderedSet * attemptedURLs;                                                            //@synthesize attemptedURLs=_attemptedURLs - In the implementation block
@property (retain) SSCredentials * cachedCredentials; 
@property (retain) NSMutableOrderedSet * availableKerberosIdentities; 
@property (copy) NSOrderedSet * preferredCredentials;                                                              //@synthesize preferredCredentials=_preferredCredentials - In the implementation block
@property (retain) NSMutableOrderedSet * attemptedCredentials;                                                     //@synthesize attemptedCredentials=_attemptedCredentials - In the implementation block
@property (copy) NSString * currentConsoleUser; 
@property (assign) long long chosenSessionSelectionAction; 
@property (copy) NSString * requestConsoleCommand; 
@property (copy) NSDate * resolveStartTime; 
@property (copy) NSString * bonjourDisplayName; 
@property (copy) NSArray * resolvedAddresses; 
@property (copy) NSArray * unresolvedAddresses;                                                                    //@synthesize unresolvedAddresses=_unresolvedAddresses - In the implementation block
@property (copy) NSString * userEnteredAddressString; 
@property (retain) NSMutableArray * attemptedAuthTypes; 
@property (retain) NSString * kerberosClientPrincipal; 
@property (retain) NSString * lastRetainedKerberosClientPrincipal; 
@property (readonly) CGSize contentSize; 
@property (readonly) CGRect sessionFrame; 
@property (readonly) char isFullScreen; 
@property (assign) char changingFullScreenMode; 
@property (assign) char mouseButtonIsDown; 
@property (assign) char menuBarIsLocked; 
@property (retain) NSTimer * menuBarUnlockTimer;                                                                   //@synthesize menuBarUnlockTimer=_menuBarUnlockTimer - In the implementation block
@property (retain) NSTrackingArea * menuBarTrackingArea; 
@property (retain) NSMutableArray * cursorTrackingAreas;                                                           //@synthesize cursorTrackingAreas=_cursorTrackingAreas - In the implementation block
@property (assign) unsigned long long menuBarLockCounter;                                                          //@synthesize menuBarLockCounter=_menuBarLockCounter - In the implementation block
@property (assign) char loggedAppleIDEndSessionMessage; 
@property (assign) char userClosedSessionWindow; 
@property (assign) CGRect screenFrame;                                                                             //@synthesize screenFrame=_screenFrame - In the implementation block
@property (retain) NWDatagramConnection * datagramConnection;                                                      //@synthesize datagramConnection=_datagramConnection - In the implementation block
@property (retain) NWConnectionManager * datagramConnectionManager;                                                //@synthesize datagramConnectionManager=_datagramConnectionManager - In the implementation block
@property (retain) NSDictionary * AVConferenceAcceptDictionary;                                                    //@synthesize AVConferenceAcceptDictionary=_AVConferenceAcceptDictionary - In the implementation block
@property (assign) char useAVConference;                                                                           //@synthesize useAVConference=_useAVConference - In the implementation block
@property (assign) char stoppingSession;                                                                           //@synthesize stoppingSession=_stoppingSession - In the implementation block
@property (assign) char AppleIDInviteWasAcceptedOrDeclined;                                                        //@synthesize AppleIDInviteWasAcceptedOrDeclined=_AppleIDInviteWasAcceptedOrDeclined - In the implementation block
@property (assign) char audioCanBeEnabled;                                                                         //@synthesize audioCanBeEnabled=_audioCanBeEnabled - In the implementation block
@property (assign) SSOrientationDetails savedScreenOrientation; 
@property (retain) NSNumber * osVersion;                                                                           //@synthesize osVersion=_osVersion - In the implementation block
@property (retain) NSString * osType;                                                                              //@synthesize osType=_osType - In the implementation block
@property (assign) unsigned desiredLayerRotation;                                                                  //@synthesize desiredLayerRotation=_desiredLayerRotation - In the implementation block
@property (assign) CGRect occlusionFrame;                                                                          //@synthesize occlusionFrame=_occlusionFrame - In the implementation block
@property (assign) double occlusionScaleFactor;                                                                    //@synthesize occlusionScaleFactor=_occlusionScaleFactor - In the implementation block
@property (assign) char sessionPaused;                                                                             //@synthesize sessionPaused=_sessionPaused - In the implementation block
@property (retain) IDSService * serviceMessageIDSService;                                                          //@synthesize serviceMessageIDSService=_serviceMessageIDSService - In the implementation block
@property (retain) NSString * serviceMessageDestination;                                                           //@synthesize serviceMessageDestination=_serviceMessageDestination - In the implementation block
@property (retain) IDSSession * idsSession;                                                                        //@synthesize idsSession=_idsSession - In the implementation block
@property (retain) IDSSession * idsSessionOSX_QR;                                                                  //@synthesize idsSessionOSX_QR=_idsSessionOSX_QR - In the implementation block
@property (retain) IDSSession * idsSessionThatWasAccepted;                                                         //@synthesize idsSessionThatWasAccepted=_idsSessionThatWasAccepted - In the implementation block
@property (readonly) char idsInviteAcceptedWithScreenSharingQRService;                                             //@synthesize idsInviteAcceptedWithScreenSharingQRService=_idsInviteAcceptedWithScreenSharingQRService - In the implementation block
@property (retain) IDSSession * idsSessionThatWasDeclined;                                                         //@synthesize idsSessionThatWasDeclined=_idsSessionThatWasDeclined - In the implementation block
@property (retain,readonly) NSView * borderView; 
@property (assign) id<SSSessionFileTransferDelegate> fileTransferDelegate; 
@property (assign) id<SSSessionViewDelegate> delegate;                                                             //@synthesize delegate=_delegate - In the implementation block
@property (readonly) char audioChatSupported; 
@property (readonly) char audioChatEnabled; 
@property (getter=isAudioChatMuted) char audioChatMuted; 
@property (assign) char fillsWindow; 
@property (assign) double borderSpacing; 
@property (assign) double borderWidth; 
@property (assign) CGColorRef borderColor; 
@property (assign) char shouldScaleScreen; 
@property (assign) char shouldSharePasteboard; 
@property (assign) char shouldAllowSendPasteboard; 
@property (getter=isCurtained) char curtained; 
@property (assign) long long controlMode; 
@property (retain) SSScreenInfo * selectedScreen; 
@property (assign) long long screenQualityMode; 
@property (retain) NSCursor * observeCursor; 
@property (retain) NSCursor * hilightCursor; 
@property (retain) NSCursor * controlCursor; 
@property (assign) char shouldShowCursorForUnknownCursorState; 
@property (assign) char quarantined; 
@property (assign) char allowsFileTransferToRemote; 
@property (assign) char allowsFileTransferFromRemote; 
@property (assign) char allowsSSHTunnelForLegacyVNC; 
@property (assign) char shouldWarnUserForUnencryptedLegacyVNC; 
@property (assign) char assistModeEnabled; 
@property (assign,nonatomic) char assistModeActive; 
@property (assign) char assistModeWithMouseUp; 
@property (assign,nonatomic) int assistPointerKind; 
@property (readonly) char isConnecting; 
@property (readonly) char isReconnecting; 
@property (readonly) char isConnected; 
@property (readonly) char isControlling; 
@property (readonly) char isSharingControl; 
@property (readonly) char isLegacyVNC; 
@property (readonly) char isSessionVisible; 
@property (readonly) char isGatheringAddressForConnection; 
@property (readonly) char isSelectingSession; 
@property (readonly) char isInLiveResize; 
@property (readonly) char supportsCopyPaste; 
@property (readonly) char supportsSharedPasteboard; 
@property (readonly) char supportsCurtainMode; 
@property (readonly) char supportsScalingScreen; 
@property (readonly) char supportsChangingScreenQualityMode; 
@property (readonly) char supportsControlMode; 
@property (readonly) char supportsControlModeRequest; 
@property (readonly) char supportsAssistMode; 
@property (readonly) char supportsFileTransfer; 
@property (readonly) char supportsViewerPause; 
@property (readonly) char supportsViewerAskToResume; 
@property (readonly) char supportsAskToPutTextIntoClipboard; 
@property (readonly) char supportsAskToOpenURL; 
@property (readonly) char supportsTextMessage; 
@property (readonly) char supportsAssistModeColorChange; 
@property (readonly) char supportsAssistModeDirectionChange; 
@property (readonly) char supportsAssistModeAnnotation; 
@property (readonly) char isAppleIDInvitationSession; 
@property (assign) double lastResignTime;                                                                          //@synthesize lastResignTime=_lastResignTime - In the implementation block
@property (retain) NSMutableDictionary * netAuthContext; 
@property (retain) id connectionToInvitationAgent;                                                                 //@synthesize connectionToInvitationAgent=_connectionToInvitationAgent - In the implementation block
@property (retain) NSString * connectionIDFromInvitationAgent;                                                     //@synthesize connectionIDFromInvitationAgent=_connectionIDFromInvitationAgent - In the implementation block
@property (assign) BOOL audioChatStatusFromAgent;                                                                  //@synthesize audioChatStatusFromAgent=_audioChatStatusFromAgent - In the implementation block
@property (assign) BOOL audioMuteStatusFromAgent;                                                                  //@synthesize audioMuteStatusFromAgent=_audioMuteStatusFromAgent - In the implementation block
@property (retain) SSConnectionWindowController * connectionWindowController; 
@property (retain) AVConference * avConference;                                                                    //@synthesize avConference=_avConference - In the implementation block
@property (retain) AVCRemoteVideoClient * remoteVideoClient;                                                       //@synthesize remoteVideoClient=_remoteVideoClient - In the implementation block
@property (retain) CALayer * AVConferenceVideoLayer; 
@property (assign) char AVConferenceVideoAtttributesSet;                                                           //@synthesize AVConferenceVideoAtttributesSet=_AVConferenceVideoAtttributesSet - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(char)isRedwoodApp;
+(id)colorizeImage:(id)arg1 withColor:(id)arg2 ;
+(id)connectionOptionsWithOptions:(id)arg1 urlOptions:(id)arg2 ;
+(char)screenSharingEnabledLocally;
+(id)keyPathsForValuesAffectingShouldScaleScreen;
+(id)keyPathsForValuesAffectingIsLegacyVNC;
+(id)keyPathsForValuesAffectingSupportsCopyPaste;
+(id)keyPathsForValuesAffectingSupportsSharedPasteboard;
+(id)keyPathsForValuesAffectingSupportsCurtainMode;
+(id)keyPathsForValuesAffectingSupportsScalingScreen;
+(id)keyPathsForValuesAffectingSupportsChangingScreenQualityMode;
+(id)keyPathsForValuesAffectingSupportsControlMode;
+(id)keyPathsForValuesAffectingRequestControl;
+(id)keyPathsForValuesAffectingSupportsControlModeRequest;
+(id)keyPathsForValuesAffectingSupportsFileTransfer;
+(id)keyPathsForValuesAffectingIsConnected;
+(id)keyPathsForValuesAffectingIsConnecting;
+(id)keyPathsForValuesAffectingIsReconnecting;
+(id)keyPathsForValuesAffectingIsDisconnected;
+(id)keyPathsForValuesAffectingIsNotConnected;
+(id)keyPathsForValuesAffectingControlMode;
+(id)keyPathsForValuesAffectingIsControlling;
+(id)keyPathsForValuesAffectingShouldSharePasteboard;
+(id)keyPathsForValuesAffectingCurtained;
+(id)keyPathsForValuesAffectingFillsWindow;
+(id)keyPathsForValuesAffectingAllowsFileTransferToRemote;
+(id)keyPathsForValuesAffectingAllowsFileTransferFromRemote;
+(id)keyPathsForValuesAffectingFileTransferDelegate;
+(id)keyPathsForValuesAffectingSelectedScreen;
-(void)dealloc;
-(NSString *)description;
-(id)initWithCoder:(id)arg1 ;
-(id<SSSessionViewDelegate>)delegate;
-(void)setDelegate:(id<SSSessionViewDelegate>)arg1 ;
-(NSXPCConnection *)xpcConnection;
-(void)setXpcConnection:(NSXPCConnection *)arg1 ;
-(id)displayName;
-(CGColorRef)borderColor;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NSArray *)screens;
-(void)setFrameSize:(CGSize)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)viewDidMoveToWindow;
-(SSPanningScrollView *)scrollView;
-(id)imageNamed:(id)arg1 ;
-(SSBorderView *)_borderView;
-(char)isConnected;
-(void)setBorderColor:(CGColorRef)arg1 ;
-(unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2 ;
-(void)mouseEntered:(id)arg1 ;
-(void)mouseExited:(id)arg1 ;
-(void)windowDidBecomeKey:(id)arg1 ;
-(void)setBorderWidth:(double)arg1 ;
-(char)windowShouldClose:(id)arg1 ;
-(char)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2 ;
-(CGSize)window:(id)arg1 willUseFullScreenContentSize:(CGSize)arg2 ;
-(void)window:(id)arg1 willEncodeRestorableState:(id)arg2 ;
-(void)windowDidResignKey:(id)arg1 ;
-(void)windowWillClose:(id)arg1 ;
-(void)windowDidMiniaturize:(id)arg1 ;
-(void)windowDidDeminiaturize:(id)arg1 ;
-(void)windowDidChangeScreenProfile:(id)arg1 ;
-(void)windowWillEnterFullScreen:(id)arg1 ;
-(void)windowDidEnterFullScreen:(id)arg1 ;
-(void)windowWillExitFullScreen:(id)arg1 ;
-(void)windowDidExitFullScreen:(id)arg1 ;
-(void)windowDidChangeOcclusionState:(id)arg1 ;
-(double)borderWidth;
-(CGSize)contentSize;
-(double)aspectRatio;
-(void)viewWillStartLiveResize;
-(void)viewDidEndLiveResize;
-(void)updateTrackingAreas;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(id)shadow;
-(void)setShadow:(id)arg1 ;
-(void)cursorUpdate:(id)arg1 ;
-(short)menuBarHeight;
-(void)viewDidHide;
-(void)viewDidUnhide;
-(void)setScrollView:(SSPanningScrollView *)arg1 ;
-(SSSession *)session;
-(void)commonInit;
-(void)setSession:(SSSession *)arg1 ;
-(void)connect;
-(NSString *)osType;
-(void)sessionStarted:(id)arg1 ;
-(void)sessionEnded:(id)arg1 withReason:(unsigned)arg2 error:(id)arg3 ;
-(void)session:(id)arg1 didReceiveData:(id)arg2 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4 ;
-(NSNumber *)osVersion;
-(char)isConnecting;
-(void)session:(id)arg1 receivedInvitationAcceptFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedInvitationDeclineFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedInvitationCancelFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedSessionMessageFromID:(id)arg2 withData:(id)arg3 ;
-(void)session:(id)arg1 receivedSessionEndFromID:(id)arg2 withData:(id)arg3 ;
-(int)sessionState;
-(void)setSessionState:(int)arg1 ;
-(void)setOsVersion:(NSNumber *)arg1 ;
-(char)isDisconnected;
-(char)isFullScreen;
-(char)isInLiveResize;
-(NSString *)cachedURL;
-(void)setCachedURL:(NSString *)arg1 ;
-(double)borderSpacing;
-(void)setBorderSpacing:(double)arg1 ;
-(void)focus;
-(void)connectWithOptions:(id)arg1 ;
-(void)closeSession;
-(char)isReconnecting;
-(NSView *)borderView;
-(void)conference:(id)arg1 didStartSession:(char)arg2 withUserInfo:(id)arg3 ;
-(void)conference:(id)arg1 didStopWithCallID:(long long)arg2 error:(id)arg3 ;
-(void)conference:(id)arg1 withCallID:(long long)arg2 remoteMediaStalled:(char)arg3 ;
-(void)conference:(id)arg1 receivedFirstRemoteFrameForCallID:(long long)arg2 ;
-(void)conference:(id)arg1 remoteVideoAttributesChanged:(id)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 remoteAudioPaused:(char)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 remoteVideoPaused:(char)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 remoteScreenAttributesChanged:(id)arg2 callID:(long long)arg3 ;
-(void)conference:(id)arg1 updateInputFrequencyLevel:(id)arg2 ;
-(void)conference:(id)arg1 updateOutputFrequencyLevel:(id)arg2 ;
-(void)conference:(id)arg1 inititiateRelayRequest:(long long)arg2 requestDict:(id)arg3 ;
-(void)conference:(id)arg1 sendRelayUpdate:(long long)arg2 updateDict:(id)arg3 ;
-(void)conference:(id)arg1 cancelRelayRequest:(long long)arg2 requestDict:(id)arg3 ;
-(void)conference:(id)arg1 videoQualityNotificationForCallID:(long long)arg2 isDegraded:(char)arg3 isRemote:(char)arg4 ;
-(void)conference:(id)arg1 withCallID:(long long)arg2 networkHint:(char)arg3 ;
-(void)serverDiedForConference:(id)arg1 ;
-(char)quarantined;
-(void)setQuarantined:(char)arg1 ;
-(IDSSession *)idsSession;
-(void)setIdsSession:(IDSSession *)arg1 ;
-(void)reconnectSessionAndResolve:(char)arg1 ;
-(void)setScreenQualityMode:(long long)arg1 ;
-(void)setSelectedScreen:(SSScreenInfo *)arg1 ;
-(void)setShouldScaleScreen:(char)arg1 ;
-(void)setShouldSharePasteboard:(char)arg1 ;
-(void)registerForSessionObservation;
-(void)setupFrameBufferView;
-(void)setOverlayNotificationViewController:(SSNotificationOverlayViewController *)arg1 ;
-(SSNotificationOverlayViewController *)overlayNotificationViewController;
-(void)setFillsWindow:(char)arg1 ;
-(void)setAssistModeEnabled:(char)arg1 ;
-(void)setAllowsFileTransferToRemote:(char)arg1 ;
-(void)setAllowsFileTransferFromRemote:(char)arg1 ;
-(void)setCanToggleCurtainMode:(char)arg1 ;
-(void)setSessionAllowsControl:(char)arg1 ;
-(void)setShouldShowCursorForUnknownCursorState:(char)arg1 ;
-(void)setChosenSessionSelectionAction:(long long)arg1 ;
-(void)setAttemptedAuthTypes:(NSMutableArray *)arg1 ;
-(void)setAttemptedCredentials:(NSMutableOrderedSet *)arg1 ;
-(void)setAttemptedURLs:(NSMutableOrderedSet *)arg1 ;
-(void)setCursorTrackingAreas:(NSMutableArray *)arg1 ;
-(void)handleScreenParameterChange:(id)arg1 ;
-(void)workspaceActiveSpaceChanged:(id)arg1 ;
-(SSFrameBufferView *)frameBufferView;
-(char)useAVConference;
-(void)setFrameBufferView:(SSFrameBufferView *)arg1 ;
-(char)isNotConnected;
-(void)clearSessionStateAndDisconnect:(char)arg1 ;
-(OpaqueEventHandlerRefRef)menuAutoShowEventHandler;
-(void)setMenuAutoShowEventHandler:(OpaqueEventHandlerRefRef)arg1 ;
-(NSTimer *)menuBarUnlockTimer;
-(void)setMenuBarUnlockTimer:(NSTimer *)arg1 ;
-(NSTimer *)connectionProgressTimer;
-(void)setConnectionProgressTimer:(NSTimer *)arg1 ;
-(NSTimer *)connectionProgressTimeoutTimer;
-(void)setConnectionProgressTimeoutTimer:(NSTimer *)arg1 ;
-(void)unregisterForSessionObservation;
-(void)setIdsSessionOSX_QR:(IDSSession *)arg1 ;
-(void)set_selectedScreen:(SSScreenInfo *)arg1 ;
-(void)setScreens:(NSArray *)arg1 ;
-(void)setUserPicture:(NSImage *)arg1 ;
-(void)setNetAuthContext:(NSMutableDictionary *)arg1 ;
-(void)setConnectionWindowController:(SSConnectionWindowController *)arg1 ;
-(SSConnectionAddressViewController *)connectionAddressViewController;
-(void)setConnectionAddressViewController:(SSConnectionAddressViewController *)arg1 ;
-(SSConnectionAuthenticationViewController *)connectionAuthenticationViewController;
-(void)setConnectionAuthenticationViewController:(SSConnectionAuthenticationViewController *)arg1 ;
-(SSConnectionProgressViewController *)connectionProgressViewController;
-(void)setConnectionProgressViewController:(SSConnectionProgressViewController *)arg1 ;
-(SSCurtainMessageViewController *)curtainMessageViewController;
-(void)setCurtainMessageViewController:(SSCurtainMessageViewController *)arg1 ;
-(SSSessionSelectViewController *)sessionSelectViewController;
-(void)setSessionSelectViewController:(SSSessionSelectViewController *)arg1 ;
-(void)set_borderView:(SSBorderView *)arg1 ;
-(void)setReconnectOverlay:(SSFadeView *)arg1 ;
-(void)setObserveCursor:(NSCursor *)arg1 ;
-(void)setHilightCursor:(NSCursor *)arg1 ;
-(void)setControlCursor:(NSCursor *)arg1 ;
-(void)setResolveStartTime:(NSDate *)arg1 ;
-(void)setBonjourDisplayName:(NSString *)arg1 ;
-(void)setCurtainMessage:(NSString *)arg1 ;
-(void)setPreferredURLs:(NSOrderedSet *)arg1 ;
-(void)setUserEnteredAddressString:(NSString *)arg1 ;
-(void)setResolvedAddresses:(NSArray *)arg1 ;
-(void)setUnresolvedAddresses:(NSArray *)arg1 ;
-(void)setCachedCredentials:(SSCredentials *)arg1 ;
-(void)setAvailableKerberosIdentities:(NSMutableOrderedSet *)arg1 ;
-(void)setPreferredCredentials:(NSOrderedSet *)arg1 ;
-(void)setCurrentConsoleUser:(NSString *)arg1 ;
-(void)setRequestConsoleCommand:(NSString *)arg1 ;
-(void)setAVConferenceVideoLayer:(CALayer *)arg1 ;
-(void)setAvConference:(AVConference *)arg1 ;
-(void)setRemoteVideoClient:(AVCRemoteVideoClient *)arg1 ;
-(void)setDatagramConnection:(NWDatagramConnection *)arg1 ;
-(void)setDatagramConnectionManager:(NWConnectionManager *)arg1 ;
-(void)setAVConferenceAcceptDictionary:(NSDictionary *)arg1 ;
-(void)setConnectionIDFromInvitationAgent:(NSString *)arg1 ;
-(void)setIdsSessionThatWasAccepted:(IDSSession *)arg1 ;
-(void)setIdsSessionThatWasDeclined:(IDSSession *)arg1 ;
-(void)setOsType:(NSString *)arg1 ;
-(void)setConnectionToInvitationAgent:(id)arg1 ;
-(void)setKerberosClientPrincipal:(NSString *)arg1 ;
-(void)setLastRetainedKerberosClientPrincipal:(NSString *)arg1 ;
-(void)setMenuBarTrackingArea:(NSTrackingArea *)arg1 ;
-(NSString *)userEnteredAddressString;
-(NSArray *)resolvedAddresses;
-(void)setShowingFullScreenMenuBar:(char)arg1 ;
-(void)lockMenuBar:(char)arg1 ;
-(void)resizeSessionToLargestPossibleSize;
-(char)showingFullScreenMenuBar;
-(char)fillsWindow;
-(void)resetToUnscruntchedFullScreenMode;
-(SSScreenInfo *)selectedScreen;
-(NSImage *)userPicture;
-(void)setHasUnknownCursorState:(char)arg1 ;
-(CGRect)sessionFrame;
-(CGRect)adjustedFrame:(CGRect)arg1 forUnscaledSize:(CGSize)arg2 withResultingScalingFactor:(double*)arg3 ;
-(void)resizeSessionForFrame:(CGRect)arg1 ;
-(int)orientationForCurrentAngle;
-(void)setShouldSkipAddressWindow:(char)arg1 ;
-(NSOrderedSet *)preferredURLs;
-(void)showConnectionAddressWindow;
-(void)set_curtained:(char)arg1 ;
-(void)showCurtainMessageWindow;
-(void)resolveURL:(id)arg1 ;
-(void)connectToURL:(id)arg1 withOptions:(id)arg2 ;
-(void)connectToURLs:(id)arg1 withOptions:(id)arg2 ;
-(void)requestSystemInfo:(int)arg1 args:(id)arg2 senderToken:(unsigned)arg3 ;
-(void)pauseScreenSharing;
-(void)requestToResumeScreenSharing;
-(void)requestToCopyTextToPasteboard:(id)arg1 ;
-(void)showMessageToUser:(id)arg1 ;
-(void)requestToOpenURL:(id)arg1 ;
-(CGImageRef)CGImageFromRemoteScreen;
-(void)armUnlockMenuBarTimer;
-(void)setMouseButtonIsDown:(char)arg1 ;
-(void)adjustShrinkModeForEvent:(id)arg1 ;
-(char)assistModeEnabled;
-(char)assistModeWithMouseUp;
-(void)setAssistModeActive:(char)arg1 ;
-(char)handleSSInputEvent:(id)arg1 ;
-(char)isSessionVisible;
-(SSConnectionWindowController *)connectionWindowController;
-(char)isWindowVisible:(id)arg1 ;
-(char)isAppleIDInvitationSession;
-(char)loggedAppleIDEndSessionMessage;
-(char)userClosedSessionWindow;
-(void)setLoggedAppleIDEndSessionMessage:(char)arg1 ;
-(void)endReconnectOverlay:(char)arg1 ;
-(char)closeOrReshowConnectionAddressWindow;
-(void)setStoppingSession:(char)arg1 ;
-(char)assistModeActive;
-(void)dismissNotificationOverlay;
-(void)setHasEntireScreen:(char)arg1 ;
-(AVConference *)avConference;
-(char)AppleIDInviteWasAcceptedOrDeclined;
-(IDSSession *)idsSessionOSX_QR;
-(NWConnectionManager *)datagramConnectionManager;
-(NWDatagramConnection *)datagramConnection;
-(void)releaseKerberosCredential;
-(NSMutableOrderedSet *)attemptedURLs;
-(NSMutableOrderedSet *)attemptedCredentials;
-(void)showReconnectOverlayView;
-(void)reconnectSessionAndResolve;
-(void)configureViewerForLocalContentsScale;
-(void)setUserClosedSessionWindow:(char)arg1 ;
-(void)configureInputEventConsumer;
-(char)isControlling;
-(void)cursorUpdateCore;
-(void)setLastResignTime:(double)arg1 ;
-(char)shouldScaleScreen;
-(double)occlusionScaleFactor;
-(CGRect)occlusionFrame;
-(void)setSimulatingLiveResize:(char)arg1 ;
-(void)setOcclusionFrame:(CGRect)arg1 ;
-(void)setOcclusionScaleFactor:(double)arg1 ;
-(void)addMenuBarTrackingArea;
-(void)setMenuBarDelay:(double)arg1 ;
-(char)menuBarIsLocked;
-(char)mouseButtonIsDown;
-(void)unlockMenuBar;
-(void)lockMenuBar;
-(void)armMenuBarUnlockTimer;
-(void)unlockMenuBarTimer:(id)arg1 ;
-(void)setScreenFrame:(CGRect)arg1 ;
-(CGSize)largestPossibleSessionSize;
-(CGRect)sessionContainingRect;
-(CGRect)adjustedFrame:(CGRect)arg1 forContainingRect:(CGRect)arg2 positionAdjustment:(int)arg3 sessionInsets:(Rect)arg4 containingRectInsets:(Rect)arg5 unscaledSize:(CGSize)arg6 resultingScalingFactor:(double*)arg7 ;
-(NSTrackingArea *)menuBarTrackingArea;
-(CGSize)largestPossibleWindowedSessionSize;
-(id)localCursor;
-(id)assistPointerColor;
-(NSMutableArray *)cursorTrackingAreas;
-(CGRect)toolbarRect;
-(void)addCursorTrackingArea;
-(short)fullScreenToolbarHeight;
-(void)setMenuBarIsLocked:(char)arg1 ;
-(void)menuBarUnlockTimer:(id)arg1 ;
-(void)setChangingFullScreenMode:(char)arg1 ;
-(void)installMenuBarTransitionHandler;
-(void)removeMenuBarTransitionHandler;
-(long long)controlMode;
-(long long)screenQualityMode;
-(char)shouldSharePasteboard;
-(id)windowRestorationStateForWindow:(id)arg1 ;
-(char)supportsControlMode;
-(void)showFailedToControlWarning;
-(char)isLegacyVNC;
-(void)showFailedToObserveWarning;
-(char)isSharingControl;
-(void)showFailedToChangeSharingModeWarning;
-(void)set_controlMode:(long long)arg1 ;
-(NSOrderedSet *)preferredCredentials;
-(void)ssSession:(id)arg1 showConnectDidFailUI:(int)arg2 ;
-(char)isConnectionProgressViewVisible;
-(void)closeConnectingWindow;
-(void)showConnectionFailedWarning:(int)arg1 ;
-(void)showConnectionAddressWindowWithURLString:(id)arg1 ;
-(void)setViewControllersConnectingState:(char)arg1 ;
-(void)showPermanentFailure;
-(void)showSSHConfigurationWarning;
-(void)showSSHNotAvailableWarning;
-(void)showManagementAppWarning;
-(void)showNotRedwoodAppWarning;
-(void)showAppleIDIsUnresolvableWarning;
-(void)showIDSIsNotWorkingWarning;
-(void)showInvalidAddressWarning;
-(char)isSelectingSession;
-(char)userEndedConnection;
-(void)endReconnectOverlayQuickReplacement;
-(void)startReconnectOverlayWithDelay:(double)arg1 showSpinner:(char)arg2 ;
-(SSFadeView *)reconnectOverlay;
-(void)runUserClosedConnectionSheet;
-(void)startReconnectOverlay;
-(NSMutableOrderedSet *)availableKerberosIdentities;
-(id)principalSetIfKerberosIsInAuthTypes:(id)arg1 ;
-(NSMutableArray *)attemptedAuthTypes;
-(char)isForcedViewer;
-(void)showAuthenticationFailedWarning;
-(NSDictionary *)AVConferenceAcceptDictionary;
-(void)startAVConferenceCallWithRemoteDictionary:(id)arg1 ;
-(char)idsInviteAcceptedWithScreenSharingQRService;
-(char)audioCanBeEnabled;
-(void)startAudioAVConferenceCallWithRemoteDictionary:(id)arg1 ;
-(char)allowsSSHTunnelForLegacyVNC;
-(char)shouldProceedWithVNC;
-(void)cleanupForCancel;
-(char)shouldPreferKerberosWithAuthTypes:(id)arg1 wasBTMM:(char*)arg2 ;
-(id)orderedArrayOfAuthTypesForMethod:(long long)arg1 preferKerberos:(char)arg2 serverAllowedTypes:(id)arg3 ;
-(void)showAuthenticationNoMechWarning;
-(SSCredentials *)cachedCredentials;
-(char)cachedCredentialsAreValidForAuthType:(id)arg1 ;
-(NSString *)kerberosClientPrincipal;
-(id)servicePrincipalForClientPrincipal:(id)arg1 ;
-(char)shouldReauthenticate;
-(id)loadCredentialsFromKeychain:(id)arg1 forAuthType:(id)arg2 ;
-(void)showAuthenticationViewForHostName:(id)arg1 canConnectAsGuest:(char)arg2 vnc:(char)arg3 ;
-(void)setShouldReauthenticate:(char)arg1 ;
-(void)showConnectionProgressViewWithLabel:(id)arg1 identity:(id)arg2 ;
-(char)shouldProceedWithGuestConnection;
-(id)standardizedUserInputString:(id)arg1 port:(id*)arg2 ;
-(id)standardizedKeychainIdentityWithPort:(id*)arg1 ;
-(id)convertKeychainArrayToDictionaries:(id)arg1 ;
-(SecKeychainItemRef)findCredentialInKeychainForAuthType:(id)arg1 inRequestedAccountName:(id)arg2 outAccountName:(id*)arg3 ;
-(void)fetchCredentialsPassword:(id)arg1 ;
-(void)fetchShouldSaveCredentials:(id)arg1 ;
-(int)removeCredentialsFromKeychainWithAuthType:(id)arg1 accountName:(id)arg2 ;
-(void)retainKerberosCredential;
-(void)showCouldNotControlWarning;
-(char)shouldProceedWithHostKeyMismatch;
-(void)showAskToObserveWasDeniedWarning;
-(void)reshowConnectionAuthenticationWindow:(char)arg1 ;
-(long long)chosenSessionSelectionAction;
-(void)setIsOffConsole:(char)arg1 ;
-(void)showConnectionWindowWithViewFromController:(id)arg1 ignoreOtherApps:(char)arg2 ;
-(void)showConnectionProgressView;
-(void)showShareConsoleRequestDeniedWarning;
-(char)shouldSuppressFirstControlStateOverlay;
-(void)setShouldSuppressFirstControlStateOverlay:(char)arg1 ;
-(char)sessionAllowsControl;
-(void)showAllowsControlStateChangeNotification:(char)arg1 ;
-(void)configureViewerForScaling:(char)arg1 ;
-(void)configurePanningMode:(long long)arg1 ;
-(void)setControlMode:(long long)arg1 ;
-(void)configureDragAndDropFileCopy;
-(char)supportsSharedPasteboard;
-(void)set_shouldSharePasteboard:(char)arg1 ;
-(void)setShouldAllowSendPasteboard:(char)arg1 ;
-(char)aspectRatio:(CGSize)arg1 matches:(CGSize)arg2 ;
-(CGSize)defaultInitialSessionSize;
-(char)isUsingVirtualDisplay;
-(void)setCurtained:(char)arg1 ;
-(char)resetScalingFactorIfNeeded:(double)arg1 forced:(char)arg2 ;
-(void)setDeferredRequestUpdates:(char)arg1 ;
-(char)switchedDisplay;
-(void)setSwitchedDisplay:(char)arg1 ;
-(CGSize)addWindowOverheadToSize:(CGSize)arg1 ;
-(char)isAnimatingResize;
-(void)setDeferredRequestFrameRect:(CGRect)arg1 ;
-(void)setAnimatingResize:(char)arg1 ;
-(void)finishSizeChangedWithFrame:(CGRect)arg1 ;
-(char)sessionPaused;
-(char)hasEntireScreen;
-(char)deferredRequestUpdates;
-(char)perceivedScalingFactorHasChanged;
-(void)saveUserFrame;
-(char)shouldNotifyOfAllowsControlStateChange;
-(void)setShouldNotifyOfAllowsControlStateChange:(char)arg1 ;
-(char)shouldNotifyOfFailureToEnterCurtainMode;
-(void)showFailedToEnterCurtainModeWarning;
-(void)setShouldNotifyOfFailureToEnterCurtainMode:(char)arg1 ;
-(char)shouldNotifyOfFailureToExitCurtainMode;
-(void)showFailedToExitCurtainModeWarning;
-(void)setShouldNotifyOfFailureToExitCurtainMode:(char)arg1 ;
-(unsigned)desiredLayerRotation;
-(double)lastResignTime;
-(id<SSSessionFileTransferDelegate>)fileTransferDelegate;
-(void)setUserEndedConnection:(char)arg1 ;
-(char)isOffConsole;
-(char)_curtained;
-(char)clientChangedCurtainMode;
-(void)setClientChangedCurtainMode:(char)arg1 ;
-(void)setIsUsingVirtualDisplay:(char)arg1 ;
-(char)requestedControl;
-(void)setRequestedControl:(char)arg1 ;
-(CGRect)deferredRequestFrameRect;
-(void)setSessionPaused:(char)arg1 ;
-(void)showPausedNotification;
-(void)dismissPausedNotification;
-(void)showReconnectOverlayView:(char)arg1 andMaxAlpha:(float)arg2 ;
-(NSString *)requestConsoleCommand;
-(void)setAVConferenceVideoAtttributesSet:(char)arg1 ;
-(void)setDesiredLayerRotation:(unsigned)arg1 ;
-(SSOrientationDetails)savedScreenOrientation;
-(void)setSavedScreenOrientation:(SSOrientationDetails)arg1 ;
-(int)J99HackForScreenOrientation:(int)arg1 videoOrientation:(int)arg2 ;
-(void)setOrientationForConference:(id)arg1 videoAttributes:(id)arg2 callID:(long long)arg3 ;
-(void)setAssistModeWithMouseUp:(char)arg1 ;
-(void)connectToAddress:(id)arg1 withOptions:(id)arg2 ;
-(void)setAppleIDInviteWasAcceptedOrDeclined:(char)arg1 ;
-(IDSSession *)idsSessionThatWasAccepted;
-(IDSSession *)idsSessionThatWasDeclined;
-(void)handleSessionEnded:(id)arg1 fromID:(id)arg2 withInfo:(id)arg3 ;
-(void)ssSessionTerminated:(id)arg1 ;
-(void)showAppleIDInvitationWasDeclinedWarning;
-(void)showAppleIDIsBlockedWarning;
-(void)showAppleIDInvitationWasUnansweredWarning;
-(void)ssSession:(id)arg1 connectDidFail:(int)arg2 ;
-(void)logAddressResolutionToMessageTracerWithStatus:(int)arg1 ;
-(void)addressesResolvedMainThread:(id)arg1 ;
-(void)addressResolutionFailedMainThread:(id)arg1 ;
-(NSString *)serviceMessageDestination;
-(IDSService *)serviceMessageIDSService;
-(void)sendServiceMessage:(id)arg1 destination:(id)arg2 service:(id)arg3 ;
-(void)IDSServiceMessageReceived:(id)arg1 context:(id)arg2 ;
-(void)cleanupUserCancelledCredentialsRequest;
-(void)showWarningWithTitle:(id)arg1 andMessage:(id)arg2 ;
-(id)lockedByMessageWithUserMessage:(id)arg1 ;
-(int)assistPointerKind;
-(NSCursor *)controlCursor;
-(char)supportsAssistMode;
-(NSCursor *)observeCursor;
-(NSCursor *)hilightCursor;
-(id)cursorForViewMode;
-(char)shouldShowCursorForUnknownCursorState;
-(char)isConnectionWindowVisible;
-(void)startResolveProgress:(id)arg1 ;
-(void)cancelProgress:(id)arg1 ;
-(void)showConnectToSelfWarning;
-(void)setAudioCanBeEnabled:(char)arg1 ;
-(void)setAudioChatMuted:(char)arg1 ;
-(void)setServiceMessageDestination:(NSString *)arg1 ;
-(void)setServiceMessageIDSService:(IDSService *)arg1 ;
-(void)setUseAVConference:(char)arg1 ;
-(void)initAVConference;
-(id)copyInviteDictionaryForRemoteInviteDictionary:(id)arg1 ;
-(void)initAudioAVConference;
-(NSString *)lastRetainedKerberosClientPrincipal;
-(id)kerberosLabel;
-(id)escapedURL;
-(char)changingFullScreenMode;
-(double)adjustedScalingFactorForFrame:(CGRect)arg1 ;
-(char)simulatingLiveResize;
-(void)configureForNewFillsWindowValue:(char)arg1 withOldValue:(char)arg2 oldWindow:(id)arg3 newWindow:(id)arg4 ;
-(Rect)sessionInsets;
-(Rect)sessionContainingRectInsets;
-(Rect)sessionShrinkInsetsForFrame:(CGRect)arg1 ;
-(CGRect)subtractInsets:(Rect)arg1 fromRect:(CGRect)arg2 ;
-(CGSize)subtractInsets:(Rect)arg1 fromSize:(CGSize)arg2 ;
-(CGSize)adjustedContentSize:(CGSize)arg1 forContainingRectWithSize:(CGSize)arg2 unscaledSize:(CGSize)arg3 resultingScalingFactor:(double*)arg4 ;
-(CGSize)addInsets:(Rect)arg1 toSize:(CGSize)arg2 ;
-(double)scalingFactorForContentSize:(CGSize)arg1 unscaledSize:(CGSize)arg2 ;
-(CGRect)screenFrame;
-(Rect)toolbarAndTitleBarInsets;
-(CGSize)windowOverhead;
-(Rect)dockAndMenuBarInsets;
-(CGSize)subtractWindowOverheadFromSize:(CGSize)arg1 ;
-(char)isFullScreenToolbarAutohidingEnabled;
-(char)supportsFileTransfer;
-(char)allowsFileTransferToRemote;
-(char)allowsFileTransferFromRemote;
-(void)showWarningWithTitle:(id)arg1 andMessage:(id)arg2 withStatus:(int)arg3 ;
-(id)windowToTarget;
-(void)reshowConnectionAuthenticationWindow;
-(NSString *)currentConsoleUser;
-(char)isConnectionAddressViewVisible;
-(char)shouldSkipAddressWindow;
-(char)userHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC;
-(char)shouldWarnUserForUnencryptedLegacyVNC;
-(void)setUserHasAlreadyAgreedToProceedWithUnencryptedLegacyVNC:(char)arg1 ;
-(void)setShouldWarnUserForUnencryptedLegacyVNC:(char)arg1 ;
-(NSString *)curtainMessage;
-(void)fillConnectionWindowWithViewFromController:(id)arg1 ;
-(void)updateAutoLayoutContraintsForView:(id)arg1 ;
-(void)clearAllViewControllers;
-(void)addressEntered:(id)arg1 ;
-(void)showNotificationOverlayWithImage:(id)arg1 andLabel:(id)arg2 andPersistence:(char)arg3 ;
-(void)showReconnectOverlayView:(char)arg1 ;
-(void)runClosedConnectionSheetWithLocalizedMessage:(id)arg1 ;
-(void)userClosedConnectionAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void*)arg3 ;
-(NSArray *)unresolvedAddresses;
-(NSString *)bonjourDisplayName;
-(char)_fillsWindow;
-(void)set_fillsWindow:(char)arg1 ;
-(long long)_controlMode;
-(char)supportsControlModeRequest;
-(void)showControlRequestNotification;
-(SSScreenInfo *)_selectedScreen;
-(char)_shouldShowCursorForUnknownCursorState;
-(void)set_shouldShowCursorForUnknownCursorState:(char)arg1 ;
-(NSCursor *)_observeCursor;
-(void)set_observeCursor:(NSCursor *)arg1 ;
-(NSCursor *)_hilightCursor;
-(void)set_hilightCursor:(NSCursor *)arg1 ;
-(NSCursor *)_controlCursor;
-(void)set_controlCursor:(NSCursor *)arg1 ;
-(char)_shouldSharePasteboard;
-(void)setAssistPointerKind:(int)arg1 ;
-(char)_allowsFileTransferToRemote;
-(void)set_allowsFileTransferToRemote:(char)arg1 ;
-(char)_allowsFileTransferFromRemote;
-(BOOL)audioMuteStatusFromAgent;
-(id)connectionToInvitationAgent;
-(NSString *)connectionIDFromInvitationAgent;
-(void)setAudioMuteStatusFromAgent:(BOOL)arg1 ;
-(BOOL)audioChatStatusFromAgent;
-(void)set_allowsFileTransferFromRemote:(char)arg1 ;
-(id<SSSessionFileTransferDelegate>)_fileTransferDelegate;
-(void)set_fileTransferDelegate:(id<SSSessionFileTransferDelegate>)arg1 ;
-(char)isAddressGatheringConnectionViewVisible;
-(char)isSessionSelectViewVisible;
-(char)canToggleCurtainMode;
-(void)connectionCanceled;
-(void)selectMainDisplay:(id)arg1 ;
-(void)selectVirtualDisplay:(id)arg1 ;
-(void)selectCancelled:(id)arg1 ;
-(void)stopWaitingForUserOnMainDisplay:(id)arg1 ;
-(void)curtainPromptCanceled;
-(void)curtainPromptConfirmedWithMessage:(id)arg1 ;
-(void)closeConnectionWindow;
-(void)credentialsEntered;
-(void)teardownForNewConnectionPrompt;
-(void)ssSession:(id)arg1 delegateControlModeSet:(long long)arg2 ;
-(void)ssSession:(id)arg1 wantsCredentialsForAuthenticationTypes:(id)arg2 ;
-(void)ssSession:(id)arg1 authenticationResult:(int)arg2 ;
-(void)ssSession:(id)arg1 wantsSessionSelection:(id)arg2 consoleUser:(id)arg3 ;
-(void)ssSession:(id)arg1 sessionSelectionResult:(int)arg2 ;
-(void)ssSessionReady:(id)arg1 ;
-(void)ssSession:(id)arg1 sizeChanged:(SSSize)arg2 ;
-(void)ssSession:(id)arg1 fullScreenUpdateProgress:(double)arg2 ;
-(void)ssSession:(id)arg1 cursorPositionChanged:(SSPoint)arg2 ;
-(void)ssSessionRemotePasteboardChanged:(id)arg1 ;
-(void)ssSession:(id)arg1 systemInfoRequestCompleted:(id)arg2 ;
-(void)ssSession:(id)arg1 dragDroppedLocalPaths:(id)arg2 onRemotePath:(id)arg3 ;
-(void)ssSession:(id)arg1 fileCopyProgressDidUpdate:(id)arg2 ;
-(void)ssSession:(id)arg1 fileCopyDidComplete:(id)arg2 ;
-(void)ssSessionBeeped:(id)arg1 ;
-(void)ssSession:(id)arg1 virtualDisplayStateChanged:(char)arg2 ;
-(void)ssSessionUserClosedConnection:(id)arg1 ;
-(void)ssSessionDisplaysDidWake:(id)arg1 ;
-(void)ssSessionDisplaysDidSleep:(id)arg1 ;
-(void)ssSession:(id)arg1 onConsoleChanged:(char)arg2 ;
-(void)ssSession:(id)arg1 canToggleCurtainModeChanged:(char)arg2 ;
-(void)ssSession:(id)arg1 allowsControl:(char)arg2 ;
-(void)ssSession:(id)arg1 didSetLocalWindowUIResolution:(id)arg2 ;
-(void)ssSessionPaused:(id)arg1 ;
-(void)ssSessionResumed:(id)arg1 ;
-(void)ssSessionRequestToResume:(id)arg1 result:(int)arg2 ;
-(void)ssSessionRequestToOpenURL:(id)arg1 result:(int)arg2 ;
-(void)ssSessionRequestToAddTextToPasteboard:(id)arg1 result:(int)arg2 ;
-(char)ssSessionIsRedwood;
-(void)saveCredentialsToKeychain;
-(void)setSwitchedDisplayWithNumber:(id)arg1 ;
-(void)ssSession:(id)arg1 touchEvent:(id)arg2 ;
-(void)activeSessionEndedWithReason:(unsigned)arg1 error:(id)arg2 ;
-(void)ssFrameBufferView:(id)arg1 didDropRemotePath:(id)arg2 atLocalDropDestination:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)didFinishDroppingRemotePaths;
-(void)resolvedAddresses:(id)arg1 withStatus:(int)arg2 ;
-(void)startedBonjourResolveAtTimestamp:(id)arg1 ;
-(void)resolvedBonjourName:(id)arg1 ;
-(void)gatheredCredentials:(id)arg1 withStatus:(int)arg2 ;
-(void)guestAccessRequestCancelled;
-(id)displayNameForDialogs;
-(CGPoint)translatePoint:(CGPoint)arg1 enclosingRect:(CGRect)arg2 ;
-(CGPoint)translateInBounds:(CGRect)arg1 xPercent:(double)arg2 yPercent:(double)arg3 enclosingRect:(CGRect)arg4 ;
-(void)connectToURL:(id)arg1 withPreferredCredentials:(id)arg2 options:(id)arg3 ;
-(void)connectToURLs:(id)arg1 withPreferredCredentials:(id)arg2 options:(id)arg3 ;
-(void)requestSystemInfo:(int)arg1 args:(id)arg2 ;
-(void)captureScreen:(id)arg1 ;
-(void)sendLocalPasteboard:(id)arg1 ;
-(void)getRemotePasteboard:(id)arg1 ;
-(void)setHideCursor:(id)arg1 ;
-(void)setShowCursor:(id)arg1 ;
-(void)menuAutoShowHandlerWithEventKind:(unsigned)arg1 andWillShowMenuBar:(char)arg2 ;
-(void)clearCredentialsAndConnect;
-(void)cancelResolve:(id)arg1 ;
-(char)fullScreenWindowNeedsShrinkingForFrame:(CGRect)arg1 ;
-(char)windowIsFullScreen:(id)arg1 ;
-(void)fullScreenUsableRectChanged;
-(void)fadeDidEnd;
-(void)loadProgressIcon;
-(char)isBonjourSession;
-(char)isCurtained;
-(char)shouldAllowSendPasteboard;
-(char)audioChatSupported;
-(char)isAudioChatMuted;
-(char)audioChatEnabled;
-(void)setFileTransferDelegate:(id<SSSessionFileTransferDelegate>)arg1 ;
-(char)isGatheringAddressForConnection;
-(char)supportsCopyPaste;
-(char)supportsCurtainMode;
-(char)supportsScalingScreen;
-(char)supportsChangingScreenQualityMode;
-(char)supportsAssistModeColorChange;
-(char)supportsAssistModeDirectionChange;
-(char)supportsViewerPause;
-(char)supportsViewerAskToResume;
-(char)supportsTextMessage;
-(char)supportsAskToPutTextIntoClipboard;
-(char)supportsAskToOpenURL;
-(char)supportsAssistModeAnnotation;
-(void)propagateMouseDown:(id)arg1 ;
-(char)_shouldAllowSendPasteboard;
-(void)set_shouldAllowSendPasteboard:(char)arg1 ;
-(void)setAllowsSSHTunnelForLegacyVNC:(char)arg1 ;
-(NSDate *)resolveStartTime;
-(NSMutableDictionary *)netAuthContext;
-(CALayer *)AVConferenceVideoLayer;
-(char)hasUnknownCursorState;
-(void)setAudioChatStatusFromAgent:(BOOL)arg1 ;
-(AVCRemoteVideoClient *)remoteVideoClient;
-(char)AVConferenceVideoAtttributesSet;
-(char)shouldNotifyOfVirtualDisplayStateChange;
-(void)setShouldNotifyOfVirtualDisplayStateChange:(char)arg1 ;
-(unsigned long long)menuBarLockCounter;
-(void)setMenuBarLockCounter:(unsigned long long)arg1 ;
-(char)stoppingSession;
@end

