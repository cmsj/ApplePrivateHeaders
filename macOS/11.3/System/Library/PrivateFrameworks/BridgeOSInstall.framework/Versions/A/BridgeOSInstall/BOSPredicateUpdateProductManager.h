/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:16 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/BridgeOSInstall.framework/Versions/A/BridgeOSInstall
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
@class MSUProduct, NSString, NSDictionary, MSUProductManager, PKPackageSourceManager, NSError, NSURL, NSNumber, PKDownloader, NSObject, NSArray, PKDistribution;

@interface BOSPredicateUpdateProductManager : NSObject {

	MSUProduct* _product;
	NSString* _productBridgeVersion;
	NSDictionary* _macOSInstallationAuxInfo;
	MSUProductManager* _productManager;
	PKPackageSourceManager* _sourceManager;
	NSError* _error;
	NSURL* _catalogURL;
	NSURL* _catalogURLOverride;
	unsigned long long _catalogOptionsOverride;
	NSNumber* _stagedUpdatesOnlyOverride;
	PKDownloader* _downloader;
	NSObject*<OS_dispatch_semaphore> _downloaderFinished;
	NSURL* _destinationURL;
	/*^block*/id _downloadProgressHandler;
	NSArray* _localPackageSpecifiers;

}

@property (retain) MSUProductManager * productManager;                                    //@synthesize productManager=_productManager - In the implementation block
@property (retain) PKPackageSourceManager * sourceManager;                                //@synthesize sourceManager=_sourceManager - In the implementation block
@property (retain) MSUProduct * product;                                                  //@synthesize product=_product - In the implementation block
@property (retain) NSString * productBridgeVersion;                                       //@synthesize productBridgeVersion=_productBridgeVersion - In the implementation block
@property (retain) NSError * error;                                                       //@synthesize error=_error - In the implementation block
@property (retain) NSURL * catalogURL;                                                    //@synthesize catalogURL=_catalogURL - In the implementation block
@property (retain) NSURL * catalogURLOverride;                                            //@synthesize catalogURLOverride=_catalogURLOverride - In the implementation block
@property (assign) unsigned long long catalogOptionsOverride;                             //@synthesize catalogOptionsOverride=_catalogOptionsOverride - In the implementation block
@property (retain) NSNumber * stagedUpdatesOnlyOverride;                                  //@synthesize stagedUpdatesOnlyOverride=_stagedUpdatesOnlyOverride - In the implementation block
@property (retain) PKDownloader * downloader;                                             //@synthesize downloader=_downloader - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> downloaderFinished;                   //@synthesize downloaderFinished=_downloaderFinished - In the implementation block
@property (retain) NSURL * destinationURL;                                                //@synthesize destinationURL=_destinationURL - In the implementation block
@property (copy) id downloadProgressHandler;                                              //@synthesize downloadProgressHandler=_downloadProgressHandler - In the implementation block
@property (retain) NSArray * localPackageSpecifiers;                                      //@synthesize localPackageSpecifiers=_localPackageSpecifiers - In the implementation block
@property (readonly) NSArray * remotePackageSpecifiers; 
@property (readonly) PKDistribution * distribution; 
@property (retain) NSDictionary * macOSInstallationAuxInfo;                               //@synthesize macOSInstallationAuxInfo=_macOSInstallationAuxInfo - In the implementation block
@property (readonly) NSURL * bridgeOSSoftwareUpdateEventRecordingServiceURL; 
-(void)setStagedUpdatesOnly:(char)arg1 ;
-(void)setMacOSInstallationAuxInfo:(NSDictionary *)arg1 ;
-(void)findProductWithOptions:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(NSURL *)bridgeOSSoftwareUpdateEventRecordingServiceURL;
-(NSArray *)remotePackageSpecifiers;
-(void)downloadProductToDirectory:(id)arg1 progressHandler:(/*^block*/id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(NSString *)productBridgeVersion;
-(void)_setCatalogURL:(id)arg1 options:(unsigned long long)arg2 ;
-(void)addDownloadCacheWithURL:(id)arg1 ;
-(void)setStagedUpdatesOnlyOverride:(NSNumber *)arg1 ;
-(char)_loadCatalog;
-(id)_catalogEvaluationPredicate;
-(char)_evaluateProductsInCatalogWithPredicate:(id)arg1 ;
-(id)_findProductPredicate;
-(char)_findProductMatchingPredicate:(id)arg1 ;
-(char)_downloadPackagesForProductToDirectory:(id)arg1 ;
-(NSArray *)localPackageSpecifiers;
-(char)_shouldEvaluateStagedUpdatesOnly;
-(NSNumber *)stagedUpdatesOnlyOverride;
-(NSURL *)catalogURLOverride;
-(unsigned long long)catalogOptionsOverride;
-(NSDictionary *)macOSInstallationAuxInfo;
-(void)setProductBridgeVersion:(NSString *)arg1 ;
-(id)_destinationURLForPackageReference:(id)arg1 destinationDirectoryURL:(id)arg2 ;
-(char)_queueRequiredPackagesReferencesWithDownloader:(id)arg1 destinationDirectoryURL:(id)arg2 ;
-(void)setLocalPackageSpecifiers:(NSArray *)arg1 ;
-(void)_tryAlternateSourceInvalidatingPackageReference:(id)arg1 reason:(int)arg2 downloader:(id)arg3 error:(id)arg4 ;
-(void)setSourceManager:(PKPackageSourceManager *)arg1 ;
-(void)setCatalogURLOverride:(NSURL *)arg1 ;
-(void)setCatalogOptionsOverride:(unsigned long long)arg1 ;
-(id)init;
-(NSError *)error;
-(void)setError:(NSError *)arg1 ;
-(PKDistribution *)distribution;
-(MSUProduct *)product;
-(NSURL *)destinationURL;
-(void)setDestinationURL:(NSURL *)arg1 ;
-(void)setProduct:(MSUProduct *)arg1 ;
-(void)setCatalogURL:(NSURL *)arg1 ;
-(NSURL *)catalogURL;
-(id)downloadProgressHandler;
-(void)setDownloadProgressHandler:(id)arg1 ;
-(MSUProductManager *)productManager;
-(void)setDownloaderFinished:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(void)setDownloader:(PKDownloader *)arg1 ;
-(PKDownloader *)downloader;
-(void)packageDownloaderDidStop:(id)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)downloaderFinished;
-(void)setProductManager:(MSUProductManager *)arg1 ;
-(void)packageDownloaderDidStart:(id)arg1 ;
-(void)packageDownloader:(id)arg1 didChangeProgress:(double)arg2 ;
-(void)packageDownloader:(id)arg1 didStartDownloadingPackageWithReference:(id)arg2 ;
-(void)packageDownloader:(id)arg1 didFinishPackageReference:(id)arg2 localPackageReference:(id)arg3 ;
-(void)packageDownloader:(id)arg1 didFailOnPackageReference:(id)arg2 withError:(id)arg3 ;
-(void)packageDownloader:(id)arg1 didDownloadInvalidDataForPackageReference:(id)arg2 ;
-(PKPackageSourceManager *)sourceManager;
@end

