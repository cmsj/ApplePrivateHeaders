/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:52 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Slideshows.framework/Versions/A/Frameworks/OpusKit.framework/Versions/A/OpusKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <OpusKit/OpusKit-Structs.h>
#import <OpusKit/OKWidgetView.h>
#import <libobjc.A.dylib/OKViewControllerAudioSupport.h>
#import <libobjc.A.dylib/NSGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/OKWidgetMediaViewProxyExports.h>

@class OFNSButton, OFNSImageView, AVAsset, NSURL, AVPlayer, OKWidgetMediaVideoPlayerView, OKAudioDucker, NSString, OFNSView, NSPanGestureRecognizer;

@interface OKWidgetMediaViewProxy : OKWidgetView <OKViewControllerAudioSupport, NSGestureRecognizerDelegate, OKWidgetMediaViewProxyExports> {

	OFNSButton* _videoPlayButton;
	OFNSImageView* _thumbnailView;
	NSEdgeInsets _mediaEdgeInsets;
	AVAsset* _videoAsset;
	NSURL* _videoURL;
	AVPlayer* _videoPlayer;
	OKWidgetMediaVideoPlayerView* _videoPlayerView;
	OKAudioDucker* _audioDucker;
	id _timeObserver;
	char _isObservingVideoStatus;
	char _isObservingVideoReadyToDisplay;
	char _autoplay;
	char _loop;
	char _didPlayInteractively;
	char _shouldPlayVideoWhenAvailable;
	char _playRequested;
	float _requiredDuckLevel;
	float _volume;
	NSString* _audioTrackID;
	char _canStartCouchPotatoPlayback;
	CGPoint _offset;
	CGPoint _originalOffsetWhilePanning;
	double _scale;
	char _editable;
	char _shouldFitRegionOfInterest;
	OFNSView* _faceRect;
	char _is4KVideo;
	NSPanGestureRecognizer* _panGestureRecognizer;

}

@property (assign,nonatomic) char shouldPlayVideoWhenAvailable;              //@synthesize shouldPlayVideoWhenAvailable=_shouldPlayVideoWhenAvailable - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)supportedSettings;
+(void)setupJavascriptContext:(id)arg1 ;
+(char)shouldDrawRegionOfInterest;
-(void)dealloc;
-(id)valueForUndefinedKey:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(double)duration;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(double)currentTime;
-(float)contentAspectRatio;
-(void)layoutSubviews;
-(CGRect)thumbnailRect;
-(void)setVideoURL:(id)arg1 ;
-(void)prepareForReload;
-(char)prepareForDisplay:(char)arg1 ;
-(void)setVideoAsset:(id)arg1 ;
-(void)handlePanGesture:(id)arg1 ;
-(void)instantPause;
-(void)instantResume;
-(void)playerItemDidReachEnd:(id)arg1 ;
-(id)initWithWidget:(id)arg1 ;
-(char)prepareForWarmup:(char)arg1 ;
-(char)prepareForUnload:(char)arg1 ;
-(void)prepareForRefresh;
-(id)settingObjectForKey:(id)arg1 ;
-(double)settingScale;
-(void)setSettingScale:(double)arg1 ;
-(id)layoutSettingsKeys;
-(void)setAntialiasing:(char)arg1 ;
-(void)setSettingAutoplay:(char)arg1 ;
-(void)setSettingLoop:(char)arg1 ;
-(char)canStartCouchPotatoPlayback;
-(void)setPlaybackAudioVolume:(double)arg1 ;
-(void)beginFadingWithDuration:(double)arg1 ;
-(double)requiredDuckLevel;
-(void)beginDuckingToLevel:(double)arg1 fadeDuration:(double)arg2 ;
-(void)endDucking;
-(void)endFading;
-(void)setSettingAudioVolume:(float)arg1 ;
-(void)setSettingAudioRequiredDuckLevel:(float)arg1 ;
-(char)settingEditable;
-(void)setSettingEditable:(char)arg1 ;
-(void)_playVideo:(id)arg1 ;
-(void)_switchToVideoPlayerView;
-(void)_cancelThumbnailOperations;
-(void)_reloadThumbnailContent;
-(void)_unloadThumbnailContent;
-(void)calculateOffsetForRegionOfInterest;
-(void)updateOffset;
-(void)_reloadThumbnailContent:(char)arg1 loadVideo:(char)arg2 ;
-(void)drawRegionOfInterestContainerBounds;
-(void)resetVideo:(char)arg1 ;
-(void)pauseVideo:(id)arg1 ;
-(void)playVideo:(id)arg1 ;
-(id)settingUrl;
-(void)setSettingUrl:(id)arg1 ;
-(NSEdgeInsets)settingMediaEdgeInsets;
-(void)setSettingMediaEdgeInsets:(NSEdgeInsets)arg1 ;
-(char)settingsAutoplay;
-(char)settingLoop;
-(long long)settingContentMode;
-(void)setSettingContentMode:(long long)arg1 ;
-(CGPoint)settingOffset;
-(void)setSettingOffset:(CGPoint)arg1 ;
-(void)setSettingShouldFitRegionOfInterest:(char)arg1 ;
-(char)settingShouldFitRegionOfInterest;
-(void)_switchToThumbnailView;
-(id)_contentViewToFocus;
-(char)shouldPlayVideoWhenAvailable;
-(void)setShouldPlayVideoWhenAvailable:(char)arg1 ;
@end

