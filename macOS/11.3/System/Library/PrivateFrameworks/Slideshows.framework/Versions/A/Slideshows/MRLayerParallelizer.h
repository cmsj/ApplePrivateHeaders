/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:40 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Slideshows.framework/Versions/A/Slideshows
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Slideshows/Slideshows-Structs.h>
#import <Slideshows/MRLayer.h>

@class MCContainerParallelizer, NSMutableArray, NSMutableDictionary, NSArray;

@interface MRLayerParallelizer : MRLayer {

	MCContainerParallelizer* mContainer;
	NSMutableArray* mSublayers;
	NSMutableDictionary* mSublayersForPlugs;
	float mBackgroundColor[4];
	char mNeedsToUpdateSublayersOrdering;
	char mNeedsToUpdateBackgroundColor;

}

@property (readonly) NSArray * sublayers; 
@property (assign) const float* backgroundColor; 
-(void)cleanup;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setDuration:(double)arg1 ;
-(id)initWithParameters:(id)arg1 ;
-(void)setBackgroundColor:(const float*)arg1 ;
-(char)isOpaque;
-(const float*)backgroundColor;
-(void)deactivate;
-(NSArray *)sublayers;
-(char)isInfinite;
-(id)_currentState;
-(char)hasAudio;
-(void)setPixelSize:(CGSize)arg1 ;
-(char)hasSlides;
-(char)isLoadedForTime:(double)arg1 ;
-(char)prerenderForTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(id)patchworkAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(char)isAlphaFriendly;
-(void)beginMorphingToAspectRatio:(double)arg1 withDuration:(double)arg2 ;
-(void)endMorphing;
-(char)getStartTime:(double*)arg1 andDuration:(double*)arg2 forMovingToElementID:(id)arg3 backwards:(char)arg4 ;
-(char)hasMoreSlidesFromTime:(double)arg1 backwards:(char)arg2 startTime:(double*)arg3 duration:(double*)arg4 ;
-(double)interestingTimeForTime:(double)arg1 ;
-(double)interestingTimeForElement:(id)arg1 ;
-(void)getLazyDuration:(double*)arg1 lazyFactor:(double*)arg2 animationDuration:(double*)arg3 fromInterestingTime:(double)arg4 ;
-(char)isInInteractiveMode;
-(void)_unobservePlug;
-(void)depreactivate:(char)arg1 ;
-(void)setNeedsUpdateForPluggerOfSublayer:(id)arg1 ;
-(id)initWithPlug:(id)arg1 andParameters:(id)arg2 inSuperlayer:(id)arg3 ;
-(void)_unobservePlugOnDepreactivate;
-(void)_observePlugOnPreactivate;
-(void)synchronizeTime;
-(void)_renderAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(char)hasSomethingToRender;
-(id)_retainedByUserRenderedImageAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(void)preactivate;
-(id)_dumpLayerWithOptions:(unsigned long long)arg1 ;
-(void)setIsInInteractiveMode:(char)arg1 ;
-(id)currentSlideInfoForElement:(id)arg1 ;
-(id)currentSlideInfos;
-(void)_observePlug;
-(void)_setNeedsToRequestRebuildAudio:(char)arg1 ;
-(void)_unobserveSublayer:(id)arg1 ;
-(void)_deleteSublayer:(id)arg1 ;
-(void)_executeLayerCommandQueue;
-(id)sublayerHitAtPoint:(CGPoint)arg1 onlyIfHitElement:(char)arg2 localPoint:(CGPoint*)arg3 ;
-(void)_observeSublayer:(id)arg1 ;
-(id)sublayerForPlugObjectID:(id)arg1 recursive:(char)arg2 ;
-(id)sublayerForKey:(id)arg1 ;
-(void)setSublayer:(id)arg1 forKey:(id)arg2 ;
-(id)_createSublayerForPlug:(id)arg1 ;
-(void)_unobserveSublayerOnDepreactivate:(id)arg1 ;
-(char)_isMadeOpaqueBySublayers;
-(void)_observeSublayerOnPreactivate:(id)arg1 ;
-(void)_updateSublayersOrdering;
-(void)setBackgroundColorRed:(float)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 ;
-(void)removeSublayer:(id)arg1 ;
-(double)phaseInSublayerForKey:(id)arg1 ;
-(double)phaseOutSublayerForKey:(id)arg1 ;
@end

