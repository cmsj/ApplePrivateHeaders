/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:52 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Slideshows.framework/Versions/A/Frameworks/OpusKit.framework/Versions/A/OpusKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <OpusKit/OpusKit-Structs.h>
#import <OpusFoundation/OFNSViewController.h>
#import <libobjc.A.dylib/OKCollectionProxyDataSource.h>
#import <libobjc.A.dylib/OKActionResponderPrivate.h>
#import <libobjc.A.dylib/OKDocumentViewControllerProxyExport.h>
#import <libobjc.A.dylib/OKActionResponder.h>

@protocol OS_dispatch_queue, OKDocumentViewControllerDelegate, OKDocumentViewControllerEditingDelegate, NSObject;
@class OFNSView, NSString, OKDocument, NSMutableArray, OKProducer, OFNSOperationQueue, NSMutableDictionary, OKNavigatorViewController, OKJavaScriptContext, NSRecursiveLock, NSObject, OKDocumentCouchStep, OKDocumentView;

@interface OKDocumentViewControllerProxy : OFNSViewController <OKCollectionProxyDataSource, OKActionResponderPrivate, OKDocumentViewControllerProxyExport, OKActionResponder> {

	NSString* _mainNavigatorName;
	char _hasStartedCouchBefore;
	unsigned long long _playbackMode;
	OKDocument* _document;
	NSMutableArray* _producerPlugins;
	OKProducer* _producer;
	OFNSOperationQueue* _highSpeedOperationQueue;
	OFNSOperationQueue* _consumingOperationQueue;
	NSMutableDictionary* _navigatorViewControllers;
	OKNavigatorViewController* _mainNavigatorViewController;
	NSString* _resolution;
	CGSize _resolutionSize;
	CGSize _displaySize;
	char _allowsResizing;
	char _keepAspectRatio;
	OKJavaScriptContext* _jsContext;
	NSRecursiveLock* _jsEvaluationInitRecursiveLock;
	NSObject*<OS_dispatch_queue> _jsEvaluationScriptQueue;
	char _jsEvaluationInit;
	long long _couchCancellationCount;
	char _hasPreparedCouch;
	OKDocumentCouchStep* _lastCouchStep;
	unsigned long long _couchStepMode;
	double _currentCouchStepDuration;
	char _couchPotatoModeLoops;
	char _couchPotatoRewindAudioOnLoop;
	float _couchPotatoAudioFadeOutDuration;
	NSMutableArray* _audioDuckingStack;
	NSMutableDictionary* _controllerAudioTrackIDs;
	double _audioVolume;
	char _isPaused;
	id<OKDocumentViewControllerDelegate> _delegate;
	id<OKDocumentViewControllerEditingDelegate> _editingDelegate;
	id<NSObject> _activityLatency;
	char _preloadAllLowThumbnails;
	char _interactivityEnabled;
	char _couchPotatoModeEnabled;
	char _isExporting;
	OKDocumentView* documentView;

}

@property (nonatomic,retain) OKDocumentCouchStep * lastCouchStep;                                      //@synthesize lastCouchStep=_lastCouchStep - In the implementation block
@property (assign,nonatomic) unsigned long long couchStepMode;                                         //@synthesize couchStepMode=_couchStepMode - In the implementation block
@property (assign,nonatomic) double currentCouchStepDuration;                                          //@synthesize currentCouchStepDuration=_currentCouchStepDuration - In the implementation block
@property (nonatomic,retain,readonly) OFNSOperationQueue * highSpeedOperationQueue;                    //@synthesize highSpeedOperationQueue=_highSpeedOperationQueue - In the implementation block
@property (nonatomic,retain,readonly) OFNSOperationQueue * consumingOperationQueue;                    //@synthesize consumingOperationQueue=_consumingOperationQueue - In the implementation block
@property (assign,nonatomic) char isExporting;                                                         //@synthesize isExporting=_isExporting - In the implementation block
@property (assign,nonatomic) unsigned long long playbackMode;                                          //@synthesize playbackMode=_playbackMode - In the implementation block
@property (nonatomic,retain) OKNavigatorViewController * mainNavigatorViewController;                  //@synthesize mainNavigatorViewController=_mainNavigatorViewController - In the implementation block
@property (nonatomic,retain,readonly) OKJavaScriptContext * jsContext; 
@property (assign,nonatomic) char preloadAllLowThumbnails;                                             //@synthesize preloadAllLowThumbnails=_preloadAllLowThumbnails - In the implementation block
@property (nonatomic,retain,readonly) OKDocumentView * documentView; 
@property (nonatomic,retain,readonly) OKDocument * document;                                           //@synthesize document=_document - In the implementation block
@property (nonatomic,retain,readonly) OKProducer * producer;                                           //@synthesize producer=_producer - In the implementation block
@property (nonatomic,retain,readonly) NSString * resolution;                                           //@synthesize resolution=_resolution - In the implementation block
@property (nonatomic,readonly) CGSize resolutionSize;                                                  //@synthesize resolutionSize=_resolutionSize - In the implementation block
@property (nonatomic,readonly) CGSize displaySize;                                                     //@synthesize displaySize=_displaySize - In the implementation block
@property (nonatomic,readonly) char keepAspectRatio;                                                   //@synthesize keepAspectRatio=_keepAspectRatio - In the implementation block
@property (assign,nonatomic) char allowsResizing;                                                      //@synthesize allowsResizing=_allowsResizing - In the implementation block
@property (assign,nonatomic) char interactivityEnabled;                                                //@synthesize interactivityEnabled=_interactivityEnabled - In the implementation block
@property (assign,nonatomic) char stretchableWithoutReauthoring; 
@property (assign,nonatomic) char couchPotatoModeEnabled;                                              //@synthesize couchPotatoModeEnabled=_couchPotatoModeEnabled - In the implementation block
@property (assign,nonatomic) char couchPotatoModeLoops;                                                //@synthesize couchPotatoModeLoops=_couchPotatoModeLoops - In the implementation block
@property (assign,nonatomic) char couchPotatoRewindAudioOnLoop;                                        //@synthesize couchPotatoRewindAudioOnLoop=_couchPotatoRewindAudioOnLoop - In the implementation block
@property (assign,nonatomic) float couchPotatoAudioFadeOutDuration;                                    //@synthesize couchPotatoAudioFadeOutDuration=_couchPotatoAudioFadeOutDuration - In the implementation block
@property (assign,nonatomic) double audioVolume;                                                       //@synthesize audioVolume=_audioVolume - In the implementation block
@property (assign,nonatomic) id<OKDocumentViewControllerDelegate> delegate; 
@property (assign,nonatomic) id<OKDocumentViewControllerEditingDelegate> editingDelegate; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) OFNSView * actionView; 
+(Class)viewClass;
+(void)setupJavascriptContext:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(id<OKDocumentViewControllerDelegate>)delegate;
-(void)setDelegate:(id<OKDocumentViewControllerDelegate>)arg1 ;
-(id)valueForUndefinedKey:(id)arg1 ;
-(OKDocument *)document;
-(char)isPaused;
-(OKDocumentView *)documentView;
-(char)isEditable;
-(void)didMoveToParentViewController:(id)arg1 ;
-(void)viewDidLoad;
-(void)willMoveToParentViewController:(id)arg1 ;
-(id)initWithDocument:(id)arg1 ;
-(void)commonInit;
-(double)audioVolume;
-(void)setAudioVolume:(double)arg1 ;
-(OKProducer *)producer;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(void)viewWillLayoutSubviews;
-(void)viewDidLayoutSubviews;
-(NSString *)resolution;
-(OKJavaScriptContext *)jsContext;
-(void)setEditingDelegate:(id<OKDocumentViewControllerEditingDelegate>)arg1 ;
-(id<OKDocumentViewControllerEditingDelegate>)editingDelegate;
-(id)evaluateScript:(id)arg1 ;
-(void)didReceiveMemoryWarning;
-(char)allowsResizing;
-(OFNSView *)actionView;
-(CGSize)displaySize;
-(void)setStretchableWithoutReauthoring:(char)arg1 ;
-(void)setAllowsResizing:(char)arg1 ;
-(char)prepareWithProgressBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(void)instantPause;
-(void)setInteractivityEnabled:(char)arg1 ;
-(void)setCouchPotatoAudioFadeOutDuration:(float)arg1 ;
-(void)setCouchPotatoRewindAudioOnLoop:(char)arg1 ;
-(OKNavigatorViewController *)mainNavigatorViewController;
-(char)couchPotatoModeEnabled;
-(void)instantResume;
-(void)navigateToItemAtKeyPath:(id)arg1 animated:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)sendAction:(id)arg1 toTarget:(id)arg2 ;
-(void)audioFinishedPlayingForTrackID:(id)arg1 ;
-(char)stretchableWithoutReauthoring;
-(unsigned long long)playbackMode;
-(void)setPlaybackMode:(unsigned long long)arg1 ;
-(id)widgetViewFromWidget:(id)arg1 ;
-(char)performActionScript:(id)arg1 withAction:(id)arg2 ;
-(id)allActionBindings;
-(void)cancelCouchPotatoPlayback;
-(id)initWithDocument:(id)arg1 andMainNavigatorName:(id)arg2 ;
-(void)setIsExporting:(char)arg1 ;
-(void)_couchPotatoPlaybackFinished;
-(CGSize)layoutFactor;
-(char)_registerProducerPlugin:(id)arg1 ;
-(id)_registeredProducerPluginWithIdentifier:(id)arg1 ;
-(void)prepareCouchPotatoPlayback;
-(OFNSOperationQueue *)highSpeedOperationQueue;
-(OFNSOperationQueue *)consumingOperationQueue;
-(CGSize)_fitDisplaySizeForRenderSize:(CGSize)arg1 ;
-(void)_delayedPrepareForRefresh;
-(id)displayedPageViewControllers;
-(id)deepestDisplayedPageViewController;
-(void)cancelCouchPotatoWithAction:(id)arg1 ;
-(void)_addSubWidgetViewsFromSubWidgets:(id)arg1 toWidgetView:(id)arg2 ;
-(void)setCouchPotatoModeEnabled:(char)arg1 ;
-(id)evaluateScript:(id)arg1 withInfoDictionary:(id)arg2 andCompletionBlock:(/*^block*/id)arg3 forNavigatorViewController:(id)arg4 pageViewController:(id)arg5 andWidgetView:(id)arg6 ;
-(id)evaluateScript:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)setCouchStepMode:(unsigned long long)arg1 ;
-(void)setCurrentCouchStepDuration:(double)arg1 ;
-(CGPoint)convertPointToBackingLayout:(CGPoint)arg1 fromPage:(id)arg2 ;
-(CGPoint)convertPointToBackingLayout:(CGPoint)arg1 fromWidget:(id)arg2 ;
-(id)navigatorViewControllerForNavigatorWithName:(id)arg1 ;
-(void)startCouchPotatoPlayback;
-(char)canStartCouchPotatoPlayback;
-(void)startCouchPotatoPlaybackWithName:(id)arg1 ;
-(double)currentCouchStepDuration;
-(void)setLastCouchStep:(OKDocumentCouchStep *)arg1 ;
-(void)playNextCouchPotatoStep;
-(void)setupCouchLabelHUDView:(/*^block*/id)arg1 ;
-(id)_nextCouchStep:(id)arg1 ;
-(char)couchPotatoModeLoops;
-(char)couchPotatoRewindAudioOnLoop;
-(void)fadeMainNavigatorTracksWithDuration:(double)arg1 ;
-(OKDocumentCouchStep *)lastCouchStep;
-(void)_playLoopedCouchPotatoStep;
-(unsigned long long)couchStepMode;
-(float)couchPotatoAudioFadeOutDuration;
-(void)fadeAllAudioTracksWithDuration:(double)arg1 ;
-(void)_notifyCouchPotatoPlaybackFinished;
-(void)cleanCouchLabelHUDView;
-(char)interactivityEnabled;
-(void)decreaseCouchPotatoCancellationCounter;
-(void)increaseCouchPotatoCancellationCounter;
-(id)beginAudioForController:(id)arg1 withAVAsset:(id)arg2 andVolume:(float)arg3 ;
-(void)audioStartedPlayingForTrackID:(id)arg1 withAVAsset:(id)arg2 andVolume:(float)arg3 ;
-(unsigned long long)countOfDictionaryProxy:(id)arg1 ;
-(id)allKeysForDictionaryProxy:(id)arg1 ;
-(id)dictionaryProxy:(id)arg1 objectForKey:(id)arg2 ;
-(void)addActionBinding:(id)arg1 scope:(unsigned long long)arg2 ;
-(void)removeActionBinding:(id)arg1 ;
-(void)removeAllActionBindings;
-(id)actionBindingForAction:(id)arg1 isTouchCountAgnostic:(char)arg2 ;
-(CGPoint)convertLocationInWindow:(CGPoint)arg1 toPage:(id)arg2 ;
-(CGPoint)convertLocationInWindow:(CGPoint)arg1 toWidget:(id)arg2 ;
-(void)updateDisplayResolution;
-(double)documentViewScale;
-(void)prepareForRefreshWithDelay:(double)arg1 ;
-(id)cachedNavigatorPageViewControllers;
-(void)updateMotion;
-(id)dynamicsPushBehaviors;
-(void)restartCouchPotatoPlayback;
-(id)beginAudioForController:(id)arg1 withURL:(id)arg2 andVolume:(float)arg3 ;
-(void)endAudioForController:(id)arg1 andTrackID:(id)arg2 ;
-(void)audioStartedPlayingForTrackID:(id)arg1 withMediaURL:(id)arg2 andVolume:(float)arg3 ;
-(char)canPanMediaForWidget:(id)arg1 ;
-(char)shouldPanMediaForWidget:(id)arg1 toOffset:(CGPoint)arg2 ;
-(char)canEditTextForWidget:(id)arg1 ;
-(char)shouldChangeTextForWidget:(id)arg1 toSettings:(id)arg2 ;
-(void)didChangeTextForWidget:(id)arg1 toSettings:(id)arg2 ;
-(void)willChangeFocusForTextWidget:(id)arg1 toFocusState:(char)arg2 ;
-(void)setMainNavigatorViewController:(OKNavigatorViewController *)arg1 ;
-(CGSize)resolutionSize;
-(char)keepAspectRatio;
-(void)setCouchPotatoModeLoops:(char)arg1 ;
-(char)isExporting;
-(char)preloadAllLowThumbnails;
-(void)setPreloadAllLowThumbnails:(char)arg1 ;
@end

