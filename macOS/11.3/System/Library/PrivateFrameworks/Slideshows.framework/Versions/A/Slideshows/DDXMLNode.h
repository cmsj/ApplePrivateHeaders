/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:40 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Slideshows.framework/Versions/A/Slideshows
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Slideshows/Slideshows-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface DDXMLNode : NSObject <NSCopying> {

	xmlKind* genericPtr;
	xmlNode* nsParentPtr;

}
+(void)initialize;
+(id)localNameForName:(id)arg1 ;
+(id)prefixForName:(id)arg1 ;
+(id)textWithStringValue:(id)arg1 ;
+(id)elementWithName:(id)arg1 URI:(id)arg2 ;
+(id)attributeWithName:(id)arg1 URI:(id)arg2 stringValue:(id)arg3 ;
+(id)elementWithName:(id)arg1 ;
+(id)elementWithName:(id)arg1 stringValue:(id)arg2 ;
+(id)elementWithName:(id)arg1 children:(id)arg2 attributes:(id)arg3 ;
+(id)attributeWithName:(id)arg1 stringValue:(id)arg2 ;
+(id)namespaceWithName:(id)arg1 stringValue:(id)arg2 ;
+(id)processingInstructionWithName:(id)arg1 stringValue:(id)arg2 ;
+(id)commentWithStringValue:(id)arg1 ;
+(id)lastError;
+(id)nodeWithPrimitive:(xmlKind*)arg1 ;
+(void)removeAttribute:(xmlAttr*)arg1 fromNode:(xmlNode*)arg2 ;
+(void)removeAllAttributesFromNode:(xmlNode*)arg1 ;
+(void)removeNamespace:(xmlNs*)arg1 fromNode:(xmlNode*)arg2 ;
+(void)removeAllNamespacesFromNode:(xmlNode*)arg1 ;
+(id)nodeWithPrimitive:(xmlKind*)arg1 nsParent:(xmlNode*)arg2 ;
+(void)removeChild:(xmlNode*)arg1 fromNode:(xmlNode*)arg2 ;
+(void)removeAllChildrenFromNode:(xmlNode*)arg1 ;
+(char)isXmlNodePtr:(xmlKind*)arg1 ;
+(char)isXmlNsPtr:(xmlKind*)arg1 ;
+(void)detachAttribute:(xmlAttr*)arg1 fromNode:(xmlNode*)arg2 ;
+(void)detachChild:(xmlNode*)arg1 fromNode:(xmlNode*)arg2 ;
+(char)isXmlDocPtr:(xmlKind*)arg1 ;
+(void)recursiveStripDocPointersFromNode:(xmlNode*)arg1 ;
+(char)isXmlAttrPtr:(xmlKind*)arg1 ;
+(char)isXmlDtdPtr:(xmlKind*)arg1 ;
+(void)stripDocPointersFromAttr:(xmlAttr*)arg1 ;
+(void)detachNamespace:(xmlNs*)arg1 fromNode:(xmlNode*)arg2 ;
+(void)detachChild:(xmlNode*)arg1 fromNode:(xmlNode*)arg2 andNullifyPointers:(char)arg3 ;
+(void)nodeFree:(xmlNode*)arg1 ;
+(void)removeAllChildrenFromDoc:(xmlDoc*)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(id)description;
-(id)name;
-(id)stringValue;
-(void)setName:(id)arg1 ;
-(void)detach;
-(unsigned long long)index;
-(id)parent;
-(unsigned long long)level;
-(unsigned long long)kind;
-(id)prefix;
-(unsigned long long)childCount;
-(id)childAtIndex:(unsigned long long)arg1 ;
-(id)URI;
-(void)setURI:(id)arg1 ;
-(id)children;
-(void)setStringValue:(id)arg1 ;
-(id)XPath;
-(id)XMLStringWithOptions:(unsigned long long)arg1 ;
-(id)rootDocument;
-(id)localName;
-(id)previousSibling;
-(id)nextSibling;
-(id)XMLString;
-(id)previousNode;
-(id)nextNode;
-(id)nodesForXPath:(id)arg1 error:(id*)arg2 ;
-(id)initWithCheckedPrimitive:(xmlKind*)arg1 ;
-(id)initWithUncheckedPrimitive:(xmlKind*)arg1 ;
-(char)hasParent;
-(char)isXmlAttrPtr;
-(char)isXmlNsPtr;
-(char)isXmlNodePtr;
-(void)nodeRetain;
-(id)initWithCheckedPrimitive:(xmlKind*)arg1 nsParent:(xmlNode*)arg2 ;
-(void)nodeRelease;
-(char)isXmlDocPtr;
-(id)initWithUncheckedPrimitive:(xmlKind*)arg1 nsParent:(xmlNode*)arg2 ;
-(char)isXmlDtdPtr;
@end

