/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:40 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Slideshows.framework/Versions/A/Slideshows
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Slideshows/Slideshows-Structs.h>
#import <Slideshows/MRLayer.h>

@class MCContainer, NSMutableArray, NSMutableDictionary, MRLayer, MRTransition, MRTransitionChanges, NSMutableSet, NSArray;

@interface MRLayerNavigator : MRLayer {

	MCContainer* mContainer;
	NSMutableArray* mSublayers;
	NSMutableDictionary* mSublayersForPlugs;
	MRLayer* mNextSublayer;
	MRLayer* mExtraSublayer;
	MRTransition* mCurrentTransition;
	double mTransitionStartTime;
	double mTransitionDuration;
	MRTransitionChanges* mTransitionChanges;
	double mCurrentSublayerContainerTimeOnTransitionStart;
	double mForcedTransitionProgressOffset;
	char mIsInnerTransitioning;
	char mTransitionIsBackwards;
	char mTransitionWasAborted;
	char mTransitionIsSubzero;
	char mTransitionIsNextPrevious;
	char mTransitionStartedWithNext;
	unsigned char mElementToDraw;
	double mCurrentSublayerInterestingTime;
	double mCurrentSublayerLazyDuration;
	double mCurrentSublayerLazyFactor;
	double mCurrentSublayerAnimationDuration;
	double mNextSublayerInterestingTime;
	double mNextSublayerLazyDuration;
	double mNextSublayerLazyFactor;
	double mNextSublayerAnimationDuration;
	double mTotalMotionDuration;
	unsigned long long mFastScrubbingStartIndex;
	double mFastScrubbingProgress;
	char mIsSerializerBased;
	char mIsInSlideFocusMode;
	char mIsFastScrubbing;
	char mPausedSublayersForTransition;
	char mControlsSublayerTimes;
	char mNeedsToResyncToSerializer;
	char mHasWarnedDelegateAboutNearingEnd;
	MRLayer* mSublayerToPrecompute;
	id mPrecomputingTarget;
	unsigned long long mPrecomputingType;
	NSMutableArray* mHistoryBack;
	NSMutableArray* mHistoryForth;
	NSMutableSet* mPotentialTargetSublayers;
	char mNeedsToUpdatePotentialTargetSublayers;
	char _pauseWhenTransitionEnds;
	double _currentSublayerTheoreticalTimeIn;
	char _needsToRecomputeCurrentSublayerTheoreticalTimeIn;
	double _previouslyRenderedTransitionProgress;
	char mIsTransitioning;
	char mHistoryIsEnabled;
	MRLayer* mCurrentSublayer;
	double mForcedTransitionProgress;
	double _currentSlideshowTime;

}

@property (readonly) NSArray * sublayers; 
@property (readonly) MRLayer * currentSublayer; 
@property (readonly) char isTransitioning; 
@property (assign) char historyIsEnabled; 
@property (assign,nonatomic) double forcedTransitionProgress; 
@property (readonly) double currentSlideshowTime;                          //@synthesize currentSlideshowTime=_currentSlideshowTime - In the implementation block
-(void)cleanup;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)activate;
-(id)initWithParameters:(id)arg1 ;
-(char)isOpaque;
-(void)deactivate;
-(NSArray *)sublayers;
-(char)isInfinite;
-(char)isTransitioning;
-(id)_currentState;
-(char)hasAudio;
-(double)goBack;
-(void)setPixelSize:(CGSize)arg1 ;
-(char)hasSlides;
-(char)isLoadedForTime:(double)arg1 ;
-(char)prerenderForTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(id)patchworkAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(char)isAlphaFriendly;
-(void)beginMorphingToAspectRatio:(double)arg1 withDuration:(double)arg2 ;
-(void)endMorphing;
-(char)getStartTime:(double*)arg1 andDuration:(double*)arg2 forMovingToElementID:(id)arg3 backwards:(char)arg4 ;
-(char)hasMoreSlidesFromTime:(double)arg1 backwards:(char)arg2 startTime:(double*)arg3 duration:(double*)arg4 ;
-(double)interestingTimeForTime:(double)arg1 ;
-(double)interestingTimeForElement:(id)arg1 ;
-(void)getLazyDuration:(double*)arg1 lazyFactor:(double*)arg2 animationDuration:(double*)arg3 fromInterestingTime:(double)arg4 ;
-(char)isInInteractiveMode;
-(void)_unobservePlug;
-(void)depreactivate:(char)arg1 ;
-(id)initWithPlug:(id)arg1 andParameters:(id)arg2 inSuperlayer:(id)arg3 ;
-(void)_unobservePlugOnDepreactivate;
-(void)_observePlugOnPreactivate;
-(char)_isNative3D;
-(double)transitionToNextSublayerWithDeltaStartTime:(double)arg1 ;
-(void)synchronizeTime;
-(void)_renderAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(char)hasSomethingToRender;
-(id)_retainedByUserRenderedImageAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(MRLayer *)currentSublayer;
-(double)doTransition:(id)arg1 backwards:(char)arg2 pzr:(id)arg3 ;
-(double)goForth;
-(double)doActionTrigger:(id)arg1 ;
-(id)_dumpLayerWithOptions:(unsigned long long)arg1 ;
-(char)enterSlideFocusModeWithState:(id)arg1 ;
-(char)willFocusOnNextSlideWithState:(id)arg1 animate:(char)arg2 ;
-(void)didFocusOnNextSlideWithState:(id)arg1 ;
-(char)willFocusOnPreviousSlideWithState:(id)arg1 animate:(char)arg2 ;
-(void)didFocusOnPreviousSlideWithState:(id)arg1 ;
-(void)exitSlideFocusModeWithState:(id)arg1 ;
-(void)setIsInInteractiveMode:(char)arg1 ;
-(id)currentSlideInfoForElement:(id)arg1 ;
-(id)currentSlideInfos;
-(void)_observePlug;
-(void)_setNeedsToRequestRebuildAudio:(char)arg1 ;
-(void)_removeExtraSublayer;
-(void)_unobserveSublayer:(id)arg1 ;
-(void)_deleteSublayer:(id)arg1 ;
-(void)endTransitionToSublayer;
-(void)endMovingCurrentSublayer;
-(void)_executeLayerCommandQueue;
-(void)_createExtraSublayer;
-(void)_resyncToSerializerForTime:(double)arg1 ;
-(void)_prerenderSublayersAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(void)_preprecomputeAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(id)sublayerHitAtPoint:(CGPoint)arg1 onlyIfHitElement:(char)arg2 localPoint:(CGPoint*)arg3 ;
-(void)_observeSublayer:(id)arg1 ;
-(id)sublayerForPlugObjectID:(id)arg1 recursive:(char)arg2 ;
-(double)gotoNextSublayer:(id)arg1 animate:(char)arg2 ;
-(double)gotoPreviousSublayer:(id)arg1 animate:(char)arg2 ;
-(double)gotoMoreSlidesWithAction:(id)arg1 backwards:(char)arg2 animate:(char)arg3 canCatchCurrentTransition:(char)arg4 ;
-(double)abortTransition:(id)arg1 ;
-(double)finishTransition:(id)arg1 ;
-(id)sublayerForKey:(id)arg1 ;
-(void)_registerTransitionForHistory:(id)arg1 withDestinationPlugID:(id)arg2 backwards:(char)arg3 ;
-(double)doTransition:(id)arg1 backwards:(char)arg2 updateHistory:(char)arg3 deltaStartTime:(double)arg4 pzr:(id)arg5 ;
-(void)_getInterestingTimesForSublayerControl;
-(double)startMovingCurrentSublayer:(char)arg1 ;
-(double)gotoNextOrPreviousSlideInCurrentSublayer:(char)arg1 ;
-(double)doTransition:(id)arg1 withDeltaStartTime:(double)arg2 ;
-(id)_transitionWithTransitionTrigger:(id)arg1 ;
-(void)fillInNextSlideInformationInState:(id)arg1 ;
-(void)fillInPreviousSlideInformationInState:(id)arg1 ;
-(void)setSublayer:(id)arg1 forKey:(id)arg2 ;
-(void)updateTransition:(id)arg1 ;
-(double)attemptToFinishTransition:(id)arg1 didTransition:(char*)arg2 gotReversed:(char*)arg3 ;
-(void)jumpToSublayer:(id)arg1 atTime:(double)arg2 ;
-(char)canTransitionToMoreSlides:(char)arg1 ;
-(void)jumpToNextMarker:(id)arg1 ;
-(void)jumpToPreviousMarker:(id)arg1 ;
-(void)resyncToSerializer;
-(double)fastScrubStart:(id)arg1 ;
-(double)fastScrubUpdate:(id)arg1 ;
-(double)fastScrubEnd:(id)arg1 ;
-(double)fastScrubCancel:(id)arg1 ;
-(char)historyIsEnabled;
-(void)setHistoryIsEnabled:(char)arg1 ;
-(double)forcedTransitionProgress;
-(void)setForcedTransitionProgress:(double)arg1 ;
-(double)currentSlideshowTime;
-(id)_createSublayerForPlug:(id)arg1 ;
-(void)_precomputeAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 ;
-(id)_createSublayerForPrecomputingWithPlug:(id)arg1 ;
@end

