/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:36 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreSuggestions.framework/Versions/A/CoreSuggestions
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreSuggestions/CoreSuggestions-Structs.h>
#import <libobjc.A.dylib/SGSuggestionsServiceContactsProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceEventsProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceIpsosProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceInternalProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceMailProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceFidesProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceRemindersProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceDeliveriesProtocol.h>
#import <libobjc.A.dylib/SGSuggestionsServiceURLsProtocol.h>

@protocol SGDSuggestManagerAllProtocol;
@class SGDaemonConnection, NSString, SGFuture;

@interface SGSuggestionsService : NSObject <SGSuggestionsServiceContactsProtocol, SGSuggestionsServiceEventsProtocol, SGSuggestionsServiceIpsosProtocol, SGSuggestionsServiceInternalProtocol, SGSuggestionsServiceMailProtocol, SGSuggestionsServiceFidesProtocol, SGSuggestionsServiceRemindersProtocol, SGSuggestionsServiceDeliveriesProtocol, SGSuggestionsServiceURLsProtocol> {

	SGDaemonConnection* _daemonConnection;
	id<SGDSuggestManagerAllProtocol> _managerForTesting;
	char _keepDirty;
	NSString* _machServiceName;
	char _queuesRequestsIfBusy;
	double _syncTimeout;
	opaque_pthread_mutex_t _syncTimeoutLock;
	SGFuture* _snapshotFuture;

}
+(void)initialize;
+(char)hasEntitlement:(id)arg1 ;
+(char)isHarvestingSupported;
+(id)serviceForContacts;
+(id)serviceForEvents;
+(id)filteredSearchableItemsFromItems:(id)arg1 ;
+(id)inProcessSuggestManager;
+(id)_daemonConnectionForMachServiceName:(id)arg1 protocol:(id)arg2 useCache:(char)arg3 ;
+(void)setInProcessSuggestManager:(id)arg1 ;
+(id)serviceForMail;
+(id)serviceForURLs;
+(id)serviceForReminders;
+(id)serviceForDeliveries;
+(id)serviceForIpsos;
+(id)serviceForInternal;
+(id)serviceForFides;
+(id)serviceForMessages;
+(void)prepareForQuery;
+(id)wantedSearchableItemsFromItems:(id)arg1 ;
-(char)sleep:(id*)arg1 ;
-(id)powerState;
-(id)cnContactMatchesForRecordIds:(id)arg1 error:(id*)arg2 ;
-(id)contactMatchesWithContactIdentifier:(id)arg1 limitTo:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)contactFromRecordID:(id)arg1 error:(id*)arg2 ;
-(id)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)contactMatchesByEmailAddress:(id)arg1 error:(id*)arg2 ;
-(id)contactMatchesByPhoneNumber:(id)arg1 error:(id*)arg2 ;
-(id)originFromRecordId:(id)arg1 error:(id*)arg2 ;
-(char)confirmContactDetailRecord:(id)arg1 error:(id*)arg2 ;
-(char)confirmRecord:(id)arg1 error:(id*)arg2 ;
-(char)rejectContactDetailRecord:(id)arg1 rejectionUI:(int)arg2 error:(id*)arg3 ;
-(char)rejectRecord:(id)arg1 rejectionUI:(int)arg2 error:(id*)arg3 ;
-(void)eventFromUniqueId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(char)confirmEventByRecordId:(id)arg1 error:(id*)arg2 ;
-(void)confirmEventByRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectEventByRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)logEventInteractionForEventWithUniqueKey:(id)arg1 interface:(unsigned short)arg2 actionType:(unsigned short)arg3 ;
-(void)planReceivedFromServerWithPayload:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)evaluateRecipe:(id)arg1 attachments:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)waitForEventWithIdentifier:(id)arg1 toAppearInEventStoreWithLastModificationDate:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)emailAddressIsSignificant:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(char)resetConfirmationAndRejectionHistory:(id*)arg1 ;
-(void)realtimeSuggestionsFromURL:(id)arg1 title:(id)arg2 HTMLPayload:(id)arg3 extractionDate:(id)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)suggestionsFromRFC822Data:(id)arg1 source:(id)arg2 options:(unsigned long long)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)clearCachesFully:(char)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)drainQueueCompletelyWithCompletion:(/*^block*/id)arg1 ;
-(void)removeAllStoredPseudoContactsWithCompletion:(/*^block*/id)arg1 ;
-(void)daemonExitWithCompletion:(/*^block*/id)arg1 ;
-(void)sleepWithCompletion:(/*^block*/id)arg1 ;
-(void)suggestionsFromEmailContent:(id)arg1 headers:(id)arg2 source:(id)arg3 options:(unsigned long long)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)suggestionsFromSimpleMailMessage:(id)arg1 headers:(id)arg2 options:(unsigned long long)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)deleteCloudKitZoneWithCompletion:(/*^block*/id)arg1 ;
-(void)purgeSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 identifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 groupIdentifiers:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)ipsosMessagesWithSearchableItems:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)allDeliveriesWithLimit:(unsigned long long)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)allRemindersLimitedTo:(unsigned long long)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)reminderTitleForContent:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)logUserCreatedReminderTitle:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)allEventsLimitedTo:(unsigned long long)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)suggestionsFromURL:(id)arg1 title:(id)arg2 HTMLPayload:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)recentURLsWithLimit:(unsigned)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)urlsFoundBetweenStartDate:(id)arg1 endDate:(id)arg2 excludingBundleIdentifiers:(id)arg3 limit:(unsigned)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)contactMatchesWithContact:(id)arg1 limitTo:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)contactMatchesWithContactIdentifier:(id)arg1 limitTo:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)contactMatchesWithContactIdentifiers:(id)arg1 limitTo:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)cnContactMatchesForRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)cnContactMatchesForRecordIds:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)contactMatchesByPhoneNumber:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)contactMatchesByEmailAddress:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)namesForDetail:(id)arg1 limitTo:(unsigned long long)arg2 prependMaybe:(char)arg3 onlySignificant:(char)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)allContactsWithSnippets:(char)arg1 limitTo:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(char)prepareForRealtimeExtraction:(id*)arg1 ;
-(void)suggestionsFromSearchableItem:(id)arg1 options:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)harvestedSuggestionsFromSearchableItem:(id)arg1 options:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)messagesToRefreshWithCompletion:(/*^block*/id)arg1 ;
-(void)reportMessagesFound:(id)arg1 lost:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)foundInStringForRecordId:(id)arg1 style:(unsigned char)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)keepDirty:(char)arg1 ;
-(void)logMetricAutocompleteResult:(int)arg1 recordId:(id)arg2 contactIdentifier:(id)arg3 bundleId:(id)arg4 ;
-(void)logMetricContactSearchResult:(int)arg1 recordId:(id)arg2 contactIdentifier:(id)arg3 bundleId:(id)arg4 ;
-(void)logMetricAutocompleteUserSelectedRecordId:(id)arg1 contactIdentifier:(id)arg2 bundleId:(id)arg3 ;
-(void)logMetricContactSearchResultSelected:(id)arg1 contactIdentifier:(id)arg2 bundleId:(id)arg3 ;
-(void)logMetricSuggestedContactDetailUsed:(id)arg1 contactIdentifier:(id)arg2 bundleId:(id)arg3 ;
-(void)logMetricSuggestedContactDetailShown:(id)arg1 contactIdentifier:(id)arg2 bundleId:(id)arg3 ;
-(void)logMetricContactCreated:(id)arg1 contactIdentifier:(id)arg2 bundleId:(id)arg3 ;
-(void)logMetricSearchResultsIncludedPureSuggestionWithBundleId:(id)arg1 ;
-(void)logEventInteractionForEventWithExternalIdentifier:(id)arg1 interface:(unsigned short)arg2 actionType:(unsigned short)arg3 ;
-(void)logSuggestionInteractionForRecordId:(id)arg1 interface:(unsigned short)arg2 actionType:(unsigned short)arg3 ;
-(double)syncTimeout;
-(void)setSyncTimeout:(double)arg1 ;
-(char)queuesRequestsIfBusy;
-(void)setQueuesRequestsIfBusy:(char)arg1 ;
-(char)isEnabledWithError:(id*)arg1 ;
-(void)confirmReminderByRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)confirmRealtimeReminder:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectReminderByRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectRealtimeReminder:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)reminderAlarmTriggeredForRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)prepareForRealtimeExtractionWithCompletion:(/*^block*/id)arg1 ;
-(void)updateMessages:(id)arg1 state:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(id)registerEventsChangeObserver:(/*^block*/id)arg1 ;
-(char)deregisterEventsChangeObserverWithToken:(id)arg1 ;
-(id)registerContactsChangeObserver:(/*^block*/id)arg1 ;
-(char)deregisterContactsChangeObserverWithToken:(id)arg1 ;
-(void)confirmContact:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectContact:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectContact:(id)arg1 rejectionUI:(int)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)confirmRecord:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectRecord:(id)arg1 rejectionUI:(int)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)rejectRecord:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(char)rejectRecord:(id)arg1 error:(id*)arg2 ;
-(void)confirmContactDetailRecord:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectContactDetailRecord:(id)arg1 rejectionUI:(int)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)rejectContactDetailRecord:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(char)rejectContactDetailRecord:(id)arg1 error:(id*)arg2 ;
-(void)confirmEvent:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)rejectEvent:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(char)rejectEventByRecordId:(id)arg1 error:(id*)arg2 ;
-(void)deleteEventByRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(char)deleteEventByRecordId:(id)arg1 error:(id*)arg2 ;
-(void)waitForEventWithIdentifier:(id)arg1 toAppearInEventStoreWithCompletion:(/*^block*/id)arg2 ;
-(void)addSearchableItems:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)addInteractions:(id)arg1 bundleId:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)spotlightReimportFromIdentifier:(id)arg1 forPersonHandle:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 options:(unsigned)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned)arg5 withCompletion:(/*^block*/id)arg6 ;
-(void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 withCompletion:(/*^block*/id)arg5 ;
-(void)suggestEventsInFutureLimitTo:(unsigned long long)arg1 options:(unsigned)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)suggestEventsInFutureLimitTo:(unsigned long long)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)resetConfirmationAndRejectionHistoryWithCompletion:(/*^block*/id)arg1 ;
-(char)clearCachesFully:(char)arg1 error:(id*)arg2 ;
-(id)suggestionsFromRFC822Data:(id)arg1 source:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
-(id)suggestionsFromSimpleMailMessage:(id)arg1 headers:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
-(char)sendRTCLogs:(id*)arg1 ;
-(char)daemonExit:(id*)arg1 ;
-(void)suggestionsFromMockData:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)ipsosMessagesWithSearchableItems:(id)arg1 error:(id*)arg2 ;
-(void)launchInfoForSuggestedEventWithUniqueIdentifier:(id)arg1 sourceURL:(id)arg2 clientLocale:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(id)launchInfoForSuggestedEventWithUniqueIdentifier:(id)arg1 sourceURL:(id)arg2 clientLocale:(id)arg3 error:(id*)arg4 ;
-(void)launchAppForSuggestedEventUsingLaunchInfo:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(char)launchAppForSuggestedEventUsingLaunchInfo:(id)arg1 error:(id*)arg2 ;
-(void)keysForSchemas:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)eventsForSchemas:(id)arg1 usingStore:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)isEventCandidateForURL:(id)arg1 andTitle:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)isEventCandidateForURL:(id)arg1 andTitle:(id)arg2 containsSchemaOrg:(char)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2 withCompletion:(/*^block*/id)arg3 ;
-(id)namesForDetail:(id)arg1 limitTo:(unsigned long long)arg2 prependMaybe:(char)arg3 onlySignificant:(char)arg4 error:(id*)arg5 ;
-(void)namesForDetail:(id)arg1 limitTo:(unsigned long long)arg2 prependMaybe:(char)arg3 withCompletion:(/*^block*/id)arg4 ;
-(id)namesForDetail:(id)arg1 limitTo:(unsigned long long)arg2 prependMaybe:(char)arg3 error:(id*)arg4 ;
-(void)contactFromRecordID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)contactMatchesWithContactIdentifiers:(id)arg1 limitTo:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)originFromRecordId:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)allContactsLimitedTo:(unsigned long long)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)initWithMachServiceName:(id)arg1 protocol:(id)arg2 ;
-(id)initWithMachServiceName:(id)arg1 protocol:(id)arg2 useCache:(char)arg3 ;
-(id)_remoteSuggestionManager;
-(void)setManagerForTesting:(id)arg1 ;
-(id)contactMatchesWithContact:(id)arg1 limitTo:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)allContactsLimitedTo:(unsigned long long)arg1 error:(id*)arg2 ;
-(id)allContactsWithSnippets:(char)arg1 limitTo:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)_clearHarvestStoreCache;
-(id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 options:(unsigned)arg4 error:(id*)arg5 ;
-(id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned)arg5 error:(id*)arg6 ;
-(id)suggestEventsInFutureLimitTo:(unsigned long long)arg1 options:(unsigned)arg2 error:(id*)arg3 ;
-(id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 error:(id*)arg4 ;
-(id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 error:(id*)arg5 ;
-(id)suggestEventsInFutureLimitTo:(unsigned long long)arg1 error:(id*)arg2 ;
-(id)allEventsLimitedTo:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)confirmReminderByRecordId:(id)arg1 error:(id*)arg2 ;
-(char)confirmRealtimeReminder:(id)arg1 error:(id*)arg2 ;
-(char)rejectReminderByRecordId:(id)arg1 error:(id*)arg2 ;
-(char)rejectRealtimeReminder:(id)arg1 error:(id*)arg2 ;
-(char)reminderAlarmTriggeredForRecordId:(id)arg1 error:(id*)arg2 ;
-(id)allRemindersLimitedTo:(unsigned long long)arg1 error:(id*)arg2 ;
-(id)reminderTitleForContent:(id)arg1 error:(id*)arg2 ;
-(char)logUserCreatedReminderTitle:(id)arg1 error:(id*)arg2 ;
-(id)allDeliveriesWithLimit:(unsigned long long)arg1 error:(id*)arg2 ;
-(id)suggestionsFromEmailContent:(id)arg1 headers:(id)arg2 source:(id)arg3 options:(unsigned long long)arg4 error:(id*)arg5 ;
-(id)suggestionsFromSearchableItem:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)harvestedSuggestionsFromSearchableItem:(id)arg1 options:(unsigned long long)arg2 error:(id*)arg3 ;
-(id)contactMatchesByPhoneNumber:(id)arg1 ;
-(id)contactMatchesByEmailAddress:(id)arg1 ;
-(id)cacheSnapshotFuture;
-(id)contactFromRecordID:(id)arg1 ;
-(id)cnContactMatchesForRecordId:(id)arg1 error:(id*)arg2 ;
-(id)emailAddressIsSignificant:(id)arg1 error:(id*)arg2 ;
-(id)eventFromRecordID:(id)arg1 error:(id*)arg2 ;
-(void)eventFromRecordID:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(id)eventFromUniqueId:(id)arg1 error:(id*)arg2 ;
-(char)confirmEvent:(id)arg1 error:(id*)arg2 ;
-(char)rejectEvent:(id)arg1 error:(id*)arg2 ;
-(char)confirmContact:(id)arg1 error:(id*)arg2 ;
-(char)rejectContact:(id)arg1 rejectionUI:(int)arg2 error:(id*)arg3 ;
-(char)rejectContact:(id)arg1 error:(id*)arg2 ;
-(id)predictedToEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 error:(id*)arg6 ;
-(void)predictedToEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 withCompletion:(/*^block*/id)arg6 ;
-(id)predictedCCEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 error:(id*)arg6 ;
-(void)predictedCCEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 withCompletion:(/*^block*/id)arg6 ;
-(char)addSearchableItems:(id)arg1 error:(id*)arg2 ;
-(void)_addSearchableItemMetadata:(id)arg1 htmlData:(id)arg2 completion:(/*^block*/id)arg3 ;
-(char)addInteractions:(id)arg1 bundleId:(id)arg2 error:(id*)arg3 ;
-(char)spotlightReimportFromIdentifier:(id)arg1 forPersonHandle:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 error:(id*)arg5 ;
-(id)messagesToRefreshWithError:(id*)arg1 ;
-(char)reportMessagesFound:(id)arg1 lost:(id)arg2 error:(id*)arg3 ;
-(char)updateMessages:(id)arg1 state:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)drainQueueCompletely:(id*)arg1 ;
-(char)removeAllStoredPseudoContacts:(id*)arg1 ;
-(id)recentURLsWithLimit:(unsigned)arg1 error:(id*)arg2 ;
-(id)urlsFoundBetweenStartDate:(id)arg1 endDate:(id)arg2 excludingBundleIdentifiers:(id)arg3 limit:(unsigned)arg4 error:(id*)arg5 ;
-(id)foundInStringForRecordId:(id)arg1 style:(unsigned char)arg2 error:(id*)arg3 ;
@end

