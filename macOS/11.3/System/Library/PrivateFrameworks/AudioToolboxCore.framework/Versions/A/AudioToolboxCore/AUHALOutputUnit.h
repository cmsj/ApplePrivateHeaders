/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:50:56 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioToolboxCore/AudioToolboxCore-Structs.h>
#import <AudioToolboxCore/AUAudioUnitV2Bridge.h>

@interface AUHALOutputUnit : AUAudioUnitV2Bridge {

	/*^block*/id _outputProvider;
	/*^block*/id _inputHandler;
	BOOL _inputWasEnabled;
	BOOL _outputWasEnabled;
	BOOL _inputBusEnabled;
	int _renderObserverToken;
	unordered_map<long, void ()(unsigned int, const AudioTimeStamp *, unsigned int, long), std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, void ()(unsigned int, const AudioTimeStamp *, unsigned int, long)>>>* _renderObservers;

}

@property (assign,getter=isInputEnabled,nonatomic) char inputEnabled; 
@property (assign,getter=isOutputEnabled,nonatomic) char outputEnabled; 
@property (nonatomic,readonly) unsigned deviceID; 
-(void)dealloc;
-(char)isRunning;
-(id)initWithComponentDescription:(AudioComponentDescription)arg1 options:(unsigned)arg2 error:(id*)arg3 ;
-(long long)tokenByAddingRenderObserver:(/*^block*/id)arg1 ;
-(void)removeRenderObserver:(long long)arg1 ;
-(void)addRenderObserver:(/*function pointer*/void*)arg1 userData:(void*)arg2 ;
-(void)removeRenderObserver:(/*function pointer*/void*)arg1 userData:(void*)arg2 ;
-(int)enableBus:(unsigned)arg1 scope:(unsigned)arg2 enable:(char)arg3 ;
-(id)initWithAudioUnit:(OpaqueAudioComponentInstanceRef)arg1 description:(AudioComponentDescription)arg2 ;
-(/*^block*/id)_inputHandler;
-(void)initAUHALOutputUnit;
-(/*^block*/id)outputProvider;
-(void)setOutputProvider:(/*^block*/id)arg1 ;
-(void)setInputHandler:(/*^block*/id)arg1 ;
-(char)canPerformInput;
-(char)canPerformOutput;
-(char)isInputEnabled;
-(char)isOutputEnabled;
-(void)setInputEnabled:(char)arg1 ;
-(void)setOutputEnabled:(char)arg1 ;
-(unsigned)deviceID;
-(char)setDeviceID:(unsigned)arg1 error:(id*)arg2 ;
-(double)deviceLatency:(char)arg1 ;
-(double)deviceInputLatency;
-(double)deviceOutputLatency;
-(char)startHardwareAndReturnError:(id*)arg1 ;
-(void)stopHardware;
@end

