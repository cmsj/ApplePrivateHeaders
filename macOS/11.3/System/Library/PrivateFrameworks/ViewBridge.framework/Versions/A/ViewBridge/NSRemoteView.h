/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:04 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ViewBridge/ViewBridge-Structs.h>
#import <AppKit/NSView.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/NSVBXPCConnectionClient.h>
#import <libobjc.A.dylib/HasAuxiliaryConnection.h>
#import <libobjc.A.dylib/AuxiliaryCallsHost.h>
#import <libobjc.A.dylib/_NSAlertSensitiveView.h>

@class NSXPCInterface, NSXPCConnection, NSXPCListenerEndpoint, NSRemoteViewMarshal, NSUUID, NSAccessibilityRemoteUIElement, NSView, NSString;

@interface NSRemoteView : NSView <NSXPCListenerDelegate, NSVBXPCConnectionClient, HasAuxiliaryConnection, AuxiliaryCallsHost, _NSAlertSensitiveView> {

	NSRemoteViewMarshal* _rvm;
	NSUUID* _serviceInstanceIdentifier;

}

@property (nonatomic,retain) NSAccessibilityRemoteUIElement * accessoryViewAccessibilityParent; 
@property (nonatomic,readonly) NSRemoteView * spawnedBy; 
@property (readonly) CGPoint requestedOrigin; 
@property (assign) NSModalSessionRef appModalSession; 
@property (assign) NSObject*<NSRemoteViewDelegate> delegate; 
@property (retain) NSView * accessoryView; 
@property (readonly) char isValid; 
@property (nonatomic,copy) NSString * serviceName; 
@property (nonatomic,retain) NSUUID * serviceInstanceIdentifier;                                             //@synthesize serviceInstanceIdentifier=_serviceInstanceIdentifier - In the implementation block
@property (nonatomic,copy) NSString * serviceSubclassName; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) id auxiliarySyncObject; 
@property (nonatomic,readonly) NSXPCInterface * auxiliaryInterfaceOutgoing; 
@property (nonatomic,readonly) NSXPCInterface * auxiliaryInterfaceIncoming; 
@property (assign,nonatomic) NSXPCConnection * auxiliaryServiceConnection; 
@property (assign,nonatomic) NSXPCListenerEndpoint * auxiliaryListenerEndpoint; 
@property (readonly) char wantsAlertStylePadding; 
+(char)allowSetObjectForKey:(id)arg1 bridge:(id)arg2 bridgePhase:(unsigned char)arg3 withReply:(/*^block*/id)arg4 ;
+(void)initAll;
+(Class)rendezvousWindowClass:(Class)arg1 ;
+(void)rendezvousWindow:(unsigned char)arg1 kind:(unsigned char)arg2 spawnedBy:(id)arg3 privateEventLoopKind:(int)arg4 styleMask:(unsigned long long)arg5 contentRect:(CGRect)arg6 identifier:(id)arg7 listenerEndpoint:(id)arg8 semaphore:(id)arg9 completion:(/*^block*/id)arg10 ;
+(id)rendezvousWindow:(unsigned char)arg1 kind:(unsigned char)arg2 spawnedBy:(id)arg3 privateEventLoopKind:(int)arg4 styleMask:(unsigned long long)arg5 contentRect:(CGRect)arg6 identifier:(id)arg7 listenerEndpoint:(id)arg8 error:(id*)arg9 ;
+(CGColorRef)_warningColorCG;
+(id)_remoteViewForIdentifier:(id)arg1 ;
+(id)_warningColorNS;
+(void)initialize;
+(char)automaticallyNotifiesObserversOfTouchBar;
+(CFStringRef)privateRunLoopMode;
+(id)_findFirstKeyViewInDirection:(unsigned long long)arg1 forKeyLoopGroupingView:(id)arg2 ;
+(char)isFakeEvent:(id)arg1 ;
+(void)deferBlockOntoMainThread:(/*^block*/id)arg1 ;
-(os_unfair_lock_s*)retainReleaseLock;
-(void)__vbWithLockPerform:(/*^block*/id)arg1 ;
-(void)__vbSuperRelease;
-(id)serviceViewControllerIdentifier;
-(unsigned char)bridgePhase;
-(void)setWindow:(id)arg1 styleMask:(unsigned long long)arg2 ;
-(void)addChildWindow:(SCD_Struct_NS22)arg1 identifier:(id)arg2 listenerEndpoint:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)updateAccessibilityChildren:(id)arg1 ;
-(void)updateContentMinSize:(CGSize)arg1 maxSize:(CGSize)arg2 ;
-(void)setAuxiliaryListenerEndpoint:(NSXPCListenerEndpoint *)arg1 ;
-(NSXPCConnection *)auxiliaryServiceConnection;
-(void)didStealKeyboardFocus;
-(void)didReleaseKeyboardFocus;
-(void)didLoseKeyboardFocus;
-(void)beginSheet:(id)arg1 modalForWindow:(id)arg2 size:(CGSize)arg3 isCritical:(char)arg4 withReply:(/*^block*/id)arg5 ;
-(void)serviceAccessoryViewResignedFirstResponder;
-(void)serviceAccessoryViewBecameFirstResponder:(unsigned long long)arg1 ;
-(void)endAppModalSession:(id)arg1 ;
-(void)discloseAccessoryView:(char)arg1 withAnimationState:(int)arg2 andDuration:(double)arg3 ;
-(void)constraintsDidChangeInAccessoryWindow;
-(void)updateAccessoryViewAccessibility;
-(void)setServiceAccessoryViewSize:(CGSize)arg1 ;
-(void)_maintainSnapshotOfAccessoryWindowInService:(char)arg1 ;
-(NSAccessibilityRemoteUIElement *)accessoryViewAccessibilityParent;
-(id)_viewServiceMarshalProxy:(const char*)arg1 ;
-(id)serviceMarshalConnection;
-(void)setServiceObject:(id)arg1 forKey:(id)arg2 ;
-(void)_adjustWindowBackgroundColor:(id)arg1 ;
-(char)_windowGeometryChangingAtRequestOfService;
-(char)_viewServiceMaySetHostWindowLevel;
-(CGPoint)requestedOrigin;
-(NSModalSessionRef)appModalSession;
-(void)setAppModalSession:(NSModalSessionRef)arg1 ;
-(char)_hasFriendlyKeyFocusThief:(int)arg1 ;
-(id)serviceListenerEndpoint;
-(NSUUID *)serviceInstanceIdentifier;
-(void)maintainAppWideNotifications:(char)arg1 ;
-(void)setServiceViewControllerIdentifier:(id)arg1 ;
-(id)remoteViewControllerParametersForService;
-(void)setRemoteViewControllerParametersForService:(id)arg1 ;
-(void)maintainWindowEventMonitor:(unsigned)arg1 ;
-(void)maintainProcessNotificationEventMonitor:(char)arg1 ;
-(void)_endWaitForPrivateEventLoopInService;
-(void)_invalidateChildWindows;
-(void)_maintainWindowNotifications:(char)arg1 ;
-(void)_invalidateWindowBridgeKeys;
-(void)_endAllSheets;
-(void)invalidateTrackingArea;
-(void)_preSuperInit;
-(void)_postSuperInit;
-(id)keyTestWindow;
-(char)_shouldUpdateWindowEdgeResizingRegion;
-(char)_updateWindowEdgeResizingRegion:(CGRect)arg1 ;
-(char)synchronizesImplicitAnimations;
-(id)stolenKeyFocusEventFilter:(id)arg1 ;
-(char)shouldInformServiceOfKeynessChange:(id)arg1 ;
-(void)_synchronizeImplicitAnimationsInActions:(/*^block*/id)arg1 ;
-(void)_auxiliaryProxyWithSemaphore:(id)arg1 attemptingTo:(const char*)arg2 withCompletion:(/*^block*/id)arg3 ;
-(char)_evaluateKeyness:(char)arg1 forWindow:(id)arg2 ;
-(char)_evaluateKeynessForWindow:(id)arg1 ;
-(char)maintainAssociation;
-(void)keyEventHitServiceAccessoryView:(id)arg1 eventOwner:(unsigned)arg2 reply:(/*^block*/id)arg3 ;
-(void)potentialCommandEquivalentHitServiceApp:(id)arg1 eventOwner:(unsigned)arg2 reply:(/*^block*/id)arg3 ;
-(void)frameOfServiceWindowDidChange:(CGRect)arg1 safeFrame:(CGRect)arg2 windowBackgroundColor:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)serviceRequestsFrame:(CGRect)arg1 serviceWindowBackgroundColor:(id)arg2 safeFrame:(CGRect)arg3 animate:(char)arg4 transaction:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)_remoteViewBecameFirstResponder;
-(char)_inhibitFirstResponder;
-(unsigned long long)_oldFirstResponderBeforeBecomingTextSelectionDirection;
-(char)_oldFirstResponderWasAccessoryViewOrWindow;
-(id)_viewServiceMarshalProxy:(const char*)arg1 withErrorHandler:(/*^block*/id)arg2 ;
-(void)_remoteViewBecameFirstResponder:(unsigned long long)arg1 withIPC:(/*^block*/id)arg2 ;
-(id)_concretizedAppAccentColor;
-(void)_appAccentColorDidChange:(id)arg1 ;
-(void)_hostWindowLevelDidChange:(id)arg1 ;
-(void)hostWindowDidResignKey:(id)arg1 ;
-(void)hostWindowDidBecomeKey:(id)arg1 ;
-(void)containingWindowDidMove:(id)arg1 ;
-(void)containingWindowDidChangeOcclusionState:(id)arg1 ;
-(void)containingWindowWillOrderOffScreen:(id)arg1 ;
-(void)containingWindowDidOrderOffScreen:(id)arg1 ;
-(void)containingWindowWillOrderOnScreen:(id)arg1 ;
-(void)containingWindowDidOrderOnScreen:(id)arg1 ;
-(void)containingWindowWillBeginSheet:(id)arg1 ;
-(void)containingWindowDidEndSheet:(id)arg1 ;
-(void)maintainContainingWindowNotifications:(char)arg1 ;
-(void)maintainKeyTestWindowNotifications:(char)arg1 ;
-(void)_allowAuxiliaryAppNap:(id)arg1 ;
-(void)_preventAuxiliaryAppNap:(id)arg1 ;
-(void)_announceSubviewMutationDisallowed;
-(char)_visibleToAccessibility;
-(char)_serviceHasDebuggerAttached;
-(double)_fauxSynchronousPatience;
-(void)_terminateViewService;
-(void)_awaitInvalidation;
-(void)_advanceToRunPhase:(/*^block*/id)arg1 ;
-(void)_waitOnSemaphore:(id)arg1 ;
-(void)_advanceToConfigPhaseLegacy;
-(char)_advanceToRunPhaseLegacy;
-(void)setAccessoryViewAccessibilityParent:(NSAccessibilityRemoteUIElement *)arg1 ;
-(void)updateAccessoryViewAccessibilityParent:(id)arg1 ;
-(id)_accessibilityChildren:(id)arg1 ;
-(id)_elementsForTokens:(id)arg1 ;
-(char)_isOrBecomingContentView;
-(void)_stopMonitoringEvents;
-(char)_windowSupportsVibrancy:(id)arg1 ;
-(char)_shouldImposeVibrancySupport:(id)arg1 ;
-(char)_adjustToServiceWindowStyleMask;
-(char)_evaluateKeyness;
-(char)_updateWindowEdgeResizingRegion;
-(void)_adjustToServiceWindowContentMinMaxSizes;
-(double)_backingScaleFactorOrZero;
-(double)_reportScaleFactor;
-(void)_expectWindowOrderingState:(int)arg1 andAdvanceTo:(int)arg2 caller:(const char*)arg3 ;
-(char)maintainAssociationForcingDisassociation:(char)arg1 ;
-(void)_disassociateAccessoryWindow;
-(void)_associateAccessoryWindowWithMainWindow:(id)arg1 newContainingWindowID:(unsigned)arg2 ;
-(void)_encounteredError:(id)arg1 ;
-(void)_configureAndRetainServiceMarshalConnection:(id)arg1 ;
-(void)_setServiceContextID:(unsigned)arg1 ;
-(char)shouldMaskToBounds;
-(void)_serviceRequestsFrame:(CGRect)arg1 serviceWindowBackgroundColor:(id)arg2 safeFrame:(CGRect)arg3 animate:(char)arg4 transaction:(id)arg5 completion:(/*^block*/id)arg6 ;
-(char)_becameInvalidWhileFinishingAdvanceToConfigPhase:(const char*)arg1 ;
-(void)_configureLayersWithContextID:(unsigned)arg1 andOffset:(CGPoint)arg2 ;
-(void)_addPotentialKeyFocusThief:(int)arg1 ;
-(void)_adjustToServiceWindowKeyness;
-(char)_shouldSpelunkTouchBarsProactively;
-(void)_startSpelunkingTouchBars;
-(void)_serviceHasTouchBars:(id)arg1 ;
-(id)auxiliaryListenerEndpointForProtocol:(id)arg1 ;
-(CGRect)frameInScreenCoords;
-(void)_informAuxServiceOfSelf;
-(void)_signalAndClearLegacyAdvanceSemaphores;
-(id)_accessibilityParentToken;
-(id)auxiliaryClientListenerEndpoint;
-(id)auxiliaryServiceListenerEndpoint;
-(void)_copyFromBootstrapParameters:(const SCD_Struct_NS9*)arg1 ;
-(void)_copyViewServiceMarshalReply:(const SCD_Struct_NS25*)arg1 withClientExportedObjectWithClientInterface:(id)arg2 withClientExportedObjectWithAnimationSyncInterface:(id)arg3 ;
-(char)_finishAdvanceToConfigPhaseWithContextID:(unsigned)arg1 andOffset:(CGPoint)arg2 ;
-(id)wrapProxyForAnimationFencing:(id)arg1 ;
-(id)_viewServiceMarshalProxy:(const char*)arg1 withDetailedErrorHandler:(/*^block*/id)arg2 ;
-(void)_viewDidEndLiveResizeBeforeSuper;
-(void)_viewDidEndLiveResizeAfterSuper;
-(void)_viewDidEndLiveResize;
-(char)_serviceValidatesAction:(id)arg1 menuItem:(SCD_Struct_NS19*)arg2 userInterfaceItem:(SCD_Struct_NS19*)arg3 targetIdentifier:(id*)arg4 sender:(id)arg5 ;
-(id)_withoutCatchSupplementalTargetForAction:(SEL)arg1 sender:(id)arg2 ;
-(void)maintainFirstResponderInProgress:(/*^block*/id)arg1 ;
-(void)_disengageFromAllWindows;
-(void)_serviceRequestsResizeInProgress:(CGSize)arg1 ;
-(void)_serviceRequestsResize:(CGSize)arg1 completion:(/*^block*/id)arg2 ;
-(void)_informAuxServiceOfFrameInScreenCoords:(CGRect)arg1 ;
-(char)_informAuxServiceOfMostRecentlyReportedFrameInScreenCoords:(CGRect)arg1 ;
-(char)_hasValidRendezvousChildWindows;
-(char)_shouldConstrainChildWindowGeometry;
-(void)_completeFrameRequestWithError:(id)arg1 andCompletion:(/*^block*/id)arg2 ;
-(void)_adjustWindowBackgroundColor;
-(void)_serviceRequestsResize:(CGSize)arg1 animate:(char)arg2 completion:(/*^block*/id)arg3 ;
-(char)trustsServiceKeyEvents;
-(void)setServiceListenerEndpoint:(id)arg1 ;
-(id)rendezvousSheet:(CGRect)arg1 style:(unsigned long long)arg2 identifier:(id)arg3 childOrderingMode:(long long)arg4 error:(id*)arg5 ;
-(void)_ensureBridgeObserversForRendezvousWindow;
-(void)sheetCompleted:(id)arg1 ;
-(id)beginSheet:(id)arg1 modalForWindow:(id)arg2 size:(CGSize)arg3 isCritical:(char)arg4 ;
-(void)beginAppModalSessionForWindow;
-(void)beginDeferredSheet:(id)arg1 ;
-(void)_beginDeferredSheets;
-(char)_shouldAdjustToServiceStyleMask;
-(unsigned long long)_filterStyleMask:(unsigned long long)arg1 forWindowBase:(unsigned char)arg2 ;
-(void)_sendWindowFakeClick:(long long)arg1 why:(const char*)arg2 ;
-(void)_serviceWindowKeynessChangeInProgress:(/*^block*/id)arg1 ;
-(void)_adjustToServiceWindowBecomingKey;
-(void)_adjustToServiceWindowResigningKey;
-(void)ensureAccessoryWindow:(CGRect)arg1 ;
-(void)setAccessoryViewCanBecomeKeyView:(id)arg1 ;
-(void)_applyServiceAccessoryViewFrame;
-(void)setRemoteAccessibilityChildrenTokens:(id)arg1 ;
-(id)serviceMarshalForRemoteViewWindow:(id)arg1 ;
-(id)serviceViewControllerProxy:(const char*)arg1 ;
-(void)_ensureClientExportedInterface;
-(void)_ensureClientExportedObject;
-(char)_shouldNotifyServiceOfChangeToHostOriginOrSize;
-(void)_didSetOriginOrSize:(CGRect)arg1 ;
-(id)_accessibilityParentToken:(id)arg1 ;
-(void)_updateAccessibilityConnection:(id)arg1 legend:(const char*)arg2 withReply:(/*^block*/id)arg3 ;
-(void)_snapshotWithScale:(/*^block*/id)arg1 ;
-(id)_addChildWindow:(id)arg1 remoteView:(id*)arg2 ;
-(void)_waitForPrivateEventLoopInService;
-(id)_windowBackgroundColorForFrame:(CGRect)arg1 ;
-(void)_frameOfServiceWindowDidChange:(CGRect)arg1 safeFrame:(CGRect)arg2 windowBackgroundColor:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)enqueueChildWindow:(id)arg1 parameters:(const SCD_Struct_NS22*)arg2 listenerEndpoint:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)realizeChildQueueElement:(id)arg1 ;
-(void)_addChildWindow:(id)arg1 parameters:(const SCD_Struct_NS22*)arg2 listenerEndpoint:(id)arg3 reply:(/*^block*/id)arg4 ;
-(char)wouldAssociate;
-(void)_disassociate;
-(void)_remoteViewDidMove;
-(void)_containingWindowOcclusionStateMayHaveChanged;
-(void)_remoteViewMayHaveMoved;
-(char)_associateWithHostWindow:(unsigned)arg1 withKeyness:(char)arg2 isFirstResponder:(char)arg3 atLevel:(long long)arg4 isFunctionRow:(char)arg5 withBlock:(/*^block*/id)arg6 ;
-(void)_updateAccessibilityConnection:(id)arg1 force:(char)arg2 legend:(const char*)arg3 ;
-(void)_advanceToConfigPhase:(/*^block*/id)arg1 ;
-(void)_completeAdvanceToRunPhase:(/*^block*/id)arg1 withError:(id)arg2 ;
-(id)_adjustLoc:(CGPoint*)arg1 forWindow:(id)arg2 withAncestor:(/*^block*/id)arg3 ;
-(id)_oldestAncestorWindow:(id)arg1 adjustingLoc:(CGPoint*)arg2 ;
-(id)auxiliarySyncObject;
-(NSXPCInterface *)auxiliaryInterfaceOutgoing;
-(NSXPCInterface *)auxiliaryInterfaceIncoming;
-(void)setAuxiliaryServiceConnection:(NSXPCConnection *)arg1 ;
-(NSXPCListenerEndpoint *)auxiliaryListenerEndpoint;
-(void)setRendezvousWindowIdentifier:(id)arg1 ;
-(CGSize)serviceViewSize;
-(void)serviceWindowOrderedWithMode:(long long)arg1 relativeTo:(unsigned)arg2 ;
-(int)_maintainFirstResponder:(int)arg1 inDirection:(unsigned long long)arg2 ;
-(NSRemoteView *)spawnedBy;
-(void)_setServiceWindowStyleMask:(unsigned long long)arg1 ;
-(void)_setServiceWindowKeyness:(char)arg1 ;
-(void)_serviceAccessoryViewFrameChanged:(CGRect)arg1 ;
-(NSModalSessionRef)_beginAppModalSession:(id)arg1 parameters:(const SCD_Struct_NS26*)arg2 error:(id*)arg3 ;
-(void)_serviceWindowWouldActivate;
-(void)_serviceWindowReceivedScrollWheel:(id)arg1 eventOwner:(unsigned)arg2 ;
-(void)_serviceViewReceivedLeftMouseDown:(long long)arg1 ;
-(char)_hasValidKeyViewInDirection:(unsigned long long)arg1 ;
-(char)wantsAggressiveKeyboardFocusTheftCancellation;
-(id)_associateMouseAndMouseCursorPosition:(char)arg1 ;
-(void)_lastCallImpliedByAdvancingToPhase:(unsigned char)arg1 ;
-(void)_serviceWindowHasDragRegion:(id)arg1 ;
-(void)_forwardActionUpResponderChain:(id)arg1 ;
-(void)_setServiceWindowEventMask:(unsigned long long)arg1 ;
-(void)_shakeContainingWindow;
-(void)_setTouchBarItem:(id)arg1 itemPosition:(id)arg2 ;
-(void)_setTouchBar:(id)arg1 description:(id)arg2 ;
-(void)_setTouchBar:(id)arg1 escapeKeyReplacementItem:(id)arg2 ;
-(void)_setTouchBar:(id)arg1 principalItemIdentifier:(id)arg2 ;
-(void)_showTouchBarPopover:(id)arg1 fromItem:(id)arg2 withOverlayIdentifier:(id)arg3 withCloseButton:(char)arg4 withControlStrip:(char)arg5 withOptions:(id)arg6 ;
-(void)_hideTouchBarPopover:(id)arg1 ;
-(id)_touchBarsDescription;
-(void)_ifNecessaryReplaceTouchBar:(id)arg1 escapeKeyReplacementItem:(id)arg2 ;
-(id)_mapPerProcessIdentifiers:(id)arg1 of:(id)arg2 ;
-(char)_decodeBoolean:(id)arg1 inDescription:(id)arg2 ;
-(id)_touchBars:(char)arg1 ;
-(void)_configureTouchBar:(id)arg1 perDescription:(id)arg2 ;
-(void)_setTouchBars:(id)arg1 ;
-(void)_ifNecessaryReplaceTouchBars;
-(void)_assertObjectsOf:(id)arg1 areKindOfClass:(Class)arg2 ;
-(id)retain;
-(oneway void)release;
-(void)dealloc;
-(NSString *)description;
-(void)invalidate;
-(char)isValid;
-(char)valid;
-(id)initWithCoder:(id)arg1 ;
-(NSObject*<NSRemoteViewDelegate>)delegate;
-(void)setDelegate:(NSObject*<NSRemoteViewDelegate>)arg1 ;
-(void)_invalidate;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(char)arg3 ;
-(void)setAccessoryView:(NSView *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(NSString *)serviceName;
-(void)setFrame:(CGRect)arg1 ;
-(void)setFrameSize:(CGSize)arg1 ;
-(void)setFrameOrigin:(CGPoint)arg1 ;
-(void)addSubview:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(char)acceptsFirstResponder;
-(id)accessibilityParentAttribute;
-(CGSize)intrinsicContentSize;
-(void)viewDidChangeEffectiveAppearance;
-(void)addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3 ;
-(void)viewDidMoveToWindow;
-(void)mouseDown:(id)arg1 ;
-(id)accessibilityChildren;
-(id)accessibilityFocusedUIElement;
-(id)accessibilityChildrenInNavigationOrder;
-(char)performKeyEquivalent:(id)arg1 ;
-(id)supplementalTargetForAction:(SEL)arg1 sender:(id)arg2 ;
-(id)accessibilityChildrenAttribute;
-(void)mouseMoved:(id)arg1 ;
-(void)setTouchBar:(id)arg1 ;
-(NSView *)accessoryView;
-(id)touchBar;
-(id)accessibilityChildrenInNavigationOrderAttribute;
-(void)setSubviews:(id)arg1 ;
-(void)replaceSubview:(id)arg1 with:(id)arg2 ;
-(void)keyDown:(id)arg1 ;
-(char)resignFirstResponder;
-(char)becomeFirstResponder;
-(void)cacheDisplayInRect:(CGRect)arg1 toBitmapImageRep:(id)arg2 ;
-(void)viewDidMoveToSuperview;
-(char)wantsAlertStylePadding;
-(void)cancel:(id)arg1 ;
-(void)viewWillStartLiveResize;
-(void)viewDidEndLiveResize;
-(void)mouseUp:(id)arg1 ;
-(void)viewDidChangeBackingProperties;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(void)cursorUpdate:(id)arg1 ;
-(void)_setDelegate:(id)arg1 ;
-(void)renewGState;
-(void)_dragWindowRelativeToMouseDown:(CGPoint)arg1 ;
-(id)NS_touchBars;
-(void)viewDidHide;
-(void)viewDidUnhide;
-(char)_wantsKeyDownForEvent:(id)arg1 ;
-(CGImageRef)snapshot;
-(void)_invalidateEffectiveVibrantBlendingStyle;
-(CGSRegionObjectRef)_regionForOpaqueDescendants:(CGRect)arg1 forMove:(char)arg2 forUnderTitlebar:(char)arg3 ;
-(id)bridge;
-(char)advanceToConfigPhaseIfNeeded:(/*^block*/id)arg1 ;
-(void)setServiceName:(NSString *)arg1 ;
-(void)setServiceSubclassName:(NSString *)arg1 ;
-(void)setTrustsServiceKeyEvents:(char)arg1 ;
-(char)hasBridge;
-(char)invalid;
-(id)serviceViewControllerProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(char)advanceToRunPhaseIfNeeded:(/*^block*/id)arg1 ;
-(id)serviceViewControllerProxy;
-(char)advanceToRunPhaseIfNeeded;
-(id)extensionIdentifier;
-(void)setExtensionIdentifier:(id)arg1 ;
-(id)_bridge;
-(id)_remoteViewController;
-(NSString *)serviceSubclassName;
-(void)remoteViewControllerProxy:(/*^block*/id)arg1 ;
-(void)synchronizeAnimationsInActions:(/*^block*/id)arg1 ;
-(char)_shouldBecomeFirstResponder;
-(void)_associate;
-(void)setSynchronizesImplicitAnimations:(char)arg1 ;
-(void)setShouldMaskToBounds:(char)arg1 ;
-(CGImageRef)_snapshot:(double*)arg1 ;
-(void)setServiceInstanceIdentifier:(NSUUID *)arg1 ;
-(id)_serviceProcessIdentifier;
-(void)snapshot:(/*^block*/id)arg1 ;
-(void)retreatToConfigPhase;
-(void)forgetAccessoryView;
-(id)remoteViewIdentifier;
-(char)_isContentView;
-(void)setWantsAggressiveKeyboardFocusTheftCancellation:(char)arg1 ;
@end

