/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:27 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PhotosGraph.framework/Versions/A/PhotosGraph
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_os_log;
@class PGManager, NSMutableArray, NSArray, NSMutableIndexSet, NSMutableDictionary, NSMapTable, NSDate, CLLocation, CLSHolidayCalendarEventService, NSObject, NSSet, PGGraph, PHPhotoLibrary;

@interface PGMemoryController : NSObject {

	PGManager* _manager;
	NSMutableArray* _latentMemories;
	NSArray* _existingMemories;
	NSArray* _blacklistedMemories;
	long long _numberOfDaysSinceLastMemory;
	NSMutableIndexSet* _matchedCategories;
	NSMutableIndexSet* _excludedFeaturedSubcategories;
	NSArray* _existingSuggestions;
	NSMutableDictionary* _numberOfAssetsByMomentIDs;
	NSMutableDictionary* _momentsByMomentIDs;
	NSMutableDictionary* _backingMomentIDsByPHMemoryIDs;
	NSMutableDictionary* _featureVectorByPHMemoryIDs;
	NSMapTable* _numberOfMemoryGenerationDaysByMemory;
	NSDate* _localDate;
	NSDate* _universalDate;
	CLLocation* _location;
	NSDate* _earliestDate;
	NSDate* _latestDate;
	NSDate* _directModeStartDate;
	NSDate* _directModeEndDate;
	CLSHolidayCalendarEventService* _holidayService;
	unsigned long long _currentRandom;
	char _isLastResort;
	char _isFirstTimesAfterUpgrade;
	char _isAttemptingToUpgradeBestOfPastToFeaturedTrip;
	double _forcedBeta;
	NSMutableDictionary* _scenesProcessedByYear;
	NSMutableDictionary* _facesProcessedByYear;
	char _isCreatingEverMemories;
	char _bypassesCategoryCheckForUpgrades;
	char _ignoresMomentIsInteresting;
	char _ignoresMinimumNumberOfMoments;
	char _ignoresMinimumNumberOfAssets;
	char _skipsAssetCollection;
	char _skipsCuration;
	char _skipsTitleGeneration;
	char _skipsWeekendUpgrades;
	char _skipsMeaningfulEventUpgrades;
	char _skipsBestOfPastUpgradeToFeaturedTrip;
	char _skipsBlacklistedFeatureCheck;
	char _isDryTesting;
	char _probabilityAlwaysPasses;
	char _usesIsUtilityForMemories;
	char _looksIntoFuture;
	unsigned long long _numberOfNewMemoriesForPeriodicity;
	unsigned long long _numberOfNewMemoriesForUserRequest;
	unsigned long long _minimumNumberOfAssetsForMomentMemory;
	unsigned long long _minimumNumberOfAssetsForDisjointMomentsMemory;
	unsigned long long _minimumNumberOfAssetsForContiguousMomentsMemory;
	NSObject*<OS_os_log> _loggingConnection;
	/*^block*/id _progressBlock;
	NSSet* _mandatoryFeatures;
	NSSet* _blacklistedFeatures;
	NSSet* _categoryWhitelist;
	NSSet* _categoryBlacklist;

}

@property (readonly) PGGraph * graph; 
@property (readonly) PHPhotoLibrary * photoLibrary; 
@property (assign) unsigned long long numberOfNewMemoriesForPeriodicity;                                               //@synthesize numberOfNewMemoriesForPeriodicity=_numberOfNewMemoriesForPeriodicity - In the implementation block
@property (assign) unsigned long long numberOfNewMemoriesForUserRequest;                                               //@synthesize numberOfNewMemoriesForUserRequest=_numberOfNewMemoriesForUserRequest - In the implementation block
@property (readonly) unsigned long long minimumNumberOfAssetsForMomentMemory;                                          //@synthesize minimumNumberOfAssetsForMomentMemory=_minimumNumberOfAssetsForMomentMemory - In the implementation block
@property (readonly) unsigned long long minimumNumberOfAssetsForDisjointMomentsMemory;                                 //@synthesize minimumNumberOfAssetsForDisjointMomentsMemory=_minimumNumberOfAssetsForDisjointMomentsMemory - In the implementation block
@property (readonly) unsigned long long minimumNumberOfAssetsForContiguousMomentsMemory;                               //@synthesize minimumNumberOfAssetsForContiguousMomentsMemory=_minimumNumberOfAssetsForContiguousMomentsMemory - In the implementation block
@property (readonly) NSObject*<OS_os_log> loggingConnection;                                                           //@synthesize loggingConnection=_loggingConnection - In the implementation block
@property (copy,readonly) id progressBlock;                                                                            //@synthesize progressBlock=_progressBlock - In the implementation block
@property (readonly) char isCreatingEverMemories;                                                                      //@synthesize isCreatingEverMemories=_isCreatingEverMemories - In the implementation block
@property (readonly) char looksIntoFuture;                                                                             //@synthesize looksIntoFuture=_looksIntoFuture - In the implementation block
@property (assign) char bypassesCategoryCheckForUpgrades;                                                              //@synthesize bypassesCategoryCheckForUpgrades=_bypassesCategoryCheckForUpgrades - In the implementation block
@property (retain) NSSet * blacklistedFeatures;                                                                        //@synthesize blacklistedFeatures=_blacklistedFeatures - In the implementation block
@property (retain) NSSet * categoryWhitelist;                                                                          //@synthesize categoryWhitelist=_categoryWhitelist - In the implementation block
@property (retain) NSSet * categoryBlacklist;                                                                          //@synthesize categoryBlacklist=_categoryBlacklist - In the implementation block
@property (assign) char ignoresMomentIsInteresting;                                                                    //@synthesize ignoresMomentIsInteresting=_ignoresMomentIsInteresting - In the implementation block
@property (assign) char ignoresMinimumNumberOfMoments;                                                                 //@synthesize ignoresMinimumNumberOfMoments=_ignoresMinimumNumberOfMoments - In the implementation block
@property (assign) char ignoresMinimumNumberOfAssets;                                                                  //@synthesize ignoresMinimumNumberOfAssets=_ignoresMinimumNumberOfAssets - In the implementation block
@property (assign) char skipsAssetCollection;                                                                          //@synthesize skipsAssetCollection=_skipsAssetCollection - In the implementation block
@property (assign) char skipsCuration;                                                                                 //@synthesize skipsCuration=_skipsCuration - In the implementation block
@property (assign) char skipsTitleGeneration;                                                                          //@synthesize skipsTitleGeneration=_skipsTitleGeneration - In the implementation block
@property (assign) char skipsWeekendUpgrades;                                                                          //@synthesize skipsWeekendUpgrades=_skipsWeekendUpgrades - In the implementation block
@property (assign) char skipsMeaningfulEventUpgrades;                                                                  //@synthesize skipsMeaningfulEventUpgrades=_skipsMeaningfulEventUpgrades - In the implementation block
@property (assign) char skipsBestOfPastUpgradeToFeaturedTrip;                                                          //@synthesize skipsBestOfPastUpgradeToFeaturedTrip=_skipsBestOfPastUpgradeToFeaturedTrip - In the implementation block
@property (assign) char skipsBlacklistedFeatureCheck;                                                                  //@synthesize skipsBlacklistedFeatureCheck=_skipsBlacklistedFeatureCheck - In the implementation block
@property (assign) char usesIsUtilityForMemories;                                                                      //@synthesize usesIsUtilityForMemories=_usesIsUtilityForMemories - In the implementation block
@property (readonly) unsigned long long maximumNumberOfFacesPerAssetForSingleFocusedPersonFacedAssets; 
@property (readonly) double minimumRatioOfFocusedPersonFacesPerAssetForMultipleFocusedPersonsFacedAssets; 
@property (assign) char isDryTesting;                                                                                  //@synthesize isDryTesting=_isDryTesting - In the implementation block
@property (assign) char probabilityAlwaysPasses;                                                                       //@synthesize probabilityAlwaysPasses=_probabilityAlwaysPasses - In the implementation block
@property (nonatomic,retain) NSSet * mandatoryFeatures;                                                                //@synthesize mandatoryFeatures=_mandatoryFeatures - In the implementation block
+(void)computeMinimumNumbersOfAssetsWithCompletionBlock:(/*^block*/id)arg1 ;
+(unsigned long long)minimumNumberOfCuratedAssetsForMemories;
+(double)computeBetaWithManager:(id)arg1 progress:(/*^block*/id)arg2 ;
-(id)progressBlock;
-(id)initWithManager:(id)arg1 ;
-(PGGraph *)graph;
-(PHPhotoLibrary *)photoLibrary;
-(NSObject*<OS_os_log>)loggingConnection;
-(id)curatedKeyAssetForAssetCollection:(id)arg1 curatedAssetCollection:(id)arg2 options:(id)arg3 ;
-(id)createMemoriesWithOptions:(id)arg1 progress:(/*^block*/id)arg2 ;
-(void)setBlacklistedFeatures:(NSSet *)arg1 ;
-(NSSet *)blacklistedFeatures;
-(void)performSynchronouslyOnGraphUsingBlock:(/*^block*/id)arg1 ;
-(void)matchFeatureVector:(id)arg1 relatedType:(unsigned long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(unsigned long long)maximumNumberOfFacesPerAssetForSingleFocusedPersonFacedAssets;
-(double)minimumRatioOfFocusedPersonFacesPerAssetForMultipleFocusedPersonsFacedAssets;
-(unsigned)randomNumber;
-(unsigned)randomNumberLessThan:(unsigned long long)arg1 ;
-(char)probabilityPassWithThreshold:(double)arg1 ;
-(id)momentForMomentID:(id)arg1 ;
-(char)eventIsTimely:(id)arg1 ;
-(char)libraryHasEnoughProcessedScenes:(char)arg1 andProcessedFaces:(char)arg2 ;
-(char)libraryHasEnoughScenesProcessed:(char)arg1 haveFacesProcessed:(char)arg2 forYear:(id)arg3 ;
-(char)momentNodesHaveScenesProcessed:(id)arg1 ;
-(char)eventPassesContextualityCheck:(id)arg1 ;
-(char)isUpcomingDayOfYearFromReferenceDate:(id)arg1 ;
-(char)isUpcomingDayOfYearFromReferenceDate:(id)arg1 localDate:(id)arg2 ;
-(char)_memories:(id)arg1 containMemory:(id)arg2 ;
-(char)_memories:(id)arg1 containAssetCollection:(id)arg2 ;
-(char)_assetCollection:(id)arg1 matchesAssetCollection:(id)arg2 ;
-(char)_memories:(id)arg1 coverTypeOfMemory:(id)arg2 ;
-(unsigned long long)_numberOfAssetsInMomentsForIDs:(id)arg1 withNumberOfAssetsByMomentIDs:(id)arg2 ;
-(float)_assetOverlapBetweenMomentsForIDs:(id)arg1 andMomentsForIDs:(id)arg2 ;
-(float)_assetOverlapBetweenMomentsForIDs:(id)arg1 andMomentsForIDs:(id)arg2 withNumberOfAssetsByMomentIDs:(id)arg3 ;
-(char)potentialMemory:(id)arg1 isTooSimilarTooSoonToPHMemory:(id)arg2 ;
-(id)_idsOfMomentsBackingPHMemory:(id)arg1 ;
-(char)isOKToProceedWithDirectEarlyPotentialMemory:(id)arg1 ;
-(char)isOKToProceedWithEarlyPotentialMemory:(id)arg1 ;
-(char)canUsePotentialMemory:(id)arg1 isDebug:(char)arg2 ;
-(char)_wantsTodaysBirthdayWithReason:(unsigned long long)arg1 ;
-(id)_uuidOfPersonsWithBirthdayOnDate:(id)arg1 ;
-(char)_doTodaysBirthdayWithLocalDate:(id)arg1 ;
-(char)_wantsDayInHistoryWithReason:(unsigned long long)arg1 ;
-(char)_doDayInHistoryWithLocalDate:(id)arg1 ;
-(char)_wantsNearbyTodayWithReason:(unsigned long long)arg1 location:(id)arg2 ;
-(char)_doNearbyTodayWithLocalDate:(id)arg1 andLocation:(id)arg2 ;
-(unsigned long long)desireLevelForYearSummaryWithLocalDate:(id)arg1 ;
-(char)_doYearSummaryWithLocalDate:(id)arg1 ;
-(char)_doBestOfRandomYear;
-(char)_wantsBestOfPastWithReason:(unsigned long long)arg1 ;
-(char)_doBestOfPastWithLocalDate:(id)arg1 ;
-(char)_wantsRecentPastEventsWithReason:(unsigned long long)arg1 ;
-(char)_doRecentPastEventsWithLocalDate:(id)arg1 ;
-(char)_wantsUpcomingRelatedEventsWithReason:(unsigned long long)arg1 ;
-(char)_doUpcomingRelatedEventsWithLocalDate:(id)arg1 ;
-(char)_wantsKeyPeopleForUpcomingHolidayEventWithReason:(unsigned long long)arg1 ;
-(char)_doKeyPeopleForUpcomingHolidayEventWithLocalDate:(id)arg1 ;
-(char)_wantsTodayInTimeWithReason:(unsigned long long)arg1 ;
-(char)_doTodayInTimeWithLocalDate:(id)arg1 ;
-(unsigned long long)_desireLevelForLastSeasonWithLocalDate:(id)arg1 ;
-(unsigned long long)_desireLevelForSeasonInHistoryWithLocalDate:(id)arg1 ;
-(char)_doSeasonWithLocalDate:(id)arg1 forType:(unsigned long long)arg2 ;
-(char)_wantsCelebrationOverTimeWithReason:(unsigned long long)arg1 ;
-(char)_doCelebrationOverTimeWithLocalDate:(id)arg1 ;
-(char)_wantsHomeAggregationWithLocalDate:(id)arg1 reason:(unsigned long long)arg2 ;
-(char)_doHomeAggregationWithLocalDate:(id)arg1 ;
-(char)_wantsFeaturedNeighborWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedNeighborBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedPeopleWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedPeopleBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedSocialGroupWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedSocialGroupBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedPersonWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doPeopleMemoriesForPeopleWithUUID:(id)arg1 year:(long long)arg2 ;
-(char)_doPersonOverTimeMemoriesForPersonWithName:(id)arg1 ;
-(char)_doFeaturedPersonBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedPersonOverTimeWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedPersonOverTimeBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedSocialGroupOverTimeWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedSocialGroupOverTimeBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedTripWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedTripBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_doFeaturedTripBetweenLocalDate:(id)arg1 andLocalDate:(id)arg2 ;
-(char)_wantsFeaturedWeekendWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedWeekendBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedPetWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedPetBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedBabyWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedBabyBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedPastSupersetWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedPastSupersetBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsFeaturedFoodieWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedFoodieBeforeLocalDate:(id)arg1 oldMemory:(char)arg2 ;
-(char)_doFeaturedFoodieOfType:(id)arg1 kind:(id)arg2 beforeLocalDate:(id)arg3 oldMemory:(char)arg4 ;
-(char)_wantsFeaturedMeaningfulEventWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedMeaningfulEventBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_doFeaturedMeaningfulEventBeforeLocalDate:(id)arg1 eventType:(unsigned long long)arg2 usingLowRequirements:(char)arg3 oldMemory:(char)arg4 ;
-(char)_doFeaturedMeaningfulEventBeforeLocalDate:(id)arg1 meaning:(unsigned long long)arg2 lowRequirements:(char)arg3 ;
-(char)_wantsFeaturedMeaningfulEventAggregationWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedMeaningfulEventAggregationBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_doFeaturedMeaningfulEventAggregationBeforeLocalDate:(id)arg1 eventType:(unsigned long long)arg2 usingLowRequirements:(char)arg3 oldMemory:(char)arg4 ;
-(char)_doFeaturedMeaningfulEventAggregationBeforeLocalDate:(id)arg1 meaning:(unsigned long long)arg2 lowRequirements:(char)arg3 ;
-(char)_wantsFeaturedPeopleVisitingWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedPeopleVisitingBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsPlaceRegionWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doPlaceRegionBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsPlaceLocationWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doPlaceLocationBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsPlaceBusinessWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doPlaceBusinessBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsPlaceAreaWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doPlaceAreaBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(char)_wantsEarlyMomentsWithPeopleWithReason:(unsigned long long)arg1 ;
-(char)_doEarlyMomentsWithPeopleForLocalDate:(id)arg1 ;
-(char)_wantsThrowbackThursdayWithReason:(unsigned long long)arg1 ;
-(char)_doThrowbackThursdayForLocalDate:(id)arg1 ;
-(char)_doSometimeInHistory;
-(char)_wantsContextualWithReason:(unsigned long long)arg1 location:(id)arg2 peopleNames:(id)arg3 ;
-(char)_doContextualWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 ;
-(char)_doContextualTodayWidgetWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 ;
-(char)_wantsFeaturedRecurrentTripWithReason:(unsigned long long)arg1 usingLowRequirements:(char)arg2 ;
-(char)_doFeaturedRecurrentTripBeforeLocalDate:(id)arg1 usingLowRequirements:(char)arg2 oldMemory:(char)arg3 ;
-(unsigned long long)_generatorTypeForFeaturedSubcategory:(unsigned long long)arg1 ;
-(unsigned long long)_featuredSubcategoryForGeneratorType:(unsigned long long)arg1 ;
-(char)_hasExhaustedFeatured:(char*)arg1 ;
-(char)_wantsFeaturedForType:(unsigned long long)arg1 reason:(unsigned long long)arg2 usingLowRequirements:(char)arg3 ;
-(char)_doFeaturedForType:(unsigned long long)arg1 beforeLocalDate:(id)arg2 usingLowRequirements:(char)arg3 oldMemory:(char)arg4 ;
-(char)_doOneFeaturedWithLocalDate:(id)arg1 reason:(unsigned long long)arg2 usingLowRequirements:(char)arg3 hasExhaustedFeatured:(char*)arg4 ;
-(id)_createOneMemoryWithCategory:(unsigned long long)arg1 subcategory:(unsigned long long)arg2 localDate:(id)arg3 location:(id)arg4 peopleNames:(id)arg5 ;
-(id)_createMoreMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(/*^block*/id)arg4 ;
-(double)updatedBeta:(double)arg1 forNumberOfDaysSinceLastMemory:(long long)arg2 ;
-(id)_createPeriodicMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(/*^block*/id)arg4 ;
-(id)_createTodayWidgetMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(/*^block*/id)arg4 ;
-(id)_createFirstEverMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(/*^block*/id)arg4 ;
-(id)_createSecondEverMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(/*^block*/id)arg4 ;
-(id)_createThirdEverMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(/*^block*/id)arg4 ;
-(id)_createFirstTimesAfterUpgradeMemoriesWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 progress:(/*^block*/id)arg4 ;
-(unsigned long long)subcategoryForString:(id)arg1 ;
-(unsigned long long)_meaningFromString:(id)arg1 ;
-(id)_doDirectModeWithLocalDate:(id)arg1 location:(id)arg2 peopleNames:(id)arg3 parameters:(id)arg4 progress:(/*^block*/id)arg5 ;
-(void)resetIgnoresAndSkips;
-(unsigned long long)numberOfNewMemoriesForPeriodicity;
-(void)setNumberOfNewMemoriesForPeriodicity:(unsigned long long)arg1 ;
-(unsigned long long)numberOfNewMemoriesForUserRequest;
-(void)setNumberOfNewMemoriesForUserRequest:(unsigned long long)arg1 ;
-(unsigned long long)minimumNumberOfAssetsForMomentMemory;
-(unsigned long long)minimumNumberOfAssetsForDisjointMomentsMemory;
-(unsigned long long)minimumNumberOfAssetsForContiguousMomentsMemory;
-(char)isCreatingEverMemories;
-(char)bypassesCategoryCheckForUpgrades;
-(void)setBypassesCategoryCheckForUpgrades:(char)arg1 ;
-(NSSet *)mandatoryFeatures;
-(void)setMandatoryFeatures:(NSSet *)arg1 ;
-(NSSet *)categoryWhitelist;
-(void)setCategoryWhitelist:(NSSet *)arg1 ;
-(NSSet *)categoryBlacklist;
-(void)setCategoryBlacklist:(NSSet *)arg1 ;
-(char)ignoresMomentIsInteresting;
-(void)setIgnoresMomentIsInteresting:(char)arg1 ;
-(char)ignoresMinimumNumberOfMoments;
-(void)setIgnoresMinimumNumberOfMoments:(char)arg1 ;
-(char)ignoresMinimumNumberOfAssets;
-(void)setIgnoresMinimumNumberOfAssets:(char)arg1 ;
-(char)skipsAssetCollection;
-(void)setSkipsAssetCollection:(char)arg1 ;
-(char)skipsCuration;
-(void)setSkipsCuration:(char)arg1 ;
-(char)skipsTitleGeneration;
-(void)setSkipsTitleGeneration:(char)arg1 ;
-(char)skipsWeekendUpgrades;
-(void)setSkipsWeekendUpgrades:(char)arg1 ;
-(char)skipsMeaningfulEventUpgrades;
-(void)setSkipsMeaningfulEventUpgrades:(char)arg1 ;
-(char)skipsBestOfPastUpgradeToFeaturedTrip;
-(void)setSkipsBestOfPastUpgradeToFeaturedTrip:(char)arg1 ;
-(char)skipsBlacklistedFeatureCheck;
-(void)setSkipsBlacklistedFeatureCheck:(char)arg1 ;
-(char)isDryTesting;
-(void)setIsDryTesting:(char)arg1 ;
-(char)probabilityAlwaysPasses;
-(void)setProbabilityAlwaysPasses:(char)arg1 ;
-(char)usesIsUtilityForMemories;
-(void)setUsesIsUtilityForMemories:(char)arg1 ;
-(char)looksIntoFuture;
-(id)assetFetchOptionsForMemories;
-(id)bestAssetInAssets:(id)arg1 forReferencePersonsWithLocalIdentifiers:(id)arg2 requiredMinimumNumberOfReferencePersons:(unsigned long long)arg3 ;
-(id)feederForMemoriesWithFeeder:(id)arg1 didFeederChange:(char*)arg2 ;
-(id)feederForMemoriesWithAssetCollection:(id)arg1 ;
-(id)keyAssetWithFeeder:(id)arg1 options:(id)arg2 criteria:(id)arg3 progressBlock:(/*^block*/id)arg4 ;
-(id)curatedAssetsWithFeeder:(id)arg1 options:(id)arg2 progressBlock:(/*^block*/id)arg3 ;
-(id)filteredAssetCollectionFromAssetCollection:(id)arg1 withContextualAssets:(id)arg2 approximateTimeDistance:(double)arg3 ;
-(id)bestAssetsInAssets:(id)arg1 forReferencePersons:(id)arg2 minimumRatioOfReferencePersonsPerAsset:(double)arg3 progressBlock:(/*^block*/id)arg4 ;
-(id)beautifyAssets:(id)arg1 progressBlock:(/*^block*/id)arg2 ;
-(id)curatedAssetsForAssetCollection:(id)arg1 duration:(unsigned long long)arg2 withContextualAssetLocalIdentifiers:(id)arg3 minimumProportion:(double)arg4 progressBlock:(/*^block*/id)arg5 ;
-(id)filteredAssetsFromAssetCollection:(id)arg1 throughCriteria:(id)arg2 ;
-(id)deduplicatedAssets:(id)arg1 ;
-(id)dejunkAndDedupeAssetsInAssets:(id)arg1 options:(id)arg2 progressBlock:(/*^block*/id)arg3 ;
-(id)blacklistableFeaturesForPotentialMemory:(id)arg1 ;
-(id)anyBlacklistedFeatureHitByEarlyPotentialMemory:(id)arg1 ;
-(id)anyBlacklistedFeatureHitByCompletePotentialMemory:(id)arg1 ;
-(char)anyBlacklistedFeatureIsHitByEvent:(id)arg1 ;
-(id)_holidayFeatureForPotentialMemory:(id)arg1 prominentOnly:(char)arg2 ;
-(id)_dateFeatureForPotentialMemory:(id)arg1 prominentOnly:(char)arg2 ;
-(id)_areaFeatureForPotentialMemory:(id)arg1 prominentOnly:(char)arg2 ;
-(id)_addressFeatureForPotentialMemory:(id)arg1 prominentOnly:(char)arg2 ;
-(id)_localIdentifierOfMainPersonInEvent:(id)arg1 prominentOnly:(char)arg2 ;
-(id)_personFeatureForPotentialMemory:(id)arg1 prominentOnly:(char)arg2 ;
-(id)_timeBlacklistableFeatureForPotentialMemory:(id)arg1 ;
-(id)_locationBlacklistableFeatureForPotentialMemory:(id)arg1 ;
-(id)_peopleBlacklistableFeatureForPotentialMemory:(id)arg1 ;
-(id)_holidayFeatureForPotentialMemory:(id)arg1 ;
-(id)_dateFeatureForPotentialMemory:(id)arg1 ;
-(id)_areaFeatureForPotentialMemory:(id)arg1 ;
-(id)_addressFeatureForPotentialMemory:(id)arg1 ;
-(id)_personFeatureForEarlyPotentialMemory:(id)arg1 ;
@end

