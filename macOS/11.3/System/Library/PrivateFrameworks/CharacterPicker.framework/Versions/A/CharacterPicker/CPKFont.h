/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CharacterPicker.framework/Versions/A/CharacterPicker
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <CharacterPicker/CharacterPicker-Structs.h>
@class NSLock;

@interface CPKFont : NSObject {

	CTFontRef _privateCTFont;
	NSLock* _privateFontLock;
	char _isEmojiFont;
	double _fontSize;

}

@property (readonly) const CTFontRef ctFont; 
@property (assign,nonatomic) double fontSize;              //@synthesize fontSize=_fontSize - In the implementation block
@property (readonly) double ascent; 
@property (readonly) double descent; 
@property (readonly) char isEmojiFont;                     //@synthesize isEmojiFont=_isEmojiFont - In the implementation block
+(id)defaultFontName;
+(void)registerFontRef:(CTFontRef)arg1 ;
+(id)sharedFontWithName:(id)arg1 size:(double)arg2 ;
+(id)glyphInfoArrayForAttributedString:(id)arg1 ;
-(void)dealloc;
-(id)description;
-(double)fontSize;
-(void)setFontSize:(double)arg1 ;
-(id)initWithName:(id)arg1 size:(double)arg2 ;
-(CGRect)boundingRectForGlyph:(unsigned short)arg1 ;
-(double)ascent;
-(double)descent;
-(id)_privateInit;
-(id)initWithFontRef:(CTFontRef)arg1 ;
-(void)_setFontRef:(CTFontRef)arg1 ;
-(unsigned short)_glyphForString:(id)arg1 fallbackFontName:(id*)arg2 fallbackFontRef:(const _CTFont*)arg3 ;
-(const CTFontRef)copyFontRef;
-(const CTFontRef)ctFont;
-(double)_fontSizeForFittingGlyph:(unsigned short)arg1 orCharacter:(id)arg2 inRect:(CGRect)arg3 preferredFontSize:(double)arg4 outDrawingPos:(CGPoint*)arg5 outLayoutBounds:(CGRect*)arg6 ;
-(unsigned short)glyphForString:(id)arg1 fallbackFontName:(id*)arg2 ;
-(unsigned short)glyphForString:(id)arg1 fallbackFontRef:(const _CTFont*)arg2 ;
-(double)fontSizeForFittingGlyph:(unsigned short)arg1 orCharacter:(id)arg2 inRect:(CGRect)arg3 outDrawingPos:(CGPoint*)arg4 outLayoutBounds:(CGRect*)arg5 ;
-(CGRect)layoutBoundsForGlyph:(unsigned short)arg1 inRect:(CGRect)arg2 ;
-(char)isEmojiFont;
@end

