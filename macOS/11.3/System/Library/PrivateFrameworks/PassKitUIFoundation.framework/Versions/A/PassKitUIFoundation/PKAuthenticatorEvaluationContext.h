/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:32 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PassKitUIFoundation.framework/Versions/A/PassKitUIFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/LAUIDelegate.h>

@protocol OS_dispatch_source, PKAuthenticatorDelegate;
@class PKAuthenticator, NSObject, NSDictionary, NSMutableArray, LAContext, PKAuthenticatorEvaluationRequest;

@interface PKAuthenticatorEvaluationContext : NSObject <LAUIDelegate> {

	PKAuthenticator* _authenticator;
	/*^block*/id _completionHandler;
	double _touchIDBeginTime;
	NSObject*<OS_dispatch_source> _liftFingerTimeout;
	NSDictionary* _passcodePresentationParameters;
	BOOL _passcodePresentationRequested;
	BOOL _automaticallyPresentPasscodeOnce;
	unsigned long long _evaluationFlags;
	NSMutableArray* _accessHandlers;
	BOOL _usingExternalContext;
	unsigned long long _externalContextInvalidationPolicy;
	unsigned long long _externalContextOptions;
	LAContext* _LAContext;
	unsigned long long _activeMechanisms;
	unsigned long long _completedMechanisms;
	BOOL _invalidated;
	BOOL _supported;
	BOOL _policySupported;
	PKAuthenticatorEvaluationRequest* _request;
	long long _policy;
	unsigned long long _presentationFlags;
	id<PKAuthenticatorDelegate> _delegate;

}

@property (getter=isInvalidated,nonatomic,readonly) BOOL invalidated;                      //@synthesize invalidated=_invalidated - In the implementation block
@property (nonatomic,readonly) PKAuthenticatorEvaluationRequest * request;                 //@synthesize request=_request - In the implementation block
@property (getter=isSupported,nonatomic,readonly) BOOL supported;                          //@synthesize supported=_supported - In the implementation block
@property (getter=isPolicySupported,nonatomic,readonly) BOOL policySupported;              //@synthesize policySupported=_policySupported - In the implementation block
@property (nonatomic,readonly) long long policy;                                           //@synthesize policy=_policy - In the implementation block
@property (nonatomic,readonly) BOOL fingerPresent; 
@property (nonatomic,readonly) BOOL biometricMatch; 
@property (nonatomic,readonly) BOOL passcodeActive; 
@property (nonatomic,readonly) BOOL passphraseActive; 
@property (nonatomic,readonly) unsigned long long presentationFlags;                       //@synthesize presentationFlags=_presentationFlags - In the implementation block
@property (assign,nonatomic,__weak) id<PKAuthenticatorDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
-(void)dealloc;
-(id)init;
-(void)invalidate;
-(id<PKAuthenticatorDelegate>)delegate;
-(void)setDelegate:(id<PKAuthenticatorDelegate>)arg1 ;
-(PKAuthenticatorEvaluationRequest *)request;
-(BOOL)isInvalidated;
-(long long)policy;
-(BOOL)isSupported;
-(void)event:(long long)arg1 params:(id)arg2 reply:(/*^block*/id)arg3 ;
-(BOOL)biometricMatch;
-(id)initWithRequest:(id)arg1 completionHandler:(/*^block*/id)arg2 forAuthenticator:(id)arg3 ;
-(void)_createContextWithExternalizedContext:(id)arg1 ;
-(/*^block*/id)hoistCompletionHandler;
-(void)invalidateWithIntent:(long long)arg1 ;
-(void)_clearLiftFingerTimer;
-(void)_dismissAuthenticatorViewOfType:(long long)arg1 ;
-(BOOL)_presentPasscodeIfNecessary;
-(void)accessLAContext:(/*^block*/id)arg1 ;
-(void)_presentAuthenticatorViewOfType:(long long)arg1 withParams:(id)arg2 ;
-(char)_delegateSupportsPasscodeDismissal;
-(char)_delegateSupportsPassphraseDismissal;
-(char)_delegateSupportsPasscodePresentation;
-(char)_delegateSupportsPassphrasePresentation;
-(void)_requestRemoteAuthenticatorViewControllerOfType:(long long)arg1 withClassName:(id)arg2 bundleIdentifier:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_setLiftFingerTimer;
-(char)requestExternalMesaAuthorizationIfRequired;
-(void)requestExternalMesaAuthorization;
-(void)handleAvailabilityEventWithParameters:(id)arg1 ;
-(void)handlePasscodeEventWithParameters:(id)arg1 ;
-(void)handleTouchIDEventWithParameters:(id)arg1 ;
-(void)handlePushButtonSecondaryEventOnMacWithParameters:(id)arg1 ;
-(void)_updateActiveState:(BOOL)arg1 forEvent:(long long)arg2 withParameters:(id)arg3 ;
-(char)hideSheetIfSecureIntentNoLongerPossible;
-(void)_handleLiftFinger;
-(void)setDelegate:(id)arg1 resetPriorDelegate:(BOOL)arg2 ;
-(void)fallbackToPasscode;
-(void)evaluateWithOptions:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)fingerPresent;
-(BOOL)passcodeActive;
-(BOOL)passphraseActive;
-(BOOL)isPolicySupported;
-(unsigned long long)presentationFlags;
@end

