/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Geode.framework/Versions/A/Geode
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Geode/Geode-Structs.h>
#import <libobjc.A.dylib/PA2DPurgeableBufferBacking.h>

@protocol PA2DBufferLazySource;
@class PA2DMutablePurgeableBuffer, NSString;

@interface PA2DBufferLazySourceBacking : NSObject <PA2DPurgeableBufferBacking> {

	vector<PFIntRect_st, std::__1::allocator<PFIntRect_st>>* _tileList;
	vector<bool, std::__1::allocator<bool>>* _localTileState;
	PA2DMutablePurgeableBuffer* _cacheBuffer;
	PFIntSize_st _tileSize;
	unsigned long long _tilesWide;
	id<PA2DBufferLazySource> _source;

}

@property (retain) id<PA2DBufferLazySource> source;                   //@synthesize source=_source - In the implementation block
@property (assign,nonatomic) CGColorSpaceRef colorSpace; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSString *)description;
-(id<PA2DBufferLazySource>)source;
-(unsigned long long)width;
-(unsigned long long)height;
-(int)format;
-(void)setColorSpace:(CGColorSpaceRef)arg1 ;
-(CGColorSpaceRef)colorSpace;
-(void)setSource:(id<PA2DBufferLazySource>)arg1 ;
-(unsigned long long)tileCount;
-(void)getPixelsForROI:(PFIntRect_st)arg1 destPtr:(void*)arg2 destPtrRowBytes:(long long)arg3 ;
-(void)forEachImmutableTileInROI:(PFIntRect_st)arg1 processor:(/*^block*/id)arg2 ;
-(unsigned long long)tilesWide;
-(void)forEachMutableTileInROI:(PFIntRect_st)arg1 processor:(/*^block*/id)arg2 ;
-(void)setPurgeLevel:(int)arg1 forROI:(PFIntRect_st)arg2 ;
-(void)setPixelsForROI:(PFIntRect_st)arg1 srcPtr:(const void*)arg2 srcPtrRowBytes:(long long)arg3 ;
-(PFIntRect_st)tileBoundsAtIndex:(unsigned long long)arg1 ;
-(void)endAccess:(PFIntRect_st)arg1 ;
-(void)beginAccess:(PFIntRect_st)arg1 refillProcessor:(/*^block*/id)arg2 ;
-(void)beginAccess:(PFIntRect_st)arg1 emptyProcessor:(/*^block*/id)arg2 ;
-(id)initWithSize:(unsigned long long)arg1 :(unsigned long long)arg2 tileSize:(unsigned long long)arg3 :(unsigned long long)arg4 source:(id)arg5 ;
-(char)localTileStateAtIndex:(unsigned long long)arg1 ;
-(id)cacheBuffer;
-(void)_forEachTileInROI:(PFIntRect_st)arg1 block:(/*^block*/id)arg2 ;
-(void)_fulfillPixelsForROI:(PFIntRect_st)arg1 ;
@end

