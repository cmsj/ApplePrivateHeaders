/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Geode.framework/Versions/A/Geode
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Geode/Geode-Structs.h>
#import <Geode/DGOperation.h>
#import <libobjc.A.dylib/DGAutoCalculable.h>

@class NSData, NSNumber, NSArray, NSString;

@interface DGCurvesOperation : DGOperation <DGAutoCalculable> {

	NSData* _inputRGBData;
	NSData* _inputRedData;
	NSData* _inputGreenData;
	NSData* _inputBlueData;
	NSNumber* _inputGrayChoice;
	NSArray* _rgbCurvePoints;
	NSArray* _redCurvePoints;
	NSArray* _blueCurvePoints;
	NSArray* _greenCurvePoints;
	float _rgbValues[512];
	float _redValues[512];
	float _greenValues[512];
	float _blueValues[512];
	double _gamma;

}

@property (nonatomic,retain) NSNumber * inputGrayChoice;              //@synthesize inputGrayChoice=_inputGrayChoice - In the implementation block
@property (nonatomic,copy) NSArray * RGBCurvePoints; 
@property (nonatomic,copy) NSArray * redCurvePoints; 
@property (nonatomic,copy) NSArray * greenCurvePoints; 
@property (nonatomic,copy) NSArray * blueCurvePoints; 
@property (assign,nonatomic) double gamma;                            //@synthesize gamma=_gamma - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)attributes;
+(id)_stringsTableName;
+(id)inputKeys;
+(id)outputKeys;
+(id)_defaultCurveArray;
+(id)autoValuesForBlackPoint:(double)arg1 whitePoint:(double)arg2 ;
+(char)supportsAutoCalculatedValues;
+(id)autoCalculatedInputKeys;
-(id)init;
-(void)setNilValueForKey:(id)arg1 ;
-(id)initWithOperation:(id)arg1 ;
-(double)gamma;
-(void)setGamma:(double)arg1 ;
-(id)defaultValueForInputKey:(id)arg1 ;
-(float*)greenValues;
-(char)isMigratable;
-(char)requiresLegacyRender;
-(void)_applyAutoSettings:(id)arg1 ;
-(NSNumber *)inputGrayChoice;
-(NSArray *)RGBCurvePoints;
-(NSArray *)redCurvePoints;
-(NSArray *)greenCurvePoints;
-(NSArray *)blueCurvePoints;
-(void)resetCurve:(int)arg1 ;
-(id)curvePoints:(int)arg1 ;
-(void)rebuildCurvePoints:(int)arg1 ;
-(id)_inputKeyForCurveType:(int)arg1 ;
-(void)_insertCurvePoint:(CGPoint)arg1 select:(char)arg2 type:(int)arg3 ;
-(void)insertCurvePoint:(CGPoint)arg1 select:(char)arg2 type:(int)arg3 ;
-(id)firstControlPoint:(int)arg1 ;
-(id)lastControlPoint:(int)arg1 ;
-(id)whiteControlPoint:(int)arg1 ;
-(long long)whiteControlPointIndex:(int)arg1 ;
-(long long)closestCurveIndexTo:(CGPoint)arg1 type:(int)arg2 ;
-(id)closestControlPointTo:(CGPoint)arg1 type:(int)arg2 ;
-(void)setControlPointSelected:(char)arg1 atIndex:(long long)arg2 type:(int)arg3 ;
-(void)deselectControlPoints:(int)arg1 ;
-(void)deleteSelectedPoints:(int)arg1 ;
-(void)deleteControlPoint:(id)arg1 type:(int)arg2 ;
-(unsigned long long)shownCurvePointsCount:(int)arg1 ;
-(id)shownCurvePointsAtIndex:(long long)arg1 type:(int)arg2 ;
-(void)moveControlPointTo:(id)arg1 newLocation:(CGPoint)arg2 type:(int)arg3 ;
-(id)moveControlPointTo:(id)arg1 newLocation:(CGPoint)arg2 type:(int)arg3 minDistance:(double)arg4 ;
-(void)offsetSelectedControlPoints:(CGPoint)arg1 type:(int)arg2 minDistance:(double)arg3 ;
-(void)removeUserControlPoints:(int)arg1 ;
-(void)_adjustCurvePoints:(id)arg1 ofType:(int)arg2 minDistance:(double)arg3 ;
-(id)_findPreviousShownPoint:(unsigned long long)arg1 type:(int)arg2 ;
-(id)_findNextShownPoint:(unsigned long long)arg1 type:(int)arg2 ;
-(void)deleteHiddenCurvePoints:(int)arg1 ;
-(unsigned long long)countSelectedPoints:(int)arg1 ;
-(unsigned long long)countHiddenPoints:(int)arg1 ;
-(id)controlPointAtIndex:(long long)arg1 type:(int)arg2 ;
-(id)firstSelectedPoint:(int)arg1 ;
-(id)selectedPointAtIndex:(int)arg1 index:(long long)arg2 ;
-(void)calculateCurveTable:(int)arg1 tableSize:(long long)arg2 table:(float*)arg3 gamma:(double)arg4 ;
-(void)calculateCurveTable:(int)arg1 gamma:(double)arg2 ;
-(id)_parseArray:(id)arg1 ;
-(void)setRGBCurvePoints:(NSArray *)arg1 ;
-(void)setRedCurvePoints:(NSArray *)arg1 ;
-(void)setGreenCurvePoints:(NSArray *)arg1 ;
-(void)setBlueCurvePoints:(NSArray *)arg1 ;
-(void)setInputGrayChoice:(NSNumber *)arg1 ;
-(char)reverseCurve_:(float)arg1 withCurveTable:(float*)arg2 reconstructedInput:(float*)arg3 ;
-(char)reverseCurveRGB:(float*)arg1 withCurveTable:(float*)arg2 reconstructedInput:(float*)arg3 ;
-(float*)rgbValues;
-(float*)redValues;
-(float*)blueValues;
-(float*)tableValues:(int)arg1 ;
@end

