/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:49 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/NetworkMenusCommon.framework/NetworkMenusCommon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <NetworkMenusCommon/NetworkMenusCommon-Structs.h>
@class NSString, NSBundle, NSURL, NSMenuItem, NSMutableArray, NSNumber, NSDictionary, NSArray, NSView, NSTimer, AppleNetworkMenuHeaderView;

@interface AppleNetworkMenuExtraServiceController : NSObject {

	NSString* mServiceID;
	NSBundle* mBundle;
	NSURL* mApplicationURL;
	NSMenuItem* mHeaderMenuItem;
	NSMutableArray* mMenuItems;
	char mHeaderEnabled;
	char mShouldShowTimer;
	NSString* mSelectedConfigID;
	SCPreferencesRef mPrefs;
	SCNetworkConnectionRef mConnectionRef;
	CFRunLoopSourceRef mRunLoopSource;
	NSNumber* mConnectionStartTime;
	double kSleepStartTime;
	long long kSleepTimeAdditionalSeconds;
	long long mConnectionRetryCount;
	NSDictionary* mStatusStrings;
	NSArray* mImages;
	NSArray* mAlternateImages;
	NSView* mMenuBarView;
	NSTimer* mStatusCheckTimer;
	NSTimer* mFailSafeTimer;
	char mInitializing;
	char mUnloading;
	long long mStatus;
	int mConnectionState;
	AppleNetworkMenuHeaderView* _headerView;

}

@property (retain) AppleNetworkMenuHeaderView * headerView;              //@synthesize headerView=_headerView - In the implementation block
-(void)dealloc;
-(int)connectionType;
-(SCPreferencesRef)preferences;
-(void)disconnect;
-(id)serviceName;
-(char)isConnected;
-(int)connectionState;
-(void)setHeaderView:(AppleNetworkMenuHeaderView *)arg1 ;
-(AppleNetworkMenuHeaderView *)headerView;
-(void)setPreferences:(SCPreferencesRef)arg1 ;
-(void)connect;
-(id)serviceID;
-(void)setShouldShowTimer:(char)arg1 ;
-(id)menuItems;
-(id)applicationURL;
-(id)connectionStartTime;
-(id)applicationDisplayName;
-(id)headerMenuItem;
-(void)setMenuWidth:(double)arg1 ;
-(id)selectedConfiguration;
-(void)setSelectedConfiguration:(id)arg1 ;
-(id)initWithServiceID:(id)arg1 andBundle:(id)arg2 ;
-(void)refreshConnectionState;
-(void)refreshStatus;
-(void)refreshHeaderView;
-(void)refreshMenuItems;
-(void)a_changeCurrentlySelectedPreference:(id)arg1 ;
-(void)prepareToUnload;
-(void)a_connectOrDisconnect:(id)arg1 ;
-(void)updateViewIfHighlighted;
-(char)isThirdPartyVPN;
-(void)setMenuBarView:(id)arg1 ;
-(double)desiredMenuWidth;
-(void)handleDynamicStoreChangedNotification:(id)arg1 ;
-(void)storeConfigID:(id)arg1 ;
-(SCNetworkConnectionRef)connectionRef;
-(int)p_connectionStatus:(SCNetworkConnectionRef)arg1 ;
-(SCUserPreferencesRefRef)userPrefsForUniqueID:(id)arg1 ;
-(void)p_startStatusCheckTimer;
-(void)storeLastConnectedServiceID:(id)arg1 ;
-(void)p_stopStatusCheckTimer;
-(void)p_teardownConnection;
-(SCNetworkServiceRef)serviceRefWithRefresh:(char)arg1 ;
-(id)connectionTypeKey;
-(id)connectionSubType;
-(void)p_initializeConnection;
-(void)p_initializeDynamicStoreMonitoring;
-(id)machinePrefs;
-(void)p_scheduleConnectionWithRunloop:(char)arg1 ;
-(void)p_performStatusCheck;
-(void)handleStateChangedNotification:(int)arg1 ;
-(void)refreshConnectionRef;
@end

