/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:21 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/WiFiPolicy.framework/Versions/A/WiFiPolicy
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSString, NSMutableDictionary, NSObject, WiFiUsageInterfaceStats;

@interface WiFiUsageMonitor : NSObject {

	char _isSystemAwake;
	char _deviceLocked;
	char _displayOn;
	char _deviceCharging;
	char _inMotion;
	char _inVehicle;
	char _inActiveCall;
	char _inMediaPlayback;
	unsigned long long _hidCount;
	char _inActiveA2dp;
	char _inActiveSco;
	char _inActiveAwdl;
	char _inActiveRoam;
	char _inActiveScan;
	char _poweredOn;
	char _controlCenterEnabled;
	char _cellularFallbackEnabled;
	NSString* _secondaryInterfaceName;
	NSMutableDictionary* _usageSessions;
	NSMutableDictionary* _connectedNetworks;
	NSObject*<OS_dispatch_queue> _internalQueue;
	char _privacyRestrictionDisabled;
	/*^block*/id _completionHandler;
	void* _completionContext;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	WiFiUsageInterfaceStats* _ifStatsAtLastLqmUpdate;

}
+(id)sharedInstance;
-(id)init;
-(void)setCallState:(char)arg1 ;
-(void)setDisplayState:(char)arg1 ;
-(void)addSoftApClientEvent:(char)arg1 identifier:(id)arg2 isAppleClient:(char)arg3 isInstantHotspot:(char)arg4 isAutoHotspot:(char)arg5 isHidden:(char)arg6 ;
-(void)addSoftApCoexEvent:(unsigned long long)arg1 deniedUnii1ChannelMap:(unsigned long long)arg2 deniedUnii2aChannelMap:(unsigned long long)arg3 deniedUnii2cChannelMap:(unsigned long long)arg4 deniedUnii3ChannelMap:(unsigned long long)arg5 ;
-(void)setDeviceLockState:(char)arg1 ;
-(void)setMotionState:(char)arg1 andVehicularState:(char)arg2 ;
-(void)setMediaState:(char)arg1 ;
-(void)setDeviceChargingState:(char)arg1 ;
-(void)setSecondaryInterfaceName:(id)arg1 ;
-(char)submitAnalytics:(id)arg1 ;
-(void)setCompletionHandler:(/*^block*/id)arg1 withContext:(void*)arg2 onQueue:(id)arg3 ;
-(void)setPrivacyRestrictionDisabled:(char)arg1 ;
-(void)initializeDeviceLockState:(char)arg1 displayState:(char)arg2 motionState:(char)arg3 vehicularState:(char)arg4 callState:(char)arg5 mediaState:(char)arg6 chargingState:(char)arg7 andSecondaryInterfaceName:(id)arg8 ;
-(void)startMonitoringWiFiInterface:(id)arg1 ;
-(void)setSystemWakeState:(char)arg1 wokenByWiFi:(char)arg2 ;
-(void)setCurrentApplicationName:(id)arg1 withAttributes:(id)arg2 ;
-(void)setJoinEvent:(char)arg1 withReason:(unsigned long long)arg2 lastDisconnectReason:(long long)arg3 lastJoinFailure:(long long)arg4 andNetworkDetails:(id)arg5 forInterface:(id)arg6 ;
-(void)setLinkEvent:(char)arg1 isInvoluntary:(char)arg2 linkChangeReason:(long long)arg3 linkChangeSubreason:(long long)arg4 withNetworkDetails:(id)arg5 forInterface:(id)arg6 ;
-(void)updateLinkQuality:(id)arg1 andDataStats:(id)arg2 forInterface:(id)arg3 ;
-(void)setPowerBudget:(long long)arg1 andThermalIndex:(long long)arg2 forInterface:(id)arg3 ;
-(void)setBluetoothState:(char)arg1 connectedDeviceCount:(unsigned long long)arg2 inA2dp:(char)arg3 inSco:(char)arg4 ;
-(void)setAwdlState:(char)arg1 inMode:(long long)arg2 ;
-(void)setSoftApState:(char)arg1 requester:(id)arg2 status:(id)arg3 changeReason:(id)arg4 channelNumber:(unsigned long long)arg5 countryCode:(unsigned long long)arg6 isHidden:(char)arg7 isInfraConnected:(char)arg8 isAwdlUp:(char)arg9 lowPowerModeDuration:(double)arg10 compatibilityMode:(char)arg11 ;
-(void)setRoamingState:(char)arg1 reason:(unsigned long long)arg2 andStatus:(long long)arg3 forInterface:(id)arg4 ;
-(void)setScanningState:(char)arg1 client:(unsigned long long)arg2 neighborBSS:(id)arg3 otherBSS:(id)arg4 forInterface:(id)arg5 ;
-(void)setPowerState:(char)arg1 forInterface:(id)arg2 ;
-(void)setControlCenterState:(char)arg1 withKnownLocation:(char)arg2 forInterface:(id)arg3 ;
-(void)setCellularFallbackState:(char)arg1 forInterface:(id)arg2 ;
-(void)addFaultEvent:(unsigned long long)arg1 forInterface:(id)arg2 ;
-(void)addTriggerDisconnectEvent:(id)arg1 isAlerted:(char)arg2 isConfirmed:(char)arg3 isExecuted:(char)arg4 ;
-(id)summaryForInterface:(id)arg1 ;
@end

