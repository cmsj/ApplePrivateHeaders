/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:43 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CMCapture.framework/Versions/A/CMCapture
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CMCapture/CMCapture-Structs.h>
#import <libobjc.A.dylib/FigCaptureDisplayLayoutObserver.h>
#import <libobjc.A.dylib/FigCaptureDeviceLockStateObserver.h>

@class FigCaptureClientSessionMonitorClient, FigCaptureDisplayLayoutMonitor, FigCaptureDeviceLockStateMonitor, NSString;

@interface FigCaptureClientSessionMonitor : NSObject <FigCaptureDisplayLayoutObserver, FigCaptureDeviceLockStateObserver> {

	FigCaptureClientSessionMonitorClient* _client;
	OpaqueFigSimpleMutexRef _stateChangeLock;
	char _isBKSApplicationStateMonitoringRequiredForClient;
	unsigned _bksApplicationState;
	char _bksApplicationStateInitialized;
	int _applicationState;
	char _isLayoutMonitoringRequiredForClient;
	int _layoutState;
	char _layoutStateInitialized;
	FigCaptureDisplayLayoutMonitor* _displayLayoutMonitor;
	char _isDeviceLockStateMonitoringRequiredForClient;
	char _deviceIsLocked;
	char _deviceLockStateInitialized;
	FigCaptureDeviceLockStateMonitor* _deviceLockStateMonitor;
	char _invalid;

}

@property (readonly) NSString * applicationID; 
@property (readonly) int applicationState; 
@property (readonly) int clientType; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)_stringForClientType:(int)arg1 ;
+(id)_stringForApplicationState:(int)arg1 ;
+(id)_stringForClientLayoutState:(int)arg1 ;
+(char)_isSupportedExtensionClientType:(int)arg1 ;
+(int)_applicationStateForBKSApplicationState:(unsigned)arg1 clientType:(int)arg2 ;
+(int)_applicationStateForClientLayoutState:(int)arg1 clientType:(int)arg2 ;
+(id)_stringForBKSApplicationState:(unsigned)arg1 ;
+(void)startPrewarmingMonitorWithHandler:(/*^block*/id)arg1 ;
+(void)stopPrewarmingMonitor;
-(void)dealloc;
-(NSString *)description;
-(NSString *)debugDescription;
-(void)invalidate;
-(int)applicationState;
-(int)clientType;
-(NSString *)applicationID;
-(id)initWithAVConferenceClientApplicationIDs:(id)arg1 applicationAndLayoutStateHandler:(/*^block*/id)arg2 interruptionHandler:(/*^block*/id)arg3 ;
-(id)_initWithClient:(id)arg1 ;
-(id)loggingPrefix;
-(int)_resolveApplicationState;
-(id)_resolveApplicationID;
-(void)_updateClientStateCondition:(void*)arg1 newValue:(id)arg2 ;
-(void)layoutMonitor:(id)arg1 didUpdateLayoutWithForegroundApps:(id)arg2 obscuredApps:(id)arg3 transitioningApps:(id)arg4 pipApps:(id)arg5 ;
-(void)deviceLockStateMonitor:(id)arg1 didUpdateDeviceLockState:(char)arg2 ;
-(id)initWithClientAuditToken:(SCD_Struct_Fi26)arg1 forThirdPartyTorch:(char)arg2 applicationAndLayoutStateHandler:(/*^block*/id)arg3 interruptionHandler:(/*^block*/id)arg4 ;
@end

