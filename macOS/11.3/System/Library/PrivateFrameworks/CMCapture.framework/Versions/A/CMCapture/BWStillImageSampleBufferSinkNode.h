/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:43 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CMCapture.framework/Versions/A/CMCapture
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CMCapture/CMCapture-Structs.h>
#import <CMCapture/BWSinkNode.h>

@interface BWStillImageSampleBufferSinkNode : BWSinkNode {

	/*^block*/id _sampleBufferAvailableHandler;
	char _aggdIsPhotoFormat;
	char _clientIsCameraOrDerivative;
	char _aggdIsTimeLapse;
	char _captureTimePhotosCurationSupported;
	long long _lastCaptureRequestTime;

}

@property (nonatomic,copy) id sampleBufferAvailableHandler;              //@synthesize sampleBufferAvailableHandler=_sampleBufferAvailableHandler - In the implementation block
+(void)initialize;
+(id)_inferenceTypesForClientMetadata;
-(void)dealloc;
-(void)didReachEndOfDataForInput:(id)arg1 ;
-(id)nodeSubType;
-(void)renderSampleBuffer:(opaqueCMSampleBufferRef)arg1 forInput:(id)arg2 ;
-(char)clientIsCameraOrDerivative;
-(void)setClientIsCameraOrDerivative:(char)arg1 ;
-(id)initWithSinkID:(id)arg1 ;
-(void)handleNodeError:(id)arg1 forInput:(id)arg2 ;
-(id)initWithInputMediaType:(unsigned)arg1 sinkID:(id)arg2 ;
-(void)_attachPrivateClientMetadataToSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)_reportAggdDataWithRequestedStillImageSettings:(id)arg1 resolvedStillImageCaptureSettings:(id)arg2 sbuf:(opaqueCMSampleBufferRef)arg3 ;
-(void)_reportCoreAnalyticsDataWithRequestedStillImageSettings:(id)arg1 resolvedStillImageCaptureSettings:(id)arg2 sbuf:(opaqueCMSampleBufferRef)arg3 ;
-(id)_newFilteredDetectedObjectsInfoFromDetectedObjectsInfo:(id)arg1 ;
-(void)setAggdIsPhotoFormat:(char)arg1 ;
-(char)aggdIsPhotoFormat;
-(void)setAggdIsTimeLapse:(char)arg1 ;
-(char)aggdIsTimeLapse;
-(void)setCaptureTimePhotosCurationSupported:(char)arg1 ;
-(char)captureTimePhotosCurationSupported;
-(id)sampleBufferAvailableHandler;
-(void)setSampleBufferAvailableHandler:(id)arg1 ;
@end

