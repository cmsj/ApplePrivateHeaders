/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:43 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CMCapture.framework/Versions/A/CMCapture
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CMCapture/CMCapture-Structs.h>
#import <CMCapture/BWSourceNode.h>
#import <libobjc.A.dylib/BWAudioSourceRecordingReadinessDelegate.h>
#import <libobjc.A.dylib/BWZoomCompletionDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class BWNodeOutput, NSDictionary, NSString, NSObject, NSArray;

@interface BWAudioSourceNode : BWSourceNode <BWAudioSourceRecordingReadinessDelegate, BWZoomCompletionDelegate> {

	BWNodeOutput* _outputsByMicSourcePosition[3];
	NSDictionary* _sourceRequirements;
	char _useAUHAL;
	NSString* _HALDeviceUID;
	NSString* _AVAudioSessionMode;
	char _listeningForDefaultInputDeviceChanges;
	char _didBeginInterruption;
	char _doEndInterruption;
	char _isAppAudioSession;
	char _configuresSession;
	SCD_Struct_Fi26 _clientAuditToken;
	int _clientPID;
	OpaqueCMClockRef _clock;
	opaqueCMFormatDescriptionRef _auOutputFormatDescription;
	unsigned _pullDuration;
	ComponentInstanceRecord* _audioUnit;
	unsigned _auSubType;
	opaqueCMSimpleQueueRef _renderProcErrorQueue;
	opaqueCMSimpleQueueRef _inactiveBuffersQueue;
	opaqueCMSimpleQueueRef _activeBuffersQueue;
	unsigned long long _nextExpectedHostTime;
	SCD_Struct_Fi8 _nextExpectedSampleTime;
	SCD_Struct_Fi8 _ioprocTimeStampDeltaLimit;
	SCD_Struct_Fi8 _prevPTS;
	unsigned _prevNumFrames;
	NSObject*<OS_dispatch_queue> _generateSamplesDispatchQueue;
	char _streamStarted;
	char _streamInterrupted;
	char _levelMeteringEnabled;
	int _audioLevelUnits;
	SCD_Struct_Fi8 _latencyOffset;
	NSObject*<OS_dispatch_source> _silenceTimer;
	long long _auRenderCount;
	long long _silenceFramesGeneratedSinceLastAURenderProc;
	TimestampedAudioBufferList* _currentSilenceBuffer;
	NSObject*<OS_dispatch_queue> _preparedToRecordHandlerCallbackQueue;
	char _livePhotoCaptureEnabled;
	char _stereoAudioCaptureEnabled;
	char _videoRecordingEnabled;
	char _isMultiCamSession;
	char _flipStereoAudioCaptureChannels;
	float _stereoAudioCapturePairedCameraBaseFieldOfView;
	float _stereoAudioCapturePairedCameraZoomFactor;
	NSObject*<OS_dispatch_queue> _zoomHandlerQueue;
	long long _maxZoomFrequencyNanos;
	long long _nextZoomTime;
	NSObject*<OS_dispatch_source> _zoomTimer;
	float _nextZoomFactor;
	os_unfair_lock_s _zoomLock;

}

@property (nonatomic,readonly) NSArray * audioLevels; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)audioSourceNodeWithAttributes:(id)arg1 sessionPreset:(id)arg2 clock:(OpaqueCMClockRef)arg3 doConfigureAudio:(char)arg4 clientAuditToken:(SCD_Struct_Fi26)arg5 clientVersionOfLinkedSDK:(unsigned)arg6 audioCaptureConnectionConfigurations:(id)arg7 isMultiCamSession:(char)arg8 ;
-(void)dealloc;
-(char)stop:(id*)arg1 ;
-(OpaqueCMClockRef)clock;
-(char)videoRecordingEnabled;
-(void)setVideoRecordingEnabled:(char)arg1 ;
-(char)start:(id*)arg1 ;
-(char)livePhotoCaptureEnabled;
-(void)setLivePhotoCaptureEnabled:(char)arg1 ;
-(void)prepareForCurrentConfigurationToBecomeLive;
-(id)nodeSubType;
-(void)makeOutputsLiveIfNeeded;
-(char)hasNonLiveConfigurationChanges;
-(void)makeCurrentConfigurationLive;
-(char)flipStereoAudioCaptureChannels;
-(void)setFlipStereoAudioCaptureChannels:(char)arg1 ;
-(id)outputForMicSourcePosition:(int)arg1 ;
-(void)setStereoAudioCaptureEnabled:(char)arg1 ;
-(void)setLevelMeteringEnabled:(char)arg1 ;
-(char)stereoAudioCaptureEnabled;
-(void)setStereoAudioCapturePairedCameraBaseFieldOfView:(float)arg1 ;
-(void)setStereoAudioCapturePairedCameraZoomFactor:(float)arg1 ;
-(void)_updateAVAudioSessionMode;
-(id)_defaultAudioInputDeviceUID;
-(void)_updateAudioClockDeviceUID:(CFStringRef)arg1 ;
-(int)_updatePullFormatDescription;
-(void)_generateSilenceIfNeeded;
-(void)_updateStereoAudioCapturePairedCameraZoomFactorAndStartTimer:(char)arg1 ;
-(id)_initWithAttributes:(id)arg1 sessionPreset:(id)arg2 clock:(OpaqueCMClockRef)arg3 doConfigureAudio:(char)arg4 clientAuditToken:(SCD_Struct_Fi26)arg5 clientVersionOfLinkedSDK:(unsigned)arg6 audioCaptureConnectionConfigurations:(id)arg7 isMultiCamSession:(char)arg8 ;
-(int)_setupAudioUnit;
-(unsigned)_audioDeviceIDForUID:(id)arg1 ;
-(double)_desiredSampleRate:(char*)arg1 ;
-(int)_getAudioDevicePullFrames:(unsigned*)arg1 ;
-(int)_generatePullBuffers;
-(unsigned)_audioCombinedLatency;
-(opaqueCMSampleBufferRef)_createSampleBufferForTimestampedAudioBufferList:(TimestampedAudioBufferList*)arg1 audioBufferIndex:(int)arg2 ;
-(void)_setupPrepareToRecordStateWithFlags:(unsigned)arg1 ;
-(void)prepareToStartRecordingWithOrientation:(int)arg1 recordingSettingsID:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)unprepareForRecording;
-(void)zoomCommandHandler:(id)arg1 didApplyZoomFactor:(float)arg2 zoomFactorWithoutFudge:(float)arg3 rampComplete:(char)arg4 rampCommandID:(int)arg5 ;
-(char)levelMeteringEnabled;
-(NSArray *)audioLevels;
-(float)stereoAudioCapturePairedCameraBaseFieldOfView;
-(float)stereoAudioCapturePairedCameraZoomFactor;
-(void)_generateSamples;
@end

