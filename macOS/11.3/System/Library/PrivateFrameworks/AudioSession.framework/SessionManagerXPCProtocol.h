/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:34 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioSession.framework/libSessionXPCServer.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SessionManagerXPCProtocol
@required
-(void)pingWithReply:(/*^block*/id)arg1;
-(void)clientSessionDestroyed:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)configureSession:(unsigned)arg1 shouldBeActive:(char)arg2 options:(unsigned long long)arg3 state:(id)arg4 reply:(/*^block*/id)arg5;
-(void)deactivateSession:(unsigned)arg1 options:(unsigned long long)arg2 reply:(/*^block*/id)arg3;
-(void)simulateActiveSession:(unsigned)arg1 state:(id)arg2 reply:(/*^block*/id)arg3;
-(void)updateActiveIOController:(unsigned)arg1 state:(id)arg2 reply:(/*^block*/id)arg3;
-(void)otherAudioPlaying:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)secondaryAudioShouldBeSilencedHint:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)promptStyle:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)availablePorts:(unsigned)arg1 state:(id)arg2 reply:(/*^block*/id)arg3;
-(void)connectedPorts:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)platformSupportWithReply:(/*^block*/id)arg1;
-(void)startIOController:(int)arg1 session:(unsigned)arg2 directions:(unsigned)arg3 startTime:(AudioTimeStamp)arg4 flags:(unsigned long long)arg5 reply:(/*^block*/id)arg6;
-(void)stopIOController:(int)arg1 session:(unsigned)arg2 reply:(/*^block*/id)arg3;
-(void)updateRunningIODirections:(int)arg1 session:(unsigned)arg2 directions:(unsigned)arg3 reply:(/*^block*/id)arg4;
-(void)getIOControllerCurrentTime:(int)arg1 session:(unsigned)arg2 reply:(/*^block*/id)arg3;
-(void)sessionTokensWithReply:(/*^block*/id)arg1;
-(void)createProxyForSession:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)destroyProxyForSession:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)fullStateForSession:(unsigned)arg1 reply:(/*^block*/id)arg2;
-(void)setProcessOwningIOResources:(unsigned)arg1 session:(unsigned)arg2 reply:(/*^block*/id)arg3;
-(void)hardwareSystemStateWithReply:(/*^block*/id)arg1;
-(void)setHardwarePropertyValueForObject:(unsigned long long)arg1 keyOrAddress:(id)arg2 qualifier:(id)arg3 value:(id)arg4 controller:(unsigned)arg5 reply:(/*^block*/id)arg6;
-(void)hardwarePropertyValueForObject:(unsigned long long)arg1 keyOrAddress:(id)arg2 qualifier:(id)arg3 infoOnly:(char)arg4 reply:(/*^block*/id)arg5;
-(void)getControlValue:(unsigned long long)arg1 reply:(/*^block*/id)arg2;
-(void)setControlValue:(unsigned long long)arg1 value:(id)arg2 controller:(unsigned)arg3 reply:(/*^block*/id)arg4;
-(void)transformControl:(unsigned long long)arg1 value:(float)arg2 toDB:(BOOL)arg3 reply:(/*^block*/id)arg4;
-(void)beginOrEndControlObservation:(unsigned long long)arg1 begin:(BOOL)arg2 reply:(/*^block*/id)arg3;
-(void)fakeDeviceDescription:(unsigned long long)arg1 reply:(/*^block*/id)arg2;
-(void)createFakeDevice:(id)arg1 controller:(unsigned)arg2 reply:(/*^block*/id)arg3;
-(void)destroyFakeDevice:(unsigned long long)arg1 controller:(unsigned)arg2 reply:(/*^block*/id)arg3;
-(void)setDefaultRoutePreference:(id)arg1 transient:(char)arg2 controller:(unsigned)arg3 reply:(/*^block*/id)arg4;
-(void)resetDefaultRoutePreference:(unsigned char)arg1 transient:(char)arg2 controller:(unsigned)arg3 reply:(/*^block*/id)arg4;

@end

