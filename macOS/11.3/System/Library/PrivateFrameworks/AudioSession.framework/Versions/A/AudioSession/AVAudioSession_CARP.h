/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioSession/AudioSession-Structs.h>
#import <AudioSession/AVAudioSession.h>

@interface AVAudioSession_CARP : AVAudioSession {

	synchronized<std::__1::shared_ptr<as::client::Session>, caulk::shared_ptr_mutex<as::client::KVOMutex>, as::client::unguarded_accessor<std::__1::shared_ptr<as::client::Session>>>* _guarded_impl;

}
+(id)sharedInstance;
+(id)auxiliarySessionWithName:(id)arg1 ;
+(unsigned long long)recordPermission;
+(void)requestRecordPermission:(/*^block*/id)arg1 ;
+(id)auxiliarySession;
+(id)primarySession;
+(char)categoryEnablesInput:(id)arg1 ;
+(id)retrieveSessionWithID:(unsigned)arg1 ;
+(char)wantsBackgroundAudio;
+(char)wantsMicrophonePermission;
-(id)description;
-(id)init;
-(id)delegate;
-(void)setDelegate:(id)arg1 ;
-(void)_invalidate;
-(id)category;
-(id)mode;
-(double)sampleRate;
-(char)setCategory:(id)arg1 error:(id*)arg2 ;
-(id)availableModes;
-(unsigned long long)sessionType;
-(unsigned)hardwareControlToken;
-(double)inputLatency;
-(double)outputLatency;
-(id)initWithName:(id)arg1 manager:(id)arg2 proxying:(unsigned)arg3 sessionType:(unsigned long long)arg4 ;
-(char)isInputAvailable;
-(id)availableCategories;
-(id)initAuxiliarySessionWithName:(id)arg1 ;
-(char)setActive:(char)arg1 error:(id*)arg2 ;
-(char)setMode:(id)arg1 error:(id*)arg2 ;
-(char)setRouteSharingPolicy:(unsigned long long)arg1 error:(id*)arg2 ;
-(unsigned long long)routeSharingPolicy;
-(unsigned long long)categoryOptions;
-(char)setCategory:(id)arg1 withOptions:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)setCategory:(id)arg1 mode:(id)arg2 options:(unsigned long long)arg3 error:(id*)arg4 ;
-(char)setCategory:(id)arg1 mode:(id)arg2 routeSharingPolicy:(unsigned long long)arg3 options:(unsigned long long)arg4 error:(id*)arg5 ;
-(unsigned long long)recordPermission;
-(void)requestRecordPermission:(/*^block*/id)arg1 ;
-(char)overrideOutputAudioPort:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)setPreferredInput:(id)arg1 error:(id*)arg2 ;
-(id)preferredInput;
-(char)setAllowHapticsAndSystemSoundsDuringRecording:(char)arg1 error:(id*)arg2 ;
-(char)allowHapticsAndSystemSoundsDuringRecording;
-(char)prefersNoInterruptionsFromSystemAlerts;
-(char)setPrefersNoInterruptionsFromSystemAlerts:(char)arg1 error:(id*)arg2 ;
-(char)setActive:(char)arg1 withOptions:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)activateWithOptions:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)isOtherAudioPlaying;
-(char)secondaryAudioShouldBeSilencedHint;
-(float)outputVolume;
-(unsigned long long)promptStyle;
-(id)availableInputs;
-(id)currentRoute;
-(char)setAggregatedIOPreference:(unsigned long long)arg1 error:(id*)arg2 ;
-(long long)inputNumberOfChannels;
-(long long)outputNumberOfChannels;
-(unsigned long long)preferredRouteSharingPolicy;
-(char)canBeNowPlayingApp;
-(void)setCanBeNowPlayingApp:(char)arg1 ;
-(long long)inputOrientation;
-(long long)preferredInputOrientation;
-(char)setPreferredInputOrientation:(long long)arg1 error:(id*)arg2 ;
-(double)preferredSampleRate;
-(char)setPreferredSampleRate:(double)arg1 error:(id*)arg2 ;
-(char)setPreferredIOBufferDuration:(double)arg1 error:(id*)arg2 ;
-(double)preferredIOBufferDuration;
-(double)IOBufferDuration;
-(char)setPreferredInputNumberOfChannels:(long long)arg1 error:(id*)arg2 ;
-(long long)preferredInputNumberOfChannels;
-(char)setPreferredOutputNumberOfChannels:(long long)arg1 error:(id*)arg2 ;
-(long long)preferredOutputNumberOfChannels;
-(long long)maximumInputNumberOfChannels;
-(long long)maximumOutputNumberOfChannels;
-(char)isInputGainSettable;
-(char)setInputGain:(float)arg1 error:(id*)arg2 ;
-(float)inputGain;
-(id)inputDataSources;
-(id)inputDataSource;
-(char)setInputDataSource:(id)arg1 error:(id*)arg2 ;
-(id)outputDataSources;
-(id)outputDataSource;
-(char)setOutputDataSource:(id)arg1 error:(id*)arg2 ;
-(char)checkPrimarySessionImplicitActivation:(char)arg1 ;
-(id)routingContextUID;
-(unsigned)opaqueSessionID;
-(id)audioFormats;
-(long long)audioFormat;
-(char)isDolbyDigitalEncoderAvailable;
-(char)isDolbyAtmosAvailable;
-(char)isEarpieceActiveNoiseCancelationEnabled;
-(char)isPiPAvailable;
-(char)forceSoundCheck;
-(char)setForceSoundCheck:(char)arg1 error:(id*)arg2 ;
-(char)recordingFromRemoteInput;
-(char)setRecordingFromRemoteInput:(char)arg1 error:(id*)arg2 ;
-(char)allowAllBuiltInDataSources;
-(void)setAllowAllBuiltInDataSources:(char)arg1 ;
-(char)isHardwareFormatFixedToMultiChannel;
-(char)setDefaultChatMode:(id)arg1 error:(id*)arg2 ;
-(char)setActivationContext:(id)arg1 error:(id*)arg2 ;
-(char)clearInputPreferences:(id*)arg1 ;
-(double)inputSafetyOffset;
-(double)outputSafetyOffset;
-(char)setPreferredIOBufferFrameSize:(unsigned long long)arg1 error:(id*)arg2 ;
-(unsigned long long)preferredIOBufferFrameSize;
-(unsigned long long)IOBufferFrameSize;
-(char)silenceOutput:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)setInterruptionPriority:(long long)arg1 error:(id*)arg2 ;
-(long long)interruptionPriority;
-(char)lastActivationStoppedNowPlayingApp;
-(char)setReporterID:(long long)arg1 error:(id*)arg2 ;
-(long long)reporterID;
-(char)selectIndependentRoutingContext:(id*)arg1 ;
-(char)setVoiceProcessingRoutingEnabled:(BOOL)arg1 error:(id*)arg2 ;
-(char)isVoiceProcessingRoutingEnabled;
-(char)usingLongFormAudio;
-(char)prefersNoInterruptionsByRingtonesAndAlerts;
-(char)participatesInVolumePolicy;
-(char)setActive:(char)arg1 withFlags:(long long)arg2 error:(id*)arg3 ;
-(char)inputIsAvailable;
-(double)currentHardwareSampleRate;
-(long long)currentHardwareInputNumberOfChannels;
-(long long)currentHardwareOutputNumberOfChannels;
-(char)setPreferredHardwareSampleRate:(double)arg1 error:(id*)arg2 ;
-(double)preferredHardwareSampleRate;
-(unsigned)opaqueSessionToken;
-(id)IOController;
-(char)reconfigureWhileActiveUsingBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(unsigned long long)overriddenOutputAudioPort;
-(id)preferredMasterDevice;
-(char)setPreferredMasterDevice:(id)arg1 error:(id*)arg2 ;
-(id)preferredOutput;
-(char)setPreferredOutput:(id)arg1 error:(id*)arg2 ;
-(char)microphoneFollowsCamera;
-(void)setMicrophoneFollowsCamera:(char)arg1 ;
-(id)availableOutputs;
-(id)connectedInputs;
-(id)connectedOutputs;
-(id)decoupledInputIOController;
-(long long)createIOStateChangeBlock:(/*^block*/id)arg1 ;
-(void)destroyIOStateChangeBlock:(long long)arg1 ;
-(char)activateWithOptions:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)deactivateWithOptions:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)activateWithOptions:(unsigned long long)arg1 ioStateChangeEvent:(id*)arg2 error:(id*)arg3 ;
-(void)activateWithOptions:(unsigned long long)arg1 activationHandler:(/*^block*/id)arg2 ;
-(void)deactivateWithOptions:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(unsigned long long)aggregatedIOPreference;
-(id)portFromUID:(id)arg1 ;
-(id)initAuxiliarySession;
-(void)registerWithServer;
-(char)setUsingLongFormAudio:(char)arg1 error:(id*)arg2 ;
-(char)setRequiresNoAudioResources:(char)arg1 error:(id*)arg2 ;
-(char)setInterruptionFadeDuration:(id)arg1 error:(id*)arg2 ;
-(char)setDuckingFadeOutDuration:(id)arg1 fadeInDuration:(id)arg2 error:(id*)arg3 ;
-(char)fixHardwareFormatToMultiChannel:(char)arg1 error:(id*)arg2 ;
-(char)setIAmTheAssistant:(char)arg1 error:(id*)arg2 ;
-(char)setPrefersNoInterruptionsByRingtonesAndAlerts:(char)arg1 error:(id*)arg2 ;
-(char)setPrefersNoDucking:(char)arg1 error:(id*)arg2 ;
-(char)setParticipatesInVolumePolicy:(char)arg1 error:(id*)arg2 ;
-(char)setPrefersToVibeWhenVibrationsAreDisabled:(char)arg1 error:(id*)arg2 ;
-(char)setDisallowedPorts:(id)arg1 error:(id*)arg2 ;
-(char)setBypassRingerSwitchPolicy:(char)arg1 error:(id*)arg2 ;
-(char)setAudioHardwareControlFlags:(unsigned long long)arg1 error:(id*)arg2 ;
-(int)processOwningIOResources;
-(char)setProcessOwningIOResources:(int)arg1 error:(id*)arg2 ;
-(char)decoupledIO;
-(char)preferDecoupledIO:(char)arg1 error:(id*)arg2 ;
-(char)deactivateAndSetInterruptionPriority:(long long)arg1 error:(id*)arg2 ;
-(id)audioClockDevice;
-(char)setAudioClockDevice:(id)arg1 error:(id*)arg2 ;
@end

