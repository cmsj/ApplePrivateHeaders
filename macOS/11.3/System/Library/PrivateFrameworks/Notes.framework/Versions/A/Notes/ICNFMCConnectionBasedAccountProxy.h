/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:32 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Notes.framework/Versions/A/Notes
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Notes/Notes-Structs.h>
#import <Notes/ICNFMCAccountProxy.h>
#import <libobjc.A.dylib/ICNFMCAccount.h>

@class NSString, NSArray, ICNFMCAuthScheme, NSURL;

@interface ICNFMCConnectionBasedAccountProxy : ICNFMCAccountProxy <ICNFMCAccount> {

	NSString* _primitiveSessionPassword;

}

@property (copy) NSString * primitiveSessionPassword;                        //@synthesize primitiveSessionPassword=_primitiveSessionPassword - In the implementation block
@property (copy,readonly) NSString * accountTypeString; 
@property (copy,readonly) NSString * identifier; 
@property (copy) NSString * displayName; 
@property (nonatomic,copy,readonly) NSString * saslProfileName; 
@property (assign) char configureDynamically; 
@property (assign) char allowInsecureAuthentication; 
@property (copy) NSString * canonicalEmailAddress; 
@property (copy) NSString * hostname; 
@property (assign) long long portNumber; 
@property (nonatomic,copy,readonly) NSArray * standardPorts; 
@property (nonatomic,copy,readonly) NSArray * standardSSLPorts; 
@property (assign) long long securityLayerType; 
@property (retain) ICNFMCAuthScheme * preferredAuthScheme; 
@property (copy) NSString * username; 
@property (copy) NSString * password; 
@property (copy) NSString * sessionPassword; 
@property (copy,readonly) NSString * applePersonID; 
@property (copy,readonly) NSString * appleAuthenticationToken; 
@property (copy,readonly) NSString * machineID; 
@property (copy,readonly) NSString * oneTimePassword; 
@property (copy,readonly) NSString * clientInfo; 
@property (copy,readonly) NSString * oauthToken; 
@property (nonatomic,readonly) char requiresAuthentication; 
@property (assign) char shouldUseAuthentication; 
@property (assign) char usesSSL; 
@property (readonly) NSURL * subscriptionURL; 
@property (copy,readonly) NSString * subscriptionURLLabel; 
@property (copy) NSString * externalHostname; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)accountTypeString;
+(void)saveAccountInfoToDefaults;
-(NSString *)password;
-(void)setPassword:(NSString *)arg1 ;
-(id)initWithManagedObject:(id)arg1 ;
-(NSString *)hostname;
-(char)requiresAuthentication;
-(NSString *)clientInfo;
-(NSString *)oauthToken;
-(void)setPortNumber:(long long)arg1 ;
-(long long)portNumber;
-(id)acAccount;
-(char)autodiscoverSettings:(id*)arg1 ;
-(NSString *)accountTypeString;
-(NSURL *)subscriptionURL;
-(void)setHostname:(NSString *)arg1 ;
-(NSString *)machineID;
-(void)setUsesSSL:(char)arg1 ;
-(char)usesSSL;
-(NSArray *)standardPorts;
-(NSArray *)standardSSLPorts;
-(char)configureDynamically;
-(void)setConfigureDynamically:(char)arg1 ;
-(NSString *)saslProfileName;
-(NSString *)appleAuthenticationToken;
-(NSString *)applePersonID;
-(NSString *)oneTimePassword;
-(long long)securityLayerType;
-(char)shouldUseAuthentication;
-(SecIdentityRef)copyTLSIdentity;
-(void)setTLSIdentity:(SecIdentityRef)arg1 ;
-(void)updateFromSuccessfulConnectionPortNumber:(long long)arg1 securityLayerType:(long long)arg2 ;
-(char)connectAndAuthenticate:(id)arg1 ;
-(void)respondToHostBecomingReachable;
-(id)newConnectedConnectionDiscoveringBestSettings:(char)arg1 withConnectTimeout:(double)arg2 readWriteTimeout:(double)arg3 ;
-(id)authenticatedConnection;
-(char)canAuthenticateWithScheme:(id)arg1 ;
-(void)setSecurityLayerType:(long long)arg1 ;
-(ICNFMCAuthScheme *)preferredAuthScheme;
-(void)setPreferredAuthScheme:(ICNFMCAuthScheme *)arg1 ;
-(void)setShouldUseAuthentication:(char)arg1 ;
-(char)isServerReachable;
-(NSString *)sessionPassword;
-(void)setSessionPassword:(NSString *)arg1 ;
-(NSString *)primitiveSessionPassword;
-(void)setPrimitiveSessionPassword:(NSString *)arg1 ;
-(char)shouldRetryConnectionWithoutCertificateCheckingAfterError:(id)arg1 host:(id)arg2 didPromptUser:(char*)arg3 ;
-(NSString *)subscriptionURLLabel;
@end

