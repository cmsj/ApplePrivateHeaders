/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioResourceArbitration/AudioResourceArbitration-Structs.h>
#import <libobjc.A.dylib/dspd_ActivationChangeRequest.h>

@class NSString;

@interface ActivationChangeRequestDouble : NSObject <dspd_ActivationChangeRequest> {

	unsigned session;
	StringRef* category;
	StringRef* mode;
	vector<dspd::DeviceDescription, std::__1::allocator<dspd::DeviceDescription>>* deviceDescriptions;
	vector<dspd::IOControllerDescription, std::__1::allocator<dspd::IOControllerDescription>>* ioControllerDescriptions;
	vector<dspd::PortDescription, std::__1::allocator<dspd::PortDescription>>* portDescriptions;
	vector<dspd::StreamDescription, std::__1::allocator<dspd::StreamDescription>>* streamDescriptions;
	optional<aura::InitiationTriggerSpecification>* initiationTrigger;

}

@property (assign,nonatomic) StringRef* category; 
@property (assign,nonatomic) StringRef* mode; 
@property (assign,nonatomic) vector<dspd::PortDescription portDescriptions; 
@property (assign,nonatomic) vector<dspd::DeviceDescription deviceDescriptions; 
@property (assign,nonatomic) vector<dspd::StreamDescription streamDescriptions; 
@property (assign,nonatomic) vector<dspd::IOControllerDescription ioControllerDescriptions; 
@property (assign,nonatomic) optional<aura::InitiationTriggerSpecification>* initiationTrigger; 
@property (assign,nonatomic) unsigned session; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setMode:(StringRef*)arg1 ;
-(id)init:(unsigned)arg1 ;
-(StringRef*)category;
-(void)setCategory:(StringRef*)arg1 ;
-(StringRef*)mode;
-(unsigned)session;
-(void)setSession:(unsigned)arg1 ;
-(vector<dspd::PortDescription)portDescriptions;
-(vector<dspd::DeviceDescription)deviceDescriptions;
-(vector<dspd::StreamDescription)streamDescriptions;
-(vector<dspd::IOControllerDescription)ioControllerDescriptions;
-(void)setPortDescriptions:(vector<dspd::PortDescription)arg1 ;
-(void)setDeviceDescriptions:(vector<dspd::DeviceDescription)arg1 ;
-(void)setStreamDescriptions:(vector<dspd::StreamDescription)arg1 ;
-(void)setIoControllerDescriptions:(vector<dspd::IOControllerDescription)arg1 ;
-(optional<aura::InitiationTriggerSpecification>*)initiationTrigger;
-(void)setInitiationTrigger:(optional<aura::InitiationTriggerSpecification>*)arg1 ;
@end

