/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol dspd_DSPDelegate <dspd_HardwareVolumeDelegate>
@property (nonatomic,readonly) vector<dspd::PortRecord<float> scalarVolumeRecords; 
@property (nonatomic,readonly) vector<dspd::PortRecord<bool> muteRecords; 
@required
-(error_code*)setHardwareVolumeDelegate:(id)arg1;
-(error_code*)setGraphVolumeDelegate:(id)arg1;
-(id)activationChangeRequestWithSession:(unsigned)arg1;
-(id)deactivationChangeRequestWithSession:(unsigned)arg1;
-(id)supportedPublicStreamFormatRequest;
-(expected<dspd::NegotiateResponse, std::__1::error_code>*)negotiateConfigurationChange:(id)arg1;
-(expected<dspd::NegotiateResponse, std::__1::error_code>*)negotiateConfigurationChanges:(const vector<id<dspd_ConfigurationChangeRequest>, std::__1::allocator<id<dspd_ConfigurationChangeRequest>>>Ref)arg1;
-(expected<dspd::AdaptResponse, std::__1::error_code>*)adaptToConfigurationChange:(id)arg1;
-(expected<dspd::AdaptResponse, std::__1::error_code>*)adaptToConfigurationChanges:(const vector<id<dspd_ConfigurationChangeRequest>, std::__1::allocator<id<dspd_ConfigurationChangeRequest>>>Ref)arg1;
-(expected<void, std::__1::error_code>Ref)configurationChangeComplete:(int)arg1 dspMutation:()arg2;
-(expected<dspd::SimulateResponse, std::__1::error_code>*)simulateConfigurationChange:(id)arg1;
-(expected<dspd::SimulateResponse, std::__1::error_code>*)simulateConfigurationChanges:(const vector<id<dspd_ConfigurationChangeRequest>, std::__1::allocator<id<dspd_ConfigurationChangeRequest>>>Ref)arg1;
-(expected<std::__1::vector<dspd::PublicFormatMap, std::__1::allocator<dspd::PublicFormatMap>>, std::__1::error_code>Ref)supportedPublicStreamFormats:(id)arg1;
-(error_code*)setHardwareVolumeCapabilities:(unsigned long long)arg1 portType:(unsigned)arg2 volumeCapabilities:(VolumeCapabilites*)arg3;
-(expected<dspd::VolumeCapabilites, std::__1::error_code>Ref)volumeCapabilities:(unsigned long long)arg1;
-(expected<float, std::__1::error_code>Ref)virtualMasterVolume:(unsigned long long)arg1;
-(error_code*)setVirtualMasterVolume:(unsigned long long)arg1 scalarVolume:(float)arg2;
-(expected<float, std::__1::error_code>Ref)virtualMasterStereoPan:(unsigned long long)arg1;
-(error_code*)setVirtualMasterStereoPan:(unsigned long long)arg1 stereoPan:(float)arg2;
-(vector<dspd::VolumeUpdateResult, std::__1::allocator<dspd::VolumeUpdateResult>>Ref)setScalarVolumeRecords:(const vector<dspd::PortRecord<float>, std::__1::allocator<dspd::PortRecord<float>>>*)arg1;
-(vector<dspd::VolumeUpdateResult, std::__1::allocator<dspd::VolumeUpdateResult>>Ref)setMuteRecords:(const vector<dspd::PortRecord<bool>, std::__1::allocator<dspd::PortRecord<bool>>>*)arg1;
-(error_code*)fadeVolumeLevel:(float)arg1 ioControllerID:(unsigned long long)arg2 direction:(unsigned char)arg3 portID:(optional<unsigned long long>)arg4 duration:(duration<long long, std::__1::ratio<1, 1000>>)arg5 completionHandler:()arg6;
-(vector<dspd::PortRecord<float>)scalarVolumeRecords;
-(vector<dspd::PortRecord<bool>)muteRecords;

@end

