/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioResourceArbitration/AudioResourceArbitration-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface aura_SimulatedIOStream : NSObject <NSCopying> {

	optional<aura::AudioFormat>* _format;
	vector<std::__1::tuple<aura::AudioFormat, std::__1::set<std::__1::tuple<double, double>, std::__1::less<std::__1::tuple<double, double>>, std::__1::allocator<std::__1::tuple<double, double>>>>, std::__1::allocator<std::__1::tuple<aura::AudioFormat, std::__1::set<std::__1::tuple<double, double>, std::__1::less<std::__1::tuple<double, double>>, std::__1::allocator<std::__1::tuple<double, double>>>>>>* _supportedFormats;
	vector<std::__1::weak_ptr<aura::VirtualPort>, std::__1::allocator<std::__1::weak_ptr<aura::VirtualPort>>>* _virtualPorts;

}

@property (assign,nonatomic) AudioFormat format; 
@property (assign,nonatomic) vector<std::__1::tuple<aura::AudioFormat supportedFormats;              //@synthesize supportedFormats=_supportedFormats - In the implementation block
@property (assign,nonatomic) vector<std::__1::weak_ptr<aura::VirtualPort> virtualPorts;              //@synthesize virtualPorts=_virtualPorts - In the implementation block
+(id)simulatedIOStreamWithFormat:(AudioFormat*)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)initWithFormat:(AudioFormat*)arg1 ;
-(AudioFormat)format;
-(void)setFormat:(AudioFormat)arg1 ;
-(vector<std::__1::tuple<aura::AudioFormat)supportedFormats;
-(void)setSupportedFormats:(vector<std::__1::tuple<aura::AudioFormat)arg1 ;
-(vector<std::__1::weak_ptr<aura::VirtualPort>)virtualPorts;
-(void)setVirtualPorts:(vector<std::__1::weak_ptr<aura::VirtualPort>)arg1 ;
@end

