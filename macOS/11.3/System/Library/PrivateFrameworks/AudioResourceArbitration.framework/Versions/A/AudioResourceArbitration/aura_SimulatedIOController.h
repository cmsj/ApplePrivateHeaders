/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioResourceArbitration/AudioResourceArbitration-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface aura_SimulatedIOController : NSObject <NSCopying> {

	unsigned char _ioControllerType;
	double _sampleRate;
	vector<std::__1::tuple<double, double>, std::__1::allocator<std::__1::tuple<double, double>>>* _supportedSampleRates;
	vector<aura_SimulatedIOStream *, std::__1::allocator<aura_SimulatedIOStream *>>* _inputIOStreams;
	vector<aura_SimulatedIOStream *, std::__1::allocator<aura_SimulatedIOStream *>>* _outputIOStreams;

}

@property (assign,nonatomic) unsigned char ioControllerType;                                  //@synthesize ioControllerType=_ioControllerType - In the implementation block
@property (assign,nonatomic) double sampleRate;                                               //@synthesize sampleRate=_sampleRate - In the implementation block
@property (assign,nonatomic) vector<std::__1::tuple<double supportedSampleRates;              //@synthesize supportedSampleRates=_supportedSampleRates - In the implementation block
@property (assign,nonatomic) vector<aura_SimulatedIOStream * inputIOStreams;                  //@synthesize inputIOStreams=_inputIOStreams - In the implementation block
@property (assign,nonatomic) vector<aura_SimulatedIOStream * outputIOStreams;                 //@synthesize outputIOStreams=_outputIOStreams - In the implementation block
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)init;
-(double)sampleRate;
-(vector<aura_SimulatedIOStream *)inputIOStreams;
-(vector<aura_SimulatedIOStream *)outputIOStreams;
-(void)setInputIOStreams:(vector<aura_SimulatedIOStream *)arg1 ;
-(void)setOutputIOStreams:(vector<aura_SimulatedIOStream *)arg1 ;
-(unsigned char)ioControllerType;
-(void)setIoControllerType:(unsigned char)arg1 ;
-(void)setSampleRate:(double)arg1 ;
-(vector<std::__1::tuple<double)supportedSampleRates;
-(void)setSupportedSampleRates:(vector<std::__1::tuple<double)arg1 ;
@end

