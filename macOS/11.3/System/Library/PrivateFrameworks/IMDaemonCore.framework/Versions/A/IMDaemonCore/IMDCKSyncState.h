/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:10 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/IMDaemonCore.framework/Versions/A/IMDaemonCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <IMDaemonCore/IMKeyValueCollectionDelegate.h>

@protocol IMDCKSyncStateDelegate;
@class IMKeyValueCollection, NSDate, NSDictionary, NSArray, NSString;

@interface IMDCKSyncState : NSObject <IMKeyValueCollectionDelegate> {

	IMKeyValueCollection* _storage;
	id<IMDCKSyncStateDelegate> _delegate;

}

@property (assign,nonatomic) unsigned long long syncControllerSyncState; 
@property (assign,nonatomic) long long syncControllerRecordType; 
@property (assign,getter=isSyncing,nonatomic) char syncing; 
@property (assign,getter=isStartingPeriodicSyncSetByCloudKitHooks,nonatomic) char startingPeriodicSyncSetByCloudKitHooks; 
@property (assign,getter=isStartingInitialSyncSetByCloudKitHooks,nonatomic) char startingInitialSyncSetByCloudKitHooks; 
@property (nonatomic,readonly) IMKeyValueCollection * keyValueCollection;                                                              //@synthesize storage=_storage - In the implementation block
@property (assign,nonatomic,__weak) id<IMDCKSyncStateDelegate> delegate;                                                               //@synthesize delegate=_delegate - In the implementation block
@property (assign,getter=isFeatureEnabled,nonatomic) char featureEnabled; 
@property (assign,nonatomic) char createdChatZone; 
@property (assign,nonatomic) char deletedZones; 
@property (assign,getter=isEligibleForTruthZone,nonatomic) char eligibleForTruthZone; 
@property (assign,getter=isSyncingEnabled,nonatomic) char syncingEnabled; 
@property (assign,getter=isRemovedFromBackup,nonatomic) char removedFromBackup; 
@property (assign,getter=isInExitState,nonatomic) char inExitState; 
@property (assign,getter=isSyncingPaused,nonatomic) char syncingPaused; 
@property (nonatomic,copy) NSDate * exitDate; 
@property (assign,getter=isDisablingDevices,nonatomic) char disablingDevices; 
@property (assign,getter=isStartingEnabledSettingChange,nonatomic) char startingEnabledSettingChange; 
@property (nonatomic,copy) NSDictionary * analyticSyncDatesDictionary; 
@property (nonatomic,copy) NSDate * lastSyncDate; 
@property (assign,nonatomic) long long accountStatus; 
@property (nonatomic,readonly) NSArray * syncErrors; 
@property (assign,nonatomic) long long syncControllerSyncType; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)logHandle;
+(void)removeBuildObjectsFromDict:(id)arg1 ;
-(NSString *)description;
-(id)init;
-(id<IMDCKSyncStateDelegate>)delegate;
-(void)setDelegate:(id<IMDCKSyncStateDelegate>)arg1 ;
-(id)serializedRepresentation;
-(NSDate *)lastSyncDate;
-(long long)accountStatus;
-(void)setAccountStatus:(long long)arg1 ;
-(NSDate *)exitDate;
-(void)setExitDate:(NSDate *)arg1 ;
-(void)setLastSyncDate:(NSDate *)arg1 ;
-(id)logHandle;
-(char)isSyncing;
-(void)keyValueCollection:(id)arg1 willUpdateValues:(id)arg2 ;
-(void)keyValueCollection:(id)arg1 didUpdateValues:(id)arg2 ;
-(void)setSyncingEnabled:(char)arg1 ;
-(char)isFeatureEnabled;
-(char)isInExitState;
-(void)setFeatureEnabled:(char)arg1 ;
-(unsigned long long)syncControllerSyncState;
-(char)isSyncingEnabled;
-(char)isDisablingDevices;
-(char)isSyncingPaused;
-(long long)syncControllerSyncType;
-(long long)syncControllerRecordType;
-(void)setSyncing:(char)arg1 ;
-(void)setEligibleForTruthZone:(char)arg1 ;
-(void)setSyncControllerSyncState:(unsigned long long)arg1 ;
-(void)clearLocalCloudKitSyncState;
-(id)initWithKeyValueCollection:(id)arg1 ;
-(void)setSyncingPaused:(char)arg1 ;
-(void)setRemovedFromBackup:(char)arg1 ;
-(void)setErrorToKeyRollingError;
-(void)broadcastSyncState;
-(void)_startBatchChange;
-(void)_finishBatchChange;
-(void)clearSyncErrors;
-(void)setErrorToAccountNeedsRepair;
-(void)removeObjectFromAnalyticSyncDatesDictionaryForKey:(id)arg1 ;
-(id)getAnalyticSyncDatesObjectForKey:(id)arg1 ;
-(id)syncReportDictionary;
-(void)setAnalyticSyncDatesDictionaryObject:(id)arg1 forKey:(id)arg2 shouldOverrideIfExists:(char)arg3 ;
-(void)addSyncError:(id)arg1 ;
-(id)syncReportDictionaryForAttempt:(unsigned long long)arg1 withSuccess:(char)arg2 ;
-(IMKeyValueCollection *)keyValueCollection;
-(NSDictionary *)analyticSyncDatesDictionary;
-(void)_removeObjectForKey:(id)arg1 forDictionary:(id)arg2 ;
-(void)setAnalyticSyncDatesDictionary:(NSDictionary *)arg1 ;
-(void)_setObject:(id)arg1 forKey:(id)arg2 forDictionary:(id)arg3 shouldSetBuild:(char)arg4 ;
-(NSArray *)syncErrors;
-(id)_describeErrors:(id)arg1 ;
-(char)createdChatZone;
-(char)deletedZones;
-(char)_shouldReportNewUserIfCreatedChatZones:(char)arg1 deletedZones:(char)arg2 ;
-(id)syncUserType;
-(id)describeErrors;
-(char)isEligibleForTruthZone;
-(char)isRemovedFromBackup;
-(char)isStartingEnabledSettingChange;
-(void)setStartingPeriodicSyncSetByCloudKitHooks:(char)arg1 ;
-(void)setStartingInitialSyncSetByCloudKitHooks:(char)arg1 ;
-(void)setSyncControllerRecordType:(long long)arg1 ;
-(void)setSyncControllerSyncType:(long long)arg1 ;
-(void)setStartingEnabledSettingChange:(char)arg1 ;
-(void)setDisablingDevices:(char)arg1 ;
-(void)_setStartingSync;
-(void)setSyncControllerSyncState:(unsigned long long)arg1 withRecordType:(long long)arg2 ;
-(void)setCreatedChatZone:(char)arg1 ;
-(void)setDeletedZones:(char)arg1 ;
-(void)setInExitState:(char)arg1 ;
-(char)isStartingPeriodicSyncSetByCloudKitHooks;
-(char)isStartingInitialSyncSetByCloudKitHooks;
-(void)setSyncingFinished;
-(void)setStartingPeriodicSyncWithRecordType:(long long)arg1 ;
-(void)setStartingInitialSyncWithRecordType:(long long)arg1 ;
@end

