/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:28 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MapsSupport.framework/Versions/A/MapsSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MapsSupport/MapsSupport-Structs.h>
#import <libobjc.A.dylib/MSPSharedTripXPCServer.h>
#import <libobjc.A.dylib/MSPSharedTripXPCClient.h>
#import <libobjc.A.dylib/MSPSharedTripContactControllerDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_group;
@class NSXPCConnection, NSObject, NSDate, GEOObserverHashTable, NSMutableArray, MSPSharedTripContactController, NSMutableDictionary, MSPSharedTripSharingIdentity, MSPMapsPaths, NSArray, NSString;

@interface MSPSharedTripService : NSObject <MSPSharedTripXPCServer, MSPSharedTripXPCClient, MSPSharedTripContactControllerDelegate> {

	NSXPCConnection* _connection;
	char _connectionError;
	NSObject*<OS_dispatch_queue> _isolationQueue;
	unsigned long long _connectionRetryCounter;
	NSDate* _reconnectionBackoffUntilDate;
	GEOObserverHashTable* _receivingObservers;
	GEOObserverHashTable* _sendingObservers;
	NSMutableArray* _receivedTrips;
	MSPSharedTripContactController* _sharingContactController;
	NSMutableDictionary* _subscriptionTokensByTripID;
	os_unfair_lock_s _sharingIdentityLock;
	unsigned long long _permissions;
	MSPSharedTripSharingIdentity* _sharingIdentity;
	NSObject*<OS_dispatch_group> _checkinDispatchGroup;
	id _userDisabledDefaultListener;
	id _serverDisabledDefaultListener;
	MSPMapsPaths* _mapsPaths;
	char _confirmedMapsIsInstalled;

}

@property (nonatomic,readonly) char canShareTrip; 
@property (nonatomic,readonly) char canReceiveTrips; 
@property (nonatomic,readonly) MSPSharedTripSharingIdentity * sharingIdentity; 
@property (nonatomic,readonly) NSArray * receivers; 
@property (nonatomic,readonly) NSArray * receivedTrips; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)dealloc;
-(id)init;
-(void)checkin;
-(NSArray *)receivers;
-(id)_remoteObjectProxy;
-(id)_remoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(void)checkinWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchSharingIdentityWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchRequiresUserConfirmationOfSharingIdentityWithCompletion:(/*^block*/id)arg1 ;
-(void)reportUserConfirmationOfSharingIdentity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)startSharingTripWithContacts:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)startSharingTripWithMessagesContacts:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)startSharingTripWithMessagesGroup:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)stopSharingTripWithContacts:(id)arg1 ;
-(void)stopSharingTripWithMessagesGroup:(id)arg1 ;
-(void)stopSharingTrip;
-(void)fetchActiveHandlesWithCompletion:(/*^block*/id)arg1 ;
-(void)subscribeToSharedTripUpdatesWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)unsubscribeFromSharedTripUpdatesWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)fetchSharedTripsWithCompletion:(/*^block*/id)arg1 ;
-(void)blockSharedTrip:(id)arg1 ;
-(void)sharingIdentityDidChange:(id)arg1 ;
-(void)sharedTripDidUpdateRecipients:(id)arg1 ;
-(void)sharedTripInvalidatedWithError:(id)arg1 ;
-(void)sharedTripDidBecomeAvailable:(id)arg1 ;
-(void)sharedTripDidBecomeUnavailable:(id)arg1 ;
-(void)sharedTripDidClose:(id)arg1 ;
-(void)destinationDidUpdateForSharedTrip:(id)arg1 ;
-(void)etaDidUpdateForSharedTrip:(id)arg1 ;
-(void)routeDidUpdateForSharedTrip:(id)arg1 ;
-(void)destinationReachedDidUpdateForSharedTrip:(id)arg1 ;
-(MSPSharedTripSharingIdentity *)sharingIdentity;
-(void)sharedTripContactController:(id)arg1 didUpdateActiveContactsValues:(id)arg2 ;
-(char)canShareTrip;
-(char)canReceiveTrips;
-(void)_checkEnabledState;
-(void)_checkin;
-(void)_handleCheckinWithSharingIdentity:(id)arg1 activeRecipients:(id)arg2 receivedTrips:(id)arg3 permissions:(unsigned long long)arg4 ;
-(void)_checkinWithCompletion:(/*^block*/id)arg1 ;
-(void)_performBlockAfterInitialSync:(/*^block*/id)arg1 ;
-(void)_startSharingWithContact:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_validateCurrentConfigurationWithCompletion:(/*^block*/id)arg1 ;
-(void)_stopSharingWithContact:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_stopAllSharingWithCompletion:(/*^block*/id)arg1 ;
-(void)purgeToken:(id)arg1 forTripID:(id)arg2 ;
-(id)_subscriptionTokensForTripID:(id)arg1 createIfNeeded:(char)arg2 ;
-(void)_purgeToken:(id)arg1 forTripID:(id)arg2 ;
-(char)_isMapsInstalled;
-(void)_performBlockWhenCheckinCompleted:(/*^block*/id)arg1 ;
-(void)_fetchSharingIdentityWithCompletion:(/*^block*/id)arg1 ;
-(void)_fetchRequiresUserConfirmationOfSharingIdentityWithCompletion:(/*^block*/id)arg1 ;
-(void)_reportUserConfirmationOfSharingIdentity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_startSharingTripWithContacts:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_stopSharingTripWithContacts:(id)arg1 ;
-(void)_startSharingTripWithMessagesContacts:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_startSharingTripWithMessagesGroup:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_stopSharingTripWithMessagesGroup:(id)arg1 ;
-(void)_stopSharingTrip;
-(void)_fetchActiveHandlesWithCompletion:(/*^block*/id)arg1 ;
-(void)_fetchSharedTripsWithCompletion:(/*^block*/id)arg1 ;
-(void)_subscribeToSharedTripUpdatesWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)_addSubscriptionTokenForTripID:(id)arg1 ;
-(void)_blockSharedTrip:(id)arg1 ;
-(id)_insertOrUpdateTrip:(id)arg1 ;
-(void)_openConnectionIfNeeded;
-(void)_resetCheckinIdentityAndPermissions;
-(void)performBlockAfterInitialSync:(/*^block*/id)arg1 ;
-(char)isSharingWithContact:(id)arg1 ;
-(void)refreshSharingIdentityWithCompletion:(/*^block*/id)arg1 ;
-(void)startSharingWithContact:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)stopSharingWithContact:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)stopAllSharingWithCompletion:(/*^block*/id)arg1 ;
-(NSArray *)receivedTrips;
-(void)refreshReceivedTripsWithCompletion:(/*^block*/id)arg1 ;
-(void)blockSharedTripWithIdentifier:(id)arg1 ;
-(void)addReceivingObserver:(id)arg1 ;
-(void)removeReceivingObserver:(id)arg1 ;
-(void)addSendingObserver:(id)arg1 ;
-(void)removeSendingObserver:(id)arg1 ;
@end

