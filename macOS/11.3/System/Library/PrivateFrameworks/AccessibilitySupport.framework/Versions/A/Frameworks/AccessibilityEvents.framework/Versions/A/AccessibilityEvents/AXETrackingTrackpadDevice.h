/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:29 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AccessibilitySupport.framework/Versions/A/Frameworks/AccessibilityEvents.framework/Versions/A/AccessibilityEvents
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AccessibilityEvents/AccessibilityEvents-Structs.h>
#import <libobjc.A.dylib/AXEEventTapListener.h>
#import <libobjc.A.dylib/AXETrackingTouchInputDevice.h>

@protocol AXETrackingTouchInputDeviceDelegate;
@class NSArray, AXFThrottler, AXETrackingGestureEvent, NSString;

@interface AXETrackingTrackpadDevice : NSObject <AXEEventTapListener, AXETrackingTouchInputDevice> {

	char _swallowAllGestureEvents;
	char _ignorePalmEevnts;
	char __eventCaptureStarted;
	os_unfair_lock_s __lock;
	NSArray* __availableTrackpadInfos;
	id<AXETrackingTouchInputDeviceDelegate> _delegate;
	AXFThrottler* __throttler;
	AXETrackingGestureEvent* __previousGestureEvent;

}

@property (assign,nonatomic) char _eventCaptureStarted;                                                                                      //@synthesize _eventCaptureStarted=__eventCaptureStarted - In the implementation block
@property (nonatomic,retain) AXFThrottler * _throttler;                                                                                      //@synthesize _throttler=__throttler - In the implementation block
@property (nonatomic,retain) AXETrackingGestureEvent * _previousGestureEvent;                                                                //@synthesize _previousGestureEvent=__previousGestureEvent - In the implementation block
@property (setter=_setAvailableTrackpadInfos:,getter=_availableTrackpadInfos,nonatomic,copy) NSArray * _availableTrackpadInfos;              //@synthesize _availableTrackpadInfos=__availableTrackpadInfos - In the implementation block
@property (assign,nonatomic) os_unfair_lock_s _lock;                                                                                         //@synthesize _lock=__lock - In the implementation block
@property (assign,nonatomic,__weak) id<AXETrackingTouchInputDeviceDelegate> delegate;                                                        //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) char swallowAllGestureEvents;                                                                                   //@synthesize swallowAllGestureEvents=_swallowAllGestureEvents - In the implementation block
@property (assign,nonatomic) char ignorePalmEevnts;                                                                                          //@synthesize ignorePalmEevnts=_ignorePalmEevnts - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(id<AXETrackingTouchInputDeviceDelegate>)delegate;
-(void)setDelegate:(id<AXETrackingTouchInputDeviceDelegate>)arg1 ;
-(os_unfair_lock_s)_lock;
-(AXFThrottler *)_throttler;
-(void)set_lock:(os_unfair_lock_s)arg1 ;
-(CGEventRef)eventTapManager:(id)arg1 activelyTappedGestureEvent:(id)arg2 cgEvent:(CGEventRef)arg3 withProxy:(CGEventTapProxyRef)arg4 ;
-(CGEventRef)eventTapManager:(id)arg1 activelyTappedMouseEvent:(id)arg2 cgEvent:(CGEventRef)arg3 withProxy:(CGEventTapProxyRef)arg4 ;
-(id)initWithMinimumEventInterval:(double)arg1 ;
-(void)startEventCapture;
-(void)stopEventCapture;
-(void)set_throttler:(AXFThrottler *)arg1 ;
-(char)_eventCaptureStarted;
-(void)setSwallowAllGestureEvents:(char)arg1 ;
-(void)_setAvailableTrackpadInfos:(id)arg1 ;
-(void)set_eventCaptureStarted:(char)arg1 ;
-(id)_nonSyntheticGestureEventFromCGEvent:(CGEventRef)arg1 ;
-(void)_processNonSyntheticGestureEvent:(id)arg1 ;
-(char)swallowAllGestureEvents;
-(void)_updateAvailableTrackpadInfoWithDeviceID:(unsigned long long)arg1 ;
-(NSArray *)_availableTrackpadInfos;
-(char)_isPalmEventWithRadius:(double)arg1 ;
-(char)ignorePalmEevnts;
-(AXETrackingGestureEvent *)_previousGestureEvent;
-(void)set_previousGestureEvent:(AXETrackingGestureEvent *)arg1 ;
-(void)setIgnorePalmEevnts:(char)arg1 ;
@end

