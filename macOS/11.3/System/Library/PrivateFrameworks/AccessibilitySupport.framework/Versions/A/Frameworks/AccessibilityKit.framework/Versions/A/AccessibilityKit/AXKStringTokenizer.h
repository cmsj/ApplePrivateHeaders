/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:29 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AccessibilitySupport.framework/Versions/A/Frameworks/AccessibilityKit.framework/Versions/A/AccessibilityKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AccessibilityKit/AccessibilityKit-Structs.h>
@class NSLocale, NSString;

@interface AXKStringTokenizer : NSObject {

	CFStringTokenizerRef _tokenizer;
	char _shouldTrimWhitespaceAndNewLine;
	NSLocale* _locale;
	NSString* _currentToken;
	NSString* _currentTokenLanguageID;
	NSString* _inputString;
	long long _tokenizerUnit;
	NSRange _currentTokenRange;

}

@property (assign,nonatomic) NSRange currentTokenRange;                        //@synthesize currentTokenRange=_currentTokenRange - In the implementation block
@property (nonatomic,copy) NSString * currentToken;                            //@synthesize currentToken=_currentToken - In the implementation block
@property (nonatomic,copy) NSString * currentTokenLanguageID;                  //@synthesize currentTokenLanguageID=_currentTokenLanguageID - In the implementation block
@property (assign,nonatomic) char shouldTrimWhitespaceAndNewLine;              //@synthesize shouldTrimWhitespaceAndNewLine=_shouldTrimWhitespaceAndNewLine - In the implementation block
@property (nonatomic,readonly) NSLocale * locale;                              //@synthesize locale=_locale - In the implementation block
@property (nonatomic,readonly) char isCurrentTokenValid; 
@property (nonatomic,copy,readonly) NSString * inputString;                    //@synthesize inputString=_inputString - In the implementation block
@property (nonatomic,readonly) long long tokenizerUnit;                        //@synthesize tokenizerUnit=_tokenizerUnit - In the implementation block
+(id)wordBoundaryTokenizerWithString:(id)arg1 locale:(id)arg2 ;
+(id)paragraphTokenizerWithString:(id)arg1 locale:(id)arg2 ;
+(id)bestLanguageForString:(id)arg1 inRange:(NSRange)arg2 ;
+(id)wordTokenizerWithString:(id)arg1 locale:(id)arg2 ;
+(id)sentenceTokenizerWithString:(id)arg1 locale:(id)arg2 ;
+(id)lineBreakTokenizerWithString:(id)arg1 locale:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(NSLocale *)locale;
-(CFStringTokenizerRef)_tokenizer;
-(NSString *)currentToken;
-(NSString *)inputString;
-(void)setCurrentToken:(NSString *)arg1 ;
-(char)moveToNextToken;
-(NSRange)currentTokenRange;
-(char)moveToTokenAtIndex:(long long)arg1 ;
-(id)initWithString:(id)arg1 tokenizerUnit:(long long)arg2 locale:(id)arg3 ;
-(long long)tokenizerUnit;
-(char)shouldTrimWhitespaceAndNewLine;
-(void)setCurrentTokenRange:(NSRange)arg1 ;
-(void)setCurrentTokenLanguageID:(NSString *)arg1 ;
-(id)initWithString:(id)arg1 tokenizerUnit:(long long)arg2 ;
-(char)isCurrentTokenValid;
-(char)moveToPreviousToken;
-(void)setShouldTrimWhitespaceAndNewLine:(char)arg1 ;
-(NSString *)currentTokenLanguageID;
@end

