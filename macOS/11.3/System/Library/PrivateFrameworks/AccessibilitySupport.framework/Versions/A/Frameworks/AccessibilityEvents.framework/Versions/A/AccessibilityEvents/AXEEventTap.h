/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:29 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AccessibilitySupport.framework/Versions/A/Frameworks/AccessibilityEvents.framework/Versions/A/AccessibilityEvents
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol AXEEventTapDelegate;
#import <AccessibilityEvents/AccessibilityEvents-Structs.h>
@class NSString, NSLock, NSThread;

@interface AXEEventTap : NSObject {

	AB _isEnabled;
	CFMachPortRef __eventTap;
	CFRunLoopSourceRef __runLoopSource;
	char _isActiveEventTap;
	unsigned __location;
	unsigned __placement;
	unsigned __options;
	unsigned __reconnectCount;
	id<AXEEventTapDelegate> _delegate;
	unsigned long long _eventsOfInterest;
	NSString* __priority;
	NSLock* __eventTapThreadLock;
	NSThread* __eventTapThread;
	double __lastReconnectTimestamp;
	long long __eventTapID;

}

@property (setter=_setEnabled:) char isEnabled; 
@property (nonatomic,readonly) unsigned _location;                                                           //@synthesize _location=__location - In the implementation block
@property (nonatomic,copy,readonly) NSString * _priority;                                                    //@synthesize _priority=__priority - In the implementation block
@property (nonatomic,readonly) unsigned _placement;                                                          //@synthesize _placement=__placement - In the implementation block
@property (nonatomic,readonly) unsigned _options;                                                            //@synthesize _options=__options - In the implementation block
@property (nonatomic,readonly) NSLock * _eventTapThreadLock;                                                 //@synthesize _eventTapThreadLock=__eventTapThreadLock - In the implementation block
@property (retain) NSThread * _eventTapThread;                                                               //@synthesize _eventTapThread=__eventTapThread - In the implementation block
@property (assign,setter=_setLastReconnectTimestamp:,nonatomic) double _lastReconnectTimestamp;              //@synthesize _lastReconnectTimestamp=__lastReconnectTimestamp - In the implementation block
@property (assign,setter=_setReconnectCount:,nonatomic) unsigned _reconnectCount;                            //@synthesize _reconnectCount=__reconnectCount - In the implementation block
@property (nonatomic,readonly) long long _eventTapID;                                                        //@synthesize _eventTapID=__eventTapID - In the implementation block
@property (__weak,readonly) id<AXEEventTapDelegate> delegate;                                                //@synthesize delegate=_delegate - In the implementation block
@property (readonly) char isActiveEventTap;                                                                  //@synthesize isActiveEventTap=_isActiveEventTap - In the implementation block
@property (readonly) unsigned long long eventsOfInterest;                                                    //@synthesize eventsOfInterest=_eventsOfInterest - In the implementation block
+(char)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)_eventTapIDQueue;
+(id)_eventTapIDToEventTapInfoMap;
+(void)_runBlock:(/*^block*/id)arg1 ;
+(void)_setEventTap:(id)arg1 eventTapID:(long long)arg2 ;
+(id)_eventTapForEventTapID:(long long)arg1 ;
-(void)dealloc;
-(id<AXEEventTapDelegate>)delegate;
-(unsigned)_options;
-(char)isEnabled;
-(void)disable;
-(void)enable;
-(NSString *)_priority;
-(unsigned)_location;
-(void)_setEnabled:(char)arg1 ;
-(CFRunLoopSourceRef)_runLoopSource;
-(CFMachPortRef)_eventTap;
-(unsigned)_placement;
-(void)_performBlockOnMainThread:(/*^block*/id)arg1 ;
-(char)isActiveEventTap;
-(id)initWithTapLocation:(unsigned)arg1 priority:(CFStringRef)arg2 placement:(unsigned)arg3 options:(unsigned)arg4 eventsOfInterest:(unsigned long long)arg5 delegate:(id)arg6 ;
-(unsigned long long)eventsOfInterest;
-(void)_uninstallEventTapAnyThread;
-(void)_createEventTapThreadIfNeeded;
-(void)_enableOnEventTapThread;
-(void)_performOnEventTapThreadAndWait:(SEL)arg1 ;
-(void)_disableOnEventTapThread;
-(NSThread *)_eventTapThread;
-(NSLock *)_eventTapThreadLock;
-(void)set_eventTapThread:(NSThread *)arg1 ;
-(void)_installEventTapIfNeededOnEventTapThread;
-(void)_reconnectOnEventTapThread;
-(void)_performBlockOnEventTapThread:(/*^block*/id)arg1 ;
-(void)_continueReconnectOnMainThread;
-(unsigned)_reconnectCount;
-(void)_setReconnectCount:(unsigned)arg1 ;
-(double)_lastReconnectTimestamp;
-(void)_setLastReconnectTimestamp:(double)arg1 ;
-(void)_installEventTapIfNeededAnyThread;
-(void)_performBlockOnMainThreadAfterDelay:(double)arg1 block:(/*^block*/id)arg2 ;
-(long long)_eventTapID;
-(void)_setEventTap:(CFMachPortRef)arg1 ;
-(void)_setRunLoopSource:(CFRunLoopSourceRef)arg1 ;
-(void)_uninstallEventTapOnEventTapThread;
-(CGEventRef)_handleEventTapEvent:(CGEventRef)arg1 type:(unsigned)arg2 withProxy:(CGEventTapProxyRef)arg3 ;
@end

