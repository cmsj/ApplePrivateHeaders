/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:17 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, NSUUID, NSArray;

@interface ADMSystem : NSObject {

	char _isPreInstall;
	NSString* _volume;
	NSString* _mountPath;
	NSUUID* _volumeUUID;
	NSString* _clonedUserDataPath;

}

@property (copy,readonly) NSString * volume;                      //@synthesize volume=_volume - In the implementation block
@property (copy,readonly) NSString * _mountPath;                  //@synthesize mountPath=_mountPath - In the implementation block
@property (retain,readonly) NSUUID * volumeUUID;                  //@synthesize volumeUUID=_volumeUUID - In the implementation block
@property (readonly) char _isPreInstall;                          //@synthesize isPreInstall=_isPreInstall - In the implementation block
@property (readonly) NSString * _clonedUserDataPath;              //@synthesize clonedUserDataPath=_clonedUserDataPath - In the implementation block
@property (readonly) char hasDiskUser; 
@property (readonly) char hasInstallUser; 
@property (readonly) char hasSecureTokens; 
@property (readonly) char hasOwners; 
@property (retain,readonly) NSArray * localUsers; 
+(id)_volumeForSystemMountedAtPath:(id)arg1 error:(id*)arg2 ;
+(id)_dataVolumeForSystemMountedAtPath:(id)arg1 error:(id*)arg2 ;
+(id)_mountPathForVolume:(id)arg1 error:(id*)arg2 ;
+(id)systemWithDataTargetMountedAtPath:(id)arg1 pathForClonedUserData:(id)arg2 error:(id*)arg3 ;
+(id)currentSystem;
+(id)systemMountedAtPath:(id)arg1 error:(id*)arg2 ;
-(char)hasOwners;
-(id)initWithDataVolume:(id)arg1 mountPath:(id)arg2 isPreInstall:(char)arg3 pathForClonedUserData:(id)arg4 ;
-(char)_isPreInstall;
-(id)_nodeWithError:(id*)arg1 ;
-(char)hasSecureTokens;
-(char)_validateOwnershipTransferWithOwner:(id)arg1 password:(id)arg2 currentSystemAdminCredential:(id)arg3 existingSecureTokenCredential:(id)arg4 error:(id*)arg5 ;
-(NSString *)_clonedUserDataPath;
-(char)_transferOwnershipWithOwner:(id)arg1 uuid:(id)arg2 password:(id)arg3 currentSystemAdminCredential:(id)arg4 existingSecureTokenCredential:(id)arg5 error:(id*)arg6 ;
-(char)hasDiskUser;
-(id)localUserWithName:(id)arg1 error:(id*)arg2 ;
-(char)primeOwnershipAndCloneOwner:(id)arg1 currentSystemAdminCredential:(id)arg2 existingSecureTokenCredential:(id)arg3 error:(id*)arg4 ;
-(char)primeOwnershipWithoutCloningOwner:(id)arg1 currentSystemAdminCredential:(id)arg2 existingSecureTokenCredential:(id)arg3 error:(id*)arg4 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(id)description;
-(id)redactedDescription;
-(NSString *)volume;
-(id)node;
-(NSUUID *)volumeUUID;
-(NSArray *)localUsers;
-(char)hasInstallUser;
-(NSString *)_mountPath;
-(id)localUserWithUUID:(id)arg1 error:(id*)arg2 ;
-(char)provisionSecureTokenUsers:(id)arg1 andGrantOwnershipUsingOwner:(id)arg2 currentSystemAdminCredential:(id)arg3 existingSecureTokenCredential:(id)arg4 error:(id*)arg5 ;
@end

