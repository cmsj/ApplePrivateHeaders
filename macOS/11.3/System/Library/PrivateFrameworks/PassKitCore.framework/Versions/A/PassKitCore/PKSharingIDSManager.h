/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:40 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/Versions/A/PassKitCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PassKitCore/PassKitCore-Structs.h>
#import <libobjc.A.dylib/IDSServiceDelegate.h>

@protocol OS_dispatch_queue, PKSharingIDSManagerDataSource;
@class NSHashTable, NSObject, NSMutableDictionary, IDSService, NSArray, NSString;

@interface PKSharingIDSManager : NSObject <IDSServiceDelegate> {

	NSHashTable* _delegates;
	os_unfair_lock_s _delegatesLock;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSObject*<OS_dispatch_queue> _internalQueue;
	NSMutableDictionary* _completionHandlers;
	NSMutableDictionary* _sharingDestinations;
	IDSService* _service;
	id<PKSharingIDSManagerDataSource> _dataSource;

}

@property (nonatomic,readonly) NSArray * delegates; 
@property (assign,nonatomic,__weak) id<PKSharingIDSManagerDataSource> dataSource;              //@synthesize dataSource=_dataSource - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id)init;
-(id<PKSharingIDSManagerDataSource>)dataSource;
-(void)setDataSource:(id<PKSharingIDSManagerDataSource>)arg1 ;
-(void)removeDelegate:(id)arg1 ;
-(void)addDelegate:(id)arg1 ;
-(NSArray *)delegates;
-(void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(char)arg4 error:(id)arg5 ;
-(void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4 ;
-(id)initWithTargetQueue:(id)arg1 ;
-(id)initWithIDSService:(id)arg1 ;
-(void)_registerListeners;
-(id)_handlerConfigurationForInvitation:(id)arg1 forHandle:(id)arg2 ;
-(char)_canPerformIDSMessageForSharingGroup:(unsigned long long)arg1 handleUserDetails:(id)arg2 currentUserDetails:(id)arg3 error:(id*)arg4 ;
-(id)_sharingDestinationWithHandle:(id)arg1 ;
-(void)_sendCloudStoreInvitationRequest:(id)arg1 handleUserDetails:(id)arg2 currentUserDetails:(id)arg3 type:(unsigned short)arg4 completion:(/*^block*/id)arg5 ;
-(void)_sendMessageWithProtobuf:(id)arg1 destination:(id)arg2 handleUserDetails:(id)arg3 currentUserDetails:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)_sanitizedHandleWithFromID:(id)arg1 ;
-(id)_idsIDForHandle:(id)arg1 ;
-(void)_cloudStoreZoneShareInvitationRequestReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)_cloudStoreZoneShareInvitationRequestRemoved:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)_cloudStoreZoneShareInvitationRequestInvitationData:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)_remoteRegistrationRequestReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)_deviceSharingCapabiltiesRequestReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)_cloudStoreZoneShareInvitationResponseReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)_remoteRegistrationRequestResultReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)_deviceSharingCapabilitiesRequestResultReceived:(id)arg1 service:(id)arg2 account:(id)arg3 fromID:(id)arg4 context:(id)arg5 ;
-(void)sendCloudStoreZoneInvitation:(id)arg1 forHandle:(id)arg2 invitationError:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)removeCloudStoreZoneInvitation:(id)arg1 forHandle:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)sendCloudStoreZoneInvitationResponse:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)requestCloudStoreZoneInvitationData:(id)arg1 forHandle:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)sendRemoteRegistrationRequest:(id)arg1 forHandle:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)sendRemoteRegistrationRequestResult:(unsigned long long)arg1 forHandle:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)sendDeviceSharingCapabilitiesRequestForHandle:(id)arg1 completion:(/*^block*/id)arg2 ;
@end

