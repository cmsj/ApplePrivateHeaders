/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:12 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CalendarUIKit.framework/Versions/A/CalendarUIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/EKChangeListenerDelegate.h>

@protocol CUIKDecisionDelegate, CUIKUndoDelegate, CUIKCommitDelegate, CUIKEditingContextObserver;
@class CUIKEditingContextGroup, CUIKEditingManager, NSArray, NSString;

@interface CUIKEditingContext : NSObject <EKChangeListenerDelegate> {

	char _isActive;
	char _isOpen;
	CUIKEditingContextGroup* _group;
	CUIKEditingManager* _editingManager;
	unsigned long long _interfaceType;
	id<CUIKDecisionDelegate> _decisionDelegate;
	id<CUIKUndoDelegate> _undoDelegate;
	id<CUIKCommitDelegate> _commitDelegate;
	id<CUIKEditingContextObserver> _observer;
	NSArray* _objectsBeingEdited;
	NSArray* _pendingObserverUpdates;
	NSArray* _pendingGroupUpdates;

}

@property (assign) unsigned long long interfaceType;                       //@synthesize interfaceType=_interfaceType - In the implementation block
@property (retain) NSArray * objectsBeingEdited;                           //@synthesize objectsBeingEdited=_objectsBeingEdited - In the implementation block
@property (__weak) id<CUIKEditingContextObserver> observer;                //@synthesize observer=_observer - In the implementation block
@property (assign) char isActive;                                          //@synthesize isActive=_isActive - In the implementation block
@property (assign) char isOpen;                                            //@synthesize isOpen=_isOpen - In the implementation block
@property (retain) NSArray * pendingObserverUpdates;                       //@synthesize pendingObserverUpdates=_pendingObserverUpdates - In the implementation block
@property (retain) NSArray * pendingGroupUpdates;                          //@synthesize pendingGroupUpdates=_pendingGroupUpdates - In the implementation block
@property (__weak) CUIKEditingContextGroup * group;                        //@synthesize group=_group - In the implementation block
@property (__weak) CUIKEditingManager * editingManager;                    //@synthesize editingManager=_editingManager - In the implementation block
@property (__weak) id<CUIKDecisionDelegate> decisionDelegate;              //@synthesize decisionDelegate=_decisionDelegate - In the implementation block
@property (__weak) id<CUIKUndoDelegate> undoDelegate;                      //@synthesize undoDelegate=_undoDelegate - In the implementation block
@property (__weak) id<CUIKCommitDelegate> commitDelegate;                  //@synthesize commitDelegate=_commitDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setGroup:(CUIKEditingContextGroup *)arg1 ;
-(char)isActive;
-(CUIKEditingContextGroup *)group;
-(void)setObserver:(id<CUIKEditingContextObserver>)arg1 ;
-(char)isOpen;
-(void)setIsActive:(char)arg1 ;
-(id<CUIKEditingContextObserver>)observer;
-(id)_eventStore;
-(unsigned long long)interfaceType;
-(void)setInterfaceType:(unsigned long long)arg1 ;
-(void)revert;
-(char)hasUpdatePriority;
-(id)trackedObjects;
-(void)trackedObjectsDidRevert:(id)arg1 ;
-(void)trackedObjectsDidUpdate:(id)arg1 ;
-(void)relatedObjectsDidUpdate:(id)arg1 ;
-(void)notifyObservers;
-(void)setIsOpen:(char)arg1 ;
-(char)saveCompleteChange;
-(char)savePartialChange;
-(char)saveCompleteChangeWithImpliedCommitDecision:(id*)arg1 ;
-(id<CUIKDecisionDelegate>)decisionDelegate;
-(void)setEditingManager:(CUIKEditingManager *)arg1 ;
-(CUIKEditingManager *)editingManager;
-(void)setDecisionDelegate:(id<CUIKDecisionDelegate>)arg1 ;
-(id<CUIKCommitDelegate>)commitDelegate;
-(void)setCommitDelegate:(id<CUIKCommitDelegate>)arg1 ;
-(id<CUIKUndoDelegate>)undoDelegate;
-(void)setUndoDelegate:(id<CUIKUndoDelegate>)arg1 ;
-(char)saveCompleteChange:(id*)arg1 ;
-(void)createAutoBugCapture;
-(char)deleteAllObjects;
-(long long)_currentSpan;
-(void)setObjectsBeingEdited:(NSArray *)arg1 ;
-(NSArray *)objectsBeingEdited;
-(void)_markAsActive;
-(char)performUndoableOperation:(id)arg1 ;
-(char)_requestSaveAndSpanDecisionIfNeededForAction:(unsigned long long)arg1 ;
-(char)_requestEarlyCommitDecisionAtSaveTimeForAction:(unsigned long long)arg1 ;
-(unsigned long long)_earlyCommitDecision;
-(void)_setAllObjectsToDontNotify;
-(void)_addAdditionalObjectsToGroupForDelete;
-(char)_deleteIsUndoable;
-(void)_doManualDelete;
-(char)_allObjectsAreCalendars;
-(void)_specifyEarlyCommitDecision:(unsigned long long)arg1 ;
-(char)_hasChangesToSave;
-(char)_hasChangesRequiringSpanAllAndSpanIsThis;
-(void)_unspecifySpanDecision;
-(char)_shouldSilentlyTransitionToSpanAllAfterSave;
-(char)_saveActionIsDecline;
-(void)_cancelCurrentSave;
-(void)_specifySpanDecision:(unsigned long long)arg1 ;
-(id)_diffSummarySinceLastSave;
-(char)_requestSaveDecisionIfNeededForAction:(unsigned long long)arg1 diffSummary:(id)arg2 ;
-(char)_requestSpanDecisionIfNeededForAction:(unsigned long long)arg1 diffSummary:(id)arg2 ;
-(char)_allObjectsAreItems;
-(char)_spanDecisionSpecified;
-(char)_allObjectsAreEvents;
-(void)_clearLiveChanges;
-(void)postLiveEditNotificationForEditedObjects;
-(unsigned long long)_requestCommitDecisionIfNeededForAction:(unsigned long long)arg1 ;
-(unsigned long long)_currentSpanDecision;
-(char)_earlyCommitDecisionSpecified;
-(id)changeUserInfoForObjects:(id)arg1 ;
-(void)_revert:(char)arg1 ;
-(void)_unspecifyEarlyCommitDecision;
-(unsigned long long)_actionToCommit;
-(void)_revert;
-(void)_markAsInactive;
-(void)setPendingObserverUpdates:(NSArray *)arg1 ;
-(void)setPendingGroupUpdates:(NSArray *)arg1 ;
-(NSArray *)pendingObserverUpdates;
-(NSArray *)pendingGroupUpdates;
-(id)initWithObjects:(id)arg1 interfaceType:(unsigned long long)arg2 observer:(id)arg3 ;
-(char)addAllObjects;
-(void)_markAsOpen;
-(void)_markAsClosed;
-(char)_prepareForCommitWithDecision:(unsigned long long)arg1 shouldClose:(char*)arg2 ;
-(char)shouldResetUndoStack;
@end

