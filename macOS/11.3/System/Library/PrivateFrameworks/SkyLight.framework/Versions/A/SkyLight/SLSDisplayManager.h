/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:02 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_semaphore;
#import <SkyLight/SkyLight-Structs.h>
@class SLSGUIClient, NSObject;

@interface SLSDisplayManager : NSObject {

	char _connected;
	char _enabled;
	char _runningInServer;
	unsigned char _lastPowerStateNotification;
	SLSGUIClient* _client;
	NSObject*<OS_dispatch_semaphore> _semaphore;
	vector<std::__1::unique_ptr<SLSDisplayManagerRegistrationID, std::__1::default_delete<SLSDisplayManagerRegistrationID>>, std::__1::allocator<std::__1::unique_ptr<SLSDisplayManagerRegistrationID, std::__1::default_delete<SLSDisplayManagerRegistrationID>>>>* _registeredNotifiers;

}

@property (assign) char connected;                                                                                          //@synthesize connected=_connected - In the implementation block
@property (nonatomic,retain) SLSGUIClient * client;                                                                         //@synthesize client=_client - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> semaphore;                                                              //@synthesize semaphore=_semaphore - In the implementation block
@property (assign) char enabled;                                                                                            //@synthesize enabled=_enabled - In the implementation block
@property (assign,nonatomic) vector<std::__1::unique_ptr<SLSDisplayManagerRegistrationID* registeredNotifiers;              //@synthesize registeredNotifiers=_registeredNotifiers - In the implementation block
@property (assign) char runningInServer;                                                                                    //@synthesize runningInServer=_runningInServer - In the implementation block
@property (assign,nonatomic) unsigned char lastPowerStateNotification;                                                      //@synthesize lastPowerStateNotification=_lastPowerStateNotification - In the implementation block
+(void)broadcastPowerStateChangeEvent:(unsigned char)arg1 ;
-(void)dealloc;
-(id)init;
-(char)enabled;
-(void)setEnabled:(char)arg1 ;
-(SLSGUIClient *)client;
-(void)setClient:(SLSGUIClient *)arg1 ;
-(char)connected;
-(void)setConnected:(char)arg1 ;
-(NSObject*<OS_dispatch_semaphore>)semaphore;
-(vector<std::__1::unique_ptr<SLSDisplayManagerRegistrationID*)registeredNotifiers;
-(char)runningInServer;
-(unsigned char)lastPowerStateNotification;
-(id)initWith:(id*)arg1 ;
-(char)idleDisplays:(id*)arg1 ;
-(char)registerPowerStateNotification:(id*)arg1 registrationID:(id)arg2 sendInitialState:(BOOL)arg3 queue:(id)arg4 refcon:(void*)arg5 notificationOption:(unsigned)arg6 notificationBlock:(/*^block*/id)arg7 ;
-(char)unregisterPowerStateNotification:(id*)arg1 registrationID:(id)arg2 notificationOption:(unsigned)arg3 ;
-(void)deliverPowerStateNotification:(unsigned char)arg1 ;
-(void)dispatchPowerStateNotification:(unsigned char)arg1 ;
-(void)setSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(void)setRegisteredNotifiers:(vector<std::__1::unique_ptr<SLSDisplayManagerRegistrationID*)arg1 ;
-(void)setRunningInServer:(char)arg1 ;
-(void)setLastPowerStateNotification:(unsigned char)arg1 ;
@end

