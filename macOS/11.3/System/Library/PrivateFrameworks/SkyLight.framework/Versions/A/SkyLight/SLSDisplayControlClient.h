/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:02 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/SLSDisplayControlClientProtocol.h>

@protocol OS_dispatch_semaphore;
@class NSObject, NSString;

@interface SLSDisplayControlClient : NSObject <SLSDisplayControlClientProtocol> {

	char _configured;
	char _enabled;
	/*^block*/id _notification;
	NSObject*<OS_dispatch_semaphore> _semaphore;

}

@property (assign) char enabled;                                            //@synthesize enabled=_enabled - In the implementation block
@property (assign) char configured;                                         //@synthesize configured=_configured - In the implementation block
@property (nonatomic,copy) id notification;                                 //@synthesize notification=_notification - In the implementation block
@property (retain) NSObject*<OS_dispatch_semaphore> semaphore;              //@synthesize semaphore=_semaphore - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(char)enabled;
-(void)setEnabled:(char)arg1 ;
-(void)createNSError:(id*)arg1 withCGError:(long long)arg2 ;
-(char)configured;
-(id)encodeCommand:(unsigned long long)arg1 withUUID:(unsigned long long*)arg2 payloadType:(unsigned long long)arg3 payload:(id)arg4 ;
-(id)registerDaemonClient:(id)arg1 withAutoreconnect:(char)arg2 error:(id*)arg3 notifyQueue:(id)arg4 notificationType:(unsigned long long)arg5 notificationBlock:(/*^block*/id)arg6 ;
-(NSObject*<OS_dispatch_semaphore>)semaphore;
-(void)setSemaphore:(NSObject*<OS_dispatch_semaphore>)arg1 ;
-(id)notification;
-(id)registerGUIClient:(id)arg1 connectionPort:(unsigned)arg2 error:(id*)arg3 notifyQueue:(id)arg4 notificationType:(unsigned long long)arg5 notificationBlock:(/*^block*/id)arg6 ;
-(void)terminateConnection;
-(void)decodeNotification:(id)arg1 notifyType:(unsigned long long*)arg2 uuid:(unsigned long long*)arg3 payloadType:(unsigned long long*)arg4 payload:(id*)arg5 ;
-(unsigned long long)payloadTypeToCFType:(unsigned long long)arg1 ;
-(void)addNotificationType:(unsigned long long)arg1 to:(id)arg2 ;
-(void)addUUID:(unsigned long long)arg1 to:(id)arg2 ;
-(void)addPayload:(id)arg1 ofType:(unsigned long long)arg2 to:(id)arg3 ;
-(id)xpcEventToNotification:(id)arg1 ;
-(void)registerClient:(id*)arg1 port:(unsigned)arg2 notifyQueue:(id)arg3 notificationType:(unsigned long long)arg4 notificationBlock:(/*^block*/id)arg5 ;
-(char)isTypeOfClass:(id)arg1 aClass:(Class)arg2 error:(int*)arg3 ;
-(const char*)cfStringToCStringPtr:(id)arg1 ;
-(void)semaphoreSignal;
-(int)semaphoreWait:(unsigned char)arg1 ;
-(void)setConfigured:(char)arg1 ;
-(void)setNotification:(id)arg1 ;
@end

