/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SystemMigration.framework/Versions/A/SystemMigration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SystemMigration/SMSystem.h>
#import <libobjc.A.dylib/SMSystemClientProtocol.h>

@protocol OS_dispatch_queue;
@class NSArray, NSString, NSURL, NSNumber, NSImage, SMViewController, NSMutableSet, NSObject;

@interface SMSystem_Client : SMSystem <SMSystemClientProtocol> {

	char selected;
	char selectableSystem;
	char enabled;
	char availableAction;
	char ineligible;
	char isNetworkSystem;
	char isRemoteSystem;
	char sortsToTop;
	char valid;
	NSArray* childSystems;
	unsigned long long state;
	NSString* stateErrorReasonKey;
	NSString* ineligibleReasonKey;
	NSString* systemName;
	NSString* volumeName;
	NSURL* path;
	unsigned long long systemType;
	NSString* productVersion;
	NSString* systemVersion;
	NSURL* remoteDiskID;
	NSString* accessibilityDescription;
	unsigned long long freeSpace;
	NSNumber* passcode;
	id longTermIdentifier;
	NSMutableSet* childReferences;
	NSArray* allGroupsCache;
	id primaryIdentifier;
	NSString* modelID;
	NSString* displayName;
	NSString* availableActionLabel;
	NSImage* displayIcon;
	NSImage* warningBadge;
	NSImage* idBadge;
	NSString* displayState;
	unsigned long long uiRank;
	NSString* volumeIconAccesibilityLabel;
	SMViewController* accessoryMountingView;
	NSArray* availableBackups;
	NSArray* _allUsersCache;
	NSObject*<OS_dispatch_queue> _daemonPropertyQueue;

}

@property (retain) NSMutableSet * childReferences; 
@property (retain) NSArray * allGroupsCache; 
@property (retain) id primaryIdentifier; 
@property (retain) NSArray * allUsersCache;                                       //@synthesize allUsersCache=_allUsersCache - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> daemonPropertyQueue;              //@synthesize daemonPropertyQueue=_daemonPropertyQueue - In the implementation block
@property (readonly) char availableInSystemLists; 
@property (assign) char selected; 
@property (retain) NSArray * childSystems; 
@property (assign) unsigned long long state; 
@property (retain) NSString * stateErrorReasonKey; 
@property (assign) char selectableSystem; 
@property (assign) char enabled; 
@property (assign) char availableAction; 
@property (assign) char ineligible; 
@property (retain) NSString * ineligibleReasonKey; 
@property (retain) NSString * systemName; 
@property (retain) NSString * volumeName; 
@property (retain) NSString * modelID; 
@property (retain) NSURL * path; 
@property (assign) unsigned long long systemType; 
@property (retain) NSString * productVersion; 
@property (retain) NSString * systemVersion; 
@property (retain) NSURL * remoteDiskID; 
@property (retain) NSString * accessibilityDescription; 
@property (assign) char isNetworkSystem; 
@property (assign) char isRemoteSystem; 
@property (assign) unsigned long long freeSpace; 
@property (readonly) NSNumber * passcode; 
@property (retain) id longTermIdentifier; 
@property (retain) NSArray * availableBackups; 
@property (readonly) unsigned long long migratableItemsSupported; 
@property (readonly) NSString * displayName; 
@property (readonly) NSString * availableActionLabel; 
@property (retain) NSImage * displayIcon; 
@property (retain) NSImage * warningBadge; 
@property (retain) NSImage * idBadge; 
@property (retain) NSString * displayState; 
@property (assign) char sortsToTop; 
@property (assign) unsigned long long uiRank; 
@property (retain) NSString * volumeIconAccesibilityLabel; 
@property (__weak,readonly) NSArray * allUsers; 
@property (__weak,readonly) NSArray * allGroups; 
@property (readonly) unsigned long long migrationServerType; 
@property (__weak,readonly) NSString * migrationServerVersion; 
@property (assign) char valid; 
@property (readonly) SMViewController * accessoryMountingView; 
+(id)keyPathsForValuesAffectingDisplayName;
+(id)currentSystem;
+(Class)guiClassFromSystemClass:(Class)arg1 ;
+(id)guiMonitorKeys;
+(id)guiInterestedKeys;
+(id)guiInterestedOneTimeKeys;
+(id)proxyFromDict:(id)arg1 ;
-(id)description;
-(id)init;
-(char)valid;
-(unsigned long long)state;
-(char)enabled;
-(void)setEnabled:(char)arg1 ;
-(NSURL *)path;
-(id)getGroup:(id)arg1 ;
-(NSString *)displayName;
-(void)setPath:(NSURL *)arg1 ;
-(void)setState:(unsigned long long)arg1 ;
-(NSString *)systemVersion;
-(NSString *)accessibilityDescription;
-(void)setAccessibilityDescription:(NSString *)arg1 ;
-(char)selected;
-(void)setSelected:(char)arg1 ;
-(NSString *)productVersion;
-(NSArray *)allUsers;
-(id)primaryIdentifier;
-(void)setProductVersion:(NSString *)arg1 ;
-(void)setValid:(char)arg1 ;
-(NSString *)systemName;
-(unsigned long long)systemType;
-(void)setSystemName:(NSString *)arg1 ;
-(void)setPrimaryIdentifier:(id)arg1 ;
-(NSArray *)allGroups;
-(NSString *)modelID;
-(void)mount;
-(void)unmount;
-(NSString *)volumeName;
-(unsigned long long)freeSpace;
-(void)setModelID:(NSString *)arg1 ;
-(NSNumber *)passcode;
-(NSImage *)displayIcon;
-(void)setDisplayIcon:(NSImage *)arg1 ;
-(NSString *)displayState;
-(void)setDisplayState:(NSString *)arg1 ;
-(void)setSystemVersion:(NSString *)arg1 ;
-(void)clearFields;
-(NSArray *)childSystems;
-(void)mountWithCredentials:(id)arg1 ;
-(char)isNetworkSystem;
-(long long)defaultUIRank;
-(NSString *)volumeIconAccesibilityLabel;
-(NSString *)availableActionLabel;
-(void)pressedActionButton:(id)arg1 ;
-(id)getUserWithID:(unsigned)arg1 ;
-(char)isRemoteSystem;
-(char)ineligible;
-(char)availableAction;
-(SMViewController *)accessoryMountingView;
-(void)setIneligible:(char)arg1 ;
-(void)updateFromDictRepresentation:(id)arg1 duringInit:(char)arg2 ;
-(id)initWithDictRepresentation:(id)arg1 ;
-(NSString *)migrationServerVersion;
-(unsigned long long)migrationServerType;
-(id)getUserByLongName:(id)arg1 ;
-(id)getUser:(id)arg1 ;
-(id)getUserWithUUID:(id)arg1 ;
-(id)getGroupWithID:(unsigned)arg1 ;
-(id)getGroupWithGeneratedUID:(id)arg1 ;
-(void)updateFromDictRepresentation:(id)arg1 ;
-(char)selectableSystem;
-(NSImage *)warningBadge;
-(id)longTermIdentifier;
-(NSURL *)remoteDiskID;
-(void)setRemoteDiskID:(NSURL *)arg1 ;
-(NSString *)ineligibleReasonKey;
-(void)setIneligibleReasonKey:(NSString *)arg1 ;
-(void)setVolumeName:(NSString *)arg1 ;
-(id)userFromXpcDictionary:(id)arg1 ;
-(void)setDaemonPropertyQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(char)availableInSystemLists;
-(NSObject*<OS_dispatch_queue>)daemonPropertyQueue;
-(NSArray *)availableBackups;
-(void)setAvailableBackups:(NSArray *)arg1 ;
-(void)setChildSystems:(NSArray *)arg1 ;
-(void)setChildReferences:(NSMutableSet *)arg1 ;
-(void)setUiRank:(unsigned long long)arg1 ;
-(unsigned long long)uiRank;
-(NSMutableSet *)childReferences;
-(void)updateConcreteChildren:(id)arg1 ;
-(void)setAllUsersCache:(NSArray *)arg1 ;
-(NSArray *)allUsersCache;
-(NSArray *)allGroupsCache;
-(void)setAllGroupsCache:(NSArray *)arg1 ;
-(NSString *)stateErrorReasonKey;
-(void)setStateErrorReasonKey:(NSString *)arg1 ;
-(void)setSelectableSystem:(char)arg1 ;
-(void)setAvailableAction:(char)arg1 ;
-(void)setSystemType:(unsigned long long)arg1 ;
-(void)setIsNetworkSystem:(char)arg1 ;
-(void)setIsRemoteSystem:(char)arg1 ;
-(void)setFreeSpace:(unsigned long long)arg1 ;
-(void)setLongTermIdentifier:(id)arg1 ;
-(void)setWarningBadge:(NSImage *)arg1 ;
-(NSImage *)idBadge;
-(void)setIdBadge:(NSImage *)arg1 ;
-(char)sortsToTop;
-(void)setSortsToTop:(char)arg1 ;
-(void)setVolumeIconAccesibilityLabel:(NSString *)arg1 ;
-(void)invalidateUserCache;
-(Class)appropriateClientClass;
-(Class)appropriateDaemonClass;
@end

