/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SystemMigration.framework/Versions/A/SystemMigration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SystemMigration/SMSystem_Daemon.h>

@protocol OS_dispatch_queue;
@class NSString, NSMutableSet, NSObject;

@interface SMSystem_Daemon_RemoteTMDiskShare : SMSystem_Daemon {

	NSString* shareName;
	NSString* humanName;
	long long sharedSystems;
	long long dmgsProcessed;
	unsigned long long flags;
	NSMutableSet* timeMachineSystems;
	NSObject*<OS_dispatch_queue> timeMachineSystemsQueue;
	NSString* _mountPoint;

}

@property (retain) NSString * mountPoint;                                             //@synthesize mountPoint=_mountPoint - In the implementation block
@property (retain) NSString * humanName; 
@property (assign) long long sharedSystems; 
@property (assign) long long dmgsProcessed; 
@property (assign) unsigned long long flags; 
@property (retain) NSMutableSet * timeMachineSystems; 
@property (retain) NSObject*<OS_dispatch_queue> timeMachineSystemsQueue; 
@property (retain) NSString * shareName; 
@property (readonly) char usesGuestAccess; 
@property (readonly) char usesSinglePassword; 
@property (readonly) char requiresUsername; 
@property (readonly) char mountedFromServer; 
@property (readonly) char mountWithSMB; 
+(id)keyPathsForValuesAffectingDisplayName;
+(id)keyPathsForValuesAffectingVolumeName;
+(id)keyPathsForValuesAffectingDisplayState;
+(unsigned long long)requiredScannerState;
+(id)keyPathsForValuesAffectingAvailableAction;
+(id)keyPathsForValuesAffectingAvailableActionLabel;
-(unsigned long long)flags;
-(id)description;
-(void)invalidate;
-(id)initWithURL:(id)arg1 ;
-(id)displayName;
-(id)UUID;
-(id)systemVersion;
-(void)setFlags:(unsigned long long)arg1 ;
-(id)accessibilityDescription;
-(id)systemName;
-(char)isInternal;
-(unsigned long long)systemType;
-(NSString *)mountPoint;
-(char)isMounted;
-(void)mount;
-(void)unmount;
-(id)volumeName;
-(char)requiresUsername;
-(char)mount:(char)arg1 ;
-(id)childSystems;
-(NSString *)shareName;
-(long long)sharedSystems;
-(char)isMounting;
-(id)volumeIcon;
-(void)setShareName:(NSString *)arg1 ;
-(NSString *)humanName;
-(void)setHumanName:(NSString *)arg1 ;
-(char)availableAction;
-(id)modelIcon;
-(char)selectableSystem;
-(char)isMountableByUser;
-(void)setMountPoint:(NSString *)arg1 ;
-(void)unRegisterTimeMachineSystem:(id)arg1 ;
-(char)usesSinglePassword;
-(char)mountWithSMB;
-(void)searchForBackupsAtMountpoint:(id)arg1 ;
-(char)mountNetAuth:(char)arg1 ;
-(char)usesGuestAccess;
-(id)initWithURL:(id)arg1 humanName:(id)arg2 flags:(unsigned long long)arg3 ;
-(void)registerTimeMachineSystem:(id)arg1 ;
-(char)mountedFromServer;
-(void)setSharedSystems:(long long)arg1 ;
-(long long)dmgsProcessed;
-(void)setDmgsProcessed:(long long)arg1 ;
-(NSMutableSet *)timeMachineSystems;
-(void)setTimeMachineSystems:(NSMutableSet *)arg1 ;
-(NSObject*<OS_dispatch_queue>)timeMachineSystemsQueue;
-(void)setTimeMachineSystemsQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

