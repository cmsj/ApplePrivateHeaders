/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SystemMigration.framework/Versions/A/SystemMigration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SystemMigration/SMSystem.h>

@protocol SMNRemoteProxy, SMSystem_FileManagerProtocol;
@class NSString, NSArray, NSImage, NSURL, SMCollectIncompatibleApps, NSObject, SMPathsUserHomeSizer, SMDBAccess, SMODDBAccess, NSDictionary;

@interface SMSystem_Daemon : SMSystem {

	char selected;
	char forceNonDVEnumeration;
	char _ineligible;
	char _systemPrepared;
	NSString* systemName;
	NSArray* users;
	NSArray* groups;
	NSString* systemVersion;
	NSString* modelID;
	NSString* modelUTI;
	NSString* productVersion;
	NSString* buildVersion;
	unsigned long long state;
	NSString* daDiskID;
	NSImage* volumeIcon;
	NSURL* remoteDiskID;
	SMCollectIncompatibleApps* incompatibleAppsListedPaths;
	unsigned long long _filesystemType;
	NSString* _ineligibleReasonKey;
	NSString* _volumeName;
	id<SMNRemoteProxy> _remoteProxy;
	NSObject*<SMSystem_FileManagerProtocol> _fileSystem;
	double _recordedTransferRate;
	SMPathsUserHomeSizer* _userHomeSizer;
	SMDBAccess* _dsdb;
	SMODDBAccess* _oddb;

}

@property (retain) NSArray * users; 
@property (retain) NSArray * groups; 
@property (retain) SMCollectIncompatibleApps * incompatibleAppsListedPaths; 
@property (retain) SMPathsUserHomeSizer * userHomeSizer;                                 //@synthesize userHomeSizer=_userHomeSizer - In the implementation block
@property (readonly) NSString * systemVersion; 
@property (retain) NSString * modelID; 
@property (retain) NSString * modelUTI; 
@property (retain) NSString * volumeName;                                                //@synthesize volumeName=_volumeName - In the implementation block
@property (retain) SMDBAccess * dsdb;                                                    //@synthesize dsdb=_dsdb - In the implementation block
@property (retain) SMODDBAccess * oddb;                                                  //@synthesize oddb=_oddb - In the implementation block
@property (assign) double recordedTransferRate;                                          //@synthesize recordedTransferRate=_recordedTransferRate - In the implementation block
@property (assign) char forceNonDVEnumeration; 
@property (readonly) NSString * systemName; 
@property (readonly) char selectableSystem; 
@property (assign) char selected; 
@property (readonly) char enabled; 
@property (getter=isEncrypted,readonly) char encrypted; 
@property (getter=isDefaultEffaceable,readonly) char defaultEffaceable; 
@property (getter=isFilevault,readonly) char filevault; 
@property (getter=isCaseSensitive,readonly) char caseSensitive; 
@property (readonly) unsigned long long filesystemType;                                  //@synthesize filesystemType=_filesystemType - In the implementation block
@property (assign) char ineligible;                                                      //@synthesize ineligible=_ineligible - In the implementation block
@property (retain) NSString * ineligibleReasonKey;                                       //@synthesize ineligibleReasonKey=_ineligibleReasonKey - In the implementation block
@property (retain) NSURL * remoteDiskID; 
@property (copy) NSString * daDiskID; 
@property (readonly) NSArray * childSystems; 
@property (readonly) id<SMNRemoteProxy> remoteProxy;                                     //@synthesize remoteProxy=_remoteProxy - In the implementation block
@property (retain) NSObject*<SMSystem_FileManagerProtocol> fileSystem;                   //@synthesize fileSystem=_fileSystem - In the implementation block
@property (readonly) double estimatedTransferRate; 
@property (readonly) char enumeratesDirectlyFromDatavolume; 
@property (readonly) NSImage * displayIcon; 
@property (readonly) NSImage * volumeIcon; 
@property (readonly) NSImage * modelIcon; 
@property (readonly) NSImage * warningBadge; 
@property (readonly) NSString * productVersion; 
@property (readonly) NSString * buildVersion; 
@property (readonly) NSDictionary * longTermIdentifier; 
@property (assign) char systemPrepared;                                                  //@synthesize systemPrepared=_systemPrepared - In the implementation block
+(id)currentSystem;
+(unsigned long long)requiredScannerState;
+(id)systemWithPath:(id)arg1 ;
+(Class)daemonClassFromSystemClass:(Class)arg1 ;
+(char)isSystemClassResumable:(Class)arg1 ;
+(id)archivedSystemWithPath:(id)arg1 onVolume:(id)arg2 ;
+(id)proxyFromDict:(id)arg1 ;
+(id)keyPathsForValuesAffectingIsFilevault;
+(id)keyPathsForValuesAffectingSelectableSystem;
+(id)daemonInterestedKeys;
+(id)keyPathsForValuesAffectingDisplayIcon;
+(id)keyPathsForValuesAffectingModelIcon;
+(Class)systemClassForLongTermIdentifier:(id)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(unsigned long long)state;
-(char)enabled;
-(id)getGroup:(id)arg1 ;
-(void)setState:(unsigned long long)arg1 ;
-(id)UUID;
-(unsigned long long)usedSize;
-(NSArray *)groups;
-(void)setGroups:(NSArray *)arg1 ;
-(NSString *)systemVersion;
-(id)initWithPath:(id)arg1 ;
-(char)matches:(id)arg1 ;
-(id)accessibilityDescription;
-(char)selected;
-(void)setSelected:(char)arg1 ;
-(unsigned long long)totalSize;
-(NSString *)productVersion;
-(id)allUsers;
-(NSString *)buildVersion;
-(NSArray *)users;
-(void)setUsers:(NSArray *)arg1 ;
-(id)macAddress;
-(NSString *)systemName;
-(char)isInternal;
-(char)isCaseSensitive;
-(id)allGroups;
-(NSString *)modelID;
-(char)isResumable;
-(char)isMounted;
-(NSString *)volumeName;
-(char)isEncrypted;
-(id<SMNRemoteProxy>)remoteProxy;
-(unsigned long long)freeSpace;
-(void)setModelID:(NSString *)arg1 ;
-(char)pathExists:(id)arg1 ;
-(unsigned long long)purgableSpace;
-(id)copier;
-(NSImage *)displayIcon;
-(id)extendedDescription;
-(unsigned long long)filesystemType;
-(id)defaultDatabase;
-(char)isUpToDate;
-(NSArray *)childSystems;
-(void)mountWithCredentials:(id)arg1 ;
-(char)isNetworkSystem;
-(NSObject*<SMSystem_FileManagerProtocol>)fileSystem;
-(char)isMounting;
-(NSImage *)volumeIcon;
-(id)filteredUsers:(id)arg1 ;
-(id)getUserWithID:(unsigned)arg1 ;
-(char)enumeratesDirectlyFromDatavolume;
-(id)serverVersionOnSystem;
-(char)isRemoteSystem;
-(char)slashUsersIsASymlink;
-(char)isUserAnAdmin:(id)arg1 ;
-(id)autoLoginShortName;
-(char)ineligible;
-(char)availableAction;
-(void)setIneligible:(char)arg1 ;
-(id)createFileManager;
-(void)setFileSystem:(NSObject*<SMSystem_FileManagerProtocol>)arg1 ;
-(void)setRecordedTransferRate:(double)arg1 ;
-(void)setUserHomeSizer:(SMPathsUserHomeSizer *)arg1 ;
-(void)updateFromDictRepresentation:(id)arg1 duringInit:(char)arg2 ;
-(id)initWithDictRepresentation:(id)arg1 ;
-(char)isDefaultEffaceable;
-(id)filesystemEnumeratorAtRelativePath:(id)arg1 skippingPaths:(id)arg2 sizeRequired:(char)arg3 ;
-(char)forceNonDVEnumeration;
-(NSImage *)modelIcon;
-(id)networkPreferences;
-(char)isRunningSystem;
-(id)fdeSignedUsers;
-(id)getUserByLongName:(id)arg1 ;
-(id)getUser:(id)arg1 ;
-(id)getUserWithUUID:(id)arg1 ;
-(id)getGroupWithID:(unsigned)arg1 ;
-(id)getGroupWithGeneratedUID:(id)arg1 ;
-(void)invalidateCachedData;
-(char)isUser:(id)arg1 inGroup:(id)arg2 ;
-(char)isPathInIncompatibleApplicationsList:(id)arg1 ;
-(void)updateFromDictRepresentation:(id)arg1 ;
-(char)isFilevault;
-(char)isOverNetworkedFS;
-(char)isTargetDiskModeSystem;
-(char)isVeryOldSystemVersion;
-(char)selectableSystem;
-(unsigned long long)migratableItemsSupported;
-(double)estimatedTransferRate;
-(id)filesystemEnumeratorSkippingPaths:(id)arg1 ;
-(NSImage *)warningBadge;
-(NSDictionary *)longTermIdentifier;
-(char)matchesLongTermIdentifier:(id)arg1 ;
-(void)evaluateServerType;
-(id)networkInterfaces;
-(char)isMountableByUser;
-(void)prepareSystem;
-(void)cancelDataTransfers;
-(void)resumeDataTransfers;
-(void)reclaimPurgableSpace;
-(void)sizeAllUsersWithPather:(id)arg1 includingVaultUsers:(char)arg2 callbackBlock:(/*^block*/id)arg3 ;
-(void)cancelSizing;
-(id)hiddenSystemUsers;
-(unsigned)nextAvailableGroupID;
-(id)appleCloudNamesInUserRecordNames;
-(void)prepareIncompatibleApplicationsList;
-(id)incompatiblePathsUnderPath:(id)arg1 ;
-(id)incompatibleAppData;
-(NSString *)modelUTI;
-(void)setModelUTI:(NSString *)arg1 ;
-(NSString *)daDiskID;
-(void)setDaDiskID:(NSString *)arg1 ;
-(NSURL *)remoteDiskID;
-(void)setRemoteDiskID:(NSURL *)arg1 ;
-(SMCollectIncompatibleApps *)incompatibleAppsListedPaths;
-(void)setIncompatibleAppsListedPaths:(SMCollectIncompatibleApps *)arg1 ;
-(void)setForceNonDVEnumeration:(char)arg1 ;
-(NSString *)ineligibleReasonKey;
-(void)setIneligibleReasonKey:(NSString *)arg1 ;
-(void)setVolumeName:(NSString *)arg1 ;
-(double)recordedTransferRate;
-(SMPathsUserHomeSizer *)userHomeSizer;
-(char)systemPrepared;
-(void)setSystemPrepared:(char)arg1 ;
-(SMDBAccess *)dsdb;
-(void)setDsdb:(SMDBAccess *)arg1 ;
-(SMODDBAccess *)oddb;
-(void)setOddb:(SMODDBAccess *)arg1 ;
@end

