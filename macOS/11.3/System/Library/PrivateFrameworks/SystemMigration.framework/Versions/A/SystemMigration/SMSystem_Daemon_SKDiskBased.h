/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:38 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SystemMigration.framework/Versions/A/SystemMigration
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SystemMigration/SMSystem_Daemon.h>

@protocol SKEncryptedDiskProtocol;
@class SKDisk, NSString, SKAPFSDisk, SKBindableDisk;

@interface SMSystem_Daemon_SKDiskBased : SMSystem_Daemon {

	SKDisk* skDisk;
	id cachedPrimaryIdentifier;
	NSString* _deviceBus;
	NSString* _deviceModelName;
	SKDisk*<SKEncryptedDiskProtocol> _encryptedSKDisk;
	SKAPFSDisk* _apfsSKDisk;
	SKAPFSDisk* _dataVolume;
	SKBindableDisk* _bindableSKDisk;
	SKBindableDisk* _bindableDataVolume;

}

@property (retain) SKDisk * skDisk; 
@property (__weak) SKDisk*<SKEncryptedDiskProtocol> encryptedSKDisk;              //@synthesize encryptedSKDisk=_encryptedSKDisk - In the implementation block
@property (__weak) SKAPFSDisk * apfsSKDisk;                                       //@synthesize apfsSKDisk=_apfsSKDisk - In the implementation block
@property (__weak) SKAPFSDisk * dataVolume;                                       //@synthesize dataVolume=_dataVolume - In the implementation block
@property (retain) SKBindableDisk * bindableSKDisk;                               //@synthesize bindableSKDisk=_bindableSKDisk - In the implementation block
@property (retain) SKBindableDisk * bindableDataVolume;                           //@synthesize bindableDataVolume=_bindableDataVolume - In the implementation block
@property (retain) id cachedPrimaryIdentifier; 
@property (retain) NSString * deviceBus;                                          //@synthesize deviceBus=_deviceBus - In the implementation block
@property (retain) NSString * deviceModelName;                                    //@synthesize deviceModelName=_deviceModelName - In the implementation block
@property (getter=isEncrypted,readonly) char encrypted; 
+(unsigned long long)requiredScannerState;
-(id)description;
-(void)invalidate;
-(id)protocol;
-(id)initWithPath:(id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)matches:(id)arg1 ;
-(unsigned long long)totalSize;
-(id)primaryIdentifier;
-(char)isInternal;
-(char)isCaseSensitive;
-(unsigned long long)systemType;
-(id)volumeName;
-(char)isEncrypted;
-(unsigned long long)freeSpace;
-(unsigned long long)purgableSpace;
-(unsigned long long)filesystemType;
-(id)volumeIcon;
-(char)enumeratesDirectlyFromDatavolume;
-(char)isDefaultEffaceable;
-(id)fdeSignedUsers;
-(double)estimatedTransferRate;
-(void)prepareSystem;
-(void)reclaimPurgableSpace;
-(void)setSkDisk:(SKDisk *)arg1 ;
-(SKDisk *)skDisk;
-(char)validateFDEPassword:(id)arg1 ;
-(char)isPasswordLocked;
-(NSString *)deviceBus;
-(NSString *)deviceModelName;
-(void)scannerInit;
-(void)initSKDisk;
-(void)initPrimaryIdentifier;
-(void)setDataVolume:(SKAPFSDisk *)arg1 ;
-(void)setApfsSKDisk:(SKAPFSDisk *)arg1 ;
-(SKAPFSDisk *)apfsSKDisk;
-(void)setEncryptedSKDisk:(SKDisk*<SKEncryptedDiskProtocol>)arg1 ;
-(SKAPFSDisk *)dataVolume;
-(void)setBindableSKDisk:(SKBindableDisk *)arg1 ;
-(void)setBindableDataVolume:(SKBindableDisk *)arg1 ;
-(void)determineDiskType;
-(void)setCachedPrimaryIdentifier:(id)arg1 ;
-(id)cachedPrimaryIdentifier;
-(void)setDeviceBus:(NSString *)arg1 ;
-(void)setDeviceModelName:(NSString *)arg1 ;
-(SKDisk*<SKEncryptedDiskProtocol>)encryptedSKDisk;
-(SKBindableDisk *)bindableSKDisk;
-(SKBindableDisk *)bindableDataVolume;
-(id)storageKitUsersForUsers:(id)arg1 ;
-(id)initWithSKDisk:(id)arg1 ;
-(char)encryptDiskWithUsers:(id)arg1 iCloudUser:(id)arg2 iCloudPassword:(id)arg3 andBag:(id)arg4 returningError:(id*)arg5 ;
-(char)addFDEUsers:(id)arg1 removeUsers:(id)arg2 diskUnlockPassword:(id)arg3 ;
@end

