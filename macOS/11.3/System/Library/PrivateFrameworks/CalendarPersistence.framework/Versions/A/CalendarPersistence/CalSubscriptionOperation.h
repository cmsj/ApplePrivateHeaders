/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:37 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CalendarPersistence.framework/Versions/A/CalendarPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLConnectionDelegate.h>

@class NSURL, NSURLProtectionSpace, NSURLResponse, NSMutableData, ICSDocument, NSError, NSURLConnection, NSString;

@interface CalSubscriptionOperation : NSObject <NSURLConnectionDelegate> {

	NSURL* _subscriptionURL;
	NSURL* _displayURL;
	NSURLProtectionSpace* _protectionSpace;
	NSURLResponse* _response;
	NSMutableData* _buffer;
	ICSDocument* _document;
	char _inProgress;
	id _delegate;
	NSError* _error;
	char _isSynchronous;
	char _calendarIsEventContainer;
	char _calendarIsTaskContainer;
	NSURLConnection* _connection;
	char _noChanges;
	char _useShortTimeout;

}

@property (retain) NSError * error;                                 //@synthesize error=_error - In the implementation block
@property (assign) char isSynchronous;                              //@synthesize isSynchronous=_isSynchronous - In the implementation block
@property (assign) char calendarIsEventContainer;                   //@synthesize calendarIsEventContainer=_calendarIsEventContainer - In the implementation block
@property (assign) char calendarIsTaskContainer;                    //@synthesize calendarIsTaskContainer=_calendarIsTaskContainer - In the implementation block
@property (assign) char useShortTimeout;                            //@synthesize useShortTimeout=_useShortTimeout - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)canHandleURL:(id)arg1 ;
+(id)scrubSchemeOnSubscriptionURL:(id)arg1 ;
-(id)delegate;
-(id)initWithURL:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(NSError *)error;
-(id)calendar;
-(void)setError:(NSError *)arg1 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(id)response;
-(void)setDocument:(id)arg1 ;
-(char)isSynchronous;
-(id)protectionSpace;
-(id)subscriptionURL;
-(char)download;
-(void)setUseShortTimeout:(char)arg1 ;
-(void)downloadAsynchronously;
-(long long)operationProgress;
-(long long)operationTotal;
-(void)abortOperation;
-(void)setIsSynchronous:(char)arg1 ;
-(id)backingCalDAVCalendarInContext:(id)arg1 ;
-(void)addHTTPHeadersToRequest:(id)arg1 skipAcceptHeader:(char)arg2 ;
-(void)determineContainerTypeForCalendar:(id)arg1 ;
-(id)generateAuthenticationError;
-(void)setCalendarIsEventContainer:(char)arg1 ;
-(void)setCalendarIsTaskContainer:(char)arg1 ;
-(id)_createCalendarHelper:(id)arg1 withAccount:(id)arg2 context:(id)arg3 ;
-(char)calendarIsEventContainer;
-(char)calendarIsTaskContainer;
-(id)displayURL;
-(char)downloadSynchronously;
-(void)postProcess;
-(id)calendarID;
-(id)createLocalSubscriptionCalendarInContext:(id)arg1 ;
-(id)createCalDAVSubscriptionCalendarForAccount:(id)arg1 inContext:(id)arg2 ;
-(void)update:(id)arg1 ;
-(char)useShortTimeout;
-(void)_retryRequestWithoutAcceptHeader:(char)arg1 ;
@end

