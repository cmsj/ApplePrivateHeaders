/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PhotoFoundation.framework/Versions/A/PhotoFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol PFWorkContextStatusUpdateMulticaster;
@class PFDispatchQueue, NSMutableDictionary, PFAsyncDispatchMulticaster, PFQoSPolicy;

@interface PFBackgroundServiceManager : NSObject {

	PFDispatchQueue* _queue;
	NSMutableDictionary* _workContexts;
	PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster> _statusUpdateMulticaster;
	PFQoSPolicy* _qosPolicy;

}

@property (readonly) PFDispatchQueue * registrationQueue; 
@property (retain) NSMutableDictionary * workContexts;                                                                     //@synthesize workContexts=_workContexts - In the implementation block
@property (retain) PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster> statusUpdateMulticaster;              //@synthesize statusUpdateMulticaster=_statusUpdateMulticaster - In the implementation block
@property (retain) PFQoSPolicy * qosPolicy;                                                                                //@synthesize qosPolicy=_qosPolicy - In the implementation block
+(id)sharedInstance;
+(void)addStatusReceiver:(id)arg1 ;
+(void)removeStatusReceiver:(id)arg1 ;
+(void)addWorkContext:(id)arg1 ;
+(id)qosLevelStringForServiceType:(id)arg1 ;
+(void)unregisterClient:(id)arg1 forResource:(id)arg2 ;
+(id)beginActivityForResource:(id)arg1 reason:(id)arg2 ;
+(void)endActivityForResourceToken:(id)arg1 ;
+(void)unregisterClientCompletely:(id)arg1 forResource:(id)arg2 ;
+(char)client:(id)arg1 isRegisteredForResource:(id)arg2 ;
+(void)registerResource:(id)arg1 ;
+(void)tryResourceShutdown:(id)arg1 ignoreClients:(id)arg2 whenComplete:(/*^block*/id)arg3 ;
+(void)forceResourceShutdown:(id)arg1 whenComplete:(/*^block*/id)arg2 ;
+(char)registerClient:(id)arg1 forResource:(id)arg2 ;
+(void)addManualWorkContext:(id)arg1 ;
+(void)removeManualWorkContext:(id)arg1 ;
+(void)closeWorkContext:(id)arg1 ;
+(void)terminateWorkContext:(id)arg1 ;
+(void)cancelWork:(id)arg1 force:(char)arg2 ;
+(void)suspendWork:(id)arg1 ;
+(void)resumeWork:(id)arg1 ;
+(void)addedItemsToWorkContext:(id)arg1 ;
+(id)performWorkWithDelegate:(id)arg1 serviceType:(id)arg2 atEnd:(/*^block*/id)arg3 ;
+(unsigned)qosClassForServiceType:(id)arg1 ;
-(id)init;
-(void)addWorkContext:(id)arg1 ;
-(void)unregisterClient:(id)arg1 forResource:(id)arg2 ;
-(id)beginActivityForResource:(id)arg1 reason:(id)arg2 ;
-(void)endActivityForResourceToken:(id)arg1 ;
-(PFDispatchQueue *)registrationQueue;
-(void)unregisterClientCompletely:(id)arg1 forResource:(id)arg2 ;
-(char)client:(id)arg1 isRegisteredForResource:(id)arg2 ;
-(void)registerResource:(id)arg1 ;
-(void)tryResourceShutdown:(id)arg1 ignoreClients:(id)arg2 whenComplete:(/*^block*/id)arg3 ;
-(void)forceResourceShutdown:(id)arg1 whenComplete:(/*^block*/id)arg2 ;
-(id)resourceContextForResource:(id)arg1 create:(char)arg2 ;
-(char)_registerClient:(id)arg1 forResource:(id)arg2 isToken:(char)arg3 ;
-(void)_unregisterClient:(id)arg1 forResource:(id)arg2 isToken:(char)arg3 ;
-(char)registerClient:(id)arg1 forResource:(id)arg2 ;
-(void)dispatchAsync:(/*^block*/id)arg1 ;
-(void)sendAddTask:(id)arg1 ;
-(void)sendRemoveTask:(id)arg1 ;
-(void)removeWorkContext:(id)arg1 from:(id)arg2 ;
-(id)workContextForId:(id)arg1 ;
-(void)notifyParentOfCompletionOfChild:(id)arg1 ;
-(char)contextIsDormant:(id)arg1 ;
-(char)assertOnProcessingQueue;
-(const char*)processingQueueLabel;
-(void)addManualWorkContext:(id)arg1 ;
-(void)removeManualWorkContext:(id)arg1 ;
-(void)closeWorkContext:(id)arg1 ;
-(void)terminateWorkContext:(id)arg1 ;
-(void)cancelWork:(id)arg1 force:(char)arg2 ;
-(void)cancelWorkContext:(id)arg1 ;
-(void)suspendWork:(id)arg1 ;
-(void)suspendWorkContext:(id)arg1 ;
-(void)resumeWork:(id)arg1 ;
-(void)resumeWorkContext:(id)arg1 ;
-(void)beginWorkContext:(id)arg1 ;
-(void)performNextStepForContext:(id)arg1 ;
-(void)getNextBatchOrJobForContext:(id)arg1 ;
-(void)requestNewBatchForWorkContext:(id)arg1 ;
-(void)processNextJobInBatch:(id)arg1 forWorkContext:(id)arg2 ;
-(void)finishedEndBatchWork:(id)arg1 seq:(long long)arg2 ;
-(void)endWorkContext:(id)arg1 ;
-(void)finishedEndWork:(id)arg1 seq:(long long)arg2 ;
-(void)workContextStalled:(id)arg1 ;
-(void)addedItemsToWorkContext:(id)arg1 ;
-(NSMutableDictionary *)workContexts;
-(void)setWorkContexts:(NSMutableDictionary *)arg1 ;
-(PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster>)statusUpdateMulticaster;
-(void)setStatusUpdateMulticaster:(PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster>)arg1 ;
-(PFQoSPolicy *)qosPolicy;
-(void)setQosPolicy:(PFQoSPolicy *)arg1 ;
@end

