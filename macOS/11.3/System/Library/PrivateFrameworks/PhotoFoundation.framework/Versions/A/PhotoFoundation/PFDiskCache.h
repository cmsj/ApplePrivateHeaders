/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PhotoFoundation.framework/Versions/A/PhotoFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, PFTimeIntervalCoalescer, NSString, NSMutableDictionary, NSMutableSet, NSArray, NSDate;

@interface PFDiskCache : NSObject {

	NSObject*<OS_dispatch_queue> _cacheManagementDataQueue;
	NSObject*<OS_dispatch_queue> _cacheManagementIOQueue;
	NSObject*<OS_dispatch_queue> _activeReaderWriterQueue;
	NSObject*<OS_dispatch_queue> _cacheExpirationQueue;
	PFTimeIntervalCoalescer* _cacheManagementIOCoalescer;
	NSString* _cacheDirectoryPath;
	NSMutableDictionary* _cacheManagementData;
	NSMutableSet* _activeWritingPaths;
	NSMutableSet* _activeReadingPaths;
	Ai _pendingWrites;
	Ai _pendingReads;
	NSArray* _expirationPolicies;
	NSDate* _lastExpirationStartTime;
	NSDate* _lastExpirationFinishTime;
	long long _lastExpirationBytesRemoved;
	char _expirationRunning;
	NSDate* _integrityCheckStartTime;
	NSDate* _integrityCheckFinishTime;
	char _integrityCheckRunning;
	Aq _cacheHits;
	Aq _cacheRequests;
	long long _cacheManagementIOSentinel;
	unsigned long long _maxPendingWrites;

}

@property (readonly) NSString * cacheDirectoryPath;                    //@synthesize cacheDirectoryPath=_cacheDirectoryPath - In the implementation block
@property (readonly) NSArray * expirationPolicies;                     //@synthesize expirationPolicies=_expirationPolicies - In the implementation block
@property (readonly) long long cacheHits; 
@property (readonly) long long cacheRequests; 
@property (readonly) unsigned long long maxPendingWrites;              //@synthesize maxPendingWrites=_maxPendingWrites - In the implementation block
-(void)dealloc;
-(id)description;
-(id)init;
-(void)purge;
-(void)_logError:(id)arg1 ;
-(long long)cacheHits;
-(long long)cacheRequests;
-(void)_addSpecialFilesToCacheDirectory;
-(id)_allCacheEntries;
-(id)_immutableCacheManagementData;
-(id)_cacheEntryForUniqueID:(id)arg1 ;
-(id)_cacheDataFilePath:(id)arg1 ;
-(long long)_cacheDataFileSizeForPath:(id)arg1 ;
-(id)_cacheManagementFilePath;
-(char)_deleteCacheFileAndEntryWithoutLock:(id)arg1 ;
-(char)_deleteCacheFileAndEntry:(id)arg1 ;
-(void)_incrementCacheHits:(char)arg1 ;
-(id)_uniqueIDForCacheEntry:(id)arg1 ;
-(id)_cacheEntriesSortedByAccessTime:(id)arg1 ;
-(void)_releaseCacheBytes:(long long)arg1 ;
-(void)_asyncImplementExpirationPolicy;
-(char)_readCacheManagementFile;
-(char)_setupCache:(id)arg1 ;
-(void)_asyncCheckIntegrityOfCacheFile;
-(char)_checkIntegrityOfCacheFile:(id)arg1 ;
-(void)_checkIntegrityOfAllCacheFiles;
-(void)_cleanupLeftoverFiles;
-(char)_validateCacheManagementValue:(id)arg1 ;
-(void)_validateCacheManagementData:(id)arg1 ;
-(id)_readCacheFile:(id)arg1 reader:(id)arg2 purgeLevel:(int)arg3 ;
-(id)_readCacheData:(id)arg1 purgeLevel:(int)arg2 ;
-(void)_write:(id)arg1 checksum:(id)arg2 writer:(id)arg3 preparationBlock:(/*^block*/id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(void)_writeCacheData:(id)arg1 checksum:(id)arg2 preparationBlock:(/*^block*/id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(char)_cleanupCacheManagementFile:(id)arg1 ;
-(char)_setCacheEntry:(id)arg1 uniqueID:(id)arg2 ;
-(char)_updateCacheManagementFile:(id)arg1 forCacheFilePath:(id)arg2 ;
-(void)_writeCacheManagementFileData;
-(void)blockForOutstandingWork;
-(id)_formattedBytes:(long long)arg1 ;
-(id)pendingIO;
-(id)expirationStats;
-(id)integrityCheckStats;
-(long long)cacheEntryCount;
-(long long)cacheSizeInBytes;
-(id)formattedCacheSizeInBytes;
-(id)descriptionForCacheEntry:(id)arg1 separator:(id)arg2 ;
-(void)resetStats;
-(long long)diskSpaceUsedInBytes;
-(char)_cacheFileExists:(id)arg1 ;
-(char)hasCacheFileForKey:(id)arg1 ;
-(id)initWithDirectory:(id)arg1 expirationPolicies:(id)arg2 maxPendingWrites:(unsigned long long)arg3 ;
-(id)initWithDirectory:(id)arg1 expirationPolicies:(id)arg2 ;
-(char)removeCacheFileForKey:(id)arg1 ;
-(id)cacheDataForKey:(id)arg1 purgeLevel:(int)arg2 ;
-(void)setCacheData:(id)arg1 forKey:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)setCacheData:(id)arg1 forKey:(id)arg2 preparationBlock:(/*^block*/id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)runExpiration;
-(NSString *)cacheDirectoryPath;
-(NSArray *)expirationPolicies;
-(unsigned long long)maxPendingWrites;
@end

