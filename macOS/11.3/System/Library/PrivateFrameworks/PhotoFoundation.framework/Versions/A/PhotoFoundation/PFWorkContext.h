/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PhotoFoundation.framework/Versions/A/PhotoFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol PFWorkContextStatusUpdateMulticaster, PFBackgroundServiceManagerDelegate, PFBackgroundServiceManagerControlDelegate, PFBackgroundServiceManagerProgressDelegate;
@class NSDate, PFDispatchQueue, NSMutableArray, NSString, PFBackgroundServiceManagerCategory, PFWorkBatch, PFAsyncDispatchMulticaster, NSMutableDictionary, PFID, PFJob, NSArray;

@interface PFWorkContext : NSObject {

	NSDate* _lastDisplayUpdate;
	unsigned long long _jobsInFlight;
	PFDispatchQueue* _queue;
	id _qosServiceType;
	NSMutableArray* _children;
	NSMutableArray* _suspenders;
	char _isVisible;
	char _alwaysVisible;
	char _resetProgressOnStall;
	char _canCancel;
	char _parentCancelsChildren;
	char _canPause;
	char _isOpenEnded;
	char _debug;
	char _shutdownDelegate;
	char _continueOnErrorOrCancel;
	char _delayUpdate;
	char _isConfirmingCancel;
	int _state;
	int _stage;
	int _controlState;
	int _result;
	NSString* _groupDisplayName;
	NSString* _groupDisplayDescription;
	PFBackgroundServiceManagerCategory* _category;
	NSString* _name;
	PFWorkContext* _parent;
	id _uuid;
	NSString* _workDescription;
	double _displayProgressDelay;
	NSMutableArray* _items;
	unsigned long long _batchSize;
	PFWorkBatch* _batch;
	Class _batchClass;
	unsigned long long _concurrency;
	/*^block*/id _jobCompletedBlock;
	/*^block*/id _workContextStalledBlock;
	/*^block*/id _workContextResumedFromStallBlock;
	unsigned long long _completedItems;
	unsigned long long _errorNotificationFrequency;
	/*^block*/id _errorhandler;
	id _delegate;
	PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster> _statusMulticaster;
	NSMutableDictionary* _waitingStages;
	id<PFBackgroundServiceManagerDelegate> _beginWorkDelegate;
	id<PFBackgroundServiceManagerDelegate> _createBatchDelegate;
	id<PFBackgroundServiceManagerDelegate> _beginBatchDelegate;
	id<PFBackgroundServiceManagerDelegate> _performJobDelegate;
	id<PFBackgroundServiceManagerDelegate> _endBatchDelegate;
	id<PFBackgroundServiceManagerDelegate> _endWorkDelegate;
	id<PFBackgroundServiceManagerControlDelegate> _shouldCancelDelegate;
	id<PFBackgroundServiceManagerControlDelegate> _cancelWorkDelegate;
	id<PFBackgroundServiceManagerControlDelegate> _suspendWorkDelegate;
	id<PFBackgroundServiceManagerControlDelegate> _resumeWorkDelegate;
	id<PFBackgroundServiceManagerProgressDelegate> _progressDelegate;
	id<PFBackgroundServiceManagerProgressDelegate> _progressDescriptionDelegate;
	id<PFBackgroundServiceManagerDelegate> _handleErrorDelegate;
	long long _pausedCounter;
	NSDate* _startTime;
	NSDate* _endTime;
	PFDispatchQueue* _bsmContextPropertyQueue;
	/*^block*/id _performJobBlock;
	id<PFBackgroundServiceManagerDelegate> _nextItemProvider;
	id _parentId;
	/*^block*/id _completionBlock;
	long long _lastAddRemoveTask;
	NSMutableArray* _jobsCompletedSinceLastStall;
	PFWorkContext* _nextWorkContext;

}

@property (readonly) int state; 
@property (readonly) int stage; 
@property (readonly) int controlState; 
@property (readonly) NSString * stageString; 
@property (readonly) NSString * stateString; 
@property (readonly) NSString * controlStateString; 
@property (retain) PFBackgroundServiceManagerCategory * category; 
@property (copy) id completionBlock; 
@property (readonly) char isProcessing; 
@property (readonly) char isPausing; 
@property (readonly) char isResuming; 
@property (readonly) char isCanceling; 
@property (readonly) char isCanceled; 
@property (readonly) char isStalled; 
@property (readonly) char isOpenEnded; 
@property (readonly) PFWorkBatch * batch; 
@property (assign) char continueOnErrorOrCancel; 
@property (assign) long long lastAddRemoveTask; 
@property (readonly) NSMutableArray * jobsCompletedSinceLastStall; 
@property (readonly) id<PFBackgroundServiceManagerDelegate> nextItemProvider; 
@property (readonly) PFWorkContext * nextWorkContext; 
@property (readonly) char debug; 
@property (retain) PFDispatchQueue * queue;                                                                          //@synthesize queue=_queue - In the implementation block
@property (retain) id delegate;                                                                                      //@synthesize delegate=_delegate - In the implementation block
@property (assign) unsigned long long jobsInFlight;                                                                  //@synthesize jobsInFlight=_jobsInFlight - In the implementation block
@property (retain) PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster> statusMulticaster;              //@synthesize statusMulticaster=_statusMulticaster - In the implementation block
@property (assign) char shutdownDelegate;                                                                            //@synthesize shutdownDelegate=_shutdownDelegate - In the implementation block
@property (retain) NSMutableDictionary * waitingStages;                                                              //@synthesize waitingStages=_waitingStages - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerDelegate> beginWorkDelegate;                                         //@synthesize beginWorkDelegate=_beginWorkDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerDelegate> createBatchDelegate;                                       //@synthesize createBatchDelegate=_createBatchDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerDelegate> beginBatchDelegate;                                        //@synthesize beginBatchDelegate=_beginBatchDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerDelegate> performJobDelegate;                                        //@synthesize performJobDelegate=_performJobDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerDelegate> endBatchDelegate;                                          //@synthesize endBatchDelegate=_endBatchDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerDelegate> endWorkDelegate;                                           //@synthesize endWorkDelegate=_endWorkDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerControlDelegate> shouldCancelDelegate;                               //@synthesize shouldCancelDelegate=_shouldCancelDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerControlDelegate> cancelWorkDelegate;                                 //@synthesize cancelWorkDelegate=_cancelWorkDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerControlDelegate> suspendWorkDelegate;                                //@synthesize suspendWorkDelegate=_suspendWorkDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerControlDelegate> resumeWorkDelegate;                                 //@synthesize resumeWorkDelegate=_resumeWorkDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerProgressDelegate> progressDelegate;                                  //@synthesize progressDelegate=_progressDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerProgressDelegate> progressDescriptionDelegate;                       //@synthesize progressDescriptionDelegate=_progressDescriptionDelegate - In the implementation block
@property (__weak) id<PFBackgroundServiceManagerDelegate> handleErrorDelegate;                                       //@synthesize handleErrorDelegate=_handleErrorDelegate - In the implementation block
@property (retain) PFWorkBatch * batch;                                                                              //@synthesize batch=_batch - In the implementation block
@property (assign) long long pausedCounter;                                                                          //@synthesize pausedCounter=_pausedCounter - In the implementation block
@property (retain) NSDate * startTime;                                                                               //@synthesize startTime=_startTime - In the implementation block
@property (retain) NSDate * endTime;                                                                                 //@synthesize endTime=_endTime - In the implementation block
@property (assign) char continueOnErrorOrCancel;                                                                     //@synthesize continueOnErrorOrCancel=_continueOnErrorOrCancel - In the implementation block
@property (retain) PFDispatchQueue * bsmContextPropertyQueue;                                                        //@synthesize bsmContextPropertyQueue=_bsmContextPropertyQueue - In the implementation block
@property (assign) char delayUpdate;                                                                                 //@synthesize delayUpdate=_delayUpdate - In the implementation block
@property (copy) id performJobBlock;                                                                                 //@synthesize performJobBlock=_performJobBlock - In the implementation block
@property (readonly) NSString * _name; 
@property (assign) id<PFBackgroundServiceManagerDelegate> nextItemProvider;                                          //@synthesize nextItemProvider=_nextItemProvider - In the implementation block
@property (assign) int state;                                                                                        //@synthesize state=_state - In the implementation block
@property (assign) int stage;                                                                                        //@synthesize stage=_stage - In the implementation block
@property (assign) int controlState;                                                                                 //@synthesize controlState=_controlState - In the implementation block
@property (retain) id parentId;                                                                                      //@synthesize parentId=_parentId - In the implementation block
@property (copy) id completionBlock;                                                                                 //@synthesize completionBlock=_completionBlock - In the implementation block
@property (assign,nonatomic) long long lastAddRemoveTask;                                                            //@synthesize lastAddRemoveTask=_lastAddRemoveTask - In the implementation block
@property (retain) NSMutableArray * jobsCompletedSinceLastStall;                                                     //@synthesize jobsCompletedSinceLastStall=_jobsCompletedSinceLastStall - In the implementation block
@property (retain) PFWorkContext * nextWorkContext;                                                                  //@synthesize nextWorkContext=_nextWorkContext - In the implementation block
@property (readonly) PFID * sequenceIdGenerator; 
@property (assign) char isConfirmingCancel;                                                                          //@synthesize isConfirmingCancel=_isConfirmingCancel - In the implementation block
@property (readonly) id uuid;                                                                                        //@synthesize uuid=_uuid - In the implementation block
@property (retain) NSString * name;                                                                                  //@synthesize name=_name - In the implementation block
@property (retain) NSString * workDescription;                                                                       //@synthesize workDescription=_workDescription - In the implementation block
@property (assign) char isVisible;                                                                                   //@synthesize isVisible=_isVisible - In the implementation block
@property (assign) char alwaysVisible;                                                                               //@synthesize alwaysVisible=_alwaysVisible - In the implementation block
@property (assign) char resetProgressOnStall;                                                                        //@synthesize resetProgressOnStall=_resetProgressOnStall - In the implementation block
@property (assign) double displayProgressDelay;                                                                      //@synthesize displayProgressDelay=_displayProgressDelay - In the implementation block
@property (retain) NSString * groupDisplayName;                                                                      //@synthesize groupDisplayName=_groupDisplayName - In the implementation block
@property (retain) NSString * groupDisplayDescription;                                                               //@synthesize groupDisplayDescription=_groupDisplayDescription - In the implementation block
@property (retain) NSMutableArray * items;                                                                           //@synthesize items=_items - In the implementation block
@property (assign) unsigned long long batchSize;                                                                     //@synthesize batchSize=_batchSize - In the implementation block
@property (assign) char canCancel;                                                                                   //@synthesize canCancel=_canCancel - In the implementation block
@property (readonly) char shouldConfirmCancel; 
@property (assign) char parentCancelsChildren;                                                                       //@synthesize parentCancelsChildren=_parentCancelsChildren - In the implementation block
@property (assign) char controlEnabled; 
@property (assign) char canPause;                                                                                    //@synthesize canPause=_canPause - In the implementation block
@property (assign) char isOpenEnded;                                                                                 //@synthesize isOpenEnded=_isOpenEnded - In the implementation block
@property (readonly) PFJob * nextJob; 
@property (readonly) char isPaused; 
@property (retain) Class batchClass;                                                                                 //@synthesize batchClass=_batchClass - In the implementation block
@property (readonly) unsigned long long concurrency;                                                                 //@synthesize concurrency=_concurrency - In the implementation block
@property (copy) id jobCompletedBlock;                                                                               //@synthesize jobCompletedBlock=_jobCompletedBlock - In the implementation block
@property (copy) id workContextStalledBlock;                                                                         //@synthesize workContextStalledBlock=_workContextStalledBlock - In the implementation block
@property (copy) id workContextResumedFromStallBlock;                                                                //@synthesize workContextResumedFromStallBlock=_workContextResumedFromStallBlock - In the implementation block
@property (readonly) unsigned long long processingItems; 
@property (readonly) unsigned long long remainingItems; 
@property (assign) unsigned long long completedItems;                                                                //@synthesize completedItems=_completedItems - In the implementation block
@property (readonly) unsigned long long totalItems; 
@property (readonly) NSArray * remainingJobs; 
@property (readonly) char isQueued; 
@property (readonly) double progressPercentage; 
@property (readonly) NSString * progressDescription; 
@property (__weak) PFBackgroundServiceManagerCategory * category;                                                    //@synthesize category=_category - In the implementation block
@property (__weak) PFWorkContext * parent;                                                                           //@synthesize parent=_parent - In the implementation block
@property (readonly) NSArray * children; 
@property (readonly) double runTime; 
@property (assign) int result;                                                                                       //@synthesize result=_result - In the implementation block
@property (assign) unsigned long long errorNotificationFrequency;                                                    //@synthesize errorNotificationFrequency=_errorNotificationFrequency - In the implementation block
@property (copy) id errorhandler;                                                                                    //@synthesize errorhandler=_errorhandler - In the implementation block
@property (readonly) id qosServiceType;                                                                              //@synthesize qosServiceType=_qosServiceType - In the implementation block
@property (assign) char debug;                                                                                       //@synthesize debug=_debug - In the implementation block
+(id)sequentialWorkContextWithWorkContexts:(id)arg1 continueOnErrorOrCancel:(char)arg2 ;
-(id)description;
-(id)init;
-(NSString *)name;
-(NSString *)_name;
-(id)delegate;
-(void)close;
-(void)setDelegate:(id)arg1 ;
-(id)itemAtIndex:(unsigned long long)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(void)resume;
-(id)uuid;
-(int)state;
-(void)setName:(NSString *)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(int)result;
-(void)setResult:(int)arg1 ;
-(void)setState:(int)arg1 ;
-(void)pause;
-(void)addItem:(id)arg1 ;
-(PFWorkContext *)parent;
-(NSDate *)startTime;
-(void)setStartTime:(NSDate *)arg1 ;
-(PFDispatchQueue *)queue;
-(PFBackgroundServiceManagerCategory *)category;
-(void)cancel;
-(void)setCategory:(PFBackgroundServiceManagerCategory *)arg1 ;
-(char)suspend;
-(void)remove;
-(char)removeItem:(id)arg1 ;
-(void)removeAllItems;
-(id)completionBlock;
-(void)setCompletionBlock:(id)arg1 ;
-(void)terminate;
-(unsigned long long)childCount;
-(void)addChild:(id)arg1 ;
-(NSArray *)children;
-(char)isPaused;
-(char)isStalled;
-(void)setQueue:(PFDispatchQueue *)arg1 ;
-(char)isVisible;
-(int)stage;
-(id)initWithDelegate:(id)arg1 ;
-(NSMutableArray *)items;
-(void)setItems:(NSMutableArray *)arg1 ;
-(char)isProcessing;
-(void)addItems:(id)arg1 ;
-(void)removeItems:(id)arg1 ;
-(void)setIsVisible:(char)arg1 ;
-(void)setStage:(int)arg1 ;
-(void)removeChild:(id)arg1 ;
-(PFWorkBatch *)batch;
-(void)setBatch:(PFWorkBatch *)arg1 ;
-(char)debug;
-(void)setBatchSize:(unsigned long long)arg1 ;
-(unsigned long long)batchSize;
-(double)runTime;
-(void)setParent:(PFWorkContext *)arg1 ;
-(void)setEndTime:(NSDate *)arg1 ;
-(NSDate *)endTime;
-(NSString *)stateString;
-(void)shutdown;
-(char)isCanceled;
-(void)setDebug:(char)arg1 ;
-(char)_removeItem:(id)arg1 ;
-(id)add;
-(char)isOpenEnded;
-(void)setIsOpenEnded:(char)arg1 ;
-(void)removeChildren;
-(id)initWithName:(id)arg1 performJobBlock:(/*^block*/id)arg2 ;
-(id)initWithName:(id)arg1 qosServiceType:(id)arg2 concurrency:(unsigned long long)arg3 performJobBlock:(/*^block*/id)arg4 ;
-(id)initWithName:(id)arg1 delegate:(id)arg2 qosServiceType:(id)arg3 ;
-(id)initWithName:(id)arg1 delegate:(id)arg2 qosServiceType:(id)arg3 concurrency:(unsigned long long)arg4 ;
-(PFID *)sequenceIdGenerator;
-(id)stateStringForState:(int)arg1 ;
-(id)controlStateStringForState:(int)arg1 ;
-(id)stageStringForStage:(int)arg1 ;
-(int)controlState;
-(void)setControlState:(int)arg1 ;
-(char)isQueued;
-(void)_updateDisplayForcing:(char)arg1 ;
-(void)updateDisplayForcing:(char)arg1 ;
-(NSString *)groupDisplayName;
-(void)setGroupDisplayName:(NSString *)arg1 ;
-(NSString *)groupDisplayDescription;
-(void)setGroupDisplayDescription:(NSString *)arg1 ;
-(char)_validateChangeToState:(int)arg1 ;
-(char)_validateChangeToStage:(int)arg1 ;
-(char)_validateChangeToControlState:(int)arg1 ;
-(void)prepareUpdate;
-(char)controlEnabled;
-(void)setControlEnabled:(char)arg1 ;
-(double)progressPercentage;
-(NSString *)progressDescription;
-(char)shouldConfirmCancel;
-(void)createBatch:(id)arg1 ;
-(unsigned long long)totalItems;
-(unsigned long long)processingItems;
-(unsigned long long)remainingItems;
-(NSArray *)remainingJobs;
-(void)completeBeginWork;
-(void)completeCreateBatch;
-(void)completeBeginBatch;
-(void)completePerformJob:(id)arg1 ;
-(void)completeEndBatch;
-(void)completeEndWork;
-(void)completeConfirmCancel;
-(void)completeCancel;
-(void)completeSuspend;
-(void)completeResume;
-(void)completeWorkContextStalled;
-(void)completeWorkContextResumedFromStall;
-(void)continueForStage:(unsigned long long)arg1 ;
-(id)runWithCompletion:(/*^block*/id)arg1 ;
-(void)willRemoveAllItems;
-(unsigned long long)willRemoveItem:(id)arg1 ;
-(void)insertItems:(id)arg1 ;
-(void)addItems:(id)arg1 inserting:(char)arg2 ;
-(PFJob *)nextJob;
-(void)addStatusReceiver:(id)arg1 ;
-(void)removeStatusReceiver:(id)arg1 ;
-(void)addWorkContext:(id)arg1 ;
-(void)recordSuspender:(id)arg1 ;
-(NSString *)workDescription;
-(void)setWorkDescription:(NSString *)arg1 ;
-(char)alwaysVisible;
-(void)setAlwaysVisible:(char)arg1 ;
-(char)resetProgressOnStall;
-(void)setResetProgressOnStall:(char)arg1 ;
-(double)displayProgressDelay;
-(void)setDisplayProgressDelay:(double)arg1 ;
-(char)canCancel;
-(void)setCanCancel:(char)arg1 ;
-(char)parentCancelsChildren;
-(void)setParentCancelsChildren:(char)arg1 ;
-(char)canPause;
-(void)setCanPause:(char)arg1 ;
-(Class)batchClass;
-(void)setBatchClass:(Class)arg1 ;
-(unsigned long long)concurrency;
-(id)jobCompletedBlock;
-(void)setJobCompletedBlock:(id)arg1 ;
-(id)workContextStalledBlock;
-(void)setWorkContextStalledBlock:(id)arg1 ;
-(id)workContextResumedFromStallBlock;
-(void)setWorkContextResumedFromStallBlock:(id)arg1 ;
-(unsigned long long)completedItems;
-(void)setCompletedItems:(unsigned long long)arg1 ;
-(unsigned long long)errorNotificationFrequency;
-(void)setErrorNotificationFrequency:(unsigned long long)arg1 ;
-(id)errorhandler;
-(void)setErrorhandler:(id)arg1 ;
-(id)qosServiceType;
-(unsigned long long)jobsInFlight;
-(void)setJobsInFlight:(unsigned long long)arg1 ;
-(PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster>)statusMulticaster;
-(void)setStatusMulticaster:(PFAsyncDispatchMulticaster*<PFWorkContextStatusUpdateMulticaster>)arg1 ;
-(char)shutdownDelegate;
-(void)setShutdownDelegate:(char)arg1 ;
-(NSMutableDictionary *)waitingStages;
-(void)setWaitingStages:(NSMutableDictionary *)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)beginWorkDelegate;
-(void)setBeginWorkDelegate:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)createBatchDelegate;
-(void)setCreateBatchDelegate:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)beginBatchDelegate;
-(void)setBeginBatchDelegate:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)performJobDelegate;
-(void)setPerformJobDelegate:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)endBatchDelegate;
-(void)setEndBatchDelegate:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)endWorkDelegate;
-(void)setEndWorkDelegate:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerControlDelegate>)shouldCancelDelegate;
-(void)setShouldCancelDelegate:(id<PFBackgroundServiceManagerControlDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerControlDelegate>)cancelWorkDelegate;
-(void)setCancelWorkDelegate:(id<PFBackgroundServiceManagerControlDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerControlDelegate>)suspendWorkDelegate;
-(void)setSuspendWorkDelegate:(id<PFBackgroundServiceManagerControlDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerControlDelegate>)resumeWorkDelegate;
-(void)setResumeWorkDelegate:(id<PFBackgroundServiceManagerControlDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerProgressDelegate>)progressDelegate;
-(void)setProgressDelegate:(id<PFBackgroundServiceManagerProgressDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerProgressDelegate>)progressDescriptionDelegate;
-(void)setProgressDescriptionDelegate:(id<PFBackgroundServiceManagerProgressDelegate>)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)handleErrorDelegate;
-(void)setHandleErrorDelegate:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(long long)pausedCounter;
-(void)setPausedCounter:(long long)arg1 ;
-(char)continueOnErrorOrCancel;
-(void)setContinueOnErrorOrCancel:(char)arg1 ;
-(PFDispatchQueue *)bsmContextPropertyQueue;
-(void)setBsmContextPropertyQueue:(PFDispatchQueue *)arg1 ;
-(char)delayUpdate;
-(void)setDelayUpdate:(char)arg1 ;
-(id)performJobBlock;
-(void)setPerformJobBlock:(id)arg1 ;
-(id<PFBackgroundServiceManagerDelegate>)nextItemProvider;
-(void)setNextItemProvider:(id<PFBackgroundServiceManagerDelegate>)arg1 ;
-(id)parentId;
-(void)setParentId:(id)arg1 ;
-(long long)lastAddRemoveTask;
-(void)setLastAddRemoveTask:(long long)arg1 ;
-(NSMutableArray *)jobsCompletedSinceLastStall;
-(void)setJobsCompletedSinceLastStall:(NSMutableArray *)arg1 ;
-(PFWorkContext *)nextWorkContext;
-(void)setNextWorkContext:(PFWorkContext *)arg1 ;
-(char)isConfirmingCancel;
-(void)setIsConfirmingCancel:(char)arg1 ;
-(NSString *)controlStateString;
-(NSString *)stageString;
-(char)isPausing;
-(char)isResuming;
-(char)isCanceling;
-(void)dispatchBeginWorkWithReply:(/*^block*/id)arg1 ;
-(void)dispatchCreateBatchWithReply:(/*^block*/id)arg1 ;
-(void)dispatchBeginBatch:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)dispatchPerformJob:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)dispatchEndBatch:(id)arg1 withReply:(/*^block*/id)arg2 ;
-(void)dispatchEndWorkWithReply:(/*^block*/id)arg1 ;
-(void)dispatchCancelWorkWithReply:(/*^block*/id)arg1 ;
-(void)dispatchSuspendWorkWithReply:(/*^block*/id)arg1 ;
-(void)dispatchResumeWorkWithReply:(/*^block*/id)arg1 ;
-(void)dispatchHandleErrors:(id)arg1 ;
-(void)dispatchJobCompleted:(id)arg1 ;
-(void)dispatchWorkContextStalled:(id)arg1 reply:(/*^block*/id)arg2 ;
-(void)dispatchWorkContextResumedFromStallWithReply:(/*^block*/id)arg1 ;
-(void)wasAdded;
-(void)wasRemoved;
-(void)resetProgress;
-(char)unsuspend;
-(void)setWaitingStage:(unsigned long long)arg1 completedBlock:(/*^block*/id)arg2 ;
@end

