/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:48 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Install.framework/Versions/A/Install
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Install/Install-Structs.h>
@class NSString, NSRecursiveLock, NSMutableDictionary;

@interface IFDiskObject : NSObject {

	NSString* _diskRepID;
	NSString* _diskLogicalVolumeUUID;
	NSRecursiveLock* _lock;
	NSMutableDictionary* _cachedAttributes;
	char _installWouldResultInUnsupportedConfig;

}
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)UUID;
-(id)protocol;
-(char)isLeaf;
-(unsigned long long)totalSize;
-(unsigned long long)availableSpace;
-(char)isWritable;
-(id)diskIdentifier;
-(char)isEjectable;
-(id)mountPoint;
-(id)volumeName;
-(id)fileSystemType;
-(char)isJournaled;
-(char)isCoreStorage;
-(unsigned long long)freeSpace;
-(void)purgeCache;
-(char)isWhole;
-(char)isSystemImage;
-(unsigned long long)rawSize;
-(id)fileSystem;
-(char)isPasswordLocked;
-(char)isDiskImage;
-(void)setDiskRep:(DADiskRef)arg1 ;
-(void)setDiskLogicalVolumeUUID:(id)arg1 ;
-(DADiskRef)diskRep;
-(id)dm;
-(id)logicalVolumeUUID;
-(id)logicalVolumeDictionary;
-(char)isAppleRAIDDisk;
-(char)isSoftRAID;
-(id)userContextObjectForKey:(id)arg1 createIfMissing:(char)arg2 ;
-(id)childDADisks;
-(long long)_DMPartitionTypeToMKSchemeID:(int)arg1 ;
-(id)_sortDisksByBSDName:(id)arg1 ;
-(id)initWithDADisk:(DADiskRef)arg1 ;
-(id)initWithLogicalVolumeUUID:(id)arg1 ;
-(id)ioContent;
-(id)fileSystemBundleType;
-(id)rawDeviceNode;
-(id)systemRoot;
-(char)filesystemIsLocked;
-(char)isNetworkDisk;
-(char)isMountedVolume;
-(char)isCDROM;
-(char)isDVDROM;
-(char)isOptical;
-(char)isRootVolume;
-(id)backingDiskImageFile;
-(char)isROSVSystemVolume;
-(char)isMountable;
-(char)isUserDataVolume;
-(char)isSSDBacked;
-(void)setObject:(id)arg1 forKey:(id)arg2 withContext:(id)arg3 ;
-(id)objectForKey:(id)arg1 withContext:(id)arg2 ;
-(id)userContextObjectForKey:(id)arg1 ;
-(void)setUserContextObject:(id)arg1 forKey:(id)arg2 ;
-(id)wholeDiskName;
-(char)childIsRecoveryCompatible:(id)arg1 ;
-(id)parentDisk;
-(void)setInstallWouldResultInUnsupportedConfig:(char)arg1 ;
-(char)installWouldResultInUnsupportedConfig;
@end

