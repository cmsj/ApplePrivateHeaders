/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:28 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoServices.framework/Versions/A/CloudPhotoServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CPLDerivativeGenerator.h>

@interface CloudPhotoServices : NSObject <CPLDerivativeGenerator>
+(void)initialize;
+(id)workQueue;
+(id)generateGIFForVideoAtURL:(id)arg1 destinationURL:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(char)canGenerateImageDerivativesFromUTI:(id)arg1 ;
+(void)resizeImageAtURL:(id)arg1 destinationURL:(id)arg2 options:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
+(char)isMovieUTI:(id)arg1 ;
+(void)generateFullSizeJPEGIfNecessaryFromInputResource:(id)arg1 destinationDirectory:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(void)resizeImageAtURL:(id)arg1 destinationURL:(id)arg2 maximumPixelCount:(long long)arg3 bakeInOrientation:(char)arg4 colorOutput:(long long)arg5 reason:(id)arg6 completionHandler:(/*^block*/id)arg7 ;
+(char)shouldGenerateVideoDerivativeForAVAsset:(id)arg1 forResourceType:(unsigned long long)arg2 adjusted:(char)arg3 ;
+(id)transcodeVideoAtURL:(id)arg1 withAdjustments:(id)arg2 destinationURL:(id)arg3 options:(id)arg4 reason:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
+(void)generatePosterFrameForVideoAtURL:(id)arg1 maximumPixelCount:(long long)arg2 destinationURL:(id)arg3 reason:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
+(void)generateDerivativeResourcesFromInputResource:(id)arg1 withAdjustments:(id)arg2 destinationDirectory:(id)arg3 derivativesFilter:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
+(char)isUnsupportedOriginalFormatError:(id)arg1 ;
+(long long)paMediaConversionColorSpaceForCloudPhotoDerivativeColorOutput:(long long)arg1 ;
+(void)generateDerivativeResourcesFromInputResource:(id)arg1 withAdjustments:(id)arg2 destinationDirectory:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
+(void)_generateImageDerivativeResourcesFromInputResource:(id)arg1 destinationDirectory:(id)arg2 isAdjusted:(char)arg3 derivativesFilter:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
+(unsigned long long)_bestImageResourceTypeForPixelCount:(long long)arg1 ;
+(id)_filenameForResourceWithItemScopedIdentifier:(id)arg1 resourceType:(unsigned long long)arg2 extension:(id)arg3 ;
+(void)_createDerivativeResourcesFromInputURL:(id)arg1 resourceTypes:(id)arg2 withItemScopedIdentifier:(id)arg3 destinationDirectory:(id)arg4 outputResources:(id)arg5 convertToSRGB:(char)arg6 ;
+(id)derivativeImageResourceTypeIdentifierForResourceType:(unsigned long long)arg1 ;
+(id)_createCPLResourceFromURL:(id)arg1 withResourceType:(unsigned long long)arg2 uniformTypeIdentifier:(id)arg3 itemScopedIdentifier:(id)arg4 ;
+(void)_createPosterFrameResourcesFromInputURL:(id)arg1 withItemScopedIdentifier:(id)arg2 includeDerivative:(/*^block*/id)arg3 destinationDirectory:(id)arg4 outputResources:(id)arg5 ;
+(id)_extractVideoMetadataResourceFrom:(id)arg1 destinationDirectory:(id)arg2 ;
+(void)_generateVideoDerivativeResourcesFromInputResource:(id)arg1 withCPLAdjustments:(id)arg2 destinationDirectory:(id)arg3 derivativesFilter:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
+(char)_shouldGenerateLargeVideoDerivativeForAVAsset:(id)arg1 ;
+(char)_shouldGenerateHDRMediumVideoDerivative;
+(void)_createVideoResourcesFromInputURL:(id)arg1 withItemScopedIdentifier:(id)arg2 videoAdjustments:(id)arg3 resourceType:(unsigned long long)arg4 forIris:(char)arg5 destinationDirectory:(id)arg6 outputResources:(id)arg7 ;
+(id)_imageServiceClient;
+(id)_videoServiceClient;
@end

