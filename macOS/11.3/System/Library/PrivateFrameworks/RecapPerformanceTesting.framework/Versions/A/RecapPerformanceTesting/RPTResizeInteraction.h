/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:50 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/RecapPerformanceTesting.framework/Versions/A/RecapPerformanceTesting
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <RecapPerformanceTesting/RecapPerformanceTesting-Structs.h>
#import <libobjc.A.dylib/_RPTCoordinateSpaces.h>
#import <libobjc.A.dylib/RPTInteraction.h>

@class RPTCoordinateSpaceConverter;

@interface RPTResizeInteraction : NSObject <_RPTCoordinateSpaces, RPTInteraction> {

	char _shouldLift;
	char _shouldPress;
	RPTCoordinateSpaceConverter* _conversion;
	CGPoint _dragPoint;
	CGVector _delta;
	CGSize _initialSize;
	CGSize _finalSize;

}

@property (assign,nonatomic) CGPoint dragPoint;                                     //@synthesize dragPoint=_dragPoint - In the implementation block
@property (assign,nonatomic) CGVector delta;                                        //@synthesize delta=_delta - In the implementation block
@property (nonatomic,readonly) CGSize initialSize;                                  //@synthesize initialSize=_initialSize - In the implementation block
@property (nonatomic,readonly) CGSize finalSize;                                    //@synthesize finalSize=_finalSize - In the implementation block
@property (assign,nonatomic) char shouldLift;                                       //@synthesize shouldLift=_shouldLift - In the implementation block
@property (assign,nonatomic) char shouldPress;                                      //@synthesize shouldPress=_shouldPress - In the implementation block
@property (nonatomic,retain) RPTCoordinateSpaceConverter * conversion;              //@synthesize conversion=_conversion - In the implementation block
-(CGVector)delta;
-(void)setDelta:(CGVector)arg1 ;
-(char)shouldLift;
-(CGSize)initialSize;
-(RPTCoordinateSpaceConverter *)conversion;
-(void)setConversion:(RPTCoordinateSpaceConverter *)arg1 ;
-(void)invokeWithComposer:(id)arg1 duration:(double)arg2 ;
-(id)initWithWindow:(id)arg1 destinationSize:(CGSize)arg2 ;
-(CGPoint)dragPoint;
-(void)setDragPoint:(CGPoint)arg1 ;
-(void)setShouldLift:(char)arg1 ;
-(id)reversedInteraction;
-(id)interactionByScalingBy:(double)arg1 ;
-(void)setShouldPress:(char)arg1 ;
-(id)initWithDragPoint:(CGPoint)arg1 sourceSize:(CGSize)arg2 destinationSize:(CGSize)arg3 ;
-(id)initWithDragPoint:(CGPoint)arg1 delta:(CGVector)arg2 sourceSize:(CGSize)arg3 ;
-(CGSize)finalSize;
-(char)shouldPress;
@end

