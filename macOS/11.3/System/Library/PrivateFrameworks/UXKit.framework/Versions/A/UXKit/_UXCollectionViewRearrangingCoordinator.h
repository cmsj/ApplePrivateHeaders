/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/UXKit.framework/Versions/A/UXKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UXKit/UXKit-Structs.h>
#import <UXKit/UXCollectionViewLayoutProxyDelegate.h>
#import <libobjc.A.dylib/NSGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/NSDraggingSource.h>
#import <libobjc.A.dylib/NSDraggingDestination.h>

@class NSArray, NSGestureRecognizer, NSEvent, UXCollectionView, UXCollectionViewCell, NSString, _UXCollectionViewLayoutProxy, UXCollectionViewLayout;

@interface _UXCollectionViewRearrangingCoordinator : NSObject <UXCollectionViewLayoutProxyDelegate, NSGestureRecognizerDelegate, NSDraggingSource, NSDraggingDestination> {

	struct {
		unsigned dataSourceImplementsCanMoveItemsAtIndexPaths : 1;
		unsigned dataSourceImplementsShouldExchangeItemsAtIndexPathsWithProposedIndexPaths : 1;
		unsigned dataSourceImplementsMoveItemsAtIndexPathsToIndexPath : 1;
		unsigned dataSourceImplementsExchangeItemsAtIndexPathsWithIndexPaths : 1;
		unsigned delegateImplementsShouldBeginDraggingSessionWithClickedItemAtIndexPath : 1;
		unsigned delegateImplementsImageForDraggedItemAtIndexPath : 1;
		unsigned delegateImplementsPasteboardWriterForItemAtIndexPath : 1;
		unsigned delegateImplementsDraggingItemForIndexPathProposedDraggingItem : 1;
		unsigned delegateImplementsUpdatesLayoutOnDrag : 1;
		unsigned delegateImplementsPreferredDraggingFormation : 1;
		unsigned delegateImplementsDragSourceIdentifier : 1;
		unsigned delegateImplementsCreatedDraggingSessionForItemsAtIndexPaths : 1;
		unsigned delegateImplementsDraggingSessionSourceOperationMaskForDraggingContext;
		unsigned delegateImplementsDraggingSessionWillBeginAtPoint : 1;
		unsigned delegateImplementsDraggingSessionMovedToPoint : 1;
		unsigned delegateImplementsDraggingSessionEndedAtPointDragOperation : 1;
		unsigned delegateImplementsPrepareForDragOperation : 1;
		unsigned delegateImplementsPerformDragOperation : 1;
		unsigned delegateImplementsDraggingEntered : 1;
		unsigned delegateImplementsDraggingUpdated : 1;
		unsigned delegateImplementsDraggingExited : 1;
		unsigned delegateImplementsDraggingEnded : 1;
	}  _collectionViewFlags;
	NSArray* _initialIndexPaths;
	NSArray* _targetIndexPaths;
	NSArray* _movedIndexPaths;
	NSArray* _exchangedIndexPaths;
	CGPoint _screenPoint;
	char _initialIndexPathsAreContiguous;
	NSGestureRecognizer* _gestureRecognizer;
	double _dragStartTime;
	double _collectionViewReloadLastCallTime;
	double _dragEnteredTime;
	char _updatesLayoutOnDrag;
	char _autoscrolling;
	unsigned long long _sequenceNumber;
	NSEvent* _mouseDownEvent;
	char _isRearranging;
	char _enabled;
	char _allowDragOutsideCells;
	char _continuouslyUpdateInsideCells;
	char _usePileForSingleItem;
	char _allowAutoscroll;
	char _shouldExchange;
	UXCollectionView* _collectionView;
	long long _initiationMode;
	double _rearrangingInitialDelay;
	double _rearrangingPreviewDelay;
	UXCollectionViewCell* _dropTargetCell;
	unsigned long long _dropOperation;
	NSString* _dragSourceIdentifier;
	NSRange _initialIndexRange;
	NSRange _targetIndexRange;
	NSRange _movedIndexRange;
	NSRange _exchangedIndexRange;

}

@property (nonatomic,readonly) _UXCollectionViewLayoutProxy * layoutProxy; 
@property (nonatomic,readonly) id<UXCollectionViewDataSource_Rearranging> dataSource; 
@property (nonatomic,readonly) id<UXCollectionViewDelegate_Rearranging> delegate; 
@property (assign,nonatomic) NSRange initialIndexRange;                                            //@synthesize initialIndexRange=_initialIndexRange - In the implementation block
@property (assign,nonatomic) NSRange targetIndexRange;                                             //@synthesize targetIndexRange=_targetIndexRange - In the implementation block
@property (assign,nonatomic) NSRange movedIndexRange;                                              //@synthesize movedIndexRange=_movedIndexRange - In the implementation block
@property (assign,nonatomic) NSRange exchangedIndexRange;                                          //@synthesize exchangedIndexRange=_exchangedIndexRange - In the implementation block
@property (assign,nonatomic) char shouldExchange;                                                  //@synthesize shouldExchange=_shouldExchange - In the implementation block
@property (nonatomic,retain) UXCollectionViewCell * dropTargetCell;                                //@synthesize dropTargetCell=_dropTargetCell - In the implementation block
@property (assign,nonatomic) unsigned long long dropOperation;                                     //@synthesize dropOperation=_dropOperation - In the implementation block
@property (nonatomic,readonly) NSString * dragSourceIdentifier;                                    //@synthesize dragSourceIdentifier=_dragSourceIdentifier - In the implementation block
@property (nonatomic,readonly) UXCollectionView * collectionView;                                  //@synthesize collectionView=_collectionView - In the implementation block
@property (nonatomic,readonly) UXCollectionViewLayout * collectionViewLayout; 
@property (nonatomic,readonly) char isRearranging;                                                 //@synthesize isRearranging=_isRearranging - In the implementation block
@property (assign,nonatomic) char enabled;                                                         //@synthesize enabled=_enabled - In the implementation block
@property (assign,nonatomic) long long initiationMode;                                             //@synthesize initiationMode=_initiationMode - In the implementation block
@property (assign,nonatomic) char allowDragOutsideCells;                                           //@synthesize allowDragOutsideCells=_allowDragOutsideCells - In the implementation block
@property (assign,nonatomic) char continuouslyUpdateInsideCells;                                   //@synthesize continuouslyUpdateInsideCells=_continuouslyUpdateInsideCells - In the implementation block
@property (assign,nonatomic) char usePileForSingleItem;                                            //@synthesize usePileForSingleItem=_usePileForSingleItem - In the implementation block
@property (assign,nonatomic) char allowAutoscroll;                                                 //@synthesize allowAutoscroll=_allowAutoscroll - In the implementation block
@property (assign,nonatomic) double rearrangingInitialDelay;                                       //@synthesize rearrangingInitialDelay=_rearrangingInitialDelay - In the implementation block
@property (assign,nonatomic) double rearrangingPreviewDelay;                                       //@synthesize rearrangingPreviewDelay=_rearrangingPreviewDelay - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(id<UXCollectionViewDelegate_Rearranging>)delegate;
-(char)enabled;
-(void)setEnabled:(char)arg1 ;
-(id<UXCollectionViewDataSource_Rearranging>)dataSource;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(UXCollectionView *)collectionView;
-(unsigned long long)draggingEntered:(id)arg1 ;
-(unsigned long long)draggingUpdated:(id)arg1 ;
-(void)draggingExited:(id)arg1 ;
-(void)draggingEnded:(id)arg1 ;
-(char)performDragOperation:(id)arg1 ;
-(id)layoutAttributesForElementsInRect:(CGRect)arg1 ;
-(void)updateDraggingItemsForDrag:(id)arg1 ;
-(char)prepareForDragOperation:(id)arg1 ;
-(void)concludeDragOperation:(id)arg1 ;
-(char)wantsPeriodicDraggingUpdates;
-(void)draggingSession:(id)arg1 willBeginAtPoint:(CGPoint)arg2 ;
-(unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2 ;
-(void)draggingSession:(id)arg1 endedAtPoint:(CGPoint)arg2 operation:(unsigned long long)arg3 ;
-(void)draggingSession:(id)arg1 movedToPoint:(CGPoint)arg2 ;
-(UXCollectionViewLayout *)collectionViewLayout;
-(id)initWithCollectionView:(id)arg1 ;
-(unsigned long long)dropOperation;
-(void)setDropOperation:(unsigned long long)arg1 ;
-(void)removeGestureRecognizer;
-(void)reloadLayout;
-(_UXCollectionViewLayoutProxy *)layoutProxy;
-(void)setDropTargetCell:(UXCollectionViewCell *)arg1 ;
-(void)setInitiationMode:(long long)arg1 ;
-(void)createGestureRecognizer;
-(void)_updateDragSourceIdentifier;
-(void)_gestureRecognized:(id)arg1 ;
-(char)_allowRearranging;
-(void)_beginRearrangingItemsWithIndexPaths:(id)arg1 ;
-(void)_updateRearrangingStateForLocation:(id)arg1 ;
-(void)_reloadCollectionViewWithAnimation;
-(void)_finishRearrangingForLocation:(CGPoint)arg1 shouldComplete:(char)arg2 ;
-(id)_imageForItemAtIndexPath:(id)arg1 ;
-(void)_beginDraggingSessionForIndexPaths:(id)arg1 ;
-(void)_moveItemsAtIndexPaths:(id)arg1 toIndexPaths:(id)arg2 ;
-(void)_autoscrollWithWindowLocation:(CGPoint)arg1 ;
-(void)_createdDraggingSession:(id)arg1 forItemsAtIndexPaths:(id)arg2 ;
-(char)_shouldHandleExternalDrop:(id)arg1 ;
-(char)_allowAutoscrollForDraggingInfo:(id)arg1 ;
-(char)_isSourceOfDraggingInfo:(id)arg1 ;
-(char)_isEquivalentSourceOfDraggingInfo:(id)arg1 ;
-(char)isRearranging;
-(long long)initiationMode;
-(char)allowDragOutsideCells;
-(void)setAllowDragOutsideCells:(char)arg1 ;
-(char)continuouslyUpdateInsideCells;
-(void)setContinuouslyUpdateInsideCells:(char)arg1 ;
-(char)usePileForSingleItem;
-(void)setUsePileForSingleItem:(char)arg1 ;
-(char)allowAutoscroll;
-(void)setAllowAutoscroll:(char)arg1 ;
-(double)rearrangingInitialDelay;
-(void)setRearrangingInitialDelay:(double)arg1 ;
-(double)rearrangingPreviewDelay;
-(void)setRearrangingPreviewDelay:(double)arg1 ;
-(NSRange)initialIndexRange;
-(void)setInitialIndexRange:(NSRange)arg1 ;
-(NSRange)targetIndexRange;
-(void)setTargetIndexRange:(NSRange)arg1 ;
-(NSRange)movedIndexRange;
-(void)setMovedIndexRange:(NSRange)arg1 ;
-(NSRange)exchangedIndexRange;
-(void)setExchangedIndexRange:(NSRange)arg1 ;
-(char)shouldExchange;
-(void)setShouldExchange:(char)arg1 ;
-(UXCollectionViewCell *)dropTargetCell;
-(NSString *)dragSourceIdentifier;
@end

