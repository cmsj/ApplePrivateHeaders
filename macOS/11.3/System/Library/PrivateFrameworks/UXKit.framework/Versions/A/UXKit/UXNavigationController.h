/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/UXKit.framework/Versions/A/UXKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UXKit/UXKit-Structs.h>
#import <UXKit/UXViewController.h>
#import <UXKit/UXToolbarDelegate.h>
#import <libobjc.A.dylib/NSMenuDelegate.h>

@protocol UXNavigationControllerDelegate, _UXAccessoryBarContainer;
@class NSMutableArray, UXNavigationBar, UXToolbar, NSGestureRecognizer, _UXWindowState, _UXContainerView, NSLayoutConstraint, NSArray, _UXViewControllerOneToOneTransitionContext, UXTransitionController, UXViewController, UXView, NSVisualEffectView, NSString;

@interface UXNavigationController : UXViewController <UXToolbarDelegate, NSMenuDelegate> {

	NSMutableArray* _navigationRequests;
	NSMutableArray* _targetViewControllers;
	NSMutableArray* _currentViewControllers;
	UXNavigationBar* _navigationBar;
	UXToolbar* _accessoryBar;
	UXToolbar* _toolbar;
	struct {
		unsigned willShowViewController : 1;
		unsigned didShowViewController : 1;
		unsigned interactionControllerForAnimationController : 1;
		unsigned animationControllerForOperation : 1;
		unsigned shouldBeginInteractivePopFromViewControllerToViewController : 1;
	}  _delegateFlags;
	char _isPerformingToolbarsChanges;
	struct {
		char toolbarItems;
		char subtoolbarItems;
		char positions;
		char visibility;
		char appearance;
	}  _toolbarsNeedUpdateFlags;
	char _navigationBarHidden;
	char _navigationBarDetached;
	char _toolbarHidden;
	char _subtoolbarHidden;
	char _backButtonMenuEnabled;
	char _shouldAnimateToolbarUpdates;
	char __fullScreenMode;
	char __locked;
	char __hidesBackTitles;
	char _isTransitioning;
	char _isInteractive;
	UXToolbar* _subtoolbar;
	id<UXNavigationControllerDelegate> _delegate;
	NSGestureRecognizer* _interactivePopGestureRecognizer;
	Class _navigationBarClass;
	Class _toolbarClass;
	_UXWindowState* _windowState;
	_UXContainerView* _containerView;
	NSMutableArray* _addedConstraints;
	NSLayoutConstraint* _topConstraint;
	NSLayoutConstraint* _bottomConstraint;
	NSLayoutConstraint* _navigationBarTopConstraint;
	NSArray* _navigationBarConstraints;
	NSLayoutConstraint* _toolbarVerticalConstraint;
	NSLayoutConstraint* _toolbarLeadingConstraint;
	NSLayoutConstraint* _topViewControllerLeftConstraint;
	NSArray* _topViewControllerOtherConstraints;
	_UXViewControllerOneToOneTransitionContext* _currentTransitionContext;
	long long _currentOperation;
	UXTransitionController* _defaultTransitionController;
	UXViewController* _observedViewController;
	UXViewController* _provisionalPreviousViewController;
	UXView* _toolbarExtendedBackgroundView;
	/*^block*/id _testingTransitionAnimationCompletionHandler;
	NSVisualEffectView* _toolbarVisualEffectsView;
	NSVisualEffectView* _subtoolbarVisualEffectsView;
	double __leadingContentInset;
	long long __toolbarPosition;
	long long __subtoolbarPosition;
	unsigned long long __defaultPushTransition;
	unsigned long long __defaultPopTransition;
	id<_UXAccessoryBarContainer> _accessoryBarContainer;

}

@property (nonatomic,retain) Class navigationBarClass;                                                                 //@synthesize navigationBarClass=_navigationBarClass - In the implementation block
@property (nonatomic,retain) Class toolbarClass;                                                                       //@synthesize toolbarClass=_toolbarClass - In the implementation block
@property (nonatomic,retain) _UXWindowState * windowState;                                                             //@synthesize windowState=_windowState - In the implementation block
@property (nonatomic,retain) _UXContainerView * containerView;                                                         //@synthesize containerView=_containerView - In the implementation block
@property (nonatomic,retain) NSMutableArray * addedConstraints;                                                        //@synthesize addedConstraints=_addedConstraints - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * topConstraint;                                                       //@synthesize topConstraint=_topConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * bottomConstraint;                                                    //@synthesize bottomConstraint=_bottomConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * navigationBarTopConstraint;                                          //@synthesize navigationBarTopConstraint=_navigationBarTopConstraint - In the implementation block
@property (nonatomic,retain) NSArray * navigationBarConstraints;                                                       //@synthesize navigationBarConstraints=_navigationBarConstraints - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * toolbarVerticalConstraint;                                           //@synthesize toolbarVerticalConstraint=_toolbarVerticalConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * toolbarLeadingConstraint;                                            //@synthesize toolbarLeadingConstraint=_toolbarLeadingConstraint - In the implementation block
@property (nonatomic,retain) NSLayoutConstraint * topViewControllerLeftConstraint;                                     //@synthesize topViewControllerLeftConstraint=_topViewControllerLeftConstraint - In the implementation block
@property (nonatomic,retain) NSArray * topViewControllerOtherConstraints;                                              //@synthesize topViewControllerOtherConstraints=_topViewControllerOtherConstraints - In the implementation block
@property (nonatomic,retain) _UXViewControllerOneToOneTransitionContext * currentTransitionContext;                    //@synthesize currentTransitionContext=_currentTransitionContext - In the implementation block
@property (assign,nonatomic) long long currentOperation;                                                               //@synthesize currentOperation=_currentOperation - In the implementation block
@property (nonatomic,retain) UXTransitionController * defaultTransitionController;                                     //@synthesize defaultTransitionController=_defaultTransitionController - In the implementation block
@property (nonatomic,retain) UXViewController * observedViewController;                                                //@synthesize observedViewController=_observedViewController - In the implementation block
@property (nonatomic,retain) UXViewController * provisionalPreviousViewController;                                     //@synthesize provisionalPreviousViewController=_provisionalPreviousViewController - In the implementation block
@property (assign,getter=isNavigationBarDetached,nonatomic) char navigationBarDetached;                                //@synthesize navigationBarDetached=_navigationBarDetached - In the implementation block
@property (assign,getter=isBackButtonMenuEnabled,nonatomic) char backButtonMenuEnabled;                                //@synthesize backButtonMenuEnabled=_backButtonMenuEnabled - In the implementation block
@property (nonatomic,readonly) UXView * toolbarExtendedBackgroundView;                                                 //@synthesize toolbarExtendedBackgroundView=_toolbarExtendedBackgroundView - In the implementation block
@property (assign,nonatomic) char shouldAnimateToolbarUpdates;                                                         //@synthesize shouldAnimateToolbarUpdates=_shouldAnimateToolbarUpdates - In the implementation block
@property (nonatomic,copy) id testingTransitionAnimationCompletionHandler;                                             //@synthesize testingTransitionAnimationCompletionHandler=_testingTransitionAnimationCompletionHandler - In the implementation block
@property (nonatomic,retain) NSVisualEffectView * toolbarVisualEffectsView;                                            //@synthesize toolbarVisualEffectsView=_toolbarVisualEffectsView - In the implementation block
@property (nonatomic,retain) NSVisualEffectView * subtoolbarVisualEffectsView;                                         //@synthesize subtoolbarVisualEffectsView=_subtoolbarVisualEffectsView - In the implementation block
@property (assign,setter=_setFullScreenMode:,getter=_isFullScreenMode,nonatomic) char _fullScreenMode;                 //@synthesize _fullScreenMode=__fullScreenMode - In the implementation block
@property (assign,setter=_setLocked:,getter=_isLocked,nonatomic) char _locked;                                         //@synthesize _locked=__locked - In the implementation block
@property (nonatomic,readonly) double _leadingContentInset;                                                            //@synthesize _leadingContentInset=__leadingContentInset - In the implementation block
@property (nonatomic,readonly) long long _toolbarPosition;                                                             //@synthesize _toolbarPosition=__toolbarPosition - In the implementation block
@property (nonatomic,readonly) long long _subtoolbarPosition;                                                          //@synthesize _subtoolbarPosition=__subtoolbarPosition - In the implementation block
@property (assign,setter=_setDefaultPushTransition:,nonatomic) unsigned long long _defaultPushTransition;              //@synthesize _defaultPushTransition=__defaultPushTransition - In the implementation block
@property (assign,setter=_setDefaultPopTransition:,nonatomic) unsigned long long _defaultPopTransition;                //@synthesize _defaultPopTransition=__defaultPopTransition - In the implementation block
@property (getter=isAccessoryBarHidden,nonatomic,readonly) char accessoryBarHidden; 
@property (nonatomic,readonly) UXToolbar * accessoryBar; 
@property (assign,nonatomic,__weak) id<_UXAccessoryBarContainer> accessoryBarContainer;                                //@synthesize accessoryBarContainer=_accessoryBarContainer - In the implementation block
@property (assign,setter=_setHidesBackTitles:,nonatomic) char _hidesBackTitles;                                        //@synthesize _hidesBackTitles=__hidesBackTitles - In the implementation block
@property (nonatomic,readonly) UXViewController * currentTopViewController; 
@property (nonatomic,readonly) char isTransitioning;                                                                   //@synthesize isTransitioning=_isTransitioning - In the implementation block
@property (nonatomic,readonly) char isInteractive;                                                                     //@synthesize isInteractive=_isInteractive - In the implementation block
@property (nonatomic,copy) NSArray * viewControllers; 
@property (assign,getter=isNavigationBarHidden,nonatomic) char navigationBarHidden;                                    //@synthesize navigationBarHidden=_navigationBarHidden - In the implementation block
@property (nonatomic,readonly) UXNavigationBar * navigationBar; 
@property (assign,getter=isToolbarHidden,nonatomic) char toolbarHidden;                                                //@synthesize toolbarHidden=_toolbarHidden - In the implementation block
@property (nonatomic,readonly) UXToolbar * toolbar; 
@property (nonatomic,readonly) UXToolbar * subtoolbar;                                                                 //@synthesize subtoolbar=_subtoolbar - In the implementation block
@property (assign,getter=isSubtoolbarHidden,nonatomic) char subtoolbarHidden;                                          //@synthesize subtoolbarHidden=_subtoolbarHidden - In the implementation block
@property (assign,nonatomic,__weak) id<UXNavigationControllerDelegate> delegate;                                       //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSGestureRecognizer * interactivePopGestureRecognizer;                                  //@synthesize interactivePopGestureRecognizer=_interactivePopGestureRecognizer - In the implementation block
@property (nonatomic,readonly) NSGestureRecognizer * interactivePopEventTracker; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)topViewControllerObservationKeyPathsByContext;
+(id)keyPathsForValuesAffectingPreferredContentSize;
-(void)dealloc;
-(id<UXNavigationControllerDelegate>)delegate;
-(void)setDelegate:(id<UXNavigationControllerDelegate>)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(long long)currentOperation;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewDidLayout;
-(UXToolbar *)toolbar;
-(void)keyDown:(id)arg1 ;
-(void)scrollWheel:(id)arg1 ;
-(_UXContainerView *)containerView;
-(void)addChildViewController:(id)arg1 ;
-(void)setContainerView:(_UXContainerView *)arg1 ;
-(void)menuNeedsUpdate:(id)arg1 ;
-(void)viewWillLayout;
-(void)updateViewConstraints;
-(void)viewDidLoad;
-(CGSize)preferredContentSize;
-(void)viewWillAppear;
-(void)viewDidAppear;
-(void)setCurrentOperation:(long long)arg1 ;
-(char)wantsForwardedScrollEventsForAxis:(long long)arg1 ;
-(void)moveToBeginningOfDocument:(id)arg1 ;
-(char)isTransitioning;
-(void)setTopConstraint:(NSLayoutConstraint *)arg1 ;
-(void)setBottomConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)topConstraint;
-(NSLayoutConstraint *)bottomConstraint;
-(void)setViewControllers:(NSArray *)arg1 ;
-(NSArray *)viewControllers;
-(id)topViewController;
-(void)pushViewController:(id)arg1 animated:(char)arg2 ;
-(void)setViewControllers:(id)arg1 animated:(char)arg2 ;
-(id)initWithRootViewController:(id)arg1 ;
-(id)popViewControllerAnimated:(char)arg1 ;
-(char)_isLocked;
-(void)setWindowState:(_UXWindowState *)arg1 ;
-(_UXWindowState *)windowState;
-(char)isInteractive;
-(UXNavigationBar *)navigationBar;
-(void)setNavigationBarHidden:(char)arg1 animated:(char)arg2 ;
-(char)isNavigationBarHidden;
-(void)setNavigationBarHidden:(char)arg1 ;
-(id)popToViewController:(id)arg1 animated:(char)arg2 ;
-(id)transitionCoordinator;
-(void)_setLocked:(char)arg1 ;
-(char)isToolbarHidden;
-(long long)positionForBar:(id)arg1 ;
-(id)popToRootViewControllerAnimated:(char)arg1 ;
-(void)_setViewControllers:(id)arg1 animated:(char)arg2 ;
-(void)setNavigationBarClass:(Class)arg1 ;
-(id)visibleViewController;
-(NSGestureRecognizer *)interactivePopGestureRecognizer;
-(void)setToolbarHidden:(char)arg1 animated:(char)arg2 ;
-(void)setToolbarHidden:(char)arg1 ;
-(id)initWithNavigationBarClass:(Class)arg1 toolbarClass:(Class)arg2 ;
-(Class)navigationBarClass;
-(void)setEdgesForExtendedLayout:(unsigned long long)arg1 ;
-(id)preferredFirstResponder;
-(long long)_toolbarPosition;
-(void)_invalidateIntrinsicLayoutInsetsForViewController:(id)arg1 ;
-(void)invalidateIntrinsicLayoutInsets;
-(id)_contextForTransitionOperation:(long long)arg1 fromViewController:(id)arg2 toViewController:(id)arg3 transition:(unsigned long long)arg4 ;
-(char)_requiresWindowForTransitionPreparation;
-(void)_prepareForAnimationInContext:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setObservedViewController:(UXViewController *)arg1 ;
-(id)contentRepresentingViewController;
-(UXViewController *)observedViewController;
-(NSEdgeInsets)intrinsicLayoutInsets;
-(NSMutableArray *)addedConstraints;
-(void)setAddedConstraints:(NSMutableArray *)arg1 ;
-(void)_prepareViewController:(id)arg1 forAnimationInContext:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_beginTransitionWithContext:(id)arg1 operation:(long long)arg2 ;
-(double)_navigationBarVerticalOffset;
-(double)_toolbarVerticalOffset;
-(id)_verticalToolbarLayoutConstraint;
-(NSEdgeInsets)_intrinsicLayoutInsetsForChildViewController:(id)arg1 ;
-(id)currentTransitionCoordinator;
-(void)_setAccessoryBarHidden:(char)arg1 ;
-(void)setSubtoolbarHidden:(char)arg1 ;
-(char)_toolbarNeedsVerticalOffsetUpdate;
-(void)_setToolbarHidden:(char)arg1 subtoolbarHidden:(char)arg2 animated:(char)arg3 duration:(double)arg4 animateSubtree:(char)arg5 ;
-(double)_hiddenToolbarOffset;
-(double)_visibleToolbarOffset;
-(void)_setLeadingContentInset:(double)arg1 forViewController:(id)arg2 ;
-(double)_leftContentInset;
-(void)performToolbarsChanges:(/*^block*/id)arg1 ;
-(char)_toolbarsNeedUpdate;
-(void)_setToolbarsNeedUpdate;
-(void)_invalidateToolbarItems;
-(void)_invalidateSubtoolbarItems;
-(void)_invalidateToolbarsPositions;
-(void)_invalidateToolbarsVisibility;
-(void)_invalidateToolbarsAppearance;
-(void)_updateToolbarsIfNeeded;
-(void)_setToolbarPosition:(long long)arg1 subtoolbarPosition:(long long)arg2 ;
-(void)_updateToolbarsPositionsUsingTopViewController:(id)arg1 ;
-(void)_updateToolbarVisibilityUsingTopViewController:(id)arg1 animated:(char)arg2 duration:(double)arg3 animateSubtree:(char)arg4 ;
-(void)_updateToolbarAppearanceUsingTopViewController:(id)arg1 animated:(char)arg2 duration:(double)arg3 ;
-(char)isAccessoryBarHidden;
-(UXToolbar *)accessoryBar;
-(NSVisualEffectView *)toolbarVisualEffectsView;
-(NSVisualEffectView *)subtoolbarVisualEffectsView;
-(void)_setFullScreenMode:(char)arg1 ;
-(NSGestureRecognizer *)interactivePopEventTracker;
-(void)__back:(id)arg1 ;
-(void)detachNavigationBar;
-(UXViewController *)currentTopViewController;
-(id)_performNavigationRequest:(id)arg1 ;
-(void)_checkinSetNavigationRequest:(id)arg1 ;
-(void)_checkinPushNavigationRequest:(id)arg1 ;
-(id)_checkinPopNavigationRequest:(id)arg1 ;
-(void)_removeAllNavigationRequests;
-(char)_hasNoNavigationRequests;
-(id)_performOrEnqueueNavigationRequest:(id)arg1 ;
-(id)_dequeueNavigationRequest;
-(void)_pushViewController:(id)arg1 transition:(unsigned long long)arg2 ;
-(id)_popToViewController:(id)arg1 transition:(unsigned long long)arg2 ;
-(void)_addConstraintsForContainedView:(id)arg1 leftInset:(double)arg2 ;
-(void)_removeConstraintsForContainedView:(id)arg1 ;
-(void)_handleInteractiveUpdateWithEvent:(id)arg1 ;
-(id)_customAnimationControllerForOperation:(long long)arg1 fromViewController:(id)arg2 toViewController:(id)arg3 transition:(unsigned long long)arg4 ;
-(id)_customInteractionControllerForAnimationController:(id)arg1 transition:(unsigned long long)arg2 ;
-(void)_setupLayoutGuidesForViewController:(id)arg1 ;
-(void)_addBackBarItemFromNavigationItem:(id)arg1 toNavigationItem:(id)arg2 ;
-(id)_backItemWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3 ;
-(void)_beginObservingCurrentTopViewController;
-(void)_endObservingCurrentTopViewController;
-(void)goBackWithMenuItem:(id)arg1 ;
-(char)isNavigationBarDetached;
-(void)setNavigationBarDetached:(char)arg1 ;
-(UXToolbar *)subtoolbar;
-(char)isSubtoolbarHidden;
-(Class)toolbarClass;
-(void)setToolbarClass:(Class)arg1 ;
-(NSLayoutConstraint *)navigationBarTopConstraint;
-(void)setNavigationBarTopConstraint:(NSLayoutConstraint *)arg1 ;
-(NSArray *)navigationBarConstraints;
-(void)setNavigationBarConstraints:(NSArray *)arg1 ;
-(NSLayoutConstraint *)toolbarVerticalConstraint;
-(void)setToolbarVerticalConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)toolbarLeadingConstraint;
-(void)setToolbarLeadingConstraint:(NSLayoutConstraint *)arg1 ;
-(NSLayoutConstraint *)topViewControllerLeftConstraint;
-(void)setTopViewControllerLeftConstraint:(NSLayoutConstraint *)arg1 ;
-(NSArray *)topViewControllerOtherConstraints;
-(void)setTopViewControllerOtherConstraints:(NSArray *)arg1 ;
-(_UXViewControllerOneToOneTransitionContext *)currentTransitionContext;
-(void)setCurrentTransitionContext:(_UXViewControllerOneToOneTransitionContext *)arg1 ;
-(UXTransitionController *)defaultTransitionController;
-(void)setDefaultTransitionController:(UXTransitionController *)arg1 ;
-(UXViewController *)provisionalPreviousViewController;
-(void)setProvisionalPreviousViewController:(UXViewController *)arg1 ;
-(char)isBackButtonMenuEnabled;
-(void)setBackButtonMenuEnabled:(char)arg1 ;
-(UXView *)toolbarExtendedBackgroundView;
-(char)shouldAnimateToolbarUpdates;
-(void)setShouldAnimateToolbarUpdates:(char)arg1 ;
-(id)testingTransitionAnimationCompletionHandler;
-(void)setTestingTransitionAnimationCompletionHandler:(id)arg1 ;
-(void)setToolbarVisualEffectsView:(NSVisualEffectView *)arg1 ;
-(void)setSubtoolbarVisualEffectsView:(NSVisualEffectView *)arg1 ;
-(char)_isFullScreenMode;
-(double)_leadingContentInset;
-(long long)_subtoolbarPosition;
-(unsigned long long)_defaultPushTransition;
-(void)_setDefaultPushTransition:(unsigned long long)arg1 ;
-(unsigned long long)_defaultPopTransition;
-(void)_setDefaultPopTransition:(unsigned long long)arg1 ;
-(id<_UXAccessoryBarContainer>)accessoryBarContainer;
-(void)setAccessoryBarContainer:(id<_UXAccessoryBarContainer>)arg1 ;
-(char)_hidesBackTitles;
-(void)_setHidesBackTitles:(char)arg1 ;
-(void)testing_notifyTransitionAnimationDidComplete;
-(void)testing_installTransitionAnimationCompletionHandler:(/*^block*/id)arg1 ;
@end

