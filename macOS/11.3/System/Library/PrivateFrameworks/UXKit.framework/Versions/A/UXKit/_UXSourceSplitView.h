/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/UXKit.framework/Versions/A/UXKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UXKit/UXKit-Structs.h>
#import <UXKit/UXView.h>
#import <libobjc.A.dylib/NSGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/NSSidebarTrackingAdapter.h>
#import <UXKit/_UXSourceSplitViewCursorProvider.h>
#import <libobjc.A.dylib/NSAccessibilityGroup.h>

@protocol _UXSourceSplitViewDelegate;
@class NSObject, NSLayoutConstraint, NSArray, _UXSourceSplitItemView, NSBox, _UXSourceSplitViewSpringLoadingView, _UXSourceSplitViewShadowView, NSWindow, NSGestureRecognizer, NSCursor, UXView, NSString;

@interface _UXSourceSplitView : UXView <NSGestureRecognizerDelegate, NSSidebarTrackingAdapter, _UXSourceSplitViewCursorProvider, NSAccessibilityGroup> {

	NSLayoutConstraint* _dividerTrailingConstraint;
	NSArray* _dividerVerticalConstraints;
	NSLayoutConstraint* _masterViewWidthConstraint;
	char _resizing;
	char _currentlySpringLoading;
	char _needsSidebarProviderUpdate;
	char _hasProvidedSidebarToWindow;
	char _transientlyUncollapsed;
	char _collapsed;
	char _revealsOnEdgeHoverInFullscreen;
	char _springLoaded;
	char _wantsCollapsed;
	char _autoCollapsed;
	_UXSourceSplitItemView* _masterView;
	_UXSourceSplitItemView* _detailView;
	double _minimumMasterWidth;
	double _maximumMasterWidth;
	double _minimumWidthForInlineSourceList;
	id<_UXSourceSplitViewDelegate> _delegate;
	NSBox* _divider;
	_UXSourceSplitViewSpringLoadingView* _leadingSpringLoadingView;
	_UXSourceSplitViewShadowView* _leadingOverlayShadowView;
	NSWindow* _transientOverlayWindow;
	NSGestureRecognizer* _resizeRecognizer;

}

@property (nonatomic,readonly) NSBox * divider;                                                             //@synthesize divider=_divider - In the implementation block
@property (nonatomic,readonly) NSCursor * dividerCursor; 
@property (nonatomic,readonly) _UXSourceSplitViewSpringLoadingView * leadingSpringLoadingView;              //@synthesize leadingSpringLoadingView=_leadingSpringLoadingView - In the implementation block
@property (nonatomic,readonly) _UXSourceSplitViewShadowView * leadingOverlayShadowView;                     //@synthesize leadingOverlayShadowView=_leadingOverlayShadowView - In the implementation block
@property (nonatomic,readonly) char autoCollapsed;                                                          //@synthesize autoCollapsed=_autoCollapsed - In the implementation block
@property (assign,nonatomic) double dividerPosition; 
@property (nonatomic,retain) NSWindow * transientOverlayWindow;                                             //@synthesize transientOverlayWindow=_transientOverlayWindow - In the implementation block
@property (nonatomic,retain) NSGestureRecognizer * resizeRecognizer;                                        //@synthesize resizeRecognizer=_resizeRecognizer - In the implementation block
@property (nonatomic,readonly) _UXSourceSplitItemView * masterView;                                         //@synthesize masterView=_masterView - In the implementation block
@property (nonatomic,readonly) _UXSourceSplitItemView * detailView;                                         //@synthesize detailView=_detailView - In the implementation block
@property (nonatomic,readonly) double leadingContentInset; 
@property (nonatomic,readonly) UXView * subviewToReveal; 
@property (nonatomic,readonly) char transientlyUncollapsed;                                                 //@synthesize transientlyUncollapsed=_transientlyUncollapsed - In the implementation block
@property (nonatomic,readonly) char collapsed;                                                              //@synthesize collapsed=_collapsed - In the implementation block
@property (assign,nonatomic) double minimumMasterWidth;                                                     //@synthesize minimumMasterWidth=_minimumMasterWidth - In the implementation block
@property (assign,nonatomic) double maximumMasterWidth;                                                     //@synthesize maximumMasterWidth=_maximumMasterWidth - In the implementation block
@property (assign,nonatomic) double masterWidth; 
@property (assign,nonatomic) double minimumWidthForInlineSourceList;                                        //@synthesize minimumWidthForInlineSourceList=_minimumWidthForInlineSourceList - In the implementation block
@property (assign,nonatomic) char revealsOnEdgeHoverInFullscreen;                                           //@synthesize revealsOnEdgeHoverInFullscreen=_revealsOnEdgeHoverInFullscreen - In the implementation block
@property (assign,nonatomic) char springLoaded;                                                             //@synthesize springLoaded=_springLoaded - In the implementation block
@property (assign,nonatomic) char wantsCollapsed;                                                           //@synthesize wantsCollapsed=_wantsCollapsed - In the implementation block
@property (assign,nonatomic,__weak) id<_UXSourceSplitViewDelegate> delegate;                                //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) double sidebarDividerPosition; 
@property (readonly) long long depthOfView; 
@property (readonly) NSObject * representedView; 
@property (readonly) double minimumDividerPosition; 
@property (readonly) double maximumDividerPosition; 
@property (readonly) char isCollapsed; 
@property (getter=isOverlaidAsSidebar,readonly) char overlaidAsSidebar; 
@property (readonly) double dividerWidth; 
@property (assign) NSEdgeInsets sidebarAdditionalSafeAreaInsets; 
-(id<_UXSourceSplitViewDelegate>)delegate;
-(void)setDelegate:(id<_UXSourceSplitViewDelegate>)arg1 ;
-(void)layout;
-(void)resetCursorRects;
-(char)gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2 ;
-(double)sidebarDividerPosition;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)hitTest:(CGPoint)arg1 ;
-(void)viewDidMoveToWindow;
-(char)gestureRecognizerShouldBegin:(id)arg1 ;
-(id)accessibilityChildren;
-(id)accessibilityRole;
-(id)accessibilitySplitters;
-(void)windowDidResize:(id)arg1 ;
-(void)setSpringLoaded:(char)arg1 ;
-(char)springLoaded;
-(void)viewWillMoveToWindow:(id)arg1 ;
-(void)toggleSidebar:(id)arg1 ;
-(void)cursorUpdate:(id)arg1 ;
-(char)revealsOnEdgeHoverInFullscreen;
-(char)collapsed;
-(_UXSourceSplitViewShadowView *)leadingOverlayShadowView;
-(_UXSourceSplitViewSpringLoadingView *)leadingSpringLoadingView;
-(void)_removeWindowSidebarTrackingIfApplicable;
-(void)_noteNeedsSidebarProviderUpdate;
-(void)_updateWindowSidebarTrackingIfApplicable;
-(char)_canSpringLoad;
-(void)setDividerPosition:(double)arg1 ;
-(long long)depthOfView;
-(NSObject *)representedView;
-(void)setRevealsOnEdgeHoverInFullscreen:(char)arg1 ;
-(double)dividerPosition;
-(_UXSourceSplitItemView *)detailView;
-(NSBox *)divider;
-(NSCursor *)dividerCursor;
-(void)updateConstraintsForDividerAndMain;
-(void)setMasterWidth:(double)arg1 ;
-(double)masterWidth;
-(double)leadingContentInsetForWantsCollapsed:(char)arg1 ;
-(double)leadingContentInset;
-(void)setWantsCollapsed:(char)arg1 ;
-(void)didChangeCollapsed;
-(void)_moveMasterAndDividerToView:(id)arg1 ;
-(void)_setupTransientOverlayWindow;
-(void)_tearDownTransientOverlayWindow;
-(void)setTransientlyUncollapsed:(char)arg1 animated:(char)arg2 ;
-(UXView *)subviewToReveal;
-(void)_resizeToWidth:(double)arg1 ;
-(void)_startDividerLiveResize;
-(void)_endDividerLiveResize;
-(char)_shouldBeCollapsed;
-(void)_didChangeTransientlyUncollapsed;
-(void)_setCollapsed:(char)arg1 shouldLayoutSubtree:(char)arg2 ;
-(char)_springLoading:(char)arg1 ;
-(void)_registerSplitViewItemTrackingIfApplicable;
-(void)_unregisterSplitViewItemTrackingIfApplicable;
-(void)_prepareSplitViewItemTrackingRegistration;
-(void)handlePanGestureRecognizer:(id)arg1 ;
-(void)_performResizeWithGestureRecognizer:(id)arg1 ;
-(_UXSourceSplitItemView *)masterView;
-(char)transientlyUncollapsed;
-(double)minimumMasterWidth;
-(void)setMinimumMasterWidth:(double)arg1 ;
-(double)maximumMasterWidth;
-(void)setMaximumMasterWidth:(double)arg1 ;
-(double)minimumWidthForInlineSourceList;
-(void)setMinimumWidthForInlineSourceList:(double)arg1 ;
-(char)wantsCollapsed;
-(char)autoCollapsed;
-(NSWindow *)transientOverlayWindow;
-(void)setTransientOverlayWindow:(NSWindow *)arg1 ;
-(NSGestureRecognizer *)resizeRecognizer;
-(void)setResizeRecognizer:(NSGestureRecognizer *)arg1 ;
@end

