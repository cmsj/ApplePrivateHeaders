/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:35 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/XQuery.framework/Versions/A/XQuery
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <XQuery/XQuery-Structs.h>
#import <Foundation/NSNumber.h>
#import <XQuery/XQueryAtomicType.h>

@class NSNumber, NSString;

@interface XQueryNumber : NSNumber <XQueryAtomicType> {

	NSNumber* _number;
	long long _type;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
+(id)numberWithUnsignedInt:(unsigned long long)arg1 ;
+(id)numberWithUnsignedShort:(unsigned short)arg1 ;
+(id)numberWithUnsignedLongLong:(unsigned long long)arg1 ;
+(id)numberWithBool:(char)arg1 ;
+(id)numberWithInt:(long long)arg1 ;
+(id)numberWithUnsignedChar:(unsigned char)arg1 ;
+(id)numberWithUnsignedLong:(unsigned long long)arg1 ;
+(id)numberWithFloat:(float)arg1 ;
+(id)numberWithDouble:(double)arg1 ;
+(id)numberWithLong:(long long)arg1 ;
+(id)numberWithLongLong:(long long)arg1 ;
+(id)numberWithShort:(short)arg1 ;
+(id)zero;
+(id)one;
+(id)numberWithChar:(char)arg1 ;
+(id)nan;
+(id)floatWithNumber:(id)arg1 ;
+(id)doubleWithNumber:(id)arg1 ;
+(id)decimalWithNumber:(id)arg1 ;
+(id)integerWithNumber:(id)arg1 ;
+(id)negInf;
+(id)posInf;
+(id)dayTimeDurationWithSeconds:(double)arg1 ;
+(id)implicitTimeZone;
+(char)isSpecial:(id)arg1 ;
+(id)numberWithDecimal:(SCD_Struct_XQ3)arg1 ;
+(id)yearMonthDurationWithMonths:(long long)arg1 ;
+(id)yearMonthDurationWithString:(id)arg1 ;
+(id)dayTimeDurationWithString:(id)arg1 ;
+(id)nonPositiveIntegerWithNumber:(id)arg1 ;
+(id)negativeIntegerWithNumber:(id)arg1 ;
+(id)longWithNumber:(id)arg1 ;
+(id)intWithNumber:(id)arg1 ;
+(id)shortWithNumber:(id)arg1 ;
+(id)byteWithNumber:(id)arg1 ;
+(id)nonNegativeIntegerWithNumber:(id)arg1 ;
+(id)unsignedLongWithNumber:(id)arg1 ;
+(id)unsignedIntWithNumber:(id)arg1 ;
+(id)unsignedShortWithNumber:(id)arg1 ;
+(id)unsignedByteWithNumber:(id)arg1 ;
+(id)positiveIntegerWithNumber:(id)arg1 ;
-(void)finalize;
-(void)dealloc;
-(NSString *)description;
-(double)doubleValue;
-(long long)longLongValue;
-(unsigned long long)unsignedLongLongValue;
-(id)initWithChar:(char)arg1 ;
-(id)initWithUnsignedChar:(unsigned char)arg1 ;
-(id)initWithShort:(short)arg1 ;
-(id)initWithUnsignedShort:(unsigned short)arg1 ;
-(id)initWithLong:(long long)arg1 ;
-(id)initWithLongLong:(long long)arg1 ;
-(id)initWithUnsignedLongLong:(unsigned long long)arg1 ;
-(id)initWithDouble:(double)arg1 ;
-(const char*)objCType;
-(char)charValue;
-(unsigned char)unsignedCharValue;
-(short)shortValue;
-(unsigned short)unsignedShortValue;
-(int)intValue;
-(unsigned)unsignedIntValue;
-(long long)longValue;
-(unsigned long long)unsignedLongValue;
-(float)floatValue;
-(void)setType:(long long)arg1 ;
-(char)boolValue;
-(long long)compare:(id)arg1 ;
-(char)isEqualToNumber:(id)arg1 ;
-(id)descriptionWithLocale:(id)arg1 ;
-(id)stringValue;
-(void)getValue:(void*)arg1 ;
-(SCD_Struct_XQ3)decimalValue;
-(id)initWithBool:(char)arg1 ;
-(id)initWithInteger:(long long)arg1 ;
-(id)initWithUnsignedInteger:(unsigned long long)arg1 ;
-(id)initWithUnsignedLong:(unsigned long long)arg1 ;
-(id)initWithFloat:(float)arg1 ;
-(id)XQueryStringValue;
-(id)XQueryCastAs:(long long)arg1 forContext:(id)arg2 ;
-(long long)XQueryTypeID;
-(id)initWithNumber:(id)arg1 type:(long long)arg2 ;
@end

