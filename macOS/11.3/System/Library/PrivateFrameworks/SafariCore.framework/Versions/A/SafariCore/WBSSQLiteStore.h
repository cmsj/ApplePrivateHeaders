/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:57 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SafariCore.framework/Versions/A/SafariCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol WBSSQLiteStoreDelegate, OS_dispatch_queue;
@class NSURL, WBSSQLiteDatabase, NSObject;

@interface WBSSQLiteStore : NSObject {

	long long _databaseLockingPolicy;
	long long _protectionType;
	int _databaseCoordinationLockFileDescriptor;
	char _fallBackToMemoryStoreIfError;
	NSURL* _databaseURL;
	id<WBSSQLiteStoreDelegate> _delegate;
	WBSSQLiteDatabase* _database;
	NSObject*<OS_dispatch_queue> _databaseQueue;

}

@property (nonatomic,readonly) WBSSQLiteDatabase * database;                            //@synthesize database=_database - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> databaseQueue;              //@synthesize databaseQueue=_databaseQueue - In the implementation block
@property (nonatomic,readonly) NSURL * databaseURL;                                     //@synthesize databaseURL=_databaseURL - In the implementation block
@property (assign,nonatomic,__weak) id<WBSSQLiteStoreDelegate> delegate;                //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) char isOpen; 
-(void)dealloc;
-(id)init;
-(id<WBSSQLiteStoreDelegate>)delegate;
-(id)initWithURL:(id)arg1 ;
-(void)setDelegate:(id<WBSSQLiteStoreDelegate>)arg1 ;
-(NSObject*<OS_dispatch_queue>)databaseQueue;
-(char)isOpen;
-(WBSSQLiteDatabase *)database;
-(NSURL *)databaseURL;
-(void)savePendingChangesBeforeTermination;
-(void)closeWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)openAndCheckIntegrity:(char)arg1 createIfNeeded:(char)arg2 fallBackToMemoryStoreIfError:(char)arg3 lockingPolicy:(long long)arg4 completionHandler:(/*^block*/id)arg5 ;
-(int)_currentSchemaVersion;
-(int)_createFreshDatabaseSchema;
-(void)_closeDatabase;
-(int)_migrateToCurrentSchemaVersionIfNecessary;
-(int)_setDatabaseSchemaVersion:(int)arg1 ;
-(int)_migrateToSchemaVersion:(int)arg1 ;
-(id)initWithURL:(id)arg1 protectionType:(long long)arg2 ;
-(char)_isDatabaseLocked;
-(void)_releaseDatabaseCoordinationLock;
-(void)_openDatabase:(id)arg1 createIfNeeded:(char)arg2 checkIntegrity:(char)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_handleOpenFailureWithStatus:(long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)_acquireDatabaseCoordinationLockForDatabaseURL:(id)arg1 ;
-(char)_confirmDatabaseIntegrityIsOK;
-(void)_databaseWillClose;
-(id)_databaseCoordinationLockURLForDatabaseURL:(id)arg1 ;
@end

