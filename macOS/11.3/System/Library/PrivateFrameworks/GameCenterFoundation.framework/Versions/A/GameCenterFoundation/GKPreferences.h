/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:47 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/Versions/A/GameCenterFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSDictionary, NSMutableDictionary, NSString, NSDate;

@interface GKPreferences : NSObject {

	char _shouldSynchronizeOnNextRead;
	char _webKitInspectElementEnabled;
	NSDictionary* _overrideValues;
	NSMutableDictionary* _handlers;

}

@property (assign,nonatomic,__weak) id<GKPreferencesDelegate> preferencesDelegate; 
@property (getter=isStoreDemoModeEnabled,nonatomic,readonly) char storeDemoModeEnabled; 
@property (getter=isAddingFriendsRestricted,nonatomic,readonly) char addingFriendsRestricted; 
@property (getter=isMultiplayerGamingRestricted,nonatomic,readonly) char multiplayerGamingRestricted; 
@property (getter=isAppInstallationRestricted,nonatomic,readonly) char appInstallationRestricted; 
@property (getter=isAccountModificationRestricted,nonatomic,readonly) char accountModificationRestricted; 
@property (getter=isGameCenterRestricted,nonatomic,readonly) char gameCenterRestricted; 
@property (getter=isSharingRestricted,nonatomic,readonly) char sharingRestricted; 
@property (getter=isCustomizedCommunicationRestricted,nonatomic,readonly) char customizedCommunicationRestricted; 
@property (getter=isNearbyMultiplayerRestricted,nonatomic,readonly) char nearbyMultiplayerRestricted; 
@property (getter=isProfileModificationRestricted,nonatomic,readonly) char profileModificationRestricted; 
@property (getter=isProfilePrivacyModificationRestricted,nonatomic,readonly) char profilePrivacyModificationRestricted; 
@property (nonatomic,readonly) unsigned long long multiplayerAllowedPlayerType; 
@property (getter=isFriendsSharingRestricted,nonatomic,readonly) char friendsSharingRestricted; 
@property (assign,nonatomic) char _shouldSynchronizeOnNextRead;                                                                      //@synthesize shouldSynchronizeOnNextRead=_shouldSynchronizeOnNextRead - In the implementation block
@property (copy) NSDictionary * overrideValues;                                                                                      //@synthesize overrideValues=_overrideValues - In the implementation block
@property (assign,nonatomic) long long environment; 
@property (nonatomic,retain) NSString * storeBagURL; 
@property (assign,nonatomic) unsigned long long mescalSetupRetries; 
@property (assign,nonatomic) long long networkManagerStateOverride; 
@property (assign,nonatomic) NSString * networkManagerUserOverride; 
@property (assign,nonatomic) unsigned long long loginDisableThreshold; 
@property (assign,nonatomic) unsigned long long coreRecentUpperLimit; 
@property (assign,nonatomic) unsigned long long coreRecentMultiplier; 
@property (assign,nonatomic) char allowUnsignedBag; 
@property (assign,nonatomic) char useTestProtocols; 
@property (assign,nonatomic) char enterSandbox; 
@property (assign,nonatomic) char forceDefaultNickname; 
@property (assign,nonatomic) char forceDefaultPrivacy; 
@property (assign,nonatomic) char forceUnderage; 
@property (assign,nonatomic) double terminationInterval; 
@property (assign,nonatomic) double garbageCollectionInterval; 
@property (assign,nonatomic) double minimumCacheTTL; 
@property (assign,nonatomic) double cacheTTLOverride; 
@property (assign,nonatomic) double operationTimeout; 
@property (assign,nonatomic) double operationRetryDelay; 
@property (assign,nonatomic) unsigned long long operationRetryCount; 
@property (assign,nonatomic) double debugRequestTimeout; 
@property (assign,getter=isNotificationCenterEnabled,nonatomic) char notificationCenterEnabled; 
@property (assign,nonatomic) char notificationBadgesEnabled; 
@property (assign,nonatomic) char notificationSoundsEnabled; 
@property (assign,nonatomic) char notificationAlertsEnabled; 
@property (assign,nonatomic) char verboseLogging; 
@property (assign,nonatomic) unsigned logFilter; 
@property (assign,getter=isComprehensiveLoggingEnabled,nonatomic) char comprehensiveLoggingEnabled; 
@property (nonatomic,copy) NSString * testRunID; 
@property (assign,getter=isClipGestureEnabled,nonatomic) char clipGestureEnabled; 
@property (assign,nonatomic) char forceRelay; 
@property (assign,nonatomic) char preemptiveRelay; 
@property (assign,nonatomic) long long pushEnvironment; 
@property (assign,nonatomic) long long pipeliningSetting; 
@property (assign,nonatomic) char restrictToAutomatch; 
@property (assign,nonatomic) unsigned long long recentNumberOfPlayers; 
@property (assign,nonatomic) unsigned long long maxPlayersP2P; 
@property (assign,nonatomic) unsigned long long maxPlayersHosted; 
@property (assign,nonatomic) unsigned long long maxPlayersTurnBased; 
@property (assign,nonatomic) unsigned long long maxGameStateSizeTurnBased; 
@property (assign,nonatomic) unsigned long long exchangeDataMaximumSize; 
@property (assign,nonatomic) unsigned long long exchangeMaxInitiatedExchangesPerPlayer; 
@property (nonatomic,readonly) char HTTPShouldUsePipelining; 
@property (nonatomic,readonly) unsigned long long maxDefaultPlayersP2P; 
@property (nonatomic,readonly) unsigned long long maxDefaultPlayersHosted; 
@property (nonatomic,readonly) unsigned long long maxDefaultPlayersTurnBased; 
@property (nonatomic,readonly) unsigned long long maxDefaultGameStateSizeTurnBased; 
@property (nonatomic,readonly) unsigned long long exchangeDataDefaultMaximumSize; 
@property (nonatomic,readonly) unsigned long long exchangeDefaultMaxInitiatedExchangesPerPlayer; 
@property (assign,nonatomic) char useInternalHeader; 
@property (assign,getter=isWebKitInspectElementEnabled,nonatomic) char webKitInspectElementEnabled;                                  //@synthesize webKitInspectElementEnabled=_webKitInspectElementEnabled - In the implementation block
@property (assign,nonatomic) char shouldAnnotateImageUsage; 
@property (assign,nonatomic) char shouldTrackAtlasImageUsage; 
@property (assign,nonatomic) char shouldUseTestIcons; 
@property (assign,nonatomic) char shouldLinkPlayerToICloud; 
@property (assign,nonatomic) char shouldLinkPlayerToTwitter; 
@property (assign,nonatomic) char shouldLinkPlayerToFacebook; 
@property (nonatomic,readonly) char shouldDisallowInvitesFromStrangers; 
@property (assign,nonatomic) char shouldAllowNearbyMultiplayer; 
@property (assign,nonatomic) char shouldAddPlayerInfoToAddressBook; 
@property (nonatomic,readonly) char shouldAllowSharing; 
@property (nonatomic,readonly) char shouldAllowCustomCommunication; 
@property (nonatomic,readonly) char multiplayerShouldAlwaysReloadCollectionView; 
@property (assign,nonatomic) unsigned long long maxRecentPlayersCount; 
@property (assign,nonatomic) double maxRecentPlayersTime; 
@property (assign,nonatomic) char accessPointIsOnAutomatically; 
@property (assign,nonatomic) char accessPointShowHighlights; 
@property (assign,nonatomic) long long accessPointLocation; 
@property (assign,nonatomic) char supportsChallenges; 
@property (assign,nonatomic) char dashboardDeepLinkEnabled; 
@property (assign,nonatomic) char newDashboardUI; 
@property (nonatomic,readonly) char featureFlagsFriendsApi; 
@property (assign,nonatomic) char arcadeDashboardSection; 
@property (assign,nonatomic) char tournamentsDebuggingEnabled; 
@property (assign,nonatomic) long long tournamentState; 
@property (assign,nonatomic) long long tournamentParticipantState; 
@property (assign,nonatomic) long long tournamentPlayers; 
@property (assign,nonatomic) long long tournamentReplays; 
@property (assign,nonatomic) long long tournamentDuration; 
@property (nonatomic,retain) NSDate * tournamentStartDate; 
@property (nonatomic,retain) NSDate * tournamentEndDate; 
@property (assign,nonatomic) long long tournamentMinPlayers; 
@property (assign,nonatomic) long long tournamentMaxPlayers; 
@property (assign,nonatomic) long long tournamentMaxReplays; 
@property (assign,nonatomic) long long tournamentAutoDuration; 
@property (assign,nonatomic) long long tournamentCustomMinPlayers; 
@property (assign,nonatomic) long long tournamentCustomMaxPlayers; 
@property (assign,nonatomic) long long tournamentCustomMaxReplays; 
@property (assign,nonatomic) long long tournamentCustomDuration; 
@property (assign,nonatomic) long long tournamentUIAppearanceStyle; 
@property (assign,nonatomic) long long tournamentCreationMethod; 
@property (assign,nonatomic) char restrictToTournamentPlayers; 
@property (assign,nonatomic) long long tournamentServer; 
@property (assign,nonatomic) char tournamentDemoModeEnabled; 
@property (assign,nonatomic) long long tournamentMaxSimulatedPlayers; 
@property (assign,nonatomic) long long tournamentMaxSimulatedFriends; 
@property (copy) NSMutableDictionary * handlers;                                                                                     //@synthesize handlers=_handlers - In the implementation block
+(id)shared;
+(id)hostNameForEnvironment:(long long)arg1 ;
+(id)displayNameForEnvironment:(long long)arg1 ;
-(id)init;
-(void)invalidate;
-(void)synchronize;
-(void)setEnvironment:(long long)arg1 ;
-(long long)environment;
-(double)operationTimeout;
-(void)setOperationTimeout:(double)arg1 ;
-(char)isInternalBuild;
-(void)setIntegerValue:(long long)arg1 forKey:(id)arg2 ;
-(char)verboseLogging;
-(void)setVerboseLogging:(char)arg1 ;
-(char)HTTPShouldUsePipelining;
-(long long)pushEnvironment;
-(void)setPushEnvironment:(long long)arg1 ;
-(long long)integerValueForKey:(id)arg1 defaultValue:(long long)arg2 ;
-(long long)unsignedIntegerValueForKey:(id)arg1 defaultValue:(long long)arg2 ;
-(id)stringValueForKey:(id)arg1 defaultValue:(id)arg2 ;
-(NSMutableDictionary *)handlers;
-(void)setHandlers:(NSMutableDictionary *)arg1 ;
-(char)booleanValueForKey:(id)arg1 defaultValue:(char)arg2 ;
-(char)booleanValueForKey:(id)arg1 ;
-(char)isStoreDemoModeEnabled;
-(char)isAccountModificationRestricted;
-(void)setEnterSandbox:(char)arg1 ;
-(void)setLogFilter:(unsigned)arg1 ;
-(char)enterSandbox;
-(id)preferencesValueForKey:(id)arg1 ;
-(double)minimumCacheTTL;
-(long long)tournamentDuration;
-(NSDate *)tournamentEndDate;
-(long long)tournamentState;
-(id)initWithoutUIKitNotifications;
-(unsigned)logFilter;
-(char)useTestProtocols;
-(char)supportsChallenges;
-(char)useInternalHeader;
-(NSString *)testRunID;
-(char)isMultiplayerGamingRestricted;
-(char)isAddingFriendsRestricted;
-(void)applicationWillEnterBackground:(id)arg1 ;
-(void)multiplayerAllowedTypeReceivedWithNotification:(id)arg1 ;
-(char)_shouldSynchronizeOnNextRead;
-(void)set_shouldSynchronizeOnNextRead:(char)arg1 ;
-(void)removeOverrideForKey:(id)arg1 ;
-(void)_didWriteKey:(id)arg1 ;
-(void)setOverrideValues:(NSDictionary *)arg1 ;
-(void)setBooleanValue:(char)arg1 forKey:(id)arg2 ;
-(void)setUnsignedIntegerValue:(long long)arg1 forKey:(id)arg2 ;
-(void)setStringValue:(id)arg1 forKey:(id)arg2 ;
-(double)timeIntervalForKey:(id)arg1 defaultValue:(double)arg2 ;
-(void)setTimeInterval:(double)arg1 forKey:(id)arg2 ;
-(unsigned long long)maxDefaultPlayersP2P;
-(unsigned long long)maxDefaultPlayersHosted;
-(unsigned long long)maxDefaultPlayersTurnBased;
-(unsigned long long)maxDefaultGameStateSizeTurnBased;
-(unsigned long long)exchangeDataDefaultMaximumSize;
-(unsigned long long)exchangeDefaultMaxInitiatedExchangesPerPlayer;
-(char)isNearbyMultiplayerRestricted;
-(char)isSharingRestricted;
-(char)isCustomizedCommunicationRestricted;
-(id)initWithUIKitNotifications;
-(NSString *)storeBagURL;
-(void)setStoreBagURL:(NSString *)arg1 ;
-(char)allowUnsignedBag;
-(void)setAllowUnsignedBag:(char)arg1 ;
-(void)setUseTestProtocols:(char)arg1 ;
-(char)forceDefaultNickname;
-(void)setForceDefaultNickname:(char)arg1 ;
-(char)forceDefaultPrivacy;
-(void)setForceDefaultPrivacy:(char)arg1 ;
-(char)forceUnderage;
-(void)setForceUnderage:(char)arg1 ;
-(unsigned long long)mescalSetupRetries;
-(void)setMescalSetupRetries:(unsigned long long)arg1 ;
-(unsigned long long)coreRecentUpperLimit;
-(void)setCoreRecentUpperLimit:(unsigned long long)arg1 ;
-(unsigned long long)coreRecentMultiplier;
-(void)setCoreRecentMultiplier:(unsigned long long)arg1 ;
-(unsigned long long)loginDisableThreshold;
-(void)setNetworkManagerUserOverride:(NSString *)arg1 ;
-(NSString *)networkManagerUserOverride;
-(void)setNetworkManagerStateOverride:(long long)arg1 ;
-(long long)networkManagerStateOverride;
-(void)setLoginDisableThreshold:(unsigned long long)arg1 ;
-(double)operationRetryDelay;
-(void)setOperationRetryDelay:(double)arg1 ;
-(unsigned long long)operationRetryCount;
-(void)setOperationRetryCount:(unsigned long long)arg1 ;
-(double)debugRequestTimeout;
-(void)setDebugRequestTimeout:(double)arg1 ;
-(char)isNotificationCenterEnabled;
-(void)setNotificationCenterEnabled:(char)arg1 ;
-(char)notificationBadgesEnabled;
-(void)setNotificationBadgesEnabled:(char)arg1 ;
-(char)notificationSoundsEnabled;
-(void)setNotificationSoundsEnabled:(char)arg1 ;
-(char)notificationAlertsEnabled;
-(void)setNotificationAlertsEnabled:(char)arg1 ;
-(void)setTestRunID:(NSString *)arg1 ;
-(char)forceRelay;
-(void)setForceRelay:(char)arg1 ;
-(char)preemptiveRelay;
-(void)setPreemptiveRelay:(char)arg1 ;
-(long long)pipeliningSetting;
-(void)setPipeliningSetting:(long long)arg1 ;
-(char)restrictToAutomatch;
-(void)setRestrictToAutomatch:(char)arg1 ;
-(unsigned long long)recentNumberOfPlayers;
-(void)setRecentNumberOfPlayers:(unsigned long long)arg1 ;
-(unsigned long long)maxPlayersP2P;
-(void)setMaxPlayersP2P:(unsigned long long)arg1 ;
-(unsigned long long)maxPlayersHosted;
-(void)setMaxPlayersHosted:(unsigned long long)arg1 ;
-(unsigned long long)maxPlayersTurnBased;
-(void)setMaxPlayersTurnBased:(unsigned long long)arg1 ;
-(unsigned long long)maxGameStateSizeTurnBased;
-(void)setMaxGameStateSizeTurnBased:(unsigned long long)arg1 ;
-(unsigned long long)exchangeDataMaximumSize;
-(void)setExchangeDataMaximumSize:(unsigned long long)arg1 ;
-(unsigned long long)exchangeMaxInitiatedExchangesPerPlayer;
-(void)setExchangeMaxInitiatedExchangesPerPlayer:(unsigned long long)arg1 ;
-(void)setUseInternalHeader:(char)arg1 ;
-(double)terminationInterval;
-(void)setTerminationInterval:(double)arg1 ;
-(double)garbageCollectionInterval;
-(void)setGarbageCollectionInterval:(double)arg1 ;
-(void)setMinimumCacheTTL:(double)arg1 ;
-(double)cacheTTLOverride;
-(void)setCacheTTLOverride:(double)arg1 ;
-(char)shouldAnnotateImageUsage;
-(void)setShouldAnnotateImageUsage:(char)arg1 ;
-(char)shouldTrackAtlasImageUsage;
-(void)setShouldTrackAtlasImageUsage:(char)arg1 ;
-(char)shouldUseTestIcons;
-(void)setShouldUseTestIcons:(char)arg1 ;
-(char)shouldLinkPlayerToICloud;
-(void)setShouldLinkPlayerToICloud:(char)arg1 ;
-(char)shouldLinkPlayerToTwitter;
-(void)setShouldLinkPlayerToTwitter:(char)arg1 ;
-(char)shouldLinkPlayerToFacebook;
-(void)setShouldLinkPlayerToFacebook:(char)arg1 ;
-(char)shouldDisallowInvitesFromStrangers;
-(char)shouldAllowNearbyMultiplayer;
-(void)setShouldAllowNearbyMultiplayer:(char)arg1 ;
-(char)shouldAllowSharing;
-(char)shouldAddPlayerInfoToAddressBook;
-(void)setShouldAddPlayerInfoToAddressBook:(char)arg1 ;
-(char)shouldAllowCustomCommunication;
-(char)multiplayerShouldAlwaysReloadCollectionView;
-(void)setMultiplayerShouldAlwaysReloadCollectionView:(char)arg1 ;
-(void)setMaxRecentPlayersCount:(unsigned long long)arg1 ;
-(unsigned long long)maxRecentPlayersCount;
-(void)setMaxRecentPlayersTime:(double)arg1 ;
-(double)maxRecentPlayersTime;
-(char)isClipGestureEnabled;
-(void)setClipGestureEnabled:(char)arg1 ;
-(char)isComprehensiveLoggingEnabled;
-(void)setComprehensiveLoggingEnabled:(char)arg1 ;
-(char)newDashboardUI;
-(void)setNewDashboardUI:(char)arg1 ;
-(char)arcadeDashboardSection;
-(void)setArcadeDashboardSection:(char)arg1 ;
-(char)featureFlagsFriendsApi;
-(char)dashboardDeepLinkEnabled;
-(void)setDashboardDeepLinkEnabled:(char)arg1 ;
-(char)accessPointIsOnAutomatically;
-(void)setAccessPointIsOnAutomatically:(char)arg1 ;
-(char)accessPointShowHighlights;
-(void)setAccessPointShowHighlights:(char)arg1 ;
-(long long)accessPointLocation;
-(void)setAccessPointLocation:(long long)arg1 ;
-(void)setSupportsChallenges:(char)arg1 ;
-(char)tournamentsDebuggingEnabled;
-(void)setTournamentsDebuggingEnabled:(char)arg1 ;
-(char)tournamentDemoModeEnabled;
-(void)setTournamentDemoModeEnabled:(char)arg1 ;
-(long long)tournamentMaxSimulatedPlayers;
-(void)setTournamentMaxSimulatedPlayers:(long long)arg1 ;
-(long long)tournamentMaxSimulatedFriends;
-(void)setTournamentMaxSimulatedFriends:(long long)arg1 ;
-(void)setTournamentState:(long long)arg1 ;
-(long long)tournamentParticipantState;
-(void)setTournamentParticipantState:(long long)arg1 ;
-(long long)tournamentPlayers;
-(void)setTournamentPlayers:(long long)arg1 ;
-(long long)tournamentReplays;
-(void)setTournamentReplays:(long long)arg1 ;
-(void)setTournamentDuration:(long long)arg1 ;
-(NSDate *)tournamentStartDate;
-(void)setTournamentStartDate:(NSDate *)arg1 ;
-(void)setTournamentEndDate:(NSDate *)arg1 ;
-(long long)tournamentMinPlayers;
-(void)setTournamentMinPlayers:(long long)arg1 ;
-(long long)tournamentMaxPlayers;
-(void)setTournamentMaxPlayers:(long long)arg1 ;
-(long long)tournamentMaxReplays;
-(void)setTournamentMaxReplays:(long long)arg1 ;
-(long long)tournamentAutoDuration;
-(void)setTournamentAutoDuration:(long long)arg1 ;
-(long long)tournamentCustomMinPlayers;
-(void)setTournamentCustomMinPlayers:(long long)arg1 ;
-(long long)tournamentCustomMaxPlayers;
-(void)setTournamentCustomMaxPlayers:(long long)arg1 ;
-(long long)tournamentCustomMaxReplays;
-(void)setTournamentCustomMaxReplays:(long long)arg1 ;
-(long long)tournamentCustomDuration;
-(void)setTournamentCustomDuration:(long long)arg1 ;
-(long long)tournamentUIAppearanceStyle;
-(void)setTournamentUIAppearanceStyle:(long long)arg1 ;
-(long long)tournamentCreationMethod;
-(void)setTournamentCreationMethod:(long long)arg1 ;
-(char)restrictToTournamentPlayers;
-(void)setRestrictToTournamentPlayers:(char)arg1 ;
-(long long)tournamentServer;
-(void)setTournamentServer:(long long)arg1 ;
-(NSDictionary *)overrideValues;
-(char)isWebKitInspectElementEnabled;
-(void)setWebKitInspectElementEnabled:(char)arg1 ;
-(unsigned long long)multiplayerAllowedPlayerType;
-(char)isFriendsSharingRestricted;
-(char)restrictionEnabledForKey:(id)arg1 ;
-(id)valueRestrictionForKey:(id)arg1 ;
-(void)getMultiplayerAllowedPlayerTypeWithHandler:(/*^block*/id)arg1 ;
-(void)setPreferencesDelegate:(id<GKPreferencesDelegate>)arg1 ;
-(id<GKPreferencesDelegate>)preferencesDelegate;
-(char)isAppInstallationRestricted;
-(char)isGameCenterRestricted;
-(char)isProfileModificationRestricted;
-(char)isProfilePrivacyModificationRestricted;
@end

