/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:19 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <DiskManagement/DiskManagement-Structs.h>
@interface DMManager : NSObject {

	id _instPriv;

}
+(void)initialize;
+(id)sharedManager;
+(id)sharedManagerForThread;
+(char)systemResourcesSufficient;
+(char)daemonRunning;
-(void)stopInstanceAsNeeded;
-(int)setUserID:(id)arg1 groupID:(id)arg2 ;
-(void)stopDiskManagementLog;
-(DASessionRef)obtainedClientDASession:(DADiskRef)arg1 ;
-(char)checkClientDelegate;
-(char)clientConforms:(id)arg1 error:(int*)arg2 ;
-(void)getSessionUUID:(char*)arg1 f2tPort:(unsigned*)arg2 t2fPort:(unsigned*)arg3 clientDefaultDASession:(_DASession*)arg4 ;
-(id)dmManagerPrivVars;
-(id)conversionProgressForLogicalVolume:(id)arg1 error:(int*)arg2 ;
-(id)optimizationProgressForLogicalVolume:(id)arg1 error:(int*)arg2 ;
-(id)rawDisks;
-(DADiskRef)copyFirstDiskInMapForWholeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)copyPreviousDiskInMapForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isFirstDiskInMap:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isLastDiskInMap:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)mapLayoutMatching:(DADiskRef)arg1 matchScheme:(int)arg2 matchPartitions:(id)arg3 error:(int*)arg4 ;
-(DADiskRef)copyDiskForPartitionIdentifier:(id)arg1 forWholeDisk:(DADiskRef)arg2 error:(int*)arg3 ;
-(DADiskRef)copyDiskForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isEqualDisks:(DADiskRef)arg1 anotherDisk:(DADiskRef)arg2 error:(int*)arg3 ;
-(char)isChildDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isChildOfWholeDisk:(DADiskRef)arg1 wholeDisk:(DADiskRef)arg2 error:(int*)arg3 ;
-(char)isSiblingDisks:(DADiskRef)arg1 anotherDisk:(DADiskRef)arg2 reflexive:(char)arg3 error:(int*)arg4 ;
-(char)isOnSameWholeDiskAsRoot:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)copyDiskForVolumeName:(id)arg1 error:(int*)arg2 ;
-(char)isVolumeNameCasePreservingDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isVolumeNameCaseSensitiveDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isFileCasePreservingDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isIPodDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isXsanComponentDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isXsanFilesystemDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isModificationSuccessLikelyForPartitionMap:(DADiskRef)arg1 why:(id*)arg2 error:(int*)arg3 ;
-(char)isOpenDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isLiveResizablePartitionForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isBooterDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)canRepairPermissions:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)DMAppleRAIDUUIDLookup:(id)arg1 ;
-(id)conversionStateForLogicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)conversionProgressForCoreStorageDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)optimizationProgressForCoreStorageDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isUnrecognizedCoreStoragePhysicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)needsRebootToBeginCoreStorageConversion:(DADiskRef)arg1 checkRoot:(char)arg2 error:(int*)arg3 ;
-(id)coreStorageStatusSummaryForDisk:(DADiskRef)arg1 orForCSUUID:(id)arg2 error:(int*)arg3 ;
-(char)doMountDisk:(DADiskRef)arg1 atPath:(id)arg2 readOnly:(char)arg3 otherArguments:(id)arg4 errorDict:(id*)arg5 ;
-(int)ejectDiskOnly:(DADiskRef)arg1 errorDict:(id*)arg2 ;
-(int)makeVolumeCaseSensitive:(DADiskRef)arg1 ;
-(unsigned)supportedNetBootProtocols;
-(int)checkBootabilityOnThisMachine_actualsimplepartition_:(DADiskRef)arg1 isBootable:(char*)arg2 ;
-(int)checkPrebootContentForMacOSAPFSVolume:(DMUDSPrivRec*)arg1 isValidForBoot:(char*)arg2 ;
-(int)checkAbilityToMakeBootable_actualsimplepartition_:(DADiskRef)arg1 onAnyMachine:(char)arg2 atAll:(char*)arg3 yesButDestructively:(char*)arg4 ;
-(int)setNextOnlyNetBootPreference:(unsigned)arg1 withServer:(id)arg2 forInterface:(id)arg3 ;
-(int)setWindowsUEFIDiskForNextOnlyBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2 ;
-(int)checkLegacyBootabilityForOpticalWholeDisk:(DADiskRef)arg1 isLegacyBootable:(char*)arg2 os:(id*)arg3 ;
-(int)checkLegacyBootabilityForNonOpticalWholeDisk:(DADiskRef)arg1 isLegacyBootable:(char*)arg2 os:(id*)arg3 ;
-(int)checkLegacyBootabilityForNonOpticalPartition:(DADiskRef)arg1 isLegacyBootable:(char*)arg2 os:(id*)arg3 ;
-(int)checkWindowsUEFIBootabilityForNonOpticalPartition:(DADiskRef)arg1 isWindowsUEFIBootable:(char*)arg2 os:(id*)arg3 ;
-(int)checkWindowsUEFIBootabilityForOpticalWholeDisk:(DADiskRef)arg1 isWindowsUEFIBootable:(char*)arg2 os:(id*)arg3 ;
-(int)makeBootable:(DADiskRef)arg1 filesystem:(id)arg2 newDisk:(_DADisk*)arg3 ;
-(int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 verifyImage:(char)arg3 repairDonor:(char)arg4 ;
-(int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 verifyImage:(char)arg4 repairDonor:(char)arg5 ;
-(int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 verifyImage:(char)arg4 repairDonor:(char)arg5 bless:(char)arg6 ;
-(int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 diagnosticsDiskImageFile:(id)arg4 diagnosticsDiskImageChunkListFile:(id)arg5 verifyImage:(char)arg6 repairDonor:(char)arg7 bless:(char)arg8 ;
-(int)replaceDiagnosticsForVolume:(DADiskRef)arg1 diagnosticsDiskImageFile:(id)arg2 diagnosticsChunkListFile:(id)arg3 verifyImage:(char)arg4 allowGrowth:(char)arg5 diagnosticsMachineBlacklistInhibit:(char)arg6 ;
-(int)updateBootFirmwareLabelsForAllInternalOrGivenMacOSDisks:(id)arg1 options:(id)arg2 ;
-(int)findBooterDiskContainingBaseSystemForDisk:(DADiskRef)arg1 ;
-(int)cryptoMigrationPlanForLOG:(DMUDSPrivRec*)arg1 transform:(id)arg2 currentOldSS:(id*)arg3 supported:(char*)arg4 planScript:(id*)arg5 plannedNewSS:(id*)arg6 plannedChangeSS:(char*)arg7 plannedChangeLOG:(char*)arg8 ;
-(void)cryptoStatusForLOG:(DMUDSPrivRec*)arg1 inSS:(id)arg2 yesInfoFileVaulted:(char*)arg3 yesInfoFullyEncrypted:(char*)arg4 yesInfoBusy:(char*)arg5 yesInfoDirection:(char*)arg6 yesInfoLocked:(char*)arg7 nonNilInfoProgress:(id*)arg8 apfsDataVolSubCase:(char*)arg9 ;
-(int)isSuitableTransformForLOG:(DMUDSPrivRec*)arg1 transform:(id)arg2 suitable:(char*)arg3 plan:(id*)arg4 details:(id)arg5 ;
-(int)isDiskSuitableForEncryption:(DADiskRef)arg1 options:(id)arg2 suitable:(char*)arg3 details:(id*)arg4 ;
-(int)isDiskSuitableForDecryption:(DADiskRef)arg1 options:(id)arg2 suitable:(char*)arg3 details:(id*)arg4 ;
-(int)encryptDisk:(DADiskRef)arg1 user:(id)arg2 passdata:(id)arg3 hint:(id)arg4 options:(id)arg5 details:(id*)arg6 ;
-(int)decryptDisk:(DADiskRef)arg1 options:(id)arg2 details:(id*)arg3 ;
-(void)dealloc;
-(id)init;
-(id)delegate;
-(void)setDelegate:(id)arg1 ;
-(void)setLanguage:(id)arg1 ;
-(void)setDefaultDASession:(DASessionRef)arg1 ;
-(char)isCoreStorageCompositeLogicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isSolidStateDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)copyRootDisk:(int*)arg1 ;
-(char)isAPFSVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(void)done;
-(const AuthorizationOpaqueRefRef)authorization;
-(char)ejectDisk:(DADiskRef)arg1 errorDict:(id*)arg2 ;
-(id)volumeUUIDForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)unmountVolumePath:(id)arg1 force:(char)arg2 errorDict:(id*)arg3 ;
-(DADiskRef)copyDiskForPath:(id)arg1 error:(int*)arg2 ;
-(char)isCoreStorageLogicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isCoreStorageEncryptedLogicalVolumeDisk:(DADiskRef)arg1 locked:(char*)arg2 type:(id*)arg3 error:(int*)arg4 ;
-(id)volumeNameForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)mountPointForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)descriptionForDisk:(DADiskRef)arg1 ;
-(id)ioKitSizeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)childrenForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isUserDataVolume:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)copyWholeDiskForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)partitionMapSchemeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)copyDiskForMountPoint:(id)arg1 error:(int*)arg2 ;
-(id)diskIdentifierForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)partitionIdentifierForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)physicalDisksForDisk:(DADiskRef)arg1 storageSystemName:(id*)arg2 error:(int*)arg3 ;
-(id)wholeDiskIdentifierForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isRecoveryDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)copyDiskForBootPreference:(_DADisk*)arg1 ;
-(void)setAuthorization:(const AuthorizationOpaqueRefRef)arg1 ;
-(char)isInternalDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)copyDiskForVolumeUUID:(id)arg1 error:(int*)arg2 ;
-(int)recoveryPartitionInfoForVolume:(DADiskRef)arg1 what:(id)arg2 info:(id*)arg3 ;
-(DADiskRef)copyBooterDiskForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isRecoveryBooterPartitionDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(void)setClientDelegate:(id)arg1 ;
-(id)disks;
-(DASessionRef)defaultDASession;
-(char)isDisallowedCoreStorageOperationsForLogicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)ioContentOfDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)filesystemForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)protocolForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)totalSizeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)volumeFreeSpaceForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)rawDeviceNodeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isWritableVolume:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isWritableMedia:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isNetworkDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isRemovableMediaOrExternalDeviceDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isMountedVolume:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isCD:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isDVD:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isOpticalDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isWholeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isLeafDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isJournaledDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isSystemImage:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAppleDiskImage:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isMountableVolume:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAppleRAIDDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)directChildrenForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)ejectDisk:(DADiskRef)arg1 ;
-(char)unmountDisk:(DADiskRef)arg1 entireDisk:(char)arg2 force:(char)arg3 ;
-(char)mountDisk:(DADiskRef)arg1 entireDisk:(char)arg2 atPath:(id)arg3 readOnly:(char)arg4 otherArguments:(id)arg5 ;
-(int)renameDisk:(DADiskRef)arg1 toName:(id)arg2 ;
-(DADiskRef)copyDiskForArgumentName:(id)arg1 timeout:(double)arg2 complete:(char*)arg3 ;
-(char)permissionsEnabledForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)upgradeDisk:(DADiskRef)arg1 enablePermissions:(char)arg2 ;
-(id)opticalMediaTypeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)deviceNameForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)bayNameForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)wholeDiskHasOS9Drivers:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isRemovableDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)smartStatusForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)setDiskForBootPreference:(DADiskRef)arg1 atFolderLocation:(id)arg2 isOS9:(char)arg3 ;
-(int)setNetBootPreference:(unsigned)arg1 withServer:(id)arg2 forInterface:(id)arg3 ;
-(id)conversionProgressForLogicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)rawTopLevelDisks;
-(id)ioContentToHuman:(id)arg1 error:(int*)arg2 ;
-(id)partitionChildrenForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAPFSPhysicalStoreDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(double)timeoutHint:(id)arg1 ;
-(int)modifyJournalOnDisk:(DADiskRef)arg1 enableJournaling:(char)arg2 force:(char)arg3 ;
-(int)volumeInfoForUnmountedDisk:(DADiskRef)arg1 info:(id*)arg2 ;
-(int)getDiskForBootPreference:(_DADisk*)arg1 ;
-(int)setNVRAM:(id)arg1 forKey:(id)arg2 ;
-(char)mountDisk:(DADiskRef)arg1 entireDisk:(char)arg2 atPath:(id)arg3 readOnly:(char)arg4 otherArguments:(id)arg5 errorDict:(id*)arg6 ;
-(DADiskRef)copyNextDiskInMapForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)topLevelDisks;
-(int)makeLegacyBootable:(DADiskRef)arg1 partitionDataRuns:(id)arg2 MBRHeaderDataRun:(id)arg3 setActive:(unsigned char)arg4 updateBootIni:(char)arg5 options:(id)arg6 ;
-(id)blockSizeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)deviceNodeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAPFSContainerReferenceDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)uuidForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)mediaNameForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)deviceTreePathForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)ioKitNameForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAppleRAIDSetDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAppleRAIDMemberDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAppleRAIDSpareDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(DADiskRef)rootDisk:(int*)arg1 ;
-(DADiskRef)diskForPath:(id)arg1 error:(int*)arg2 ;
-(int)checkLegacyBootSupport:(char*)arg1 ;
-(int)checkUEFIWindowsBootSupport:(char*)arg1 ;
-(DADiskRef)copyDiskForDiskUUID:(id)arg1 error:(int*)arg2 ;
-(char)isCoreStoragePhysicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isRootVolume:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)diskUUIDForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)DMAppleRAIDMemberRebuildProgress:(id)arg1 error:(int*)arg2 ;
-(char)isPartitionDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)cryptoStateForDisk:(DADiskRef)arg1 options:(id)arg2 details:(id*)arg3 ;
-(DADiskRef)wholeDiskForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)setLegacyDiskForNextOnlyBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2 ;
-(int)setLegacyDiskForBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2 ;
-(int)setWindowsInstallerUEFIDiskForNextOnlyBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2 ;
-(int)setWindowsUEFIDiskForBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2 ;
-(int)unmountEFISystemPartition:(DADiskRef)arg1 options:(id)arg2 ;
-(int)mountEFISystemPartition:(DADiskRef)arg1 options:(id)arg2 espDisk:(_DADisk*)arg3 espMountPoint:(id*)arg4 ;
-(char)isVirtualWholeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isOSInternalDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAPFSSnapshotDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAPFSContainerSchemeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)checkBootabilityOnThisMachine:(DADiskRef)arg1 isBootable:(char*)arg2 ;
-(int)checkOpticalDiscBootability:(DADiskRef)arg1 isBootable:(char*)arg2 ;
-(int)checkAbilityToMakeBootable:(DADiskRef)arg1 onAnyMachine:(char)arg2 atAll:(char*)arg3 yesButDestructively:(char*)arg4 ;
-(DADiskRef)copyRecoveryDiskForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)mediaTypeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)busSpecificKeysForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)volumeTotalSizeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)volumeAllocationBlockSizeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isWritableDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isEjectableDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)wholeDiskSupportsLowLevelFormat:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAESHardwareDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)opticalDeviceTypeForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isErasableOpticalMedia:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)DMAppleRAIDUUIDForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)DMAppleRAIDParentUUIDForUUID:(id)arg1 error:(int*)arg2 ;
-(id)opticalMediaUserVisibleNameForDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)clientInfos:(id*)arg1 ;
-(char)unmountDisk:(DADiskRef)arg1 entireDisk:(char)arg2 force:(char)arg3 errorDict:(id*)arg4 ;
-(int)unmountDisksDeepForPartitionMap:(DADiskRef)arg1 force:(char)arg2 timeout:(double)arg3 ;
-(int)renameDisk:(DADiskRef)arg1 toName:(id)arg2 errorDict:(id*)arg3 ;
-(int)modifyOwnershipForDisk:(DADiskRef)arg1 enableOwnership:(char)arg2 ;
-(DADiskRef)copyLastDiskInMapForWholeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(int)moveJournalInternal:(DADiskRef)arg1 ;
-(char)isFileCaseSensitiveDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)optimizationProgressForLogicalVolumeDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(char)isAppleRAIDUUID:(id)arg1 error:(int*)arg2 ;
-(int)checkMacOSXBootability:(DADiskRef)arg1 isBootable:(char*)arg2 ;
-(char)isBooterPartitionDisk:(DADiskRef)arg1 error:(int*)arg2 ;
-(id)ioContentToHuman:(id)arg1 context:(id)arg2 error:(int*)arg3 ;
-(int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 diagnosticsDiskImageFile:(id)arg4 diagnosticsDiskImageChunkListFile:(id)arg5 verifyImage:(char)arg6 repairDonor:(char)arg7 diagnosticsMachineBlacklistInhibit:(char)arg8 ;
-(int)setDiskForBootPreference:(DADiskRef)arg1 atFolderLocation:(id)arg2 personalize:(char)arg3 ;
-(DADiskRef)copyDiskForPathNoFollow:(id)arg1 error:(int*)arg2 ;
-(int)preBootEnvironment;
-(int)getNetBootPreference:(unsigned*)arg1 withServer:(id*)arg2 forInterface:(id*)arg3 ;
@end

