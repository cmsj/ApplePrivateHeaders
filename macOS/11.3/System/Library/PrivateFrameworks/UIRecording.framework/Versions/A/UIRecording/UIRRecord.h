/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/UIRecording.framework/Versions/A/UIRecording
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIRecording/UIRecording-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSArray, NSDictionary, UIRAccessibilityElement, UIRAccessibilityProcess;

@interface UIRRecord : NSObject <NSCopying, NSSecureCoding> {

	NSArray* _uiEvents;
	id _delegate;
	char _isPlayingBack;
	char _userCanceledPlayback;
	NSDictionary* _playbackErrorInfo;
	double _timeoutSeconds;
	double _endTime;
	char _perEventTimeout;
	ProcessSerialNumber _targetPSN;
	CFMachPortRef _checkForCancelEventTapPort;
	UIRAccessibilityElement* _systemWideElement;
	UIRAccessibilityProcess* _targetApplicationElement;
	UIRRecordDelegateRespondsTo _delegateRespondsTo;
	id _future1;
	id _future2;
	id _future3;
	id _future4;

}

@property (retain) UIRAccessibilityElement * systemWideElement;                     //@synthesize systemWideElement=_systemWideElement - In the implementation block
@property (retain) UIRAccessibilityProcess * targetApplicationElement;              //@synthesize targetApplicationElement=_targetApplicationElement - In the implementation block
@property (readonly) NSArray * uiEvents; 
@property (assign) id delegate; 
@property (assign,nonatomic) char isPlayingBack;                                    //@synthesize isPlayingBack=_isPlayingBack - In the implementation block
@property (copy) NSDictionary * playbackErrorInfo;                                  //@synthesize playbackErrorInfo=_playbackErrorInfo - In the implementation block
@property (assign) char userCanceledPlayback;                                       //@synthesize userCanceledPlayback=_userCanceledPlayback - In the implementation block
+(char)supportsSecureCoding;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(id)init;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)delegate;
-(void)setDelegate:(id)arg1 ;
-(void)addEvent:(id)arg1 ;
-(void)stopPlayback;
-(UIRAccessibilityElement *)systemWideElement;
-(char)isPlayingBack;
-(void)setSystemWideElement:(UIRAccessibilityElement *)arg1 ;
-(void)setUiEvents:(NSArray *)arg1 ;
-(void)setTargetApplicationElement:(UIRAccessibilityProcess *)arg1 ;
-(void)setCheckForCancelEventTapPort:(CFMachPortRef)arg1 ;
-(NSDictionary *)playbackErrorInfo;
-(NSArray *)uiEvents;
-(void)setIsPlayingBack:(char)arg1 ;
-(void)_moveMouseToLocation:(CGPoint)arg1 withEvent:(CGEventRef)arg2 withEventSource:(CGEventSourceRef)arg3 ;
-(UIRAccessibilityProcess *)targetApplicationElement;
-(void)_glideCursorToLocation:(CGPoint)arg1 withEvent:(CGEventRef)arg2 withEventSource:(CGEventSourceRef)arg3 ;
-(long long)_indexOfFirstElementInStack:(id)arg1 afterIndex:(long long)arg2 withAnyAccessibilityRole:(id)arg3 ;
-(long long)_indexOfElementMatchingCurrentMousePosition:(id)arg1 forProcess:(id)arg2 ;
-(void)_glideCursorToElementWithStack:(id)arg1 withStartingIndex:(long long)arg2 withEvent:(CGEventRef)arg3 withEventSource:(CGEventSourceRef)arg4 ;
-(void)_startPlayback;
-(void)_glideToElementInMenuWithEvent:(id)arg1 withEventSource:(CGEventSourceRef)arg2 ;
-(unsigned long long)_raiseMouseButtons:(unsigned long long)arg1 withEventSource:(CGEventSourceRef)arg2 ;
-(void)setPlaybackErrorInfo:(NSDictionary *)arg1 ;
-(void)setUserCanceledPlayback:(char)arg1 ;
-(void)_playbackRecording;
-(void)_runCheckForCancelCommandThread;
-(CFMachPortRef)checkForCancelEventTapPort;
-(void)playbackRecordingWithTimeout:(double)arg1 forEachEvent:(char)arg2 targetingPSN:(ProcessSerialNumber)arg3 ;
-(char)userCanceledPlayback;
@end

