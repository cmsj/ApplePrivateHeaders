/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:50 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/OpenDirectoryConfig.framework/Versions/A/OpenDirectoryConfig
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <OpenDirectoryConfig/OpenDirectoryConfig-Structs.h>
@class NSString, NSDictionary, NSMutableSet, NSMutableArray, NSError, NSNumber, NSThread, SFAuthorization, ODSession, ODNode, NSArray;

@interface ODCAction : NSObject {

	NSString* _description;
	NSDictionary* _userInfo;
	NSDictionary* _results;
	NSMutableSet* _actionsBeingObserved;
	/*^block*/id _executionBlock;
	NSMutableArray* _beginCallbacks;
	NSMutableArray* _cancelCallbacks;
	NSMutableArray* _finishCallbacks;
	NSMutableArray* _errorCallbacks;
	NSMutableArray* _finishRecoveryCallbacks;
	ODCAction* _recoveryAction;
	char _running;
	char _finished;
	char _cancelled;
	double _percentComplete;
	NSString* _progressStatus;
	NSError* _error;
	NSNumber* _recoverable;
	char _needsRecovery;
	double _timeoutInterval;
	NSThread* _originalThread;
	char _updatesOnMainThread;
	char _userChangedUpdatesOnMainThread;
	SFAuthorization* _auth;
	ODSession* _odSession;
	char _remote;
	char _remoteauth_external;
	char _localizeProgressStatus;
	SCD_Struct_OD0 _remoteAuthExtForm;
	char _legacyBinding;
	ODNode* _odConfigNode;
	NSDictionary* _rootDSE;

}

@property (copy) id executionBlock;                                         //@synthesize executionBlock=_executionBlock - In the implementation block
@property (retain) NSThread * originalThread;                               //@synthesize originalThread=_originalThread - In the implementation block
@property (retain,readonly) NSArray * beginCallbacks;                       //@synthesize beginCallbacks=_beginCallbacks - In the implementation block
@property (retain,readonly) NSArray * cancelCallbacks;                      //@synthesize cancelCallbacks=_cancelCallbacks - In the implementation block
@property (retain,readonly) NSArray * errorCallbacks;                       //@synthesize errorCallbacks=_errorCallbacks - In the implementation block
@property (retain,readonly) NSArray * finishCallbacks;                      //@synthesize finishCallbacks=_finishCallbacks - In the implementation block
@property (retain,readonly) NSArray * finishRecoveryCallbacks;              //@synthesize finishRecoveryCallbacks=_finishRecoveryCallbacks - In the implementation block
@property (getter=isCancelled) char cancelled;                              //@synthesize cancelled=_cancelled - In the implementation block
@property (getter=isFinished) char finished;                                //@synthesize finished=_finished - In the implementation block
@property (assign) double percentComplete;                                  //@synthesize percentComplete=_percentComplete - In the implementation block
@property (retain) NSString * progressStatus;                               //@synthesize progressStatus=_progressStatus - In the implementation block
@property (getter=isRunning) char running;                                  //@synthesize running=_running - In the implementation block
@property (assign) char needsRecovery;                                      //@synthesize needsRecovery=_needsRecovery - In the implementation block
@property (assign) id beginTarget; 
@property (assign) SEL beginSelector; 
@property (assign) id cancelTarget; 
@property (assign) SEL cancelSelector; 
@property (assign) id finishTarget; 
@property (assign) SEL finishSelector; 
@property (assign) id errorTarget; 
@property (assign) SEL errorSelector; 
@property (assign) id finishRecoveryTarget; 
@property (assign) SEL finishRecoverySelector; 
@property (retain) NSString * description;                                  //@synthesize description=_description - In the implementation block
@property (retain) NSDictionary * userInfo;                                 //@synthesize userInfo=_userInfo - In the implementation block
@property (retain) ODCAction * recoveryAction;                              //@synthesize recoveryAction=_recoveryAction - In the implementation block
@property (getter=isRecoverable) char recoverable; 
@property (getter=isCanceled) char canceled; 
@property (retain) NSDictionary * results;                                  //@synthesize results=_results - In the implementation block
@property (retain) NSError * error;                                         //@synthesize error=_error - In the implementation block
@property (assign) double timeoutInterval;                                  //@synthesize timeoutInterval=_timeoutInterval - In the implementation block
@property (assign) char updatesOnMainThread;                                //@synthesize updatesOnMainThread=_updatesOnMainThread - In the implementation block
@property (retain) SFAuthorization * auth;                                  //@synthesize auth=_auth - In the implementation block
@property (retain) ODSession * odSession; 
@property (assign) char localizeProgressStatus;                             //@synthesize localizeProgressStatus=_localizeProgressStatus - In the implementation block
@property (assign) char legacyBinding;                                      //@synthesize legacyBinding=_legacyBinding - In the implementation block
@property (retain) ODNode * odConfigNode;                                   //@synthesize odConfigNode=_odConfigNode - In the implementation block
@property (retain) NSDictionary * rootDSE;                                  //@synthesize rootDSE=_rootDSE - In the implementation block
+(id)action;
+(id)localizedODCString:(id)arg1 ;
+(id)calculateSuggestedComputerID;
+(id)calculateComputerPassword;
+(char)usesDefaultMultiThreading;
+(id)calculateSuggestedComputerIDWithHostName:(id)arg1 ;
+(id)errorForUserCancellation;
+(id)readCurrentADSettings:(id)arg1 error:(id*)arg2 ;
+(id)sourceNodeOfCurrentUser:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)finalize;
-(void)dealloc;
-(unsigned long long)hash;
-(NSString *)description;
-(id)init;
-(NSDictionary *)userInfo;
-(NSError *)error;
-(void)setError:(NSError *)arg1 ;
-(void)setUserInfo:(NSDictionary *)arg1 ;
-(void)start;
-(NSDictionary *)results;
-(void)setResults:(NSDictionary *)arg1 ;
-(void)finish;
-(void)cancel;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(char)isCancelled;
-(void)setFinished:(char)arg1 ;
-(char)isFinished;
-(char)isRunning;
-(void)setCancelled:(char)arg1 ;
-(SFAuthorization *)auth;
-(void)setTimeoutInterval:(double)arg1 ;
-(void)_setFinished:(id)arg1 ;
-(double)timeoutInterval;
-(char)isCanceled;
-(NSArray *)cancelCallbacks;
-(double)percentComplete;
-(void)setRunning:(char)arg1 ;
-(void)setDescription:(NSString *)arg1 ;
-(void)setCanceled:(char)arg1 ;
-(void)setPercentComplete:(double)arg1 ;
-(void)setAuth:(SFAuthorization *)arg1 ;
-(void)setRecoveryAction:(ODCAction *)arg1 ;
-(ODCAction *)recoveryAction;
-(void)_setRunning:(id)arg1 ;
-(void)_setCancelled:(id)arg1 ;
-(void)recover;
-(void)finishRecovery;
-(void)setExecutionBlock:(id)arg1 ;
-(id)executionBlock;
-(ODSession *)odSession;
-(void)setOdSession:(ODSession *)arg1 ;
-(void)setProgressStatus:(NSString *)arg1 ;
-(ODNode *)odConfigNode;
-(id)sendConfig:(id)arg1 responseDict:(id*)arg2 nodeName:(id)arg3 customCallCode:(long long)arg4 ;
-(void)setRootDSE:(NSDictionary *)arg1 ;
-(NSDictionary *)rootDSE;
-(id)addNodeToSearchPaths:(id)arg1 ;
-(id)setPlugin:(id)arg1 enabled:(char)arg2 ;
-(char)legacyBinding;
-(void)startExecution;
-(char)openConfigNode:(id*)arg1 ;
-(void)setOdConfigNode:(ODNode *)arg1 ;
-(void)setLegacyBinding:(char)arg1 ;
-(void)setLocalizeProgressStatus:(char)arg1 ;
-(void)removeObserversFromAction:(id)arg1 ;
-(void)destroyRemoteAdminAuth;
-(NSString *)progressStatus;
-(char)needsRecovery;
-(void)setNeedsRecovery:(char)arg1 ;
-(char)updatesOnMainThread;
-(void)setUpdatesOnMainThread:(char)arg1 ;
-(void)_setDescription:(id)arg1 ;
-(void)_setPercentComplete:(id)arg1 ;
-(void)wakeUpRunLoop;
-(void)_setResults:(id)arg1 ;
-(void)addBeginTarget:(id)arg1 selector:(SEL)arg2 ;
-(NSThread *)originalThread;
-(void)performCallbacks:(id)arg1 ;
-(void)addCancelTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)addErrorTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)addFinishTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)addFinishRecoveryTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)setOriginalThread:(NSThread *)arg1 ;
-(void)performBeginCallbacks;
-(void)cancelActionDueToTimeout;
-(void)threadedStartExecution;
-(void)forceRecover;
-(void)addObserversToAction:(id)arg1 ;
-(void)stopExecution;
-(void)unthreadedFinish;
-(void)performErrorCallbacks;
-(void)performFinishCallbacks;
-(void)performCancelCallbacks;
-(void)performFinishRecoveryCallbacks;
-(void)appendTraceStringWithIndententation:(unsigned long long)arg1 toString:(id)arg2 ;
-(char)localizeProgressStatus;
-(char)preflightAuthRights;
-(void)postAuthSucceededNotification;
-(void)addBeginHandler:(/*^block*/id)arg1 ;
-(SEL)beginSelector;
-(void)setBeginSelector:(SEL)arg1 ;
-(id)beginTarget;
-(void)setBeginTarget:(id)arg1 ;
-(void)setBeginTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)addCancelHandler:(/*^block*/id)arg1 ;
-(SEL)cancelSelector;
-(void)setCancelSelector:(SEL)arg1 ;
-(id)cancelTarget;
-(void)setCancelTarget:(id)arg1 ;
-(void)setCancelTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)addErrorHandler:(/*^block*/id)arg1 ;
-(SEL)errorSelector;
-(void)setErrorSelector:(SEL)arg1 ;
-(id)errorTarget;
-(void)setErrorTarget:(id)arg1 ;
-(void)setErrorTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)addFinishHandler:(/*^block*/id)arg1 ;
-(SEL)finishSelector;
-(void)setFinishSelector:(SEL)arg1 ;
-(id)finishTarget;
-(void)setFinishTarget:(id)arg1 ;
-(void)setFinishTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)addFinishRecoveryHandler:(/*^block*/id)arg1 ;
-(SEL)finishRecoverySelector;
-(void)setFinishRecoverySelector:(SEL)arg1 ;
-(id)finishRecoveryTarget;
-(void)setFinishRecoveryTarget:(id)arg1 ;
-(void)setFinishRecoveryTarget:(id)arg1 selector:(SEL)arg2 ;
-(void)runSynchronously;
-(void)writeErrorToConsole;
-(id)traceString;
-(char)isRecoverable;
-(void)setRecoverable:(char)arg1 ;
-(id)authenticateToRemoteHost:(id)arg1 username:(id)arg2 password:(id)arg3 ;
-(id)authenticateWithLocalNodeAdminName:(id)arg1 password:(id)arg2 ;
-(id)removeNodeFromSearchPaths:(id)arg1 ;
-(char)preflightAuthRightsWithUsername:(id)arg1 password:(id)arg2 ;
-(void)setRemoteAuthExtForm:(SCD_Struct_OD0*)arg1 ;
-(NSArray *)beginCallbacks;
-(NSArray *)errorCallbacks;
-(NSArray *)finishCallbacks;
-(NSArray *)finishRecoveryCallbacks;
@end

