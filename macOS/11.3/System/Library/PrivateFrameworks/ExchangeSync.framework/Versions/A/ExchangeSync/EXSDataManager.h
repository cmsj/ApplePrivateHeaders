/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:47 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ExchangeSync.framework/Versions/A/ExchangeSync
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, PQLConnection, NSMutableArray, NSMutableDictionary;

@interface EXSDataManager : NSObject {

	char _dbConnectionOpen;
	NSObject*<OS_dispatch_queue> _databaseQueue;
	PQLConnection* _databaseConnection;
	NSMutableArray* _auditCache;
	NSMutableArray* _accountMetadataCache;
	NSMutableDictionary* _changeTrackingCache;
	unsigned long long _stateToken;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> databaseQueue;              //@synthesize databaseQueue=_databaseQueue - In the implementation block
@property (nonatomic,retain) PQLConnection * databaseConnection;                      //@synthesize databaseConnection=_databaseConnection - In the implementation block
@property (assign) char dbConnectionOpen;                                             //@synthesize dbConnectionOpen=_dbConnectionOpen - In the implementation block
@property (nonatomic,retain) NSMutableArray * auditCache;                             //@synthesize auditCache=_auditCache - In the implementation block
@property (nonatomic,retain) NSMutableArray * accountMetadataCache;                   //@synthesize accountMetadataCache=_accountMetadataCache - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * changeTrackingCache;               //@synthesize changeTrackingCache=_changeTrackingCache - In the implementation block
@property (assign,nonatomic) unsigned long long stateToken;                           //@synthesize stateToken=_stateToken - In the implementation block
+(id)log;
+(id)distinguishedFolderTypeToString:(long long)arg1 ;
-(id)init;
-(NSObject*<OS_dispatch_queue>)databaseQueue;
-(void)setDatabaseQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)shutdown;
-(PQLConnection *)databaseConnection;
-(unsigned long long)stateToken;
-(void)setStateToken:(unsigned long long)arg1 ;
-(void)startup;
-(char)updateFolderWithInternalID:(id)arg1 newExternalID:(id)arg2 newExternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(char)persistChangeItem:(id)arg1 inAccount:(id)arg2 forChangeSource:(id)arg3 ;
-(void)auditLogInsertError:(id)arg1 description:(id)arg2 forAccountID:(long long)arg3 changeSourceID:(id)arg4 itemID:(long long)arg5 ;
-(char)registerChangeSource:(id)arg1 forAccount:(id)arg2 ;
-(char)removeChangeSource:(id)arg1 forAccount:(id)arg2 ;
-(long long)getLastDataPushStateForChangeSource:(id)arg1 inAccount:(id)arg2 recoveryTrackingToken:(id*)arg3 recoveryTimestamp:(id*)arg4 ;
-(id)findFoldersWithFolderType:(long long)arg1 inAccount:(id)arg2 ;
-(long long)getLastChangeIDForChangeSource:(id)arg1 inAccount:(id)arg2 ;
-(id)getChangeItemsSinceChangeID:(long long)arg1 skippingChangeSourceID:(id)arg2 inAccount:(id)arg3 shouldBatch:(char)arg4 ;
-(id)beginDataPushForChangeSource:(id)arg1 inAccount:(id)arg2 forLastChangeID:(long long)arg3 ;
-(void)endDataPushForChangeSource:(id)arg1 inAccount:(id)arg2 withSuccessfulLastChangeID:(long long)arg3 ;
-(void)endDataPushForChangeSource:(id)arg1 inAccount:(id)arg2 withFailedLastChangeID:(long long)arg3 ;
-(id)findFolderAssociatedWithChangeItem:(id)arg1 ;
-(id)findExternalIDForDistinguishedFolderType:(long long)arg1 inAccount:(id)arg2 ;
-(char)storeExternalFolderID:(id)arg1 forDistinguishedFolderType:(long long)arg2 inAccount:(id)arg3 ;
-(id)getSyncStateForChangeSource:(id)arg1 inAccount:(id)arg2 ;
-(id)findFolderWithExternalID:(id)arg1 forAccount:(id)arg2 ;
-(char)updateFolderWithExternalID:(id)arg1 newParentExternalID:(id)arg2 inAccount:(id)arg3 ;
-(char)persistChangeItems:(id)arg1 inAccount:(id)arg2 forChangeSource:(id)arg3 newSyncState:(id)arg4 ;
-(void)auditLogInsertSyncFolderHierarchyForAccountID:(long long)arg1 initiatedBy:(id)arg2 result:(id)arg3 ;
-(id)findItemWithExternalID:(id)arg1 inAccount:(id)arg2 ;
-(char)updateItemWithInternalID:(id)arg1 newExternalID:(id)arg2 newExternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(char)persistChangeItems:(id)arg1 forFolder:(id)arg2 inAccount:(id)arg3 newFolderExternalSyncState:(id)arg4 ;
-(void)auditLogInsertSyncFolderItemsForAccountID:(long long)arg1 folderID:(long long)arg2 initiatedBy:(id)arg3 result:(id)arg4 ;
-(char)dropInfoForFolder:(id)arg1 ;
-(id)findFoldersInAccount:(id)arg1 ;
-(void)auditLogInsertResyncFolderHierarchyForAccountID:(long long)arg1 initiatedBy:(id)arg2 result:(id)arg3 ;
-(id)findItemsInFolder:(id)arg1 ;
-(char)updateItemWithExternalID:(id)arg1 newParentExternalID:(id)arg2 inAccount:(id)arg3 ;
-(void)auditLogInsertResyncFolderItemsForAccountID:(long long)arg1 folderID:(long long)arg2 initiatedBy:(id)arg3 result:(id)arg4 ;
-(long long)findDistinguishedFolderTypeForExternalID:(id)arg1 inAccount:(id)arg2 ;
-(id)findParentFolderAssociatedWithChangeItem:(id)arg1 ;
-(void)cleanupStaleDateForAccounts;
-(id)loadAccountsMetadataFromDatabase;
-(id)createAccountMetadataForACAccount:(id)arg1 ;
-(void)removeAccountMetadata:(id)arg1 ;
-(void)setAuditCache:(NSMutableArray *)arg1 ;
-(void)setAccountMetadataCache:(NSMutableArray *)arg1 ;
-(void)setChangeTrackingCache:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)changeTrackingCache;
-(char)dbConnectionOpen;
-(id)exchangeSyncDirectory;
-(void)setDatabaseConnection:(PQLConnection *)arg1 ;
-(char)removeDatabaseFiles;
-(void)setDbConnectionOpen:(char)arg1 ;
-(void)validateDatabaseTableStructure;
-(void)fillAuditCacheFromDBUsingConnection:(id)arg1 ;
-(NSMutableArray *)accountMetadataCache;
-(NSMutableArray *)auditCache;
-(char)persistAuditLogItemOfType:(long long)arg1 timestamp:(id)arg2 initiatedBy:(id)arg3 description:(id)arg4 result:(id)arg5 accountID:(long long)arg6 changeSourceID:(id)arg7 itemID:(long long)arg8 usingDBConnection:(id)arg9 ;
-(id)_loadAccountsMetadataFromDatabase;
-(id)_createAccountMetadataForACAccount:(id)arg1 ;
-(void)removeAllRecordsForAccountID:(long long)arg1 ;
-(id)_getAllAccountsFromChangeSources;
-(void)_cleanupStaleAccountData:(long long)arg1 ;
-(char)_registerChangeSource:(id)arg1 forAccount:(id)arg2 ;
-(char)_removeChangeSource:(id)arg1 forAccount:(id)arg2 ;
-(id)_getSyncStateForChangeSource:(id)arg1 inAccount:(id)arg2 ;
-(char)_setSyncState:(id)arg1 forChangeSource:(id)arg2 inAccount:(id)arg3 ;
-(void)changeTrackingCacheSource:(id)arg1 setValue:(id)arg2 forKey:(id)arg3 ;
-(id)folderWithFolderID:(long long)arg1 forAccountWithID:(long long)arg2 markedAsDeleted:(char)arg3 ;
-(id)folderWithExternalID:(id)arg1 forAccountWithID:(long long)arg2 markedAsDeleted:(char)arg3 ;
-(id)folderWithInternalID:(id)arg1 forAccountWithID:(long long)arg2 markedAsDeleted:(char)arg3 ;
-(id)foldersForAccount:(id)arg1 ;
-(id)foldersWithFolderType:(long long)arg1 inAccount:(id)arg2 ;
-(id)findFoldersWithExternalIDs:(id)arg1 forAccount:(id)arg2 ;
-(id)folderAssociatedWithChangeItem:(id)arg1 markedAsDeleted:(char)arg2 ;
-(id)parentFolderAssociatedWithChangeItem:(id)arg1 ;
-(char)_updateFolderWithInternalID:(id)arg1 newExternalID:(id)arg2 newExternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(char)_updateFolderWithExternalID:(id)arg1 newInternalID:(id)arg2 newInternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(char)_updateFolderWithExternalID:(id)arg1 newParentExternalID:(id)arg2 inAccount:(id)arg3 ;
-(char)_storeExternalFolderID:(id)arg1 forDistinguishedFolderType:(long long)arg2 inAccount:(id)arg3 ;
-(id)externalIDForDistinguishedFolderType:(long long)arg1 inAccount:(id)arg2 ;
-(long long)distinguishedFolderTypeForExternalID:(id)arg1 inAccount:(id)arg2 ;
-(id)itemWithItemID:(long long)arg1 forAccountWithID:(long long)arg2 ;
-(id)itemWithExternalID:(id)arg1 forAccountWithID:(long long)arg2 ;
-(id)itemWithInternalID:(id)arg1 forAccountWithID:(long long)arg2 ;
-(id)itemsInFolderID:(long long)arg1 accountID:(long long)arg2 ;
-(id)itemAssociatedWithChangeItem:(id)arg1 ;
-(char)_updateItemWithInternalID:(id)arg1 newExternalID:(id)arg2 newExternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(char)_updateItemWithExternalID:(id)arg1 newInternalID:(id)arg2 newInternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(char)_updateItemWithExternalID:(id)arg1 newParentExternalID:(id)arg2 inAccount:(id)arg3 ;
-(char)updateOrAddFolderForChangeItem:(id)arg1 usingDBConnection:(id)arg2 ;
-(char)deleteFolderForChangeItem:(id)arg1 usingDBConnection:(id)arg2 ;
-(char)addItemForChangeItem:(id)arg1 usingDBConnection:(id)arg2 ;
-(char)updateItemForChangeItem:(id)arg1 usingDBConnection:(id)arg2 ;
-(char)deleteItemForChangeItem:(id)arg1 usingDBConnection:(id)arg2 ;
-(long long)getLastInsertedRowID:(id)arg1 ;
-(char)persistChangeItems:(id)arg1 inAccount:(id)arg2 usingDBConnection:(id)arg3 ;
-(id)_getChangeItemsSinceChangeID:(long long)arg1 skippingChangeSourceID:(id)arg2 inAccount:(id)arg3 shouldBatch:(char)arg4 ;
-(char)setSyncState:(id)arg1 forChangeSource:(id)arg2 inAccount:(id)arg3 ;
-(void)recoverSuccessfulDataPushForChangeSource:(id)arg1 inAccount:(id)arg2 ;
-(void)recoverFailedDataPushForChangeSource:(id)arg1 inAccount:(id)arg2 ;
-(char)updateFolderWithExternalID:(id)arg1 newInternalID:(id)arg2 newInternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(id)findFolderForDistinguishedFolderType:(long long)arg1 inAccount:(id)arg2 ;
-(id)findItemAssociatedWithChangeItem:(id)arg1 ;
-(char)updateItemWithExternalID:(id)arg1 newInternalID:(id)arg2 newInternalChangeKey:(id)arg3 inAccount:(id)arg4 ;
-(char)persistChangeItems:(id)arg1 forFolder:(id)arg2 inAccount:(id)arg3 newFolderInternalSyncState:(id)arg4 ;
@end

