/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:27 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/KnowledgeGraphKit.framework/Versions/A/KnowledgeGraphKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

@class NSURL, KGEntityDescription, NSUUID;


@protocol KGGraphStore <NSObject>
@property (nonatomic,readonly) char hasMarker; 
@property (nonatomic,readonly) NSURL * url; 
@property (nonatomic,readonly) KGEntityDescription * entityDescription; 
@property (assign,nonatomic) unsigned long long graphVersion; 
@property (nonatomic,readonly) NSUUID * graphIdentifier; 
@required
+(id)persistentStoreFileExtension;
+(char)copyFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+(char)migrateFromURL:(id)arg1 toURL:(id)arg2 error:(id*)arg3;
+(char)destroyAtURL:(id)arg1 error:(id*)arg2;
+(char)hasMarkerForDiskRepresentationAtURL:(id)arg1;
+(char)setMarkerForDiskRepresentationAtURL:(id)arg1;
+(void)deleteMarkerForDiskRepresentationAtURL:(id)arg1;
-(void)close;
-(NSURL *)url;
-(void)beginTransaction;
-(KGEntityDescription *)entityDescription;
-(void)commitTransaction;
-(char)copyToURL:(id)arg1 error:(id*)arg2;
-(void)setGraphVersion:(unsigned long long)arg1;
-(unsigned long long)graphVersion;
-(id)nodeLabels;
-(id)edgeLabels;
-(void)setMarker;
-(void)deleteMarker;
-(char)hasMarker;
-(unsigned long long)addNodeWithLabels:(id)arg1 weight:(float)arg2 properties:(id)arg3 error:(id*)arg4;
-(unsigned long long)addEdgeWithLabels:(id)arg1 weight:(float)arg2 properties:(id)arg3 sourceNodeIdentifier:(unsigned long long)arg4 targetNodeIdentifier:(unsigned long long)arg5 error:(id*)arg6;
-(NSUUID *)graphIdentifier;
-(char)openWithMode:(unsigned long long)arg1 error:(id*)arg2;
-(id)arrayOfNodesWithIdentifiers:(id)arg1 error:(id*)arg2;
-(id)arrayOfEdgesWithIdentifiers:(id)arg1 error:(id*)arg2;
-(id)nodesForIdentifiers:(id)arg1 error:(id*)arg2;
-(id)edgesForIdentifiers:(id)arg1 error:(id*)arg2;
-(id)nodeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
-(id)edgeIdentifiersMatchingFilter:(id)arg1 intersectingIdentifiers:(id)arg2 error:(id*)arg3;
-(id)edgeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 error:(id*)arg3;
-(id)neighborNodeIdentifiersWithStartNodeIdentifiers:(id)arg1 edgeDirection:(unsigned long long)arg2 edgeFilter:(id)arg3 error:(id*)arg4;
-(char)removeNodeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
-(char)removeEdgeForIdentifier:(unsigned long long)arg1 error:(id*)arg2;
-(char)removeNodesForIdentifiers:(id)arg1 error:(id*)arg2;
-(char)removeEdgesForIdentifiers:(id)arg1 error:(id*)arg2;
-(char)updateNodeForIdentifier:(unsigned long long)arg1 withWeight:(float)arg2 error:(id*)arg3;
-(char)updateNodeForIdentifier:(unsigned long long)arg1 withProperties:(id)arg2 error:(id*)arg3;
-(char)updateEdgeForIdentifier:(unsigned long long)arg1 withWeight:(float)arg2 error:(id*)arg3;
-(char)updateEdgeForIdentifier:(unsigned long long)arg1 withProperties:(id)arg2 error:(id*)arg3;

@end

