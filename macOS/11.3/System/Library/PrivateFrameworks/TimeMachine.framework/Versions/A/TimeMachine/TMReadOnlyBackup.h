/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:33 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/TimeMachine.framework/Versions/A/TimeMachine
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <TimeMachine/TMStructure.h>
#import <libobjc.A.dylib/TMAPFSSnapshotProtocol.h>
#import <libobjc.A.dylib/TMMountableBackupProtocol.h>

@class TMAPFSBackup, NSDate, TMSnapshot, NSURL, NSString;

@interface TMReadOnlyBackup : TMStructure <TMAPFSSnapshotProtocol, TMMountableBackupProtocol> {

	char _isInWorkingSet;
	TMAPFSBackup* _nestedBackup;
	NSDate* _dateCompleted;

}

@property (readonly) TMSnapshot * snapshot; 
@property (assign) char isInWorkingSet;                              //@synthesize isInWorkingSet=_isInWorkingSet - In the implementation block
@property (readonly) unsigned long long maximumFileID; 
@property (readonly) TMAPFSBackup * nestedBackup;                    //@synthesize nestedBackup=_nestedBackup - In the implementation block
@property (copy,readonly) NSURL * liveVolumeMountPoint; 
@property (readonly) unsigned long long xid; 
@property (readonly) unsigned long long fileID; 
@property (copy,readonly) NSString * snapshotName; 
@property (readonly) int flags; 
@property (readonly) NSURL * rootURL; 
@property (readonly) NSURL * expectedBackupURL; 
@property (readonly) NSString * name; 
@property (readonly) char isComplete; 
@property (readonly) NSDate * dateCompleted;                         //@synthesize dateCompleted=_dateCompleted - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)structureType;
+(id)annotatedStateAtURL:(id)arg1 ;
+(id)readAtURL:(id)arg1 parent:(id)arg2 error:(id*)arg3 ;
+(void)enumerateUnderURL:(id)arg1 parent:(id)arg2 enumerator:(/*^block*/id)arg3 ;
+(id)dateFromBackupSnapshotName:(id)arg1 ;
+(id)_URLForSnapshot:(id)arg1 liveVolumeMountPoint:(id)arg2 liveVolumeUUID:(id)arg3 ;
+(id)_snapshotForURL:(id)arg1 ;
+(id)_liveVolumeUUIDForURL:(id)arg1 ;
+(char)validateSnapshotName:(id)arg1 ;
+(id)mountPointFromLiveVolumeMountPoint:(id)arg1 snapshot:(id)arg2 ;
+(id)expectedNestedBackupURLFromLiveVolumeMountPoint:(id)arg1 snapshot:(id)arg2 ;
+(id)readOnlyBackupNameWithDate:(id)arg1 ;
+(id)dateFromBackupName:(id)arg1 ;
-(int)flags;
-(NSString *)description;
-(NSString *)name;
-(long long)compare:(id)arg1 ;
-(char)isComplete;
-(char)delete:(id*)arg1 ;
-(TMSnapshot *)snapshot;
-(unsigned long long)fileID;
-(NSURL *)rootURL;
-(unsigned long long)xid;
-(NSURL *)liveVolumeMountPoint;
-(NSDate *)dateCompleted;
-(id)deleteFromDiskWithCancelBlock:(/*^block*/id)arg1 error:(id*)arg2 ;
-(NSString *)snapshotName;
-(char)mountAtURL:(id)arg1 error:(id*)arg2 ;
-(char)waitForDeletionUntil:(id)arg1 error:(id*)arg2 ;
-(char)makeDataless:(id*)arg1 ;
-(unsigned long long)maximumFileID;
-(id)readyForBrowsingWithOptions:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)finishBrowsing:(id*)arg1 ;
-(NSURL *)expectedBackupURL;
-(char)isInWorkingSet;
-(void)setIsInWorkingSet:(char)arg1 ;
-(TMAPFSBackup *)nestedBackup;
@end

