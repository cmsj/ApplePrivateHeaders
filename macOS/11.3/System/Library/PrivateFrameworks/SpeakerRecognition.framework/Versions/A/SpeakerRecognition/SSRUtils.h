/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:19 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SpeakerRecognition.framework/Versions/A/SpeakerRecognition
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <SpeakerRecognition/SpeakerRecognition-Structs.h>
@interface SSRUtils : NSObject
+(unsigned long long)deviceCategoryForDeviceProductType:(id)arg1 ;
+(id)deviceCategoryStringRepresentationForCategoryType:(unsigned long long)arg1 ;
+(id)stringForSpeakerRecognizerType:(unsigned long long)arg1 ;
+(id)stringForInvocationStyle:(unsigned long long)arg1 ;
+(id)ssrAudioLogsDir;
+(void)createDirectoryIfDoesNotExist:(id)arg1 ;
+(char)ssrAudioLogsCountWithinPrivacyLimit;
+(id)combineScoreFromPSR:(id)arg1 fromSAT:(id)arg2 withCombinedWt:(float)arg3 ;
+(void)logSpeakerRecognitionGradingMetadataAtFilepath:(id)arg1 withScoreInfo:(id)arg2 ;
+(id)removeItemAtPath:(id)arg1 ;
+(id)stringForCSSpIdType:(unsigned long long)arg1 ;
+(id)satConfigFileNameForCSSpIdType:(unsigned long long)arg1 forModelType:(unsigned long long)arg2 forAssetType:(unsigned long long)arg3 ;
+(id)readJsonFileAtPath:(id)arg1 ;
+(unsigned long long)getVoiceProfileProductCategoryFromVersionFilePath:(id)arg1 ;
+(void)streamAudioFromFileUrl:(id)arg1 audioStreamBasicDescriptor:(AudioStreamBasicDescription)arg2 samplesPerStreamChunk:(unsigned long long)arg3 audioDataAvailableHandler:(/*^block*/id)arg4 ;
+(id)getExplicitEnrollmentUtterancesFromDirectory:(id)arg1 ;
+(id)getImplicitEnrollmentUtterancesFromDirectory:(id)arg1 ;
+(id)_getUtterancesFromDirectory:(id)arg1 ;
+(unsigned long long)explicitSpIdTypeForSpId:(unsigned long long)arg1 ;
+(unsigned long long)spIdTypeForString:(id)arg1 ;
+(id)stringForVoiceProfileRetrainerType:(unsigned long long)arg1 ;
+(id)satConfigFileNameForCSSpIdType:(unsigned long long)arg1 ;
+(id)psrConfigFileNameForCSSpIdType:(unsigned long long)arg1 ;
+(id)spIdVoiceProfileImportRootDir;
+(void)cleanupOrphanedVoiceIdGradingFiles;
+(id)spidAudioTrainUtterancesDir;
+(char)isSpeakerRecognitionSupportedInLocale:(id)arg1 ;
+(id)getVoiceProfileIdentityFromVersionFilePath:(id)arg1 ;
+(char)isCurrentDeviceCompatibleWithNewerVoiceProfileAt:(id)arg1 ;
+(char)isCurrentDeviceCompatibleWithVoiceProfileAt:(id)arg1 ;
+(id)getImplicitUtteranceCacheDirectory;
+(long long)getNumberOfAudioFilesInDirectory:(id)arg1 ;
+(void)dumpFilesInDirectory:(id)arg1 ;
+(id)getContentsOfDirectory:(id)arg1 ;
+(void)getHomeUserIdForVoiceProfile:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
+(id)getVoiceProfilesForSiriProfileId:(id)arg1 ;
+(id)getVoiceProfileForSiriProfileId:(id)arg1 forLanguageCode:(id)arg2 ;
+(void)secureVoiceProfilesBasePathAt:(id)arg1 ;
+(void)segmentVoiceTriggerFromAudioFile:(id)arg1 withVTEventInfo:(id)arg2 withStorePayloadPortion:(char)arg3 withCompletion:(/*^block*/id)arg4 ;
+(id)getEnrollmentUtterancesFromDirectory:(id)arg1 ;
+(id)getExplicitMarkedEnrollmentUtterancesFromDirectory:(id)arg1 ;
+(void)getEnrollmentUtterancesCountFromDirectory:(id)arg1 withCountBlock:(/*^block*/id)arg2 ;
+(id)moveContentsOfSrcDirectory:(id)arg1 toDestDirectory:(id)arg2 ;
+(char)encryptFileAt:(id)arg1 andSaveTo:(id)arg2 error:(id*)arg3 ;
@end

