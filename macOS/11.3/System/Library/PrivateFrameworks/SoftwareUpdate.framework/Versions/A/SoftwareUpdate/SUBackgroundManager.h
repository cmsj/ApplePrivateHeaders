/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/SoftwareUpdate
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <SoftwareUpdate/SoftwareUpdate-Structs.h>
@class NSMutableArray, NSBackgroundActivityScheduler, NSMutableSet, NSError, NSString, NSObject, NSSet;

@interface SUBackgroundManager : NSObject {

	NSMutableArray* _userVisibleUpdates;
	NSMutableArray* _configDataUpdates;
	NSMutableArray* _firmwareUpdates;
	NSMutableArray* _backgroundInstallCriticalUpdates;
	NSMutableArray* _registerForPostLogoutCriticalUpdates;
	NSMutableArray* _productsQueuedForStaging;
	NSMutableArray* _productsDownloadingInBackground;
	NSBackgroundActivityScheduler* _stageActivityScheduler;
	NSMutableSet* _errorUpdateKeys;
	NSMutableArray* _autoInstalledJournalEntries;
	char _timeToScan;
	char _canDownloadAndStage;
	char _wasScanIncomplete;
	NSError* _error;
	NSString* _catalogTestMode;
	AuthorizationOpaqueRefRef _authRef;
	NSObject*<OS_dispatch_queue> _productStateQueue;
	NSObject*<OS_dispatch_queue> _backgroundOpsQueue;
	NSObject*<OS_dispatch_queue> _modifyAuthQueue;
	char _suspended;
	long long _numInflightOperations;
	NSSet* _previousIncompleteKeys;

}

@property (assign) long long numInflightOperations;              //@synthesize numInflightOperations=_numInflightOperations - In the implementation block
@property (retain) NSSet * previousIncompleteKeys;               //@synthesize previousIncompleteKeys=_previousIncompleteKeys - In the implementation block
@property (assign,nonatomic) char suspended;                     //@synthesize suspended=_suspended - In the implementation block
+(id)sharedBackgroundManager;
-(void)installStatus:(id)arg1 didChangeExternallyForProductKey:(id)arg2 ;
-(char)downloadUpdates:(id)arg1 notifyWhenFinished:(char)arg2 inForeground:(char)arg3 withReply:(/*^block*/id)arg4 ;
-(char)downloadAndStageUpdates:(id)arg1 doDownload:(char)arg2 notifyWhenFinished:(char)arg3 inForeground:(char)arg4 withReply:(/*^block*/id)arg5 ;
-(void)clearAutoInstalledUpdates;
-(void)cancelBackgroundDownloadIfNecessaryForProductKeys:(id)arg1 replyWhenDone:(/*^block*/id)arg2 ;
-(char)refreshAvailableUpdatesIfRequiredWithSynchronousScan:(char)arg1 ;
-(void)downloadRecommendedUpdates;
-(id)_appropriateProductsForAction:(long long)arg1 ;
-(char)_canDownloadAndStageUpdates;
-(char)_evaluateScanRequirements;
-(void)evaluateAvailableUpdatesAndLog:(char)arg1 ;
-(void)_reevaluateAvailableUpdatesIfNecessary;
-(long long)nextActionForProductKey:(id)arg1 returningProduct:(id*)arg2 ;
-(char)_shouldStageUpdate:(id)arg1 ;
-(void)_pushProductToStage:(id)arg1 ;
-(void)_scheduleStagingForQueuedProducts;
-(void)_performBackgroundConfigDataInstallForProduct:(id)arg1 ;
-(void)_markPendingCriticalUpdateForPostLogoutInstallIfAppropriate:(id)arg1 ;
-(char)_isProductEligibleForAutoInstallOfRestartRequiredUpdates:(id)arg1 ;
-(void)_backgroundDownloadDidFinishForProduct:(id)arg1 ;
-(void)addToAutoInstallJournalForProduct:(id)arg1 wasAdminAutoInstall:(char)arg2 ;
-(long long)_activityDelay;
-(id)_popProduct;
-(void)_stageProducts:(id)arg1 replyWhenDone:(/*^block*/id)arg2 ;
-(void)setCatalogTestMode:(id)arg1 ;
-(id)incompleteProductKeys;
-(char)shouldRetryAheadOfSchedule;
-(long long)numInflightOperations;
-(void)setNumInflightOperations:(long long)arg1 ;
-(NSSet *)previousIncompleteKeys;
-(void)setPreviousIncompleteKeys:(NSSet *)arg1 ;
-(void)restoreFromCoder:(id)arg1 ;
-(void)archiveToCoder:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)error;
-(void)setSuspended:(char)arg1 ;
-(char)suspended;
-(void)resetState;
-(id)autoInstalledJournalEntries;
@end

