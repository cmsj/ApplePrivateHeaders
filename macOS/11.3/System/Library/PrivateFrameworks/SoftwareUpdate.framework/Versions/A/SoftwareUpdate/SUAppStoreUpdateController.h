/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:09 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SoftwareUpdate.framework/Versions/A/SoftwareUpdate
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SoftwareUpdate/SoftwareUpdate-Structs.h>
#import <libobjc.A.dylib/SUUpdateClient.h>

@protocol OS_dispatch_queue;
@class NSXPCConnection, NSLock, NSArray, NSObject, SUPowerSourceMonitor, NSError, NSURLCredential, NSString;

@interface SUAppStoreUpdateController : NSObject <SUUpdateClient> {

	NSXPCConnection* _conn;
	NSLock* _connectionLock;
	NSArray* _currentUpdates;
	NSArray* _currentMajorUpdates;
	NSArray* _queuedUpdates;
	NSObject*<OS_dispatch_queue> _q;
	char _requireACPower;
	char _deferredUpdatesExist;
	SUPowerSourceMonitor* _powerMonitor;
	NSObject*<OS_dispatch_queue> _scanAndSessionQ;
	NSError* _lastCantStartError;
	AuthorizationOpaqueRefRef _authRef;
	char _didSendAuth;
	char _destroyAuthRef;
	char _serviceInterrupted;
	long long _numServiceInterruptionsDetected;
	NSObject*<OS_dispatch_queue> _authQueue;
	NSLock* _statusTimerLock;
	NSObject*<OS_dispatch_queue> _initialAvailableUpdatesQueryQueue;
	char _isSystemAppleInternal;
	char _shouldRegisterBundleURLWithLaunchServices;
	NSURLCredential* _sharedURLCredential;

}

@property (assign) char requireACPower;                                         //@synthesize requireACPower=_requireACPower - In the implementation block
@property (readonly) char canStartUpdate; 
@property (retain) NSURLCredential * sharedURLCredential;                       //@synthesize sharedURLCredential=_sharedURLCredential - In the implementation block
@property (readonly) char deferredUpdatesExist;                                 //@synthesize deferredUpdatesExist=_deferredUpdatesExist - In the implementation block
@property (assign) char shouldRegisterBundleURLWithLaunchServices;              //@synthesize shouldRegisterBundleURLWithLaunchServices=_shouldRegisterBundleURLWithLaunchServices - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_errorWithCode:(long long)arg1 userInfo:(id)arg2 underlyingError:(id)arg3 ;
+(id)keyPathsForValuesAffectingCanStartUpdate;
+(id)sharedUpdateController;
-(id)installedUpdateJournal;
-(id)installedUpdateJournalPrunedAndSorted;
-(void)catalogURLDidChange;
-(void)installedBundlesToRegisterWithLaunchServices:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)updatesQueuedForLaterDidChange;
-(void)authChallengeWasReceived:(id)arg1 handled:(char*)arg2 ;
-(void)installStateDidChange:(id)arg1 forUpdateWithProductKey:(id)arg2 ;
-(char)requireACPower;
-(void)_queryForAvailableUpdatesWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_softwareUpdateDaemonStarted:(id)arg1 ;
-(char)_authorizeIfNeeded:(char)arg1 ;
-(void)_setAvailableUpdatesAndNotify:(id)arg1 withMajorOSUpdates:(id)arg2 currentStatus:(id)arg3 deferredUpdatesChanged:(char)arg4 ;
-(void)_retrieveCatalogInformationWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)_productKeysFromUpdates:(id)arg1 ;
-(id)_shortDescriptionOfUpdates:(id)arg1 ;
-(char)_hasIAUpdate:(id)arg1 ;
-(id)_dictFromUpdateStatus:(id)arg1 ;
-(id)_startSessionForUpdates:(id)arg1 withInstall:(char)arg2 usingForeground:(char)arg3 notifyOn:(id)arg4 progress:(/*^block*/id)arg5 finish:(/*^block*/id)arg6 ;
-(char)installUpdatesAfterNextLogout:(id)arg1 restartingNow:(char)arg2 nowIsLater:(char)arg3 ;
-(id)_updatesFromProductKeys:(id)arg1 ;
-(id)updatesToBeInstalledAfterLogout;
-(char)_clearUserSideStashCredentials;
-(NSURLCredential *)sharedURLCredential;
-(id)_lookupURLCredentialsFromUserKeychain:(id)arg1 ;
-(void)setSharedURLCredential:(NSURLCredential *)arg1 ;
-(char)shouldRegisterBundleURLWithLaunchServices;
-(void)_updateCanStartUpdate:(id)arg1 ;
-(void)availableUpdatesMatchingPredicate:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(char)isDefaultCatalog;
-(id)applicationIdentifiersToCloseForUpdates:(id)arg1 ;
-(id)startInstallingUpdates:(id)arg1 notifyOn:(id)arg2 progress:(/*^block*/id)arg3 finish:(/*^block*/id)arg4 ;
-(char)isDownloadRequiredForPostLogoutUpdates:(id)arg1 ;
-(char)installUpdatesAfterNextLogout:(id)arg1 restartingNow:(char)arg2 ;
-(char)registerRequestsToInstallAfterPostLogoutUpdates:(id)arg1 error:(id*)arg2 ;
-(id)queuedUpdates;
-(void)_setQueuedUpdatesAndNotify:(id)arg1 ;
-(char)enqueueUpdate:(id)arg1 ;
-(char)dequeueUpdate:(id)arg1 ;
-(id)_queuedProductKeys;
-(long long)actionRequiredForQueuedUpdates;
-(unsigned long long)diskSpaceRequiredForQueuedUpdates;
-(id)applicationIdentifiersToCloseForQueuedUpdates;
-(id)startInstallingQueuedUpdatesAndNotifyOn:(id)arg1 progress:(/*^block*/id)arg2 finish:(/*^block*/id)arg3 ;
-(char)isDownloadRequiredForPostLogoutQueuedUpdates;
-(id)startDownloadingPostLogoutQueuedUpdatesAndNotifyOn:(id)arg1 progress:(/*^block*/id)arg2 finish:(/*^block*/id)arg3 ;
-(char)installQueuedUpdatesAfterNextLogoutRestartingNow:(char)arg1 ;
-(void)dealloc;
-(id)init;
-(id)remoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(id)_connection;
-(id)synchronousRemoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(void)cancelOperation:(id)arg1 ;
-(char)setAuthorization:(AuthorizationOpaqueRefRef)arg1 ;
-(char)deferredUpdatesExist;
-(id)catalogURL;
-(id)availableUpdates;
-(char)_shouldStashLoginCredentialsForUpdates:(id)arg1 ;
-(void)setShouldRegisterBundleURLWithLaunchServices:(char)arg1 ;
-(id)startScanningForUpdatesIncludingPrerelease:(char)arg1 rampedUnseen:(char)arg2 evenIfUnchanged:(char)arg3 notifyOn:(id)arg4 progress:(/*^block*/id)arg5 finish:(/*^block*/id)arg6 ;
-(char)removeAllUpdatesFromInstallLater;
-(char)installUpdatesLater:(id)arg1 ;
-(id)updatesToBeInstalledLater;
-(id)combinedStatusForProductKeys:(id)arg1 ;
-(id)availableMajorOSUpdates;
-(void)fetchMajorProductForUpdate:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(id)systemConfiguredCatalogURL;
-(id)catalogHostName;
-(int)catalogTrustLevel;
-(char)isEVProtected;
-(char)isSeedCatalog;
-(id)productKeysInActiveForegroundTransactions;
-(void)cancelUpdatesForProductKeys:(id)arg1 ;
-(id)dictFromUpdateStatus:(id)arg1 ;
-(unsigned long long)diskSpaceRequiredForUpdates:(id)arg1 ;
-(id)startInstallingUpdates:(id)arg1 notifyOn:(id)arg2 usingForeground:(char)arg3 progress:(/*^block*/id)arg4 finish:(/*^block*/id)arg5 ;
-(long long)actionRequiredForUpdates:(id)arg1 ;
-(char)canStartUpdateReturningError:(id*)arg1 ;
-(void)setRequireACPower:(char)arg1 ;
-(char)canStartUpdate;
-(void)blockUntilInitialAvailableUpdatesPopulated;
-(id)startDownloadingPostLogoutUpdates:(id)arg1 notifyOn:(id)arg2 progress:(/*^block*/id)arg3 finish:(/*^block*/id)arg4 ;
-(void)availableUpdatesDidChange;
@end

