/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:09 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SPOwner.framework/Versions/A/SPOwner
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SPPairingManagerXPCProtocol, OS_dispatch_queue;
@class FMXPCServiceDescription, FMXPCSession, NSObject;

@interface SPPairingManager : NSObject {

	FMXPCServiceDescription* _serviceDescription;
	FMXPCSession* _session;
	FMXPCServiceDescription* _userAgentServiceDescription;
	FMXPCSession* _userAgentSession;
	id<SPPairingManagerXPCProtocol> _proxy;
	NSObject*<OS_dispatch_queue> _queue;

}

@property (nonatomic,retain) FMXPCServiceDescription * serviceDescription;                       //@synthesize serviceDescription=_serviceDescription - In the implementation block
@property (nonatomic,retain) FMXPCSession * session;                                             //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) FMXPCServiceDescription * userAgentServiceDescription;              //@synthesize userAgentServiceDescription=_userAgentServiceDescription - In the implementation block
@property (nonatomic,retain) FMXPCSession * userAgentSession;                                    //@synthesize userAgentSession=_userAgentSession - In the implementation block
@property (nonatomic,retain) id<SPPairingManagerXPCProtocol> proxy;                              //@synthesize proxy=_proxy - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                 //@synthesize queue=_queue - In the implementation block
-(void)dealloc;
-(id)init;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id<SPPairingManagerXPCProtocol>)proxy;
-(FMXPCSession *)session;
-(void)setSession:(FMXPCSession *)arg1 ;
-(id)remoteInterface;
-(void)setProxy:(id<SPPairingManagerXPCProtocol>)arg1 ;
-(void)setServiceDescription:(FMXPCServiceDescription *)arg1 ;
-(FMXPCServiceDescription *)serviceDescription;
-(FMXPCSession *)userAgentSession;
-(FMXPCServiceDescription *)userAgentServiceDescription;
-(void)setUserAgentSession:(FMXPCSession *)arg1 ;
-(id)userAgentProxy;
-(void)setUserAgentServiceDescription:(FMXPCServiceDescription *)arg1 ;
-(void)getLocalPairingDataWithCompletion:(/*^block*/id)arg1 ;
-(void)setAlwaysBeaconState:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)alwaysBeaconStateWithCompletion:(/*^block*/id)arg1 ;
-(void)currentBeaconingKeyWithCompletion:(/*^block*/id)arg1 ;
-(void)initiatePairingSessionWithCompletion:(/*^block*/id)arg1 ;
-(void)invalidatePairingSession:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)unpairUUID:(id)arg1 force:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)allPairingErrorsWithCompletion:(/*^block*/id)arg1 ;
-(void)verifyPairingWithPairingSession:(id)arg1 signature:(id)arg2 attestation:(id)arg3 systemPublicKey:(id)arg4 refKeyPublicKey:(id)arg5 systemVersion:(id)arg6 vendorId:(long long)arg7 productId:(long long)arg8 ecid:(id)arg9 chipId:(id)arg10 serialNumber:(id)arg11 collaborativeKey:(id)arg12 completion:(/*^block*/id)arg13 ;
-(void)finalizePairingWithSession:(id)arg1 name:(id)arg2 roleId:(long long)arg3 roleEmoji:(id)arg4 keyStatus:(id)arg5 collaborativeKey:(id)arg6 signature:(id)arg7 completion:(/*^block*/id)arg8 ;
-(void)finalizePairingWithSession:(id)arg1 configuration:(id)arg2 completion:(/*^block*/id)arg3 ;
@end

