/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:53 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreHandwriting.framework/Versions/A/CoreHandwriting
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreHandwriting/CHPostprocessingStep.h>

@class CHRecognizer;

@interface CHCandidateRefinementStep : CHPostprocessingStep {

	char _shouldKeepOutOfPatternCandidates;
	char _shouldKeepDuplicateTokenIDs;
	char _shouldKeepOutOfLexiconAlternatives;
	char _shouldKeepAlternativeLengths;
	char _shouldKeepSubstrings;
	char _shouldKeepOriginalSpelling;
	CHRecognizer* _recognizer;

}

@property (assign,nonatomic) CHRecognizer * recognizer;                            //@synthesize recognizer=_recognizer - In the implementation block
@property (assign,nonatomic) char shouldKeepOutOfPatternCandidates;                //@synthesize shouldKeepOutOfPatternCandidates=_shouldKeepOutOfPatternCandidates - In the implementation block
@property (assign,nonatomic) char shouldKeepDuplicateTokenIDs;                     //@synthesize shouldKeepDuplicateTokenIDs=_shouldKeepDuplicateTokenIDs - In the implementation block
@property (assign,nonatomic) char shouldKeepOutOfLexiconAlternatives;              //@synthesize shouldKeepOutOfLexiconAlternatives=_shouldKeepOutOfLexiconAlternatives - In the implementation block
@property (assign,nonatomic) char shouldKeepAlternativeLengths;                    //@synthesize shouldKeepAlternativeLengths=_shouldKeepAlternativeLengths - In the implementation block
@property (assign,nonatomic) char shouldKeepSubstrings;                            //@synthesize shouldKeepSubstrings=_shouldKeepSubstrings - In the implementation block
@property (assign,nonatomic) char shouldKeepOriginalSpelling;                      //@synthesize shouldKeepOriginalSpelling=_shouldKeepOriginalSpelling - In the implementation block
-(void)setRecognizer:(CHRecognizer *)arg1 ;
-(CHRecognizer *)recognizer;
-(id)process:(id)arg1 ;
-(char)shouldKeepDuplicateTokenIDs;
-(char)shouldKeepOutOfPatternCandidates;
-(id)initWithRecognizer:(id)arg1 shouldKeepOutOfPatternCandidates:(char)arg2 shouldKeepDuplicateTokenIDs:(char)arg3 shouldKeepOutOfLexiconAlternatives:(char)arg4 shouldKeepAlternativeLengths:(char)arg5 shouldKeepSubstrings:(char)arg6 shouldKeepOriginalSpelling:(char)arg7 ;
-(void)setShouldKeepOutOfPatternCandidates:(char)arg1 ;
-(void)setShouldKeepDuplicateTokenIDs:(char)arg1 ;
-(char)shouldKeepOutOfLexiconAlternatives;
-(void)setShouldKeepOutOfLexiconAlternatives:(char)arg1 ;
-(char)shouldKeepAlternativeLengths;
-(void)setShouldKeepAlternativeLengths:(char)arg1 ;
-(char)shouldKeepSubstrings;
-(void)setShouldKeepSubstrings:(char)arg1 ;
-(char)shouldKeepOriginalSpelling;
-(void)setShouldKeepOriginalSpelling:(char)arg1 ;
@end

