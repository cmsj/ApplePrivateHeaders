/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:30 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol VMUStackLogReader;
#import <Symbolication/Symbolication-Structs.h>
@class VMUDebugTimer, VMUProcessObjectGraph, VMUTaskMemoryScanner, NSMutableArray;

@interface VMULeakDetector : NSObject {

	char _showLeakedVMregions;
	char _showOnlyVMregions;
	char _fullStacks;
	char _showRawClassNames;
	char _showBinaryContents;
	char _checkAbandoned;
	char _suppressOutput;
	char _showListOfLeaks;
	char _groupByType;
	char _referenceTreeShowRegionVirtualSize;
	unsigned _objectContentLevel;
	unsigned long long _max_contents_bytes;
	VMUDebugTimer* _debugTimer;
	id<VMUStackLogReader> _stackLogReader;
	VMUProcessObjectGraph* _graph;
	VMUTaskMemoryScanner* _scanner;
	unsigned _task;
	_sFILE* _outputFile;
	char _fcloseOutput;
	unsigned _numExcluded;
	void* _abandoned;
	void* _leakedNodes;
	NSMutableArray* _leakTreeRootsArray;
	VMUProcessObjectGraph* _leakedGraph;
	char _showContext;

}

@property (assign,nonatomic) char showLeakedVMregions;                             //@synthesize showLeakedVMregions=_showLeakedVMregions - In the implementation block
@property (assign,nonatomic) char showContext;                                     //@synthesize showContext=_showContext - In the implementation block
@property (assign,nonatomic) char showOnlyVMregions;                               //@synthesize showOnlyVMregions=_showOnlyVMregions - In the implementation block
@property (assign,nonatomic) char fullStacks;                                      //@synthesize fullStacks=_fullStacks - In the implementation block
@property (assign,nonatomic) char showRawClassNames;                               //@synthesize showRawClassNames=_showRawClassNames - In the implementation block
@property (assign,nonatomic) char showBinaryContents;                              //@synthesize showBinaryContents=_showBinaryContents - In the implementation block
@property (assign,nonatomic) char checkAbandoned;                                  //@synthesize checkAbandoned=_checkAbandoned - In the implementation block
@property (assign,nonatomic) char suppressOutput;                                  //@synthesize suppressOutput=_suppressOutput - In the implementation block
@property (assign,nonatomic) char showListOfLeaks;                                 //@synthesize showListOfLeaks=_showListOfLeaks - In the implementation block
@property (assign,nonatomic) char groupByType;                                     //@synthesize groupByType=_groupByType - In the implementation block
@property (assign,nonatomic) char referenceTreeShowRegionVirtualSize;              //@synthesize referenceTreeShowRegionVirtualSize=_referenceTreeShowRegionVirtualSize - In the implementation block
@property (nonatomic,retain) VMUDebugTimer * debugTimer;                           //@synthesize debugTimer=_debugTimer - In the implementation block
@property (assign,nonatomic) _sFILE* outputFile;                                   //@synthesize outputFile=_outputFile - In the implementation block
@property (assign,nonatomic) char fcloseOutput;                                    //@synthesize fcloseOutput=_fcloseOutput - In the implementation block
@property (assign,nonatomic) unsigned objectContentLevel;                          //@synthesize objectContentLevel=_objectContentLevel - In the implementation block
@property (nonatomic,readonly) unsigned task;                                      //@synthesize task=_task - In the implementation block
@property (nonatomic,readonly) VMUProcessObjectGraph * graph;                      //@synthesize graph=_graph - In the implementation block
@property (nonatomic,readonly) VMUTaskMemoryScanner * scanner;                     //@synthesize scanner=_scanner - In the implementation block
@property (nonatomic,readonly) id<VMUStackLogReader> stackLogReader;               //@synthesize stackLogReader=_stackLogReader - In the implementation block
@property (assign,nonatomic) void* abandoned;                                      //@synthesize abandoned=_abandoned - In the implementation block
@property (assign,nonatomic) void* leakedNodes;                                    //@synthesize leakedNodes=_leakedNodes - In the implementation block
@property (nonatomic,retain) NSMutableArray * leakTreeRootsArray;                  //@synthesize leakTreeRootsArray=_leakTreeRootsArray - In the implementation block
@property (nonatomic,retain) VMUProcessObjectGraph * leakedGraph;                  //@synthesize leakedGraph=_leakedGraph - In the implementation block
-(void)dealloc;
-(unsigned)task;
-(VMUProcessObjectGraph *)graph;
-(void)setObjectContentLevel:(unsigned)arg1 ;
-(unsigned)objectContentLevel;
-(void)setDebugTimer:(VMUDebugTimer *)arg1 ;
-(void)setShowRawClassNames:(char)arg1 ;
-(id)nodeDescription:(unsigned)arg1 ;
-(VMUDebugTimer *)debugTimer;
-(char)showRawClassNames;
-(id)scannerOrGraph;
-(void)printout:(const char*)arg1 ;
-(id)labelForNode:(unsigned)arg1 details:(SCD_Struct_VM2)arg2 shortLabel:(char)arg3 ;
-(void)printContents:(void*)arg1 size:(unsigned long long)arg2 ;
-(id)nodeTypeDescription:(unsigned)arg1 details:(SCD_Struct_VM2*)arg2 mallocBySize:(char)arg3 ;
-(id)nodeDescription:(unsigned)arg1 usingDetails:(SCD_Struct_VM2*)arg2 ;
-(void)setLeakedGraph:(VMUProcessObjectGraph *)arg1 ;
-(void)setLeakTreeRootsArray:(NSMutableArray *)arg1 ;
-(id)referenceDescription:(SCD_Struct_VM5*)arg1 dstDescription:(id)arg2 is64bit:(char)arg3 ;
-(char)checkTaskExistence;
-(void)setLeakedNodes:(void*)arg1 ;
-(void)setAbandoned:(void*)arg1 ;
-(void)printLeak:(const char*)arg1 node:(unsigned)arg2 details:(SCD_Struct_VM2)arg3 region:(id)arg4 stop:(char*)arg5 ;
-(void)buildLeakTree;
-(_sFILE*)outputFile;
-(void)printLeakTree;
-(id)initWithTask:(unsigned)arg1 graph:(id)arg2 scanner:(id)arg3 stackLogReader:(id)arg4 ;
-(unsigned)doNormalLeakDetectionWithError:(out id*)arg1 ;
-(char)showLeakedVMregions;
-(void)setShowLeakedVMregions:(char)arg1 ;
-(char)showContext;
-(void)setShowContext:(char)arg1 ;
-(char)showOnlyVMregions;
-(void)setShowOnlyVMregions:(char)arg1 ;
-(char)fullStacks;
-(void)setFullStacks:(char)arg1 ;
-(char)showBinaryContents;
-(void)setShowBinaryContents:(char)arg1 ;
-(char)checkAbandoned;
-(void)setCheckAbandoned:(char)arg1 ;
-(char)suppressOutput;
-(void)setSuppressOutput:(char)arg1 ;
-(char)showListOfLeaks;
-(void)setShowListOfLeaks:(char)arg1 ;
-(char)groupByType;
-(void)setGroupByType:(char)arg1 ;
-(char)referenceTreeShowRegionVirtualSize;
-(void)setReferenceTreeShowRegionVirtualSize:(char)arg1 ;
-(void)setOutputFile:(_sFILE*)arg1 ;
-(char)fcloseOutput;
-(void)setFcloseOutput:(char)arg1 ;
-(VMUTaskMemoryScanner *)scanner;
-(id<VMUStackLogReader>)stackLogReader;
-(void*)abandoned;
-(void*)leakedNodes;
-(NSMutableArray *)leakTreeRootsArray;
-(VMUProcessObjectGraph *)leakedGraph;
@end

