/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:30 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Symbolication/Symbolication-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSDictionary;

@interface VMUDirectedGraph : NSObject <NSCopying> {

	long long _graphCompatibilityVersion;
	long long _graphVersion;
	unsigned _nodeCount;
	unsigned _edgeCount;
	unsigned _edgeCapacity;
	unsigned _externalEdges;
	void* _deadNodes;
	unsigned _nextNodeName;
	unsigned _nextEdgeName;
	unsigned* _nodeAdjIndex;
	VMUDirectedGraphEdge* _edges;
	NSDictionary* _additionalProperties;
	unsigned _indexedNodeSpace;
	unsigned _indexedEdges;
	int _insideSearch;
	char _inverted;
	char _graphIs64bit;

}

@property (assign,nonatomic) char inverted; 
@property (nonatomic,copy) NSDictionary * additionalProperties;              //@synthesize additionalProperties=_additionalProperties - In the implementation block
@property (nonatomic,readonly) unsigned nodeCount;                           //@synthesize nodeCount=_nodeCount - In the implementation block
@property (nonatomic,readonly) unsigned edgeCount; 
@property (nonatomic,readonly) unsigned nodeNamespaceSize;                   //@synthesize nextNodeName=_nextNodeName - In the implementation block
@property (nonatomic,readonly) unsigned edgeNamespaceSize;                   //@synthesize nextEdgeName=_nextEdgeName - In the implementation block
@property (nonatomic,readonly) char graphIs64bit;                            //@synthesize graphIs64bit=_graphIs64bit - In the implementation block
@property (nonatomic,readonly) unsigned pointerSize; 
+(id)_archivedBytes:(const void*)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 ;
+(id)_archivedObject:(id)arg1 options:(unsigned long long)arg2 ;
+(void*)_copyUnarchived:(id)arg1 length:(unsigned long long*)arg2 options:(unsigned long long)arg3 ;
+(id)_unarchivedObject:(id)arg1 ofClass:(Class)arg2 options:(unsigned long long)arg3 ;
+(id)directedGraphWithData:(id)arg1 error:(id*)arg2 ;
+(void)encapsulateData:(id)arg1 to:(id)arg2 withSupplementalDataTag:(const char*)arg3 dataGeneratorBlock:(/*^block*/id)arg4 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(unsigned)edgeCount;
-(void)setAdditionalProperties:(NSDictionary *)arg1 ;
-(void)setInverted:(char)arg1 ;
-(char)inverted;
-(unsigned)enumerateEdgesWithBlock:(/*^block*/id)arg1 ;
-(id)initWithPlistRepresentation:(id)arg1 ;
-(void)setGraphVersion:(long long)arg1 ;
-(unsigned)nodeCount;
-(unsigned)enumerateNodesWithBlock:(/*^block*/id)arg1 ;
-(id)plistRepresentationWithOptions:(unsigned long long)arg1 ;
-(id)initWithNodes:(unsigned)arg1 ;
-(NSDictionary *)additionalProperties;
-(unsigned)nodeNamespaceSize;
-(unsigned)pointerSize;
-(id)subgraphWithMarkedNodes:(void*)arg1 ;
-(unsigned)addGroupNodeForNodes:(const unsigned*)arg1 count:(unsigned)arg2 ;
-(id)invertedGraph;
-(unsigned)enumerateMembersOfGroupNode:(unsigned)arg1 withBlock:(/*^block*/id)arg2 ;
-(unsigned)parentGroupForNode:(unsigned)arg1 ;
-(unsigned)enumerateEdgesOfNode:(unsigned)arg1 withBlock:(/*^block*/id)arg2 ;
-(id)initWithArchived:(id)arg1 version:(long long)arg2 options:(unsigned long long)arg3 diskLogs:(id)arg4 error:(id*)arg5 ;
-(void)archiveDictionaryRepresentation:(id)arg1 options:(unsigned long long)arg2 ;
-(void)_renameWithNodeMap:(unsigned*)arg1 nodeNamespace:(unsigned)arg2 edgeMap:(unsigned*)arg3 edgeNamespace:(unsigned)arg4 ;
-(void)_internalAccessRawEdgesWithBlock:(/*^block*/id)arg1 ;
-(unsigned)_internalEnumerateEdgesOfNode:(unsigned)arg1 withBlock:(/*^block*/id)arg2 ;
-(void)removeMarkedEdges:(void*)arg1 ;
-(void)withEdgeMarkingMap:(/*^block*/id)arg1 ;
-(id)initWithPlistRepresentation:(id)arg1 error:(id*)arg2 ;
-(id)decapsulateIPSheaderInData:(id)arg1 error:(id*)arg2 ;
-(id)decapsulateSupplementalData:(id)arg1 forTag:(const char*)arg2 ;
-(id)decapsulatePlistData:(id)arg1 error:(id*)arg2 ;
-(unsigned)edgeNamespaceSize;
-(char)graphIs64bit;
-(void)_reorderEdgesNaturally;
-(void)_internalAddEdgeFromNode:(unsigned)arg1 toNode:(unsigned)arg2 withName:(unsigned)arg3 ;
-(void)_faultDeadNodeMap;
-(void)_removeEdges:(/*^block*/id)arg1 ;
-(char)_adjustAdjacencyMap;
-(void)_dfsCore:(unsigned)arg1 colors:(char*)arg2 visitBlock:(/*^block*/id)arg3 examineBlock:(/*^block*/id)arg4 ;
-(void)_searchMainLoop:(unsigned)arg1 action:(/*^block*/id)arg2 ;
-(void)_bfsCore:(unsigned)arg1 colors:(char*)arg2 visitBlock:(/*^block*/id)arg3 examineBlock:(/*^block*/id)arg4 ;
-(void)removeMarkedNodes:(void*)arg1 ;
-(void)_renormalize;
-(void)setGraphCompatibilityVersion:(long long)arg1 ;
-(unsigned)addNode;
-(unsigned)addEdgeFromNode:(unsigned)arg1 toNode:(unsigned)arg2 ;
-(void*)deadNodeMap;
-(char)isNodePresent:(unsigned)arg1 ;
-(void)ungroupNode:(unsigned)arg1 ;
-(void)withNodeMarkingMap:(/*^block*/id)arg1 ;
-(void)depthFirstSearch:(unsigned)arg1 nodeVisitBlock:(/*^block*/id)arg2 edgeVisitBlock:(/*^block*/id)arg3 ;
-(void)breadthFirstSearch:(unsigned)arg1 nodeVisitBlock:(/*^block*/id)arg2 edgeVisitBlock:(/*^block*/id)arg3 ;
-(void)_dumpAdjacencyList;
-(void)invertEdges;
-(id)renormalizedGraph;
@end

