/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:28 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SafariSharedUI.framework/Versions/A/SafariSharedUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SafariSharedUI/SafariSharedUI-Structs.h>
#import <SafariSharedUI/WBSExtensionsController.h>

@class NSHashTable, NSMutableDictionary, NSMapTable, _WKRemoteObjectInterface;

@interface WBSWebExtensionsController : WBSExtensionsController {

	NSHashTable* _extensionsWithWebRequestListeners;
	NSHashTable* _extensionsWithWebNavigationListeners;
	NSMutableDictionary* _extensionIdentifierToData;
	NSMapTable* _portsBySourceWebView;
	NSMutableDictionary* _ports;
	_WKRemoteObjectInterface* _bundleControllerRemoteObjectInterface;
	_WKRemoteObjectInterface* _controllerRemoteObjectInterface;
	NSMapTable* _selectorForwarders;
	struct {
		unsigned _supportsWebRequestEvents : 1;
	}  _delegateFlags;

}

@property (readonly) unsigned long long toolbarItemIdealPointSize; 
@property (readonly) char showAllWebsiteAccessRequestsAsAlerts; 
@property (assign,nonatomic,__weak) id<WBSWebExtensionsControllerDelegate> delegate; 
@property (nonatomic,readonly) id<WBSWebExtensionWindow> lastFocusedWindow; 
+(id)_extensionPointIdentifier;
+(id)_composedIdentifierForStateOfExtensionWithBundleIdentifier:(id)arg1 developerIdentifier:(id)arg2 ;
+(id)_urlForExtensionSettings;
+(id)extensionURLScheme;
-(id)init;
-(void)setDelegate:(id<WBSWebExtensionsControllerDelegate>)arg1 ;
-(char)extensionIsEnabled:(id)arg1 ;
-(unsigned long long)toolbarItemIdealPointSize;
-(void)navigationStartedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3 ;
-(void)navigationFailedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3 ;
-(void)navigationCommittedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3 ;
-(void)navigationFinishedForTab:(id)arg1 request:(id)arg2 frame:(id)arg3 ;
-(void)disconnectAllPortsFromWebView:(id)arg1 ;
-(char)showAllWebsiteAccessRequestsAsAlerts;
-(void)registerRemoteObjectWithWebView:(id)arg1 ;
-(id)bundleControllerProxyForWebView:(id)arg1 ;
-(id)contextMenuItemsForContext:(id)arg1 ;
-(void)unregisterRemoteObjectFromWebView:(id)arg1 ;
-(id)webExtensionForExtensionIdentifier:(id)arg1 ;
-(id)webExtensionForComposedIdentifier:(id)arg1 ;
-(id)webExtensionForBaseURIHost:(id)arg1 ;
-(void)executeContextMenuItem:(id)arg1 ;
-(id)webExtensionForExtension:(id)arg1 ;
-(char)showOptionsForExtension:(id)arg1 ;
-(id)extensionWithBaseURIHost:(id)arg1 ;
-(void)setExtension:(id)arg1 isEnabled:(char)arg2 skipSavingToStorage:(char)arg3 ;
-(void)_unloadPreviouslyEnabledExtension:(id)arg1 ;
-(void)_loadEnabledExtension:(id)arg1 ;
-(id)_generateBaseURIForExtension:(id)arg1 ;
-(void)_enumerateMessageReceiversForEnabledExtensionsForEventType:(unsigned long long)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)fireOnCommandEventIfNecessaryForWebExtension:(id)arg1 commandName:(id)arg2 ;
-(id)_tabForTabID:(id)arg1 webView:(id)arg2 extension:(id)arg3 ;
-(id)_windowForWindowID:(id)arg1 webView:(id)arg2 extension:(id)arg3 ;
-(id)_determineSourceStringForProgrammaticInjection:(id)arg1 extension:(id)arg2 ;
-(void)_pinTab:(id)arg1 ;
-(id)_findTabInAnyWindowWithID:(double)arg1 ;
-(void)_relateParentTab:(id)arg1 toTab:(id)arg2 ;
-(void)_updateWebExtensionDataMapForExtension:(id)arg1 ;
-(char)_extensionHasWebNavigationPermissionRemovingListenerIfNot:(id)arg1 ;
-(void)_removeWebRequestListenerForExtension:(id)arg1 ;
-(void)sendMessage:(id)arg1 fromExtensionWithID:(id)arg2 fromWebView:(id)arg3 rawSenderInfo:(id)arg4 toExtensionWithID:(id)arg5 replyHandler:(/*^block*/id)arg6 ;
-(void)sendMessage:(id)arg1 fromExtensionWithID:(id)arg2 fromWebView:(id)arg3 rawSenderInfo:(id)arg4 toTabWithID:(double)arg5 withOptions:(id)arg6 responseCallback:(/*^block*/id)arg7 ;
-(void)connectFromWebView:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3 toApplicationWithID:(id)arg4 ;
-(void)connectFromWebView:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3 toExtensionWithID:(id)arg4 connectInfo:(id)arg5 rawSenderInfo:(id)arg6 ;
-(void)connectFromWebView:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3 toTabWithID:(double)arg4 connectInfo:(id)arg5 rawSenderInfo:(id)arg6 ;
-(void)executeScriptWithDetails:(id)arg1 fromExtensionWithID:(id)arg2 toTabWithID:(id)arg3 webView:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)getInformationForTab:(id)arg1 extensionIdentifier:(id)arg2 webView:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)queryTabs:(id)arg1 forExtensionWithID:(id)arg2 webView:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)getInformationForWindow:(id)arg1 getInfo:(id)arg2 extensionIdentifier:(id)arg3 webView:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)addListenerForExtensionWithIdentifier:(id)arg1 type:(unsigned long long)arg2 webView:(id)arg3 ;
-(void)removeListenerForExtensionWithIdentifier:(id)arg1 type:(unsigned long long)arg2 webView:(id)arg3 ;
-(id)_allWindows;
-(id)_tabForWebView:(id)arg1 ;
-(char)_canSendMessageFromWebView:(id)arg1 ;
-(id<WBSWebExtensionWindow>)lastFocusedWindow;
-(void)_sendMessage:(id)arg1 toApplicationWithID:(id)arg2 fromExtensionWithIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_clearNewTabPreferenceIfNecessaryForRemovedExtensionWithComposedIdentifier:(id)arg1 ;
-(void)_fireOnUpdatedEventForTabsMatchingOriginPatterns:(id)arg1 toExtension:(id)arg2 ;
-(void)_webExtensionDataPermissionsWereGranted:(id)arg1 ;
-(void)_webExtensionDataPermissionsWereRevokedOrRemoved:(id)arg1 ;
-(void)_queueStartupAndInstallEventsForExtensionIfNecessary:(id)arg1 ;
-(void)_loadPermissionsFromStorageForWebExtension:(id)arg1 ;
-(char)_extensionShouldBeEnabled:(id)arg1 ;
-(id)_senderFromWebView:(id)arg1 withRawSenderInfo:(id)arg2 forExtension:(id)arg3 ;
-(void)terminateConnectionFromPortWithID:(id)arg1 fromExtensionWithID:(id)arg2 ;
-(void)_addWebNavigationListenerForExtension:(id)arg1 ;
-(void)_removeWebNavigationListenerForExtension:(id)arg1 ;
-(void)_addWebRequestListenerForExtension:(id)arg1 ;
-(void)_addOrRemoveWebNavigationListenerIfNecessaryForExtension:(id)arg1 ;
-(void)_addOrRemoveWebRequestListenerIfNecessaryForExtension:(id)arg1 ;
-(void)_deleteStorageForExtensionWithComposedIdentifier:(id)arg1 ;
-(void)_deleteStateForExtensionWithComposedIdentifier:(id)arg1 ;
-(id)_extensionsToIncludeInContextMenuWithContext:(id)arg1 ;
-(id)_registerNewPortWithID:(id)arg1 asConnectingFrom:(id)arg2 to:(id)arg3 extensionID:(id)arg4 applicationID:(id)arg5 ;
-(void)_removePort:(id)arg1 webExtension:(id)arg2 ;
-(void)_addOrRemoveListenersIfNecessaryForExtension:(id)arg1 ;
-(void)_savePermissionsToStorageForWebExtension:(id)arg1 ;
-(void)_savePermissionsToStorageAndPostDidChangeNotificationForWebExtension:(id)arg1 ;
-(void)_savePermissionsToStorageAndPostDidChangeNotificationSoonForWebExtension:(id)arg1 ;
-(id)_allTabs;
-(void)_notifyExtension:(id)arg1 storageWasChangedWithChanges:(id)arg2 forStorageOfType:(long long)arg3 ;
-(void)_prepareToFireEventToExtensionWithUniqueIdentifierIfEnabled:(id)arg1 eventType:(unsigned long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)_storageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2 ;
-(void)_fireOnChangedStorageEventForExtensionWithUniqueIdentifier:(id)arg1 changedKeysAndNewValues:(id)arg2 oldKeysAndValues:(id)arg3 forStorageOfType:(long long)arg4 ;
-(void)_fireOnChangedStorageEventForExtensionWithUniqueIdentifier:(id)arg1 removedKeysAndValues:(id)arg2 forStorageOfType:(long long)arg3 ;
-(void)_getFramesFromFrameTree:(id)arg1 startingFrameID:(unsigned long long)arg2 shouldIncludeChildren:(char)arg3 foundStartingFrame:(char)arg4 toArray:(id)arg5 ;
-(id)_currentWindowForWebView:(id)arg1 extension:(id)arg2 ;
-(id)_navigationDetailsForTab:(id)arg1 request:(id)arg2 frame:(id)arg3 ;
-(void)_getWindowStateForWindow:(id)arg1 queryOptions:(id)arg2 webExtension:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)lastSeenBaseURIForExtension:(id)arg1 updatingWithCurrentBaseURI:(id)arg2 ;
-(void)sendMessageFromContainingApp:(id)arg1 toExtensionWithIdentifier:(id)arg2 ;
-(void)addListenersIfNecessaryForExtension:(id)arg1 ;
-(void)removeListenersIfNecessaryForExtension:(id)arg1 ;
-(id)loadBackgroundPageListenersFromStorageForWebExtension:(id)arg1 ;
-(id)loadBackgroundPageListenersVersionNumberFromStorageForWebExtension:(id)arg1 ;
-(void)saveBackgroundPageListenersToStorageForWebExtension:(id)arg1 ;
-(id)substituteDataForExtensionURL:(id)arg1 usingMIMEType:(id*)arg2 ;
-(void)createAlarmWithName:(id)arg1 alarmInfo:(id)arg2 extensionIdentifier:(id)arg3 ;
-(void)getAlarmWithName:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getAllAlarmsForExtensionWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)clearAlarmWithName:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)invalidateAlarmsForExtensionWithIdentifier:(id)arg1 ;
-(void)createContextMenuItem:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)updateContextMenuItemWithIdentifier:(id)arg1 properties:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)removeContextMenuItemWithIdentifier:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)removeAllContextMenuItemsForExtensionWithIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getCookieWithURL:(id)arg1 name:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)getAllCookiesWithDetails:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setCookieWithDetails:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)removeCookieWithDetails:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getAllCookieStoresForExtensionIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)postMessage:(id)arg1 fromPortWithID:(id)arg2 fromExtensionWithID:(id)arg3 ;
-(char)webViewHasOpenPorts:(id)arg1 ;
-(void)loadPermissionsIfNecessaryForExtension:(id)arg1 ;
-(void)openOptionsPageForExtensionIdentifier:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)reloadExtensionWithIdentifier:(id)arg1 ;
-(void)loadBackgroundPageForExtensionWithID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)getValuesForKeys:(id)arg1 fromStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)getValuesForAllKeysFromStorageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setKeyedData:(id)arg1 inStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)deleteValuesForKeys:(id)arg1 fromStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)deleteDatabaseForStorageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getStorageSizeForKeys:(id)arg1 inStorageOfType:(long long)arg2 forExtensionWithUniqueIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)getStorageSizeForAllKeysInStorageOfType:(long long)arg1 forExtensionWithUniqueIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getToolbarItemTitleForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setToolbarItemTitle:(id)arg1 forTab:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)getToolbarItemBadgeTextForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setToolbarItemBadgeText:(id)arg1 forTab:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)getToolbarItemPopupForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setToolbarItemPopupPath:(id)arg1 forTab:(id)arg2 extensionIdentifier:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)disableToolbarItemForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)enableToolbarItemForTab:(id)arg1 extensionIdentifier:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setIconPathDictionary:(id)arg1 iconImageDataDictionary:(id)arg2 forTab:(id)arg3 extensionIdentifier:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)getInformationForLastFocusedWindowForExtensionIdentifier:(id)arg1 getInfo:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)getInformationForAllWindowsForExtensionIdentifier:(id)arg1 getInfo:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
@end

