/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:28 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SafariSharedUI.framework/Versions/A/SafariSharedUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SafariSharedUI/SafariSharedUI-Structs.h>
#import <libobjc.A.dylib/WBSWebExtensionDataForwarding.h>

@class NSString, NSImage, NSArray, NSURL, NSSet, NSDictionary, NSMutableSet, WKBrowsingContextHandle, WBSBundleWebExtensionBrowsingContext, WBSWebExtensionData, WKWebProcessPlugInScriptWorld, JSValue, WBSWebExtensionLocalization;

@interface WBSBundleWebExtension : NSObject <WBSWebExtensionDataForwarding> {

	NSMutableSet* _browsingContextsDisplayingExtensionContent;
	WKBrowsingContextHandle* _backgroundPageHandle;
	WBSBundleWebExtensionBrowsingContext* _popupHandle;
	WBSWebExtensionData* _data;
	WKWebProcessPlugInScriptWorld* _world;

}

@property (nonatomic,retain) WKBrowsingContextHandle * backgroundPageHandle;                        //@synthesize backgroundPageHandle=_backgroundPageHandle - In the implementation block
@property (nonatomic,readonly) JSValue * backgroundPageWindowObject; 
@property (nonatomic,retain) WBSBundleWebExtensionBrowsingContext * popupHandle;                    //@synthesize popupHandle=_popupHandle - In the implementation block
@property (nonatomic,retain) WBSWebExtensionData * data;                                            //@synthesize data=_data - In the implementation block
@property (nonatomic,readonly) WBSWebExtensionLocalization * localization; 
@property (nonatomic,retain) WKWebProcessPlugInScriptWorld * world;                                 //@synthesize world=_world - In the implementation block
@property (nonatomic,readonly) NSDictionary * manifest; 
@property (nonatomic,readonly) NSString * runtimeIdentifier; 
@property (nonatomic,readonly) NSArray * relatedBrowsingContextHandles; 
@property (nonatomic,readonly) NSString * displayName; 
@property (nonatomic,readonly) NSString * displayShortName; 
@property (nonatomic,readonly) NSString * displayVersion; 
@property (nonatomic,readonly) NSString * displayDescription; 
@property (nonatomic,readonly) NSString * processDisplayName; 
@property (nonatomic,readonly) NSString * version; 
@property (nonatomic,readonly) NSImage * preferencesIcon; 
@property (nonatomic,readonly) NSImage * icon; 
@property (nonatomic,readonly) NSImage * toolbarImage; 
@property (nonatomic,readonly) NSString * generatedBackgroundPageContent; 
@property (nonatomic,readonly) char backgroundPageIsPersistent; 
@property (nonatomic,readonly) NSArray * injectedContentData; 
@property (nonatomic,readonly) NSURL * newTabOverridePageURL; 
@property (nonatomic,readonly) char hasBrowserAction; 
@property (nonatomic,readonly) char hasPageAction; 
@property (nonatomic,readonly) char hasCommands; 
@property (nonatomic,readonly) long long manifestVersion; 
@property (nonatomic,readonly) char requestsAccessToAllHosts; 
@property (assign,nonatomic) char requestedOptionalAccessToAllHosts; 
@property (nonatomic,readonly) NSSet * currentPermissions; 
@property (nonatomic,readonly) NSSet * currentPermissionOrigins; 
@property (nonatomic,readonly) NSSet * currentAccessibleOrigins; 
@property (nonatomic,readonly) NSDictionary * configuredPermissions; 
@property (nonatomic,readonly) NSDictionary * configuredPermissionOrigins; 
@property (nonatomic,readonly) NSSet * requestedPermissionsNotAlreadyConfigured; 
@property (nonatomic,readonly) NSSet * requestedPermissionOriginsNotAlreadyConfigured; 
@property (nonatomic,copy) NSDictionary * grantedPermissions; 
@property (nonatomic,copy) NSDictionary * grantedPermissionOrigins; 
@property (nonatomic,copy) NSDictionary * revokedPermissions; 
@property (nonatomic,copy) NSDictionary * revokedPermissionOrigins; 
@property (nonatomic,readonly) NSSet * manifestPermissions; 
@property (nonatomic,readonly) NSSet * manifestOptionalPermissions; 
@property (nonatomic,readonly) NSSet * manifestPermissionOrigins; 
@property (nonatomic,readonly) NSSet * manifestOptionalPermissionOrigins; 
@property (nonatomic,readonly) NSSet * manifestAccessibleOrigins; 
@property (nonatomic,readonly) NSString * contentSecurityPolicy; 
@property (nonatomic,readonly) NSArray * webAccessibleResources; 
@property (nonatomic,readonly) NSDictionary * commands; 
@property (nonatomic,readonly) NSArray * manifestErrors; 
-(char)respondsToSelector:(SEL)arg1 ;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(WBSWebExtensionData *)data;
-(void)setData:(WBSWebExtensionData *)arg1 ;
-(WKWebProcessPlugInScriptWorld *)world;
-(WBSWebExtensionLocalization *)localization;
-(NSDictionary *)manifest;
-(NSString *)runtimeIdentifier;
-(id)_windowObjectForBrowsingContext:(id)arg1 ;
-(JSValue *)backgroundPageWindowObject;
-(WBSBundleWebExtensionBrowsingContext *)popupHandle;
-(id)initWithWebExtensionData:(id)arg1 ;
-(void)addBrowsingContextDisplayingExtensionContent:(id)arg1 ;
-(id)allWindowObjectsWithProperties:(id)arg1 usingContext:(OpaqueJSContextRef)arg2 ;
-(NSArray *)relatedBrowsingContextHandles;
-(WKBrowsingContextHandle *)backgroundPageHandle;
-(void)setBackgroundPageHandle:(WKBrowsingContextHandle *)arg1 ;
-(void)setPopupHandle:(WBSBundleWebExtensionBrowsingContext *)arg1 ;
-(void)setWorld:(WKWebProcessPlugInScriptWorld *)arg1 ;
@end

