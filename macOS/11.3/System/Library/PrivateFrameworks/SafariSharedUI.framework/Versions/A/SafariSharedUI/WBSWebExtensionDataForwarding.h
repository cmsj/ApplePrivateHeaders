/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:28 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SafariSharedUI.framework/Versions/A/SafariSharedUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

@class NSString, NSImage, NSArray, NSURL, NSSet, NSDictionary;


@protocol WBSWebExtensionDataForwarding
@property (nonatomic,readonly) NSString * displayName; 
@property (nonatomic,readonly) NSString * displayShortName; 
@property (nonatomic,readonly) NSString * displayVersion; 
@property (nonatomic,readonly) NSString * displayDescription; 
@property (nonatomic,readonly) NSString * processDisplayName; 
@property (nonatomic,readonly) NSString * version; 
@property (nonatomic,readonly) NSImage * preferencesIcon; 
@property (nonatomic,readonly) NSImage * icon; 
@property (nonatomic,readonly) NSImage * toolbarImage; 
@property (nonatomic,readonly) NSString * generatedBackgroundPageContent; 
@property (nonatomic,readonly) char backgroundPageIsPersistent; 
@property (nonatomic,readonly) NSArray * injectedContentData; 
@property (nonatomic,readonly) NSURL * newTabOverridePageURL; 
@property (nonatomic,readonly) char hasBrowserAction; 
@property (nonatomic,readonly) char hasPageAction; 
@property (nonatomic,readonly) char hasCommands; 
@property (nonatomic,readonly) long long manifestVersion; 
@property (nonatomic,readonly) char requestsAccessToAllHosts; 
@property (assign,nonatomic) char requestedOptionalAccessToAllHosts; 
@property (nonatomic,readonly) NSSet * currentPermissions; 
@property (nonatomic,readonly) NSSet * currentPermissionOrigins; 
@property (nonatomic,readonly) NSSet * currentAccessibleOrigins; 
@property (nonatomic,readonly) NSDictionary * configuredPermissions; 
@property (nonatomic,readonly) NSDictionary * configuredPermissionOrigins; 
@property (nonatomic,readonly) NSSet * requestedPermissionsNotAlreadyConfigured; 
@property (nonatomic,readonly) NSSet * requestedPermissionOriginsNotAlreadyConfigured; 
@property (nonatomic,copy) NSDictionary * grantedPermissions; 
@property (nonatomic,copy) NSDictionary * grantedPermissionOrigins; 
@property (nonatomic,copy) NSDictionary * revokedPermissions; 
@property (nonatomic,copy) NSDictionary * revokedPermissionOrigins; 
@property (nonatomic,readonly) NSSet * manifestPermissions; 
@property (nonatomic,readonly) NSSet * manifestOptionalPermissions; 
@property (nonatomic,readonly) NSSet * manifestPermissionOrigins; 
@property (nonatomic,readonly) NSSet * manifestOptionalPermissionOrigins; 
@property (nonatomic,readonly) NSSet * manifestAccessibleOrigins; 
@property (nonatomic,readonly) NSString * contentSecurityPolicy; 
@property (nonatomic,readonly) NSArray * webAccessibleResources; 
@property (nonatomic,readonly) NSDictionary * commands; 
@property (nonatomic,readonly) NSArray * manifestErrors; 
@optional
-(NSString *)version;
-(NSString *)displayName;
-(NSImage *)icon;
-(NSDictionary *)commands;
-(NSString *)displayDescription;
-(long long)manifestVersion;
-(NSDictionary *)grantedPermissions;
-(void)setGrantedPermissions:(id)arg1;
-(NSString *)displayVersion;
-(NSString *)processDisplayName;
-(char)hasBrowserAction;
-(char)hasPageAction;
-(void)revokePermissions:(id)arg1 origins:(id)arg2 expirationDate:(id)arg3;
-(void)grantPermissions:(id)arg1 origins:(id)arg2 expirationDate:(id)arg3;
-(char)requestsAccessToAllHosts;
-(NSSet *)requestedPermissionOriginsNotAlreadyConfigured;
-(NSURL *)newTabOverridePageURL;
-(char)backgroundPageIsPersistent;
-(void)loadBackgroundPageIfNecessaryWithCompletionHandler:(/*^block*/id)arg1;
-(NSString *)displayShortName;
-(NSImage *)preferencesIcon;
-(NSArray *)manifestErrors;
-(char)hasPermission:(id)arg1;
-(NSImage *)toolbarImage;
-(void)setRequestedOptionalAccessToAllHosts:(char)arg1;
-(char)requestedOptionalAccessToAllHosts;
-(void)removeGrantedPermissions:(id)arg1 origins:(id)arg2 exactPatternMatchesOnly:(char)arg3;
-(char)hasPermissionToAccessURL:(id)arg1;
-(void)removeGrantedAndRevokedPermissions:(id)arg1 origins:(id)arg2 exactPatternMatchesOnly:(char)arg3;
-(NSDictionary *)configuredPermissionOrigins;
-(NSDictionary *)grantedPermissionOrigins;
-(NSDictionary *)revokedPermissionOrigins;
-(NSSet *)manifestAccessibleOrigins;
-(char)hasPermissionToAccessAllHosts;
-(char)hasCommands;
-(NSString *)generatedBackgroundPageContent;
-(void)scheduleBackgroundPageToUnload;
-(void)setGrantedPermissionOrigins:(id)arg1;
-(void)setRevokedPermissions:(id)arg1;
-(void)setRevokedPermissionOrigins:(id)arg1;
-(NSDictionary *)revokedPermissions;
-(char)hasInjectedContentDataForURL:(id)arg1;
-(char)hasPermissions:(id)arg1 origins:(id)arg2;
-(long long)permissionStateForURL:(id)arg1;
-(char)hasPermissionToAccessAllURLs;
-(void)removeRevokedPermissions:(id)arg1 origins:(id)arg2 exactPatternMatchesOnly:(char)arg3;
-(char)verifyRequestedPermissions:(id)arg1 origins:(id)arg2 errorMessage:(id*)arg3;
-(NSArray *)injectedContentData;
-(NSSet *)currentPermissions;
-(NSSet *)currentPermissionOrigins;
-(NSSet *)currentAccessibleOrigins;
-(NSDictionary *)configuredPermissions;
-(NSSet *)requestedPermissionsNotAlreadyConfigured;
-(NSSet *)manifestPermissions;
-(NSSet *)manifestOptionalPermissions;
-(NSSet *)manifestPermissionOrigins;
-(NSSet *)manifestOptionalPermissionOrigins;
-(NSString *)contentSecurityPolicy;
-(NSArray *)webAccessibleResources;

@end

