/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:28 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SafariSharedUI.framework/Versions/A/SafariSharedUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SafariSharedUI/SafariSharedUI-Structs.h>
#import <libobjc.A.dylib/WBSSiteMetadataProvider.h>

@protocol OS_dispatch_queue, WBSSiteMetadataProviderDelegate;
@class NSMutableDictionary, NSCache, NSObject, WBSFaviconProviderPersistenceController, NSCalendar, NSURL, NSArray, NSString;

@interface WBSFaviconProvider : NSObject <WBSSiteMetadataProvider> {

	NSMutableDictionary* _hostsToRequestsMap;
	NSCache* _responseCache;
	NSObject*<OS_dispatch_queue> _internalQueue;
	NSObject*<OS_dispatch_queue> _internalSavingQueue;
	NSMutableDictionary* _urlsToFaviconRecordsSavedDuringMigration;
	WBSFaviconProviderPersistenceController* _persistenceController;
	NSCalendar* _calendar;
	double _expirationInterval;
	long long _providerState;
	unsigned long long _privateDataRetentionCount;
	CGSize _scaledPreferredIconSize;
	/*^block*/id _shouldCheckIntegrityWhenOpeningDatabaseBlock;
	char _isReadOnly;
	id<WBSSiteMetadataProviderDelegate> _providerDelegate;
	NSURL* _baseURL;
	double _preferredIconScale;
	NSArray* _allIconScales;
	CGSize _preferredIconSize;

}

@property (nonatomic,readonly) NSURL * baseURL;                                       //@synthesize baseURL=_baseURL - In the implementation block
@property (nonatomic,readonly) CGSize preferredIconSize;                              //@synthesize preferredIconSize=_preferredIconSize - In the implementation block
@property (nonatomic,readonly) double preferredIconScale;                             //@synthesize preferredIconScale=_preferredIconScale - In the implementation block
@property (nonatomic,copy,readonly) NSArray * allIconScales;                          //@synthesize allIconScales=_allIconScales - In the implementation block
@property (nonatomic,readonly) char isReadOnly;                                       //@synthesize isReadOnly=_isReadOnly - In the implementation block
@property (__weak) id<WBSSiteMetadataProviderDelegate> providerDelegate;              //@synthesize providerDelegate=_providerDelegate - In the implementation block
@property (nonatomic,readonly) char providesFavicons; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(CGSize)defaultFaviconSize;
-(void)dealloc;
-(id)init;
-(NSURL *)baseURL;
-(char)isReadOnly;
-(void)setProviderDelegate:(id<WBSSiteMetadataProviderDelegate>)arg1 ;
-(id<WBSSiteMetadataProviderDelegate>)providerDelegate;
-(char)canHandleRequest:(id)arg1 ;
-(void)savePendingChangesBeforeTermination;
-(id)persistenceController;
-(void)setUpWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)responseForRequest:(id)arg1 willProvideUpdates:(char*)arg2 ;
-(void)prepareResponseForRequest:(id)arg1 allowDelayedResponse:(char)arg2 ;
-(void)stopWatchingUpdatesForRequest:(id)arg1 ;
-(void)emptyCaches;
-(char)providesFavicons;
-(void)linkIconFromPageURL:(id)arg1 toCurrentPageURL:(id)arg2 isPrivate:(char)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)saveFaviconImageData:(id)arg1 iconURL:(id)arg2 pageURL:(id)arg3 originalPageURL:(id)arg4 size:(CGSize)arg5 isPrivate:(char)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)shouldIconDataBeSavedForIconWithPageURL:(id)arg1 originalPageURL:(id)arg2 iconURL:(id)arg3 size:(CGSize)arg4 isPrivate:(char)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)retainPrivateData;
-(void)releasePrivateData;
-(id)initWithPersistenceBaseURL:(id)arg1 persistenceName:(id)arg2 preferredIconSize:(CGSize)arg3 atScale:(double)arg4 allScales:(id)arg5 isReadOnly:(char)arg6 shouldCheckIntegrityWhenOpeningDatabaseBlock:(/*^block*/id)arg7 ;
-(long long)providerState;
-(void)removeAllIconsForURLStringsNotIn:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)removeIconForURLString:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setUpPersistenceAtPath:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)imageForRequestDuringPersistenceSetUp:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)cleanUpAfterPersistenceSetUpDidSucceed:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)builtInIconForRequest:(id)arg1 ;
-(id)fallbackIconForRequest:(id)arg1 ;
-(void)_registerRequest:(id)arg1 ;
-(void)_updateOutstandingRequestsAfterSuccessfulSetup;
-(void)_atomicallySaveImageData:(id)arg1 iconURL:(id)arg2 pageURL:(id)arg3 originalPageURL:(id)arg4 size:(CGSize)arg5 isPrivate:(char)arg6 completionHandler:(/*^block*/id)arg7 ;
-(char)_isIconDateExpired:(id)arg1 ;
-(void)_atomicallyLinkPageURLs:(id)arg1 toIconWithInfo:(id)arg2 isPrivate:(char)arg3 ;
-(void)_updateOutstandingRequestsForPageURL:(id)arg1 forceDidReceiveNewData:(char)arg2 ;
-(void)_saveImageData:(id)arg1 iconURL:(id)arg2 pageURL:(id)arg3 originalPageURL:(id)arg4 size:(CGSize)arg5 isPrivate:(char)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)_confirmImageDataShouldBeSaved:(id)arg1 size:(CGSize)arg2 pageURL:(id)arg3 iconURL:(id)arg4 includingPrivateData:(char)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)flushPrivateDataFromMemoryWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)_cachedResponseForRequest:(id)arg1 ;
-(void)_prepareAndSendResponseForRequests:(id)arg1 forceDidReceiveNewData:(char)arg2 ;
-(void)_removeCachedResponsesForRequest:(id)arg1 ;
-(id)_hostFromRequest:(id)arg1 ;
-(id)_responseCacheKeyForRequest:(id)arg1 ;
-(id)_responseDictionaryKeyForRequest:(id)arg1 ;
-(id)_hostFromURL:(id)arg1 ;
-(void)_removeCachedResponsesForURL:(id)arg1 ;
-(id)_requestsForHost:(id)arg1 ;
-(void)_addCachedResponse:(id)arg1 forRequest:(id)arg2 ;
-(void)_getIconForRequest:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(void)_linkPageURL:(id)arg1 toIconWithInfo:(id)arg2 isPrivate:(char)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)initWithPersistenceBaseURL:(id)arg1 persistenceName:(id)arg2 preferredIconSize:(CGSize)arg3 atScale:(double)arg4 allScales:(id)arg5 shouldCheckIntegrityWhenOpeningDatabaseBlock:(/*^block*/id)arg6 ;
-(CGSize)preferredIconSize;
-(double)preferredIconScale;
-(NSArray *)allIconScales;
@end

