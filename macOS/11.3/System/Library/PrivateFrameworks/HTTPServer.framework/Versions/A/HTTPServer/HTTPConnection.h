/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/HTTPServer.framework/Versions/A/HTTPServer
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, HTTPResponse;
@class NSObject, GCDAsyncSocket, HTTPConfig, HTTPMessage, NSString, NSMutableArray;

@interface HTTPConnection : NSObject {

	NSObject*<OS_dispatch_queue> connectionQueue;
	GCDAsyncSocket* asyncSocket;
	HTTPConfig* config;
	char started;
	HTTPMessage* request;
	unsigned numHeaderLines;
	char sentResponseHeaders;
	NSString* nonce;
	long long lastNC;
	NSObject*<HTTPResponse> httpResponse;
	NSMutableArray* ranges;
	NSMutableArray* ranges_headers;
	NSString* ranges_boundry;
	int rangeIndex;
	unsigned long long requestContentLength;
	unsigned long long requestContentLengthReceived;
	unsigned long long requestChunkSize;
	unsigned long long requestChunkSizeReceived;
	NSMutableArray* responseDataSizes;
	unsigned long long posthumousCountedBytesWritten;
	unsigned replyStarted : 1;
	unsigned ignoreBodyData : 1;
	unsigned disconnectAfterResponding : 1;
	unsigned long long requestBodyState;

}
+(void)initialize;
+(char)hasRecentNonce:(id)arg1 ;
+(id)generateNonce;
+(id)parseParams:(id)arg1 ;
-(void)dealloc;
-(id)url;
-(void)start;
-(void)stop;
-(void)startConnection;
-(id)realm;
-(char)isAuthenticated;
-(unsigned short)connectedPort;
-(id)passwordForUser:(id)arg1 ;
-(int)receiveBufferSize;
-(char)useDigestAccessAuthentication;
-(char)isSecureServer;
-(id)sslIdentityAndCertificates;
-(const unsigned*)sslCipherSuites:(unsigned long long*)arg1 ;
-(void)customizeSSLSettings:(id)arg1 ;
-(void)startReadingRequest;
-(char)supportsStreamedRequestBody;
-(void)replyToHTTPRequest;
-(void)readRequestBody;
-(void)sendResponseHeadersAndBody;
-(void)writeData:(id)arg1 withTimeout:(double)arg2 tag:(long long)arg3 ;
-(void)stopAfterResponding;
-(void)prepareForBodyWithSize:(unsigned long long)arg1 ;
-(char)shouldReadMoreBodyDataNow;
-(void)readMoreBodyDataNow;
-(void)finishBody;
-(id)parseParams:(id)arg1 ;
-(void)handleVersionNotSupported:(id)arg1 ;
-(id)requestURI;
-(char)isPasswordProtected:(id)arg1 ;
-(void)handleAuthenticationFailed;
-(id)httpResponseForMethod:(id)arg1 URI:(id)arg2 ;
-(char)expectsDelayedResponse;
-(void)startResponseForMethod:(id)arg1 URI:(id)arg2 ;
-(void)handleResourceNotFound;
-(char)parseRangeRequest:(id)arg1 withContentLength:(unsigned long long)arg2 ;
-(id)newUniRangeResponse:(unsigned long long)arg1 ;
-(id)newMultiRangeResponse:(unsigned long long)arg1 ;
-(id)preprocessResponse:(id)arg1 ;
-(id)readDataOfLength:(unsigned long long)arg1 orLimit:(unsigned long long)arg2 ;
-(id)chunkedTransferSizeLineForLength:(unsigned long long)arg1 ;
-(id)chunkedTransferFooter;
-(unsigned long long)writeQueueSize;
-(void)setReceiveBufferSize:(int)arg1 ;
-(id)filePathForURI:(id)arg1 allowDirectory:(char)arg2 ;
-(id)directoryIndexFileNames;
-(id)connectedHost;
-(unsigned long long)requestBodyChunkSize;
-(id)preprocessErrorResponse:(id)arg1 ;
-(void)addDigestAuthChallenge:(id)arg1 ;
-(void)addBasicAuthChallenge:(id)arg1 ;
-(id)dateAsString:(id)arg1 ;
-(void)handleInvalidRequest:(id)arg1 ;
-(char)expectsRequestBodyFromMethod:(id)arg1 atPath:(id)arg2 ;
-(char)supportsMethod:(id)arg1 atPath:(id)arg2 ;
-(void)handleUnknownMethod:(id)arg1 ;
-(void)processBodyData:(id)arg1 ;
-(void)continueSendingStandardResponseBody;
-(void)continueSendingSingleRangeResponseBody;
-(void)continueSendingMultiRangeResponseBody;
-(void)finishResponse;
-(char)shouldDie;
-(void)die;
-(id)initWithAsyncSocket:(id)arg1 configuration:(id)arg2 ;
-(id)parseGetParams;
-(id)filePathForURI:(id)arg1 ;
-(void)handleNotImplemented;
-(void)handleNotAvailable;
-(void)handleInternalServerError;
-(void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3 ;
-(void)socket:(id)arg1 didWriteDataWithTag:(long long)arg2 ;
-(void)socketDidDisconnect:(id)arg1 withError:(id)arg2 ;
-(void)responseHasAvailableData:(id)arg1 ;
-(void)responseDidAbort:(id)arg1 ;
-(unsigned long long)bodyBytesWritten;
-(void)resetBodyBytesWritten;
@end

