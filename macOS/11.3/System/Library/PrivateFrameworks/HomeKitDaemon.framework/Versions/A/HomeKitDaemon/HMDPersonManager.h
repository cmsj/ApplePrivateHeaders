/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:24 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/Versions/A/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HMFoundation/HMFObject.h>
#import <libobjc.A.dylib/HMBLocalZoneModelObserver.h>
#import <libobjc.A.dylib/HMDDatabaseZoneManagerDataSource.h>
#import <libobjc.A.dylib/HMDDatabaseZoneManagerDelegate.h>
#import <libobjc.A.dylib/HMFTimerDelegate.h>
#import <libobjc.A.dylib/HMDPersonDataSource.h>

@protocol OS_dispatch_queue;
@class NSUUID, HMBCloudZone, HMFTimer, NSObject, HMDDatabaseZoneManager, NSSet, HMBLocalZone, NSString;

@interface HMDPersonManager : HMFObject <HMBLocalZoneModelObserver, HMDDatabaseZoneManagerDataSource, HMDDatabaseZoneManagerDelegate, HMFTimerDelegate, HMDPersonDataSource> {

	char _syncsPersonData;
	NSUUID* _UUID;
	HMBCloudZone* _cloudZone;
	HMFTimer* _unassociatedFaceCropsCleanupTimer;
	unsigned long long _fetchBatchLimit;
	/*^block*/id _unassociatedFaceCropsCleanupTimerFactory;
	NSObject*<OS_dispatch_queue> _workQueue;
	HMDDatabaseZoneManager* _zoneManager;
	NSSet* _dataReceivers;
	HMBLocalZone* _localZone;

}

@property (retain) HMBCloudZone * cloudZone;                                                                   //@synthesize cloudZone=_cloudZone - In the implementation block
@property (retain) HMFTimer * unassociatedFaceCropsCleanupTimer;                                               //@synthesize unassociatedFaceCropsCleanupTimer=_unassociatedFaceCropsCleanupTimer - In the implementation block
@property (assign) unsigned long long fetchBatchLimit;                                                         //@synthesize fetchBatchLimit=_fetchBatchLimit - In the implementation block
@property (copy) id unassociatedFaceCropsCleanupTimerFactory;                                                  //@synthesize unassociatedFaceCropsCleanupTimerFactory=_unassociatedFaceCropsCleanupTimerFactory - In the implementation block
@property (readonly) NSObject*<OS_dispatch_queue> workQueue;                                                   //@synthesize workQueue=_workQueue - In the implementation block
@property (readonly) HMDDatabaseZoneManager * zoneManager;                                                     //@synthesize zoneManager=_zoneManager - In the implementation block
@property (readonly) NSSet * dataReceivers;                                                                    //@synthesize dataReceivers=_dataReceivers - In the implementation block
@property (retain) HMBLocalZone * localZone;                                                                   //@synthesize localZone=_localZone - In the implementation block
@property (copy,readonly) NSUUID * UUID;                                                                       //@synthesize UUID=_UUID - In the implementation block
@property (readonly) char syncsPersonData;                                                                     //@synthesize syncsPersonData=_syncsPersonData - In the implementation block
@property (readonly) char sharesFaceClassifications; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isDataAvailable,readonly) char dataAvailable; 
@property (getter=isCurrentDeviceAvailableResident,readonly) char currentDeviceAvailableResident; 
@property (copy,readonly) id<HMDPersonManagerSettings> settings; 
-(NSUUID *)UUID;
-(void)remove;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(id<HMDPersonManagerSettings>)settings;
-(void)timerDidFire:(id)arg1 ;
-(id)attributeDescriptions;
-(char)isDataSyncInProgress;
-(HMDDatabaseZoneManager *)zoneManager;
-(HMBLocalZone *)localZone;
-(HMBCloudZone *)cloudZone;
-(void)setCloudZone:(HMBCloudZone *)arg1 ;
-(id)localZone:(id)arg1 didProcessModelDeletion:(id)arg2 ;
-(id)localZone:(id)arg1 didProcessModelCreation:(id)arg2 ;
-(id)localZone:(id)arg1 didProcessModelUpdate:(id)arg2 ;
-(void)setLocalZone:(HMBLocalZone *)arg1 ;
-(id)_removeZones;
-(char)manager:(id)arg1 shouldShareWithUser:(id)arg2 ;
-(void)zoneManagerDidStart:(id)arg1 ;
-(void)zoneManagerDidStop:(id)arg1 ;
-(void)configureWithHome:(id)arg1 ;
-(char)isCurrentDeviceAvailableResident;
-(id)initWithUUID:(id)arg1 zoneManager:(id)arg2 dataReceivers:(id)arg3 workQueue:(id)arg4 ;
-(void)_createOrRemoveZonesForSettings:(id)arg1 ;
-(NSSet *)dataReceivers;
-(char)sharesFaceClassifications;
-(id)updateSettingsUsingMessagePayload:(id)arg1 ;
-(id)performCloudPull;
-(void)handleUserPrivilegeDidChangeNotification:(id)arg1 ;
-(void)handleResidentWasAddedNotification:(id)arg1 ;
-(void)handleResidentWasUpdatedNotification:(id)arg1 ;
-(void)handleResidentWasRemovedNotification:(id)arg1 ;
-(void)handleDataSyncInProgressChangedNotification:(id)arg1 ;
-(void)_notifyDataReceiversOfCurrentIsCurrentDeviceAvailableResident;
-(void)_notifyDataReceiversOfCurrentIsDataSyncInProgress;
-(void)handleFaceMisclassificationForFaceCropData:(id)arg1 personUUID:(id)arg2 ;
-(id)addOrUpdateFaceCrops:(id)arg1 ;
-(id)faceCropUUIDsForPersonWithUUID:(id)arg1 ;
-(char)isDataAvailable;
-(void)_createZones;
-(id)faceprintsForFaceCropsWithUUIDs:(id)arg1 ;
-(id)removeFaceprintsWithUUIDs:(id)arg1 ;
-(id)_removeFaceprintsForFaceCropsWithUUIDs:(id)arg1 ;
-(unsigned long long)fetchBatchLimit;
-(void)_handleCreatedOrUpdatedModel:(id)arg1 mirrorOutputFuture:(id)arg2 ;
-(void)_handleDeletedModel:(id)arg1 mirrorOutputFuture:(id)arg2 ;
-(void)_cleanUpExpiredUnassociatedFaceCrops;
-(id)unassociatedFaceCropsCleanupTimerFactory;
-(void)setUnassociatedFaceCropsCleanupTimer:(HMFTimer *)arg1 ;
-(HMFTimer *)unassociatedFaceCropsCleanupTimer;
-(id)_faceCropsModelsWithUUIDs:(id)arg1 ;
-(id)_unassociatedFaceCropsModelsWithUUIDs:(id)arg1 ;
-(void)enumeratePersonsUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateFaceCropsUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateUnassociatedFaceCropsUsingBlock:(/*^block*/id)arg1 ;
-(void)enumeratePersonFaceCropsUsingBlock:(/*^block*/id)arg1 ;
-(void)enumerateFaceprintsUsingBlock:(/*^block*/id)arg1 ;
-(id)personsWithUUIDs:(id)arg1 ;
-(id)faceCropsWithUUIDs:(id)arg1 ;
-(id)faceCropsForPersonsWithUUIDs:(id)arg1 ;
-(id)addOrUpdatePersons:(id)arg1 ;
-(id)addOrUpdateFaceprints:(id)arg1 ;
-(id)associateFaceCropsWithUUIDs:(id)arg1 toPersonWithUUID:(id)arg2 ;
-(id)disassociateFaceCropsWithUUIDs:(id)arg1 ;
-(id)removePersonsWithUUIDs:(id)arg1 ;
-(id)removeFaceCropsWithUUIDs:(id)arg1 ;
-(char)syncsDataToAllUsers;
-(id)personWithUUID:(id)arg1 ;
-(id)faceCropWithUUID:(id)arg1 ;
-(id)personFaceCropWithUnassociatedFaceCropUUID:(id)arg1 ;
-(id)faceCropsForPersonWithUUID:(id)arg1 ;
-(id)addUnassociatedFaceCropWithData:(id)arg1 ;
-(char)syncsPersonData;
-(void)setFetchBatchLimit:(unsigned long long)arg1 ;
-(void)setUnassociatedFaceCropsCleanupTimerFactory:(id)arg1 ;
@end

