/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:25 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/Versions/A/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HMFoundation/HMFObject.h>
#import <libobjc.A.dylib/HMDBatchLocationDelegate.h>
#import <libobjc.A.dylib/HMFLogging.h>
#import <libobjc.A.dylib/HMFTimerDelegate.h>
#import <libobjc.A.dylib/HMDHomeMessageReceiver.h>
#import <libobjc.A.dylib/NSSecureCoding.h>

@protocol OS_dispatch_queue;
@class CLLocation, NSTimeZone, NSString, NSObject, HMFMessageDispatcher, HMDHome, NSDate, CLRegion, HMFTimer, HMFUnfairLock, _HMDPendingRegionUpdate, HMDHomeLocationData, NSSet, NSUUID;

@interface HMDHomeLocationHandler : HMFObject <HMDBatchLocationDelegate, HMFLogging, HMFTimerDelegate, HMDHomeMessageReceiver, NSSecureCoding> {

	int _regionStateAtHome;
	int _regionStateNearbyHome;
	int _locationAuthorization;
	CLLocation* _location;
	NSTimeZone* _timeZone;
	NSString* _isoCountryCode;
	NSObject*<OS_dispatch_queue> _workQueue;
	HMFMessageDispatcher* _msgDispatcher;
	HMDHome* _home;
	NSDate* _locationUpdateTimestamp;
	CLRegion* _regionAtHome;
	CLRegion* _regionNearbyHome;
	HMFTimer* _homeRegionUpdateTimer;
	HMFUnfairLock* _lock;
	_HMDPendingRegionUpdate* _pendingAtHomeRegionUpdate;
	_HMDPendingRegionUpdate* _pendingNearbyHomeRegionUpdate;
	double _coalesceRegionUpdateIntervalInSeconds;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> workQueue;                               //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,retain) HMFMessageDispatcher * msgDispatcher;                                 //@synthesize msgDispatcher=_msgDispatcher - In the implementation block
@property (assign,nonatomic,__weak) HMDHome * home;                                                //@synthesize home=_home - In the implementation block
@property (nonatomic,retain) NSDate * locationUpdateTimestamp;                                     //@synthesize locationUpdateTimestamp=_locationUpdateTimestamp - In the implementation block
@property (assign,nonatomic) int locationAuthorization;                                            //@synthesize locationAuthorization=_locationAuthorization - In the implementation block
@property (nonatomic,retain) CLRegion * regionAtHome;                                              //@synthesize regionAtHome=_regionAtHome - In the implementation block
@property (nonatomic,retain) CLRegion * regionNearbyHome;                                          //@synthesize regionNearbyHome=_regionNearbyHome - In the implementation block
@property (assign,nonatomic) int regionStateAtHome;                                                //@synthesize regionStateAtHome=_regionStateAtHome - In the implementation block
@property (assign,nonatomic) int regionStateNearbyHome;                                            //@synthesize regionStateNearbyHome=_regionStateNearbyHome - In the implementation block
@property (nonatomic,retain) NSString * isoCountryCode;                                            //@synthesize isoCountryCode=_isoCountryCode - In the implementation block
@property (nonatomic,retain) HMFTimer * homeRegionUpdateTimer;                                     //@synthesize homeRegionUpdateTimer=_homeRegionUpdateTimer - In the implementation block
@property (nonatomic,retain) HMFUnfairLock * lock;                                                 //@synthesize lock=_lock - In the implementation block
@property (nonatomic,retain) _HMDPendingRegionUpdate * pendingAtHomeRegionUpdate;                  //@synthesize pendingAtHomeRegionUpdate=_pendingAtHomeRegionUpdate - In the implementation block
@property (nonatomic,retain) _HMDPendingRegionUpdate * pendingNearbyHomeRegionUpdate;              //@synthesize pendingNearbyHomeRegionUpdate=_pendingNearbyHomeRegionUpdate - In the implementation block
@property (assign,nonatomic) double coalesceRegionUpdateIntervalInSeconds;                         //@synthesize coalesceRegionUpdateIntervalInSeconds=_coalesceRegionUpdateIntervalInSeconds - In the implementation block
@property (nonatomic,retain) CLLocation * location;                                                //@synthesize location=_location - In the implementation block
@property (nonatomic,retain) NSTimeZone * timeZone;                                                //@synthesize timeZone=_timeZone - In the implementation block
@property (nonatomic,readonly) HMDHomeLocationData * locationData; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSSet * messageReceiverChildren; 
@property (nonatomic,readonly) NSUUID * messageTargetUUID; 
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> messageReceiveQueue; 
+(char)supportsSecureCoding;
+(id)logCategory;
+(char)hasMessageReceiverChildren;
+(char)mergeLocationDataForLocalHome:(id)arg1 withCloudHome:(id)arg2 ;
-(void)dealloc;
-(NSString *)description;
-(id)init;
-(HMFUnfairLock *)lock;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)setTimeZone:(NSTimeZone *)arg1 ;
-(NSTimeZone *)timeZone;
-(CLLocation *)location;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(void)setLocation:(CLLocation *)arg1 ;
-(HMDHome *)home;
-(void)setLock:(HMFUnfairLock *)arg1 ;
-(void)setHome:(HMDHome *)arg1 ;
-(NSString *)isoCountryCode;
-(void)setIsoCountryCode:(NSString *)arg1 ;
-(void)setWorkQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(HMDHomeLocationData *)locationData;
-(void)timerDidFire:(id)arg1 ;
-(NSUUID *)messageTargetUUID;
-(NSObject*<OS_dispatch_queue>)messageReceiveQueue;
-(int)locationAuthorization;
-(void)setLocationAuthorization:(int)arg1 ;
-(id)messageDestination;
-(void)setMsgDispatcher:(HMFMessageDispatcher *)arg1 ;
-(HMFMessageDispatcher *)msgDispatcher;
-(void)_registerForMessages;
-(int)regionStateAtHome;
-(int)regionStateNearbyHome;
-(void)configure:(id)arg1 queue:(id)arg2 messageDispatcher:(id)arg3 ;
-(void)updateHomeLocation;
-(void)accessoriesBecomeReachable;
-(void)accessoriesBecomeUnreachable;
-(void)runTransactionWithLocation:(id)arg1 updateTime:(id)arg2 ;
-(id)_handleHomeLocationData:(id)arg1 message:(id)arg2 ;
-(void)didDetermineState:(long long)arg1 forRegion:(id)arg2 ;
-(void)didDetermineLocation:(id)arg1 ;
-(void)_handleLocationAuthorizationChangedNotification:(id)arg1 ;
-(void)didDetermineBatchLocation:(id)arg1 ;
-(void)getReachableIPAccessory:(unsigned long long*)arg1 btleAccessory:(unsigned long long*)arg2 mediaAccessory:(unsigned long long*)arg3 ;
-(NSDate *)locationUpdateTimestamp;
-(void)setLocationUpdateTimestamp:(NSDate *)arg1 ;
-(void)_updateTimeZone:(id)arg1 ;
-(void)_handleLocationAuthorization:(int)arg1 ;
-(void)_handleRetrieveLocation:(id)arg1 ;
-(CLRegion *)regionAtHome;
-(CLRegion *)regionNearbyHome;
-(void)setRegionAtHome:(CLRegion *)arg1 ;
-(void)setRegionNearbyHome:(CLRegion *)arg1 ;
-(void)_registerForRegionUpdate;
-(char)_canExtractBatchLocations;
-(char)_needToExtractBatchLocations;
-(void)setRegionStateAtHome:(int)arg1 ;
-(void)setRegionStateNearbyHome:(int)arg1 ;
-(char)updatRegionStateFromLocation:(id)arg1 ;
-(char)isDate:(id)arg1 laterThanDate:(id)arg2 ;
-(char)isLocation:(id)arg1 closeToLocation:(id)arg2 ;
-(void)_sendLocationUpdate;
-(void)_evaluateHomeRegionStateForCurrentDeviceLocation:(id)arg1 ;
-(void)coalesceRegionUpdateState:(int)arg1 forRegion:(id)arg2 ;
-(double)coalesceRegionUpdateIntervalInSeconds;
-(void)_processPendingRegionStateUpdates;
-(void)setCoalesceRegionUpdateIntervalInSeconds:(double)arg1 ;
-(char)calculateAndUpdateRegionState:(int)arg1 ;
-(id)__initForUnitTesting:(double)arg1 home:(id)arg2 queue:(id)arg3 messageDispatcher:(id)arg4 location:(id)arg5 ;
-(void)__simulateAtHomeRegionState:(long long)arg1 ;
-(void)__simulateNearByHomeRegionState:(long long)arg1 ;
-(int)__getAtHomeCalculatedState;
-(int)__getNearByHomeCalcuatedState;
-(HMFTimer *)homeRegionUpdateTimer;
-(void)setHomeRegionUpdateTimer:(HMFTimer *)arg1 ;
-(_HMDPendingRegionUpdate *)pendingAtHomeRegionUpdate;
-(void)setPendingAtHomeRegionUpdate:(_HMDPendingRegionUpdate *)arg1 ;
-(_HMDPendingRegionUpdate *)pendingNearbyHomeRegionUpdate;
-(void)setPendingNearbyHomeRegionUpdate:(_HMDPendingRegionUpdate *)arg1 ;
@end

