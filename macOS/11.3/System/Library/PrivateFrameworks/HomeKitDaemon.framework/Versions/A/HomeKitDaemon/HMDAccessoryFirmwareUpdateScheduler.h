/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:24 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/Versions/A/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/HMFLogging.h>
#import <libobjc.A.dylib/HMFTimerDelegate.h>

@protocol OS_dispatch_queue, HMDAccessoryFirmwareUpdateSchedulerWingman, HMDAccessoryFirmwareUpdateTask, HMDAccessoryFirmwareUpdatePolicy;
@class NSObject, HMDHAPAccessory, HMDAccessoryFirmwareUpdateSession, HMFTimer, NSBackgroundActivityScheduler, HMDAccessoryFirmwareUpdateProfile, NSString;

@interface HMDAccessoryFirmwareUpdateScheduler : NSObject <HMFLogging, HMFTimerDelegate> {

	char _BLEAccessoryConnected;
	NSObject*<OS_dispatch_queue> _workQueue;
	HMDHAPAccessory* _accessory;
	HMDAccessoryFirmwareUpdateSession* _updateSession;
	id<HMDAccessoryFirmwareUpdateSchedulerWingman> _wingman;
	HMFTimer* _initialDelayTimer;
	NSBackgroundActivityScheduler* _backgroundScheduler;
	/*^block*/id _activityCompletion;
	HMFTimer* _deferCheckTimer;
	id<HMDAccessoryFirmwareUpdateTask> _currentTask;
	long long _currentState;
	id<HMDAccessoryFirmwareUpdatePolicy> _updatePolicy;

}

@property (readonly) NSObject*<OS_dispatch_queue> workQueue;                                   //@synthesize workQueue=_workQueue - In the implementation block
@property (__weak,readonly) HMDHAPAccessory * accessory;                                       //@synthesize accessory=_accessory - In the implementation block
@property (__weak,readonly) HMDAccessoryFirmwareUpdateSession * updateSession;                 //@synthesize updateSession=_updateSession - In the implementation block
@property (readonly) id<HMDAccessoryFirmwareUpdateSchedulerWingman> wingman;                   //@synthesize wingman=_wingman - In the implementation block
@property (nonatomic,retain) HMFTimer * initialDelayTimer;                                     //@synthesize initialDelayTimer=_initialDelayTimer - In the implementation block
@property (nonatomic,retain) NSBackgroundActivityScheduler * backgroundScheduler;              //@synthesize backgroundScheduler=_backgroundScheduler - In the implementation block
@property (nonatomic,copy) id activityCompletion;                                              //@synthesize activityCompletion=_activityCompletion - In the implementation block
@property (nonatomic,retain) HMFTimer * deferCheckTimer;                                       //@synthesize deferCheckTimer=_deferCheckTimer - In the implementation block
@property (nonatomic,retain) id<HMDAccessoryFirmwareUpdateTask> currentTask;                   //@synthesize currentTask=_currentTask - In the implementation block
@property (assign,nonatomic) long long currentState;                                           //@synthesize currentState=_currentState - In the implementation block
@property (nonatomic,readonly) char needsToStop; 
@property (nonatomic,readonly) char needsToScheduleStaging; 
@property (nonatomic,readonly) char needsToScheduleApply; 
@property (nonatomic,readonly) char needsToScheduleRecovery; 
@property (getter=isIdle,nonatomic,readonly) char idle; 
@property (assign) char BLEAccessoryConnected;                                                 //@synthesize BLEAccessoryConnected=_BLEAccessoryConnected - In the implementation block
@property (getter=isStagingInProgress,nonatomic,readonly) char stagingInProgress; 
@property (nonatomic,retain) id<HMDAccessoryFirmwareUpdatePolicy> updatePolicy;                //@synthesize updatePolicy=_updatePolicy - In the implementation block
@property (nonatomic,readonly) HMDAccessoryFirmwareUpdateProfile * updateProfile; 
@property (nonatomic,readonly) long long state; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)logCategory;
-(void)dealloc;
-(NSString *)description;
-(long long)state;
-(long long)currentState;
-(void)_registerForNotifications;
-(void)_stop;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(id<HMDAccessoryFirmwareUpdateTask>)currentTask;
-(void)setCurrentTask:(id<HMDAccessoryFirmwareUpdateTask>)arg1 ;
-(HMDHAPAccessory *)accessory;
-(void)_startDeferCheckTimer;
-(void)_stopDeferCheckTimer;
-(void)setCurrentState:(long long)arg1 ;
-(NSBackgroundActivityScheduler *)backgroundScheduler;
-(char)isIdle;
-(id)logIdentifier;
-(void)timerDidFire:(id)arg1 ;
-(void)configure;
-(void)handleAccessoryConnected:(id)arg1 ;
-(void)handleAccessoryDisconnected:(id)arg1 ;
-(id)initWithAccessory:(id)arg1 firmwareUpdateSession:(id)arg2 wingman:(id)arg3 workQueue:(id)arg4 ;
-(id<HMDAccessoryFirmwareUpdateSchedulerWingman>)wingman;
-(void)handleUpdateStateChanged:(id)arg1 ;
-(void)handleStagingNotReadyReasonsChanged:(id)arg1 ;
-(void)handleApplyNotReadyReasonsChanged:(id)arg1 ;
-(void)handleAccessoryReachabilityChanged:(id)arg1 ;
-(void)handlePrimaryResidentChanged:(id)arg1 ;
-(void)handleBridgeUpdate:(id)arg1 ;
-(void)_handleSchedulingConditionChanged;
-(void)setBLEAccessoryConnected:(char)arg1 ;
-(HMDAccessoryFirmwareUpdateProfile *)updateProfile;
-(void)_logDebugStates;
-(char)needsToStop;
-(char)needsToScheduleApply;
-(char)needsToScheduleStaging;
-(char)needsToScheduleRecovery;
-(void)scheduleWithDelay:(char)arg1 ;
-(void)_invalidateExistingScheduling;
-(HMDAccessoryFirmwareUpdateSession *)updateSession;
-(void)_removePolicy;
-(id<HMDAccessoryFirmwareUpdatePolicy>)updatePolicy;
-(void)_createPolicy;
-(void)_scheduleCurrentTask;
-(char)BLEAccessoryConnected;
-(char)isStagingInProgress;
-(void)setBackgroundScheduler:(NSBackgroundActivityScheduler *)arg1 ;
-(void)setActivityCompletion:(id)arg1 ;
-(void)_stopInitialDelayTimer;
-(void)_startTaskInitialDelayTimer;
-(id)activityCompletion;
-(void)setDeferCheckTimer:(HMFTimer *)arg1 ;
-(HMFTimer *)deferCheckTimer;
-(void)setInitialDelayTimer:(HMFTimer *)arg1 ;
-(HMFTimer *)initialDelayTimer;
-(void)_scheduleCurrentTaskBackgroundRun;
-(void)_defer;
-(void)setUpdatePolicy:(id<HMDAccessoryFirmwareUpdatePolicy>)arg1 ;
-(void)handlePolicyStatusChange:(id)arg1 ;
-(id)initWithAccessory:(id)arg1 firmwareUpdateSession:(id)arg2 workQueue:(id)arg3 ;
@end

