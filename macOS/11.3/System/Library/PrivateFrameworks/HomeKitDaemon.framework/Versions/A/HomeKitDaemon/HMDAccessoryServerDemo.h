/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:24 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/Versions/A/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreHAP/HAPAccessoryServer.h>

@class NSNumber, NSDictionary, HMDAccessoryServerBrowserDemo;

@interface HMDAccessoryServerDemo : HAPAccessoryServer {

	char _testMode;
	char __paired;
	char __hasPairings;
	NSNumber* _category;
	NSDictionary* _accessoryInfo;
	HMDAccessoryServerBrowserDemo* _browser;

}

@property (assign,nonatomic,__weak) HMDAccessoryServerBrowserDemo * browser;              //@synthesize browser=_browser - In the implementation block
@property (assign,nonatomic) char _paired;                                                //@synthesize _paired=__paired - In the implementation block
@property (assign,nonatomic) char _hasPairings;                                           //@synthesize _hasPairings=__hasPairings - In the implementation block
@property (nonatomic,retain) NSDictionary * accessoryInfo;                                //@synthesize accessoryInfo=_accessoryInfo - In the implementation block
@property (readonly) char testMode;                                                       //@synthesize testMode=_testMode - In the implementation block
-(id)category;
-(void)setCategory:(id)arg1 ;
-(void)setBrowser:(HMDAccessoryServerBrowserDemo *)arg1 ;
-(HMDAccessoryServerBrowserDemo *)browser;
-(char)_paired;
-(char)testMode;
-(long long)linkType;
-(char)isPaired;
-(char)hasPairings;
-(char)_hasPairings;
-(id)initCommon:(id)arg1 browser:(id)arg2 ;
-(char)_delegateRespondsToSelector:(SEL)arg1 ;
-(void)continuePairingAfterAuthPrompt;
-(char)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)startPairingWithConsentRequired:(char)arg1 config:(id)arg2 ownershipToken:(id)arg3 ;
-(void)enableEvents:(char)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 queue:(id)arg4 ;
-(void)discoverAccessories;
-(char)tryPairingPassword:(id)arg1 error:(id*)arg2 ;
-(char)stopPairingWithError:(id*)arg1 ;
-(void)readCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)writeCharacteristicValues:(id)arg1 timeout:(double)arg2 completionQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)handleUpdatesForCharacteristics:(id)arg1 stateNumber:(id)arg2 ;
-(void)addPairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)removePairing:(id)arg1 completionQueue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)listPairingsWithCompletionQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)identifyWithCompletion:(/*^block*/id)arg1 ;
-(id)initWithName:(id)arg1 identifier:(id)arg2 deviceInfo:(id)arg3 paired:(char)arg4 keyStore:(id)arg5 testMode:(char)arg6 browser:(id)arg7 ;
-(NSDictionary *)accessoryInfo;
-(void)_parseAttributeDatabase:(id)arg1 ;
-(void)processCharacteristicWrite:(id)arg1 value:(id)arg2 ;
-(void)setAccessoryInfo:(NSDictionary *)arg1 ;
-(void)set_paired:(char)arg1 ;
-(void)set_hasPairings:(char)arg1 ;
@end

