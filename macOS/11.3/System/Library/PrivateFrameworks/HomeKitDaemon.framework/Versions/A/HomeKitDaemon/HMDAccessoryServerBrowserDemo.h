/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:24 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/Versions/A/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreHAP/HAPAccessoryServerBrowser.h>

@protocol HAPAccessoryServerBrowserDelegate, OS_dispatch_queue;
@class NSObject, NSMutableArray, NSDictionary;

@interface HMDAccessoryServerBrowserDemo : HAPAccessoryServerBrowser {

	char _accessoryPaired;
	id<HAPAccessoryServerBrowserDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _delegateQueue;
	NSMutableArray* _servers;
	NSDictionary* _demoData;

}

@property (assign,nonatomic,__weak) id<HAPAccessoryServerBrowserDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> delegateQueue;                         //@synthesize delegateQueue=_delegateQueue - In the implementation block
@property (nonatomic,retain) NSMutableArray * servers;                                           //@synthesize servers=_servers - In the implementation block
@property (nonatomic,retain) NSDictionary * demoData;                                            //@synthesize demoData=_demoData - In the implementation block
@property (assign,nonatomic) char accessoryPaired;                                               //@synthesize accessoryPaired=_accessoryPaired - In the implementation block
-(id<HAPAccessoryServerBrowserDelegate>)delegate;
-(void)setDelegate:(id<HAPAccessoryServerBrowserDelegate>)arg1 ;
-(void)setDelegate:(id)arg1 queue:(id)arg2 ;
-(void)setDelegateQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)delegateQueue;
-(long long)linkType;
-(void)setServers:(NSMutableArray *)arg1 ;
-(NSMutableArray *)servers;
-(char)_delegateRespondsToSelector:(SEL)arg1 ;
-(void)startDiscoveringAccessoryServers;
-(void)stopDiscoveringAccessoryServers;
-(void)discoverAccessoryServerWithIdentifier:(id)arg1 ;
-(void)discoverServer;
-(char)accessoryPaired;
-(void)_handleTestAccessorySetValue:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_handleTestAccessorySetReachability:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_handleTestAccessoryGenerateNotification:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)_handleTestAccessoryReadValue:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
-(void)loadDemoData:(id)arg1 finalized:(char)arg2 ;
-(void)appendDemoData:(id)arg1 ;
-(void)resetDemoAccessory:(id)arg1 ;
-(void)_handleTestModeConfigRequest:(id)arg1 ;
-(NSDictionary *)demoData;
-(void)setDemoData:(NSDictionary *)arg1 ;
-(void)setAccessoryPaired:(char)arg1 ;
@end

