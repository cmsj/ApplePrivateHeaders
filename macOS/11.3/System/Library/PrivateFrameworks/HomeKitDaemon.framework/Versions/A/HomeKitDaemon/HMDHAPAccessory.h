/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:24 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/Versions/A/HomeKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HomeKitDaemon/HMDAccessory.h>
#import <libobjc.A.dylib/HMDAccessoryMinimumUserPrivilegeCapable.h>
#import <libobjc.A.dylib/HMDServiceOwner.h>
#import <libobjc.A.dylib/HAPRelayAccessoryDelegate.h>
#import <libobjc.A.dylib/HMFTimerDelegate.h>
#import <libobjc.A.dylib/HAPAccessoryServerNotification.h>
#import <libobjc.A.dylib/HMDAccessoryIdentify.h>
#import <libobjc.A.dylib/HMDAccessoryUserManagement.h>

@class HMFPairingIdentity, NSMutableArray, NSString, NSNumber, NSData, NSDate, NSArray, HMDTargetControllerManager, HMDAccessorySymptomHandler, NSSet, HMDService, HMDPendingCharacteristic, HMDNetworkRouterController, HMFConnectivityInfo, HMDCameraProfileSettingsManager, HMDWiFiManagementController, HMDAccessoryDiagnosticsManager, HMCameraUserNotificationSettings, HMDAccessoryFirmwareUpdateProfile, HMDAccessoryAdvertisement, HMDDoorbellChimeController, HMFTimer, HMDDataStreamController, HMDNetworkRouterProfile, HMDNetworkRouterSatelliteProfile, NSDictionary, HMDMediaProfile, HMDAnalyticsHAPServiceData;

@interface HMDHAPAccessory : HMDAccessory <HMDAccessoryMinimumUserPrivilegeCapable, HMDServiceOwner, HAPRelayAccessoryDelegate, HMFTimerDelegate, HAPAccessoryServerNotification, HMDAccessoryIdentify, HMDAccessoryUserManagement> {

	NSMutableArray* _transportInformationInstances;
	NSMutableArray* _services;
	char _relayEnabled;
	char _supportsTargetController;
	char _keyGenerationInProgress;
	char _hardwareSupport;
	char _supportsRelay;
	unsigned char _keyGenerationType;
	char _supportsThreadCommissioning;
	NSString* _relayIdentifier;
	unsigned long long _currentRelayAccessoryState;
	NSNumber* _accessoryFlags;
	NSData* _setupHash;
	NSData* _broadcastKey;
	NSNumber* _keyUpdatedStateNumber;
	NSDate* _keyUpdatedTime;
	NSArray* _targetUUIDs;
	HMDTargetControllerManager* _targetControllerManager;
	HMDAccessorySymptomHandler* _symptomsHandler;
	NSSet* _identifiersForBridgedAccessories;
	HMDService* _primaryService;
	HMDPendingCharacteristic* _pendingPowerOn;
	HMDNetworkRouterController* _networkRouterController;
	HMFConnectivityInfo* _connectivityInfo;
	NSMutableArray* _powerOnCompletionRoutines;
	HMDCameraProfileSettingsManager* _cameraProfileSettingsManager;
	HMDWiFiManagementController* _wiFiManagementController;
	NSNumber* _wiFiTransportCapabilities;
	HMDAccessoryDiagnosticsManager* _diagnosticsManager;
	NSNumber* _sleepInterval;
	NSNumber* _hasOnboardedForNaturalLighting;
	HMCameraUserNotificationSettings* _cameraProfileNotificationSettings;
	NSSet* _initialServiceTypeUUIDs;
	HMDAccessoryFirmwareUpdateProfile* _firmwareUpdateProfile;
	HMDAccessoryAdvertisement* _accessoryAdvertisement;
	HMDDoorbellChimeController* _doorbellChimeController;
	NSNumber* _internalThreadCapabilities;
	NSNumber* _internalThreadStatus;
	NSNumber* _internalThreadActive;
	NSString* _uniqueIdentifier;
	long long _certificationStatus;
	unsigned long long _activationAttempts;
	unsigned long long _pairingAttempts;
	NSNumber* _backedOffStateNumber;
	HMFTimer* _accessoryDiscoveryBackoffTimer;
	HMFTimer* _accessoryKeyRefreshTimer;
	NSMutableArray* _discoveredServices;
	HMDHAPAccessory* _bridge;
	NSData* _publicKey;
	NSString* _pairingUsername;
	HMDDataStreamController* _dataStreamController;
	NSMutableArray* _pendingReads;

}

@property (readonly) HMDWiFiManagementController * wiFiManagementController; 
@property (readonly) HMDAccessoryFirmwareUpdateProfile * firmwareUpdateProfile; 
@property (getter=isAutomaticThirdPartyAccessorySoftwareUpdateEnabled,readonly) char automaticThirdPartyAccessorySoftwareUpdateEnabled; 
@property (nonatomic,readonly) HMDAccessoryDiagnosticsManager * diagnosticsManager; 
@property (nonatomic,readonly) HMDNetworkRouterController * networkRouterController; 
@property (nonatomic,readonly) HMDNetworkRouterProfile * networkRouterProfile; 
@property (nonatomic,readonly) HMDNetworkRouterSatelliteProfile * networkRouterSatelliteProfile; 
@property (copy,readonly) NSString * urlString; 
@property (copy,readonly) NSDictionary * assistantObject; 
@property (readonly) NSSet * lightProfiles; 
@property (copy,readonly) HMCameraUserNotificationSettings * cameraProfileNotificationSettings; 
@property (nonatomic,readonly) char supportsSiri; 
@property (readonly) char hasTelevisionService; 
@property (nonatomic,readonly) unsigned short threadCapabilities; 
@property (nonatomic,readonly) unsigned short threadStatus; 
@property (getter=isThreadTheCurrentlyActiveTransport,nonatomic,readonly) char threadActiveTransport; 
@property (readonly) HMDMediaProfile * mediaProfile; 
@property (readonly) char hasSmartSpeakerService; 
@property (readonly) id<HMDDataStreamSocketController> dataStreamSocketController; 
@property (nonatomic,copy) NSString * uniqueIdentifier;                                                                                              //@synthesize uniqueIdentifier=_uniqueIdentifier - In the implementation block
@property (assign,nonatomic) char supportsRelay;                                                                                                     //@synthesize supportsRelay=_supportsRelay - In the implementation block
@property (getter=isPaired,nonatomic,readonly) char paired; 
@property (assign,nonatomic) unsigned long long activationAttempts;                                                                                  //@synthesize activationAttempts=_activationAttempts - In the implementation block
@property (assign,nonatomic) unsigned long long pairingAttempts;                                                                                     //@synthesize pairingAttempts=_pairingAttempts - In the implementation block
@property (nonatomic,copy) NSNumber * accessoryFlags;                                                                                                //@synthesize accessoryFlags=_accessoryFlags - In the implementation block
@property (assign,nonatomic) long long certificationStatus;                                                                                          //@synthesize certificationStatus=_certificationStatus - In the implementation block
@property (nonatomic,copy) NSNumber * backedOffStateNumber;                                                                                          //@synthesize backedOffStateNumber=_backedOffStateNumber - In the implementation block
@property (nonatomic,retain) HMFTimer * accessoryDiscoveryBackoffTimer;                                                                              //@synthesize accessoryDiscoveryBackoffTimer=_accessoryDiscoveryBackoffTimer - In the implementation block
@property (nonatomic,retain) HMFTimer * accessoryKeyRefreshTimer;                                                                                    //@synthesize accessoryKeyRefreshTimer=_accessoryKeyRefreshTimer - In the implementation block
@property (nonatomic,copy) NSData * broadcastKey;                                                                                                    //@synthesize broadcastKey=_broadcastKey - In the implementation block
@property (nonatomic,copy) NSNumber * keyUpdatedStateNumber;                                                                                         //@synthesize keyUpdatedStateNumber=_keyUpdatedStateNumber - In the implementation block
@property (nonatomic,copy) NSDate * keyUpdatedTime;                                                                                                  //@synthesize keyUpdatedTime=_keyUpdatedTime - In the implementation block
@property (assign) unsigned char keyGenerationType;                                                                                                  //@synthesize keyGenerationType=_keyGenerationType - In the implementation block
@property (assign) char keyGenerationInProgress;                                                                                                     //@synthesize keyGenerationInProgress=_keyGenerationInProgress - In the implementation block
@property (nonatomic,copy) NSSet * identifiersForBridgedAccessories;                                                                                 //@synthesize identifiersForBridgedAccessories=_identifiersForBridgedAccessories - In the implementation block
@property (nonatomic,retain) HMDAccessoryAdvertisement * accessoryAdvertisement;                                                                     //@synthesize accessoryAdvertisement=_accessoryAdvertisement - In the implementation block
@property (copy) NSNumber * hasOnboardedForNaturalLighting;                                                                                          //@synthesize hasOnboardedForNaturalLighting=_hasOnboardedForNaturalLighting - In the implementation block
@property (nonatomic,retain) NSArray * targetUUIDs;                                                                                                  //@synthesize targetUUIDs=_targetUUIDs - In the implementation block
@property (assign,nonatomic) char hardwareSupport;                                                                                                   //@synthesize hardwareSupport=_hardwareSupport - In the implementation block
@property (nonatomic,retain) HMDTargetControllerManager * targetControllerManager;                                                                   //@synthesize targetControllerManager=_targetControllerManager - In the implementation block
@property (nonatomic,retain) HMDAccessorySymptomHandler * symptomsHandler;                                                                           //@synthesize symptomsHandler=_symptomsHandler - In the implementation block
@property (nonatomic,copy) NSNumber * sleepInterval;                                                                                                 //@synthesize sleepInterval=_sleepInterval - In the implementation block
@property (nonatomic,readonly) NSString * serializedIdentifier; 
@property (nonatomic,retain) NSMutableArray * discoveredServices;                                                                                    //@synthesize discoveredServices=_discoveredServices - In the implementation block
@property (assign,nonatomic,__weak) HMDHAPAccessory * bridge;                                                                                        //@synthesize bridge=_bridge - In the implementation block
@property (nonatomic,retain) NSData * publicKey;                                                                                                     //@synthesize publicKey=_publicKey - In the implementation block
@property (nonatomic,retain) NSString * pairingUsername;                                                                                             //@synthesize pairingUsername=_pairingUsername - In the implementation block
@property (nonatomic,retain) NSString * relayIdentifier;                                                                                             //@synthesize relayIdentifier=_relayIdentifier - In the implementation block
@property (nonatomic,retain) HMDDataStreamController * dataStreamController;                                                                         //@synthesize dataStreamController=_dataStreamController - In the implementation block
@property (nonatomic,retain) HMDNetworkRouterController * networkRouterController;                                                                   //@synthesize networkRouterController=_networkRouterController - In the implementation block
@property (nonatomic,copy) NSData * setupHash;                                                                                                       //@synthesize setupHash=_setupHash - In the implementation block
@property (nonatomic,copy) NSNumber * wiFiTransportCapabilities;                                                                                     //@synthesize wiFiTransportCapabilities=_wiFiTransportCapabilities - In the implementation block
@property (nonatomic,retain) HMDWiFiManagementController * wiFiManagementController;                                                                 //@synthesize wiFiManagementController=_wiFiManagementController - In the implementation block
@property (nonatomic,retain) HMDPendingCharacteristic * pendingPowerOn;                                                                              //@synthesize pendingPowerOn=_pendingPowerOn - In the implementation block
@property (nonatomic,retain) HMDAccessoryDiagnosticsManager * diagnosticsManager;                                                                    //@synthesize diagnosticsManager=_diagnosticsManager - In the implementation block
@property (nonatomic,retain) HMDDoorbellChimeController * doorbellChimeController;                                                                   //@synthesize doorbellChimeController=_doorbellChimeController - In the implementation block
@property (assign,getter=isRelayEnabled,nonatomic) char relayEnabled;                                                                                //@synthesize relayEnabled=_relayEnabled - In the implementation block
@property (nonatomic,readonly) unsigned long long currentRelayAccessoryState;                                                                        //@synthesize currentRelayAccessoryState=_currentRelayAccessoryState - In the implementation block
@property (getter=isCameraRecordingFeatureSupported,readonly) char supportsCameraRecordingFeature; 
@property (nonatomic,retain) NSMutableArray * powerOnCompletionRoutines;                                                                             //@synthesize powerOnCompletionRoutines=_powerOnCompletionRoutines - In the implementation block
@property (retain) NSMutableArray * pendingReads;                                                                                                    //@synthesize pendingReads=_pendingReads - In the implementation block
@property (nonatomic,retain) HMDAccessoryFirmwareUpdateProfile * firmwareUpdateProfile;                                                              //@synthesize firmwareUpdateProfile=_firmwareUpdateProfile - In the implementation block
@property (nonatomic,copy) HMCameraUserNotificationSettings * cameraProfileNotificationSettings;                                                     //@synthesize cameraProfileNotificationSettings=_cameraProfileNotificationSettings - In the implementation block
@property (nonatomic,readonly) char supportsThreadCommissioning;                                                                                     //@synthesize supportsThreadCommissioning=_supportsThreadCommissioning - In the implementation block
@property (nonatomic,retain) NSNumber * internalThreadCapabilities;                                                                                  //@synthesize internalThreadCapabilities=_internalThreadCapabilities - In the implementation block
@property (nonatomic,retain) NSNumber * internalThreadStatus;                                                                                        //@synthesize internalThreadStatus=_internalThreadStatus - In the implementation block
@property (nonatomic,retain) NSNumber * internalThreadActive;                                                                                        //@synthesize internalThreadActive=_internalThreadActive - In the implementation block
@property (copy,readonly) NSArray * services; 
@property (nonatomic,readonly) NSSet * serviceTypeUUIDs; 
@property (nonatomic,readonly) NSSet * initialServiceTypeUUIDs;                                                                                      //@synthesize initialServiceTypeUUIDs=_initialServiceTypeUUIDs - In the implementation block
@property (nonatomic,readonly) HMDService * primaryService;                                                                                          //@synthesize primaryService=_primaryService - In the implementation block
@property (getter=isClientRegisteredForNotifications,readonly) char clientRegisteredForNotifications; 
@property (nonatomic,copy,readonly) NSNumber * hapInstanceId; 
@property (nonatomic,retain) HMFConnectivityInfo * connectivityInfo;                                                                                 //@synthesize connectivityInfo=_connectivityInfo - In the implementation block
@property (nonatomic,readonly) HMDCameraProfileSettingsManager * cameraProfileSettingsManager;                                                       //@synthesize cameraProfileSettingsManager=_cameraProfileSettingsManager - In the implementation block
@property (nonatomic,copy,readonly) NSSet * cameraProfiles; 
@property (readonly) char hasCameraStreamService; 
@property (nonatomic,copy,readonly) HMDAnalyticsHAPServiceData * primaryHAPServiceForAnalytics; 
@property (nonatomic,copy,readonly) NSArray * hapServicesListForAnalytics; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSString * shortDescription; 
@property (copy,readonly) NSString * privateDescription; 
@property (copy,readonly) NSString * propertyDescription; 
@property (nonatomic,copy,readonly) NSArray * attributeDescriptions; 
@property (readonly) char supportsIdentify; 
@property (readonly) char supportsUserManagement; 
@property (copy,readonly) HMFPairingIdentity * pairingIdentity; 
+(char)supportsSecureCoding;
+(char)hasMessageReceiverChildren;
+(Class)transactionClass;
+(unsigned long long)getAWDTransportTypeWithLinkType:(long long)arg1 ;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)init;
-(id)name;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSString *)uniqueIdentifier;
-(NSArray *)services;
-(NSData *)publicKey;
-(HMDHAPAccessory *)bridge;
-(void)stopScan;
-(HMDMediaProfile *)mediaProfile;
-(void)setPublicKey:(NSData *)arg1 ;
-(void)setUniqueIdentifier:(NSString *)arg1 ;
-(void)reachabilityDidChange:(id)arg1 ;
-(char)isPrimary;
-(NSString *)urlString;
-(void)setBridge:(HMDHAPAccessory *)arg1 ;
-(char)isPaired;
-(char)supportsRelay;
-(void)setSupportsRelay:(char)arg1 ;
-(void)removeTarget:(id)arg1 ;
-(void)timerDidFire:(id)arg1 ;
-(NSArray *)attributeDescriptions;
-(HMFPairingIdentity *)pairingIdentity;
-(char)isNotificationEnabled;
-(id)dumpState;
-(void)unconfigure;
-(long long)certificationStatus;
-(void)setCertificationStatus:(long long)arg1 ;
-(NSSet *)cameraProfiles;
-(NSSet *)lightProfiles;
-(HMDAccessorySymptomHandler *)symptomsHandler;
-(void)_handleStartUpdate:(id)arg1 ;
-(HMDNetworkRouterProfile *)networkRouterProfile;
-(void)_registerForMessages;
-(char)supportsWiFiReconfiguration;
-(char)supportsTargetController;
-(char)isAutomaticThirdPartyAccessorySoftwareUpdateEnabled;
-(void)removeUser:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(long long)reachableTransports;
-(NSNumber *)accessoryFlags;
-(void)setAccessoryFlags:(NSNumber *)arg1 ;
-(void)setSymptomsHandler:(HMDAccessorySymptomHandler *)arg1 ;
-(char)supportsDiagnosticsTransfer;
-(void)_notifyClientsOfTargetControlSupportUpdate;
-(NSNumber *)hasOnboardedForNaturalLighting;
-(void)setHasOnboardedForNaturalLighting:(NSNumber *)arg1 ;
-(char)supportsIdentify;
-(void)_handleUpdateAssociatedServiceType:(id)arg1 ;
-(NSSet *)identifiersForBridgedAccessories;
-(id)supportedDiagnostics;
-(char)_supportsMediaAccessControl;
-(HMDService *)primaryService;
-(char)isRelayEnabled;
-(NSData *)broadcastKey;
-(void)setBroadcastKey:(NSData *)arg1 ;
-(void)setKeyUpdatedTime:(NSDate *)arg1 ;
-(void)setKeyUpdatedStateNumber:(NSNumber *)arg1 ;
-(NSDate *)keyUpdatedTime;
-(NSNumber *)keyUpdatedStateNumber;
-(NSData *)setupHash;
-(void)setSetupHash:(NSData *)arg1 ;
-(void)stopPing;
-(char)isSecuritySessionOpen;
-(char)startPing;
-(void)requestResource:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(NSNumber *)sleepInterval;
-(void)setSleepInterval:(NSNumber *)arg1 ;
-(void)indicateNotificationFromServer:(id)arg1 notifyType:(unsigned long long)arg2 withDictionary:(id)arg3 ;
-(NSNumber *)hapInstanceId;
-(void)accessoryDidBecomeReachable:(id)arg1 ;
-(void)accessoryDidBecomeUnreachable:(id)arg1 ;
-(void)accessory:(id)arg1 didUpdateRelayEnabled:(char)arg2 ;
-(void)accessory:(id)arg1 didUpdateRelayState:(unsigned long long)arg2 ;
-(void)accessory:(id)arg1 didActivateRelayWithError:(id)arg2 ;
-(void)accessory:(id)arg1 didPairRelayWithError:(id)arg2 ;
-(void)accessory:(id)arg1 didUpdateAccessoryIdentifier:(id)arg2 ;
-(void)accessory:(id)arg1 didUpdateAccessoryAccessToken:(id)arg2 ;
-(void)setRelayEnabled:(char)arg1 ;
-(void)startRelayActivationWithActivationClient:(id)arg1 ;
-(void)startRelayPairingWithPairingClient:(id)arg1 ;
-(id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2 ;
-(id)messageReceiverChildren;
-(void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3 ;
-(void)transactionObjectRemoved:(id)arg1 message:(id)arg2 ;
-(id)modelObjectWithChangeType:(unsigned long long)arg1 ;
-(id)backingStoreObjects:(long long)arg1 ;
-(NSString *)pairingUsername;
-(void)runTransactionWithModel:(id)arg1 completion:(/*^block*/id)arg2 ;
-(HMDWiFiManagementController *)wiFiManagementController;
-(id)findServiceWithServiceType:(id)arg1 ;
-(void)setWiFiManagementController:(HMDWiFiManagementController *)arg1 ;
-(char)_handleUpdatedServicesForWiFiManagementController;
-(void)configureBulletinNotification;
-(void)disableNotificationsForBundleID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setIdentifiersForBridgedAccessories:(NSSet *)arg1 ;
-(void)configureWithHome:(id)arg1 msgDispatcher:(id)arg2 configurationTracker:(id)arg3 initialConfiguration:(char)arg4 ;
-(unsigned long long)supportedTransports;
-(void)handleRemoteGatewayNotificationRegistration:(id)arg1 enable:(char)arg2 enableTime:(id)arg3 ;
-(void)enableNotification:(char)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4 ;
-(void)updateNotificationEnabled:(char)arg1 forCharacteristics:(id)arg2 onBehalfOf:(id)arg3 ;
-(char)isCameraMotionDetectedCharacteristic:(id)arg1 ;
-(HMDCameraProfileSettingsManager *)cameraProfileSettingsManager;
-(id)characteristicsPassingTest:(/*^block*/id)arg1 ;
-(void)enableNotification:(char)arg1 ignoreDeviceUnlockRequirement:(char)arg2 clientIdentifier:(id)arg3 forCharacteristics:(id)arg4 ;
-(void)_removeService:(id)arg1 ;
-(char)hasTelevisionService;
-(id)runtimeState;
-(char)matchesHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long*)arg2 ;
-(char)hasBTLELink;
-(id)namesOfServicesShowingTilesInHomeApp;
-(id)transactionWithObjectChangeType:(unsigned long long)arg1 ;
-(void)setPairingUsername:(NSString *)arg1 ;
-(id)retrieveUpdatedTransportInfoArray:(id)arg1 ;
-(id)matchingTransportInformationWithServerIdentifier:(id)arg1 linkType:(long long)arg2 ;
-(char)shouldEnableDaemonRelaunch;
-(id)matchingHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 ;
-(char)isNonClientNotificationEnabled;
-(id)preferredHAPAccessoryForOperation:(long long)arg1 linkType:(long long*)arg2 ;
-(void)setupTapToken;
-(void)autoConfigureTargetController;
-(id)initWithTransaction:(id)arg1 home:(id)arg2 ;
-(void)configureWithAccessory:(id)arg1 homeNotificationsEnabled:(char)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)savePublicKeyToKeychain;
-(void)enableNotificationsWithHAPAccessory:(id)arg1 homeNotificationsEnabled:(char)arg2 ;
-(void)addAdvertisement:(id)arg1 ;
-(void)removeBridgedAccessory:(id)arg1 ;
-(char)matchesHAPAccessory:(id)arg1 ;
-(id)matchingHAPAccessoryWithLinkType:(long long)arg1 ;
-(id)getPrimaryHAPAccessories;
-(void)removeHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 completion:(/*^block*/id)arg3 completionQueue:(id)arg4 ;
-(id)tunneledHAPAccessories;
-(id)getConfiguredName;
-(id)serviceWithUUID:(id)arg1 ;
-(void)handleUpdatedServicesForThreadManagementWithActivity:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)readInitialRequiredCharacteristicsForAccessory:(/*^block*/id)arg1 ;
-(void)commissionToThreadNetwork:(id)arg1 pairingEvent:(id)arg2 completion:(/*^block*/id)arg3 ;
-(char)supportsUserManagement;
-(NSString *)relayIdentifier;
-(void)updateTrackedAccessoryStateNumber:(id)arg1 ;
-(id)findCharacteristic:(id)arg1 forService:(id)arg2 ;
-(void)handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_retrieveStateForTrackedAccessory:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(long long)linkSpeed;
-(void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 message:(id)arg3 queue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)findService:(id)arg1 ;
-(id)findCharacteristic:(id)arg1 ;
-(void)enableNotification:(char)arg1 forCharacteristicIDs:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4 ;
-(char)supportsMinimumUserPrivilege;
-(void)handleUpdatedMinimumUserPrivilege:(long long)arg1 ;
-(void)handleUpdatedPassword:(id)arg1 ;
-(char)hasSmartSpeakerService;
-(id)matchingHAPAccessoryServerIdentifierWithLinkType:(long long)arg1 ;
-(char)isClientRegisteredForNotifications;
-(void)removeAdvertisement:(id)arg1 ;
-(void)backOffAccessoryForStateNumber:(id)arg1 ;
-(void)setReachability:(char)arg1 serverIdentifier:(id)arg2 linkType:(long long)arg3 ;
-(id)hmdCharacteristicForInstanceId:(id)arg1 ;
-(void)notifyingCharacteristicStateNumberUpdated:(id)arg1 ;
-(char)matchesHAPAccessoryWithServerIdentifier:(id)arg1 instanceID:(id)arg2 ;
-(void)maybeCommissionToThreadNetwork:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)unconfigureAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 updateReachability:(char)arg3 ;
-(id)messageSendPolicy;
-(NSArray *)hapServicesListForAnalytics;
-(HMDAnalyticsHAPServiceData *)primaryHAPServiceForAnalytics;
-(unsigned short)threadCapabilities;
-(char)hasIPLink;
-(char)hasCameraStreamService;
-(char)isCameraRecordingFeatureSupported;
-(id)serviceWithSPIClientIdentfier:(id)arg1 ;
-(void)addUser:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)pairingsWithCompletionHandler:(/*^block*/id)arg1 ;
-(NSDictionary *)assistantObject;
-(id)anyIPServer;
-(void)writeCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)readCharacteristicValues:(id)arg1 source:(unsigned long long)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)findCharacteristicsByType:(id)arg1 forServiceType:(id)arg2 ;
-(id)firmwareUpdateManager;
-(HMDAccessoryFirmwareUpdateProfile *)firmwareUpdateProfile;
-(void)setFirmwareUpdateProfile:(HMDAccessoryFirmwareUpdateProfile *)arg1 ;
-(void)_startUpdateFromNonResidentWithRequest:(id)arg1 ;
-(void)_startUpdateSessionWithRequest:(id)arg1 ;
-(void)getLinkQualityWithCompletion:(/*^block*/id)arg1 ;
-(void)_evaluateAvailableSoftwareUpdate;
-(char)_handleUpdatedServicesForFirmwareUpdateProfile:(id)arg1 ;
-(void)_startUpdateFromNonPrimaryResidentWithRequest:(id)arg1 ;
-(void)_startUpdateFromPrimaryResidentWithRequest:(id)arg1 ;
-(void)_handleChangeUpdateSource:(id)arg1 ;
-(char)isThreadTheCurrentlyActiveTransport;
-(char)supportsNetworkProtection;
-(NSString *)serializedIdentifier;
-(void)removeDataStreamBulkSendListener:(id)arg1 ;
-(void)addDataStreamBulkSendListener:(id)arg1 fileType:(id)arg2 ;
-(void)openBulkSendSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(/*^block*/id)arg5 ;
-(char)canWakeBasedOnCharacteristic:(id)arg1 ;
-(void)initializeTap;
-(void)powerOnComplete:(id)arg1 ;
-(void)identifyAccessory:(id)arg1 ;
-(void)_renameAccessory:(id)arg1 resetName:(char)arg2 message:(id)arg3 ;
-(void)_handleUpdatedName:(id)arg1 ;
-(void)startReachabilityCheck;
-(void)stopReachabilityCheck;
-(char)supportsSoftwareUpdate;
-(char)_shouldFilterAccessoryProfile:(id)arg1 ;
-(char)providesHashRouteID;
-(void)populateModelObject:(id)arg1 version:(long long)arg2 ;
-(char)supportsPersonalRequests;
-(id)dumpSimpleState;
-(void)updatePrimaryServiceIfNeeded;
-(HMDDataStreamController *)dataStreamController;
-(HMDAccessoryDiagnosticsManager *)diagnosticsManager;
-(void)_destroyDiagnosticsManager;
-(id)_createDiagnosticsManager:(id)arg1 ;
-(void)setDiagnosticsManager:(HMDAccessoryDiagnosticsManager *)arg1 ;
-(char)_handleUpdatedServicesForDiagnosticsManager:(id)arg1 ;
-(char)canAcceptBulkSendListeners;
-(id)primaryIPServer;
-(void)sendTargetControlWhoAmIWithIdentifier:(unsigned)arg1 ;
-(void)_stopScan;
-(void)scanningCompleteWithAccessoryFound:(char)arg1 suspended:(char)arg2 ;
-(HMFConnectivityInfo *)connectivityInfo;
-(NSMutableArray *)pendingReads;
-(void)setPendingReads:(NSMutableArray *)arg1 ;
-(void)initializeBTLEScan;
-(char)initiateScan:(/*^block*/id)arg1 ;
-(void)reachabilityDidChangeUnreachable:(id)arg1 ;
-(void)_updateBridge:(id)arg1 ;
-(char)updateTransportInformation:(id)arg1 ;
-(NSNumber *)wiFiTransportCapabilities;
-(NSArray *)targetUUIDs;
-(char)hardwareSupport;
-(NSSet *)initialServiceTypeUUIDs;
-(void)_setWakeType;
-(void)wirelessResumeInit;
-(void)_handleCharacteristicWrite:(id)arg1 ;
-(void)_handleCharacteristicRead:(id)arg1 ;
-(void)_handleRenameService:(id)arg1 ;
-(void)_handleUpdateAuthorizationData:(id)arg1 ;
-(void)_handleConfigureTargets:(id)arg1 ;
-(void)_handleUpdateMediaSourceDisplayOrder:(id)arg1 ;
-(void)handleSetHasOnboardedForNaturalLighting:(id)arg1 ;
-(void)handleCharacteristicsChangedNotification:(id)arg1 ;
-(void)handleRoomChanged:(id)arg1 ;
-(void)handleRoomNameChanged:(id)arg1 ;
-(void)handleConnectedChanged:(id)arg1 ;
-(void)_handleUpdatedServicesForProfilesAndControllers:(char)arg1 ;
-(void)_configureTargetControllerWithCompletion:(/*^block*/id)arg1 ;
-(void)_checkResidentDeviceForReachabilityPing;
-(void)_checkRegisterForServerNotification;
-(void)handleResidentDeviceUpdated:(id)arg1 ;
-(void)handlePrimaryResidentUpdateNotification:(id)arg1 ;
-(void)updateAccessoryFlags:(id)arg1 ;
-(HMFTimer *)accessoryKeyRefreshTimer;
-(char)shouldConfigureTargetController;
-(id)_getSymptomHandler;
-(void)evaluateSymptomHandler;
-(void)_saveHardwareSupport:(char)arg1 ;
-(void)setHardwareSupport:(char)arg1 ;
-(void)_saveTargetUUIDs:(id)arg1 ;
-(void)setTargetUUIDs:(NSArray *)arg1 ;
-(HMDTargetControllerManager *)targetControllerManager;
-(id)findCharacteristicType:(id)arg1 forServiceType:(id)arg2 ;
-(void)_renameService:(id)arg1 name:(id)arg2 message:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(id)_messagesForUpdatedRoom:(id)arg1 ;
-(void)_handleRoomChangedFromOldRoomName:(id)arg1 ;
-(id)getOrCreateServiceUpdateTransactionForKey:(id)arg1 fromDictionary:(id)arg2 ;
-(void)__handleCharacteristicsChangedPayload:(id)arg1 ;
-(NSNumber *)internalThreadCapabilities;
-(NSNumber *)internalThreadStatus;
-(NSNumber *)internalThreadActive;
-(HMFTimer *)accessoryDiscoveryBackoffTimer;
-(void)_handleDiscoveryBackoffTimerFired;
-(void)_handleKeyRefreshTimerFired;
-(void)_performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(id)transportInformationInstances;
-(void)_handleUpdatedServicesForDataStreamController:(id)arg1 ;
-(char)_handleUpdatedServicesForCameraProfiles:(id)arg1 ;
-(char)_handleUpdatedServicesForNetworkRouterProfileAndController:(id)arg1 ;
-(char)_handleUpdatedServicesForMediaProfile:(id)arg1 ;
-(char)_handleUpdatedServicesForLightProfiles:(id)arg1 ;
-(char)_handleUpdatedServicesForDoorbellController;
-(char)supportsSiri;
-(void)_addService:(id)arg1 ;
-(char)_serviceSupportsMinimumUserPrivilege:(id)arg1 ;
-(void)_reconcileAccessControlSetting;
-(void)registerForActiveIdentifierNotifications;
-(void)setTargetControllerManager:(HMDTargetControllerManager *)arg1 ;
-(void)_autoConfigureTargetController;
-(void)acknowledgeTargetControlService:(id)arg1 active:(char)arg2 ;
-(void)updateButtonConfigurationForTarget:(id)arg1 ;
-(void)addTransportInformationInstances:(id)arg1 ;
-(void)resetNotificationEnabledTime;
-(id)relayAccessory;
-(unsigned long long)_currentRelayAccessoryState;
-(unsigned long long)activationAttempts;
-(void)setActivationAttempts:(unsigned long long)arg1 ;
-(void)_setCurrentRelayAccessoryState:(unsigned long long)arg1 ;
-(unsigned long long)pairingAttempts;
-(void)setPairingAttempts:(unsigned long long)arg1 ;
-(void)_removeHAPAccessoryWithServerIdentifier:(id)arg1 linkType:(long long)arg2 completion:(/*^block*/id)arg3 completionQueue:(id)arg4 ;
-(void)removeTransportInformationInstance:(id)arg1 ;
-(id)matchingTransportInformation:(id)arg1 ;
-(void)_updateReachability;
-(void)_updateRelayEnabled:(char)arg1 notifyRelayManager:(char)arg2 ;
-(void)_enableNotification:(char)arg1 matchingHAPAccessory:(id)arg2 ignoreDeviceUnlockRequirement:(char)arg3 clientIdentifier:(id)arg4 forCharacteristics:(id)arg5 ;
-(void)_addHAPAccessory:(id)arg1 ;
-(void)_updateAccessoryTracking;
-(void)cleanupNotificationCenterObservers;
-(void)unregisterFromAccessoryServer;
-(void)cancelPowerOn;
-(id)matchingTransportInformationWithServerIdentifier:(id)arg1 ;
-(id)_getResponseTuple:(id)arg1 error:(id)arg2 source:(unsigned long long)arg3 suspended:(char)arg4 ;
-(char)isPoweringOn;
-(void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(char)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(void)wirelessPowerOn:(/*^block*/id)arg1 ;
-(void)_writeCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)_evaluateLocalOperation:(long long)arg1 state:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_writeCharacteristicValues:(id)arg1 localOperationRequired:(char)arg2 source:(unsigned long long)arg3 queue:(id)arg4 completionHandler:(/*^block*/id)arg5 errorBlock:(/*^block*/id)arg6 ;
-(id)getFullError:(id)arg1 source:(unsigned long long)arg2 suspended:(char)arg3 ;
-(void)_readCharacteristicValues:(id)arg1 localOperationRequired:(char)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(/*^block*/id)arg6 errorBlock:(/*^block*/id)arg7 ;
-(void)autoUpdateCachedCountDownCharacteristics:(id)arg1 ;
-(void)_readCharacteristicValues:(id)arg1 hapAccessory:(id)arg2 source:(unsigned long long)arg3 message:(id)arg4 queue:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)saveBluetoothAddress:(id)arg1 ;
-(id)cameraProfileNotificationSettingsFromCoder:(id)arg1 ;
-(id)getBluetoothAddress;
-(void)encodeCameraProfileNotificationSettingsWithCoder:(id)arg1 ;
-(void)runTransactionWithModels:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)hapCharacteristicWriteRequests:(id)arg1 hapAccessory:(id)arg2 hmdResponses:(id*)arg3 mapping:(id*)arg4 ;
-(void)populateHMDCharacteristicResponses:(id)arg1 hapResponses:(id)arg2 mapping:(id)arg3 overallError:(id)arg4 requests:(id)arg5 ;
-(void)notifyValue:(id)arg1 previousValue:(id)arg2 error:(id)arg3 forCharacteristic:(id)arg4 requestMessage:(id)arg5 ;
-(void)_relayReadFromCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3 ;
-(void)_relayWriteToCharacteristic:(id)arg1 toResidentForMessage:(id)arg2 viaDevice:(id)arg3 ;
-(void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 hapAccessory:(id)arg3 authorizationData:(id)arg4 message:(id)arg5 ;
-(char)_handleCharacteristicError:(id)arg1 read:(char)arg2 characteristic:(id)arg3 didRelayMessage:(id)arg4 ;
-(void)submitCharacteristicWriteErrorLogEvent:(id)arg1 startDate:(id)arg2 message:(id)arg3 error:(id)arg4 ;
-(id)_prepareMessagePayloadForCharacteristicRemoteWrite:(id)arg1 ;
-(void)_parseResponseFromRemotePeer:(id)arg1 message:(id)arg2 forCharacteristic:(id)arg3 ;
-(void)__updateNotifyingCharacteristicStateNumber:(id)arg1 ;
-(void)_readValueForCharacteristic:(id)arg1 hapAccessory:(id)arg2 requestMessage:(id)arg3 ;
-(void)submitCharacteristicReadErrorLogEvent:(id)arg1 message:(id)arg2 error:(id)arg3 ;
-(void)_notifyNotificationChangesForCharacteristics:(id)arg1 errors:(id)arg2 enableNotification:(char)arg3 message:(id)arg4 ;
-(id)hmdCharacteristicFromHapCharacteristic:(id)arg1 ;
-(void)_disableNotificationsForBundleID:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_enableBroadcastNotifications:(char)arg1 hapAccessory:(id)arg2 forCharacteristics:(id)arg3 ;
-(void)_notifyCharacteristicNotificationChanges:(id)arg1 enableNotification:(char)arg2 message:(id)arg3 clientIdentifier:(id)arg4 ;
-(char)isNotificationEnabledForClientIdentifier:(id)arg1 ;
-(void)_enableNotification:(char)arg1 forCharacteristics:(id)arg2 message:(id)arg3 clientIdentifier:(id)arg4 ;
-(id)_filterEventModificationForCharacteristics:(id)arg1 enableNotification:(char)arg2 clientIdentifier:(id)arg3 ;
-(void)_enableNotification:(char)arg1 forCharacteristics:(id)arg2 hapAccessory:(id)arg3 completion:(/*^block*/id)arg4 ;
-(char)_enableNotificationOnResident:(char)arg1 characteristic:(id)arg2 clientIdentifier:(id)arg3 ignoreDeviceUnlockRequirement:(char)arg4 ;
-(unsigned char)keyGenerationType;
-(void)setKeyGenerationType:(unsigned char)arg1 ;
-(char)keyGenerationInProgress;
-(void)setKeyGenerationInProgress:(char)arg1 ;
-(void)_updateBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(double)arg3 ;
-(void)_logServerReachabilityNotification:(char)arg1 withDuration:(id)arg2 withLinkType:(id)arg3 ;
-(void)_doPrimaryResidentUpdated;
-(void)_reenableNotificationsOnWatch;
-(void)_updateReachabilityMetric:(char)arg1 withDuration:(id)arg2 ;
-(char)_shouldTrackAccessoryWithPriority:(char*)arg1 ;
-(char)_containsSecureCharacteristic;
-(void)_updateStateForTrackedAccessory:(id)arg1 stateNumber:(id)arg2 ;
-(char)hasBLELinkConnected;
-(id)getHAPAccessoryMatchingInstanceId;
-(void)_doReachabilityUpdateForServer:(id)arg1 ;
-(void)_submitStateNumberChangeMetric;
-(void)_submitPairVerifyMetric:(id)arg1 ;
-(NSNumber *)backedOffStateNumber;
-(void)setAccessoryDiscoveryBackoffTimer:(HMFTimer *)arg1 ;
-(void)setBackedOffStateNumber:(NSNumber *)arg1 ;
-(void)associateWithAccessoryAdvertisement:(id)arg1 ;
-(void)_handleMultipleCharacteristicsUpdated:(id)arg1 message:(id)arg2 completionQueue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_removeBackedoffAccessoryForStateNumber:(id)arg1 ;
-(void)setRelayIdentifier:(NSString *)arg1 ;
-(void)_handleAddServiceTransaction:(id)arg1 message:(id)arg2 ;
-(void)addTransportInformationInstance:(id)arg1 ;
-(void)_handleServiceRemovedTransaction:(id)arg1 message:(id)arg2 ;
-(void)addBridgedAccessory:(id)arg1 ;
-(unsigned long long)currentRelayAccessoryState;
-(void)setWiFiTransportCapabilities:(NSNumber *)arg1 ;
-(id)getTransportInformationArray;
-(void)writeValue:(id)arg1 toCharacteristic:(id)arg2 queue:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)makeServiceNameConsistent:(id)arg1 withName:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)createUpdateServiceTransationWithServiceUUID:(id)arg1 ;
-(id)backingStoreTransactionWithName:(id)arg1 ;
-(void)setBroadcastKey:(id)arg1 keyUpdatedStateNumber:(id)arg2 keyUpdatedTime:(id)arg3 ;
-(void)setConnectivityInfo:(HMFConnectivityInfo *)arg1 ;
-(void)saveHardwareSupport:(char)arg1 ;
-(void)saveTargetUUIDs:(id)arg1 ;
-(void)updateTargetUUIDs:(id)arg1 ;
-(char)isReadingRequiredForBTLEAccessoryCharacteristic:(id)arg1 forceReadFWVersion:(char)arg2 ;
-(char)updateAccessoryInformationWithCharacteristicType:(id)arg1 value:(id)arg2 accessoryTransaction:(id)arg3 ;
-(id)updateAccessoryFlagsAndNotifyClients:(id)arg1 ;
-(void)handlePairedStateChange:(char)arg1 ;
-(void)setPairingUsername:(id)arg1 publicKey:(id)arg2 ;
-(void)verifyPairingWithCompletionHandler:(/*^block*/id)arg1 ;
-(NSSet *)serviceTypeUUIDs;
-(void)setInitialServiceTypeUUIDs:(NSSet *)arg1 ;
-(void)_updatePrimaryServiceIfNeededWithService:(id)arg1 ;
-(void)addTarget:(id)arg1 buttonConfiguration:(id)arg2 ;
-(void)updateTarget:(id)arg1 name:(id)arg2 buttonConfiguration:(id)arg3 ;
-(id)targetControllerButtonConfiguration;
-(unsigned long long)targetControllerTicksPerSecond;
-(void)notifyClientsOfTargetControlSupportUpdate;
-(HMDNetworkRouterController *)networkRouterController;
-(void)setNetworkRouterController:(HMDNetworkRouterController *)arg1 ;
-(void)_setSupportsRelay:(char)arg1 ;
-(void)_setRelayIdentifier:(id)arg1 ;
-(void)addRelayUser:(id)arg1 accessToken:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)removeRelayUser:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)configureService:(id)arg1 ;
-(id)matchingHAPAccessoryWithServerIdentifier:(id)arg1 ;
-(void)performOperation:(long long)arg1 linkType:(long long)arg2 operationBlock:(/*^block*/id)arg3 errorBlock:(/*^block*/id)arg4 ;
-(void)writeCharacteristicValues:(id)arg1 localOperationRequired:(char)arg2 source:(unsigned long long)arg3 queue:(id)arg4 completionHandler:(/*^block*/id)arg5 errorBlock:(/*^block*/id)arg6 ;
-(double)_getDurationAndUpdateCurrentTime:(id)arg1 currentTime:(id*)arg2 ;
-(void)_logServerReachabilityNotification:(id)arg1 ;
-(HMCameraUserNotificationSettings *)cameraProfileNotificationSettings;
-(void)setCameraProfileNotificationSettings:(HMCameraUserNotificationSettings *)arg1 ;
-(id)findCharacteristicsByTypes:(id)arg1 forServiceType:(id)arg2 ;
-(HMDAccessoryAdvertisement *)accessoryAdvertisement;
-(HMDDoorbellChimeController *)doorbellChimeController;
-(void)setDoorbellChimeController:(HMDDoorbellChimeController *)arg1 ;
-(id)cameraClipCloudZoneUUIDForRecordingService:(id)arg1 ;
-(void)setInternalThreadCapabilities:(NSNumber *)arg1 ;
-(void)setInternalThreadStatus:(NSNumber *)arg1 ;
-(void)setInternalThreadActive:(NSNumber *)arg1 ;
-(HMDPendingCharacteristic *)pendingPowerOn;
-(void)setPendingPowerOn:(HMDPendingCharacteristic *)arg1 ;
-(NSMutableArray *)powerOnCompletionRoutines;
-(void)setPowerOnCompletionRoutines:(NSMutableArray *)arg1 ;
-(void)setAccessoryAdvertisement:(HMDAccessoryAdvertisement *)arg1 ;
-(void)setAccessoryKeyRefreshTimer:(HMFTimer *)arg1 ;
-(NSMutableArray *)discoveredServices;
-(void)setDiscoveredServices:(NSMutableArray *)arg1 ;
-(void)setDataStreamController:(HMDDataStreamController *)arg1 ;
-(char)supportsThreadCommissioning;
-(char)supportsThreadCommissioning;
-(void)__createNetworkRouterController:(id)arg1 ;
-(void)postNetworkRouterProfileNotification:(id)arg1 object:(id)arg2 ;
-(HMDNetworkRouterSatelliteProfile *)networkRouterSatelliteProfile;
-(char)__createNetworkRouterProfileAndController:(id)arg1 ;
-(char)__createSatelliteNetworkRouterProfile:(id)arg1 ;
-(char)__removeNetworkRouterController;
-(char)canAcceptBulkSendListenersSync;
-(char)hasAnyServiceWithTypes:(id)arg1 ;
-(unsigned short)threadStatus;
-(void)updateCameraProfileNotificationSettings:(id)arg1 ;
-(void)getSupportedSiriAudioConfiguration:(/*^block*/id)arg1 ;
-(void)setSelectedSiriAudioConfiguration:(id)arg1 ;
-(id<HMDDataStreamSocketController>)dataStreamSocketController;
-(char)_resolveSupportedSiriInputType:(id)arg1 ;
-(char)_resolveAudioAbility:(id)arg1 ;
-(void)_updateSiriAudioFormat:(id)arg1 ;
-(void)_handleUpdatedServicesForThreadManagementWithActivity:(id)arg1 ;
-(void)_maybeCommissionToThreadNetwork:(id)arg1 activity:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)_findThreadControlPointCharacteristicWithError:(id*)arg1 ;
-(void)_startCommissioningToThreadNetwork:(id)arg1 activity:(id)arg2 threadControlPointCharacteristic:(id)arg3 pairingEvent:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)_writeThreadControlPointCharacteristic:(id)arg1 value:(id)arg2 activity:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_commissionToThreadNetwork:(id)arg1 activity:(id)arg2 pairingEvent:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_writeCredentialsForThreadNetwork:(id)arg1 activity:(id)arg2 pairingEvent:(id)arg3 metadata:(id)arg4 threadControlPointCharacteristic:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)_wirelessPowerOn:(/*^block*/id)arg1 ;
-(void)_cancelPowerOn;
@end

