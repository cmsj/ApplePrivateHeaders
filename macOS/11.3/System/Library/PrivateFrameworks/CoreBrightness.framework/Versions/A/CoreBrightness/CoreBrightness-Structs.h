/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSObject<OS_dispatch_source>, CBDisplayModuleMacOS, NSString;

typedef struct __IOHIDEvent* IOHIDEventRef;

typedef struct __IOHIDServiceClient* IOHIDServiceClientRef;

typedef struct {
	float field1;
	float field2;
} SCD_Struct_CB2;

typedef struct {
	SCD_Struct_CB2 field1;
	SCD_Struct_CB2 field2;
	SCD_Struct_CB2 field3;
} SCD_Struct_CB3;

typedef struct {
	float lux;
	float factor;
} SCD_Struct_CB4;

typedef struct {
	SCD_Struct_CB4 minPoint;
	SCD_Struct_CB4 maxPoint;
	SCD_Struct_CB4 hysteresisPoint;
} SCD_Struct_CB5;

typedef struct {
	int size;
	float table;
} SCD_Struct_CB6;

typedef struct {
	int xSize;
	int ySize;
	float table[68];
} SCD_Struct_CB7;

typedef struct {
	BOOL supported;
	float ramp_down_disable_s;
	float lux_delta_percent;
	float ramp_up_s;
	float ramp_down_s;
	BOOL enabled;
	BOOL hdrEnabled;
	int lastNitsIndex;
	BOOL useHDRTables;
	float lastHDRChange;
	float lastLuxChange;
	float lastBrightnessChange;
	SCD_Struct_CB6 D_SDR;
	SCD_Struct_CB6 L_SDR;
	SCD_Struct_CB7 A_SDR;
	SCD_Struct_CB6 HDR_LUT_PT;
	SCD_Struct_CB6 HDR_SCALE_DOWN;
	float factor;
	float factor_min;
	float factor_max;
	float cabalMin;
	float cabalMax;
} SCD_Struct_CB8;

typedef struct IONotificationPort* IONotificationPortRef;

typedef struct {
	float XYZ[3];
	SCD_Struct_CB4 xy;
	float CCT1;
} SCD_Struct_CB10;

typedef struct {
	ColorEffects cfx;
	BOOL blueReductionEnabled;
	float blueReductionFactor;
	BOOL nightModeSupported;
	BOOL fadeInProgress;
	BOOL enforceSlowRamps;
	float brightnessBoost;
	BOOL whitePointEnabled;
	double enablementTs;
	BOOL forceSnapping;
	BOOL harmonyHWSupported;
	BOOL harmonyNativeSupported;
	BOOL harmonySystemSupported;
	BOOL harmonyEnabled;
	BOOL harmonyActive;
	BOOL harmonyAvailable;
	BOOL whitepointAvailable;
	float harmonyStrength;
	float harmonyFixedStrength;
	BOOL presetDisableHarmony;
} SCD_Struct_CB11;

typedef struct {
	unsigned char firstTimerFire;
	NSObject<OS_dispatch_source>* logTimer;
	int periodS;
} SCD_Struct_CB12;

typedef struct {
	float field1[3];
	SCD_Struct_CB4 field2;
	float field3;
} SCD_Struct_CB13;

typedef struct {
	double field1[17];
	int field2[17];
	int field3;
	unsigned long long field4;
} SCD_Struct_CB14;

typedef struct {
	double field1[46];
	int field2;
	unsigned long long field3;
} SCD_Struct_CB15;

typedef struct {
	double field1;
	double field2;
	double field3;
	BOOL field4;
	float field5;
} SCD_Struct_CB16;

typedef struct {
	double field1[10];
	int field2;
	double field3;
} SCD_Struct_CB17;

typedef struct {
	double field1;
	double field2;
	double field3;
	double field4;
	float field5;
	float field6;
} SCD_Struct_CB18;

typedef struct {
	SCD_Struct_CB14 field1;
	SCD_Struct_CB14 field2;
	SCD_Struct_CB15 field3;
	SCD_Struct_CB16 field4;
	SCD_Struct_CB17 field5;
	SCD_Struct_CB18 field6;
	int field7;
} SCD_Struct_CB19;

typedef struct {
	float field1;
	float field2[9];
	unsigned field3;
	float field4;
	SCD_Struct_CB4 field5;
	int field6;
	double field7;
} SCD_Struct_CB20;

typedef struct BLRAggdInfo {
	float manualModeTime;
	float sunModeTime;
	float scheduleModeTime;
	int turnOnForNowCount;
	int turnOffForNowCount;
	int turnOnUntilTomorrowCount;
	int turnOffUntilTomorrowCount;
	double _aggdModeChangeTimestamp;
} BLRAggdInfo;

typedef struct NMFactorState {
	double rampStartTime;
	float factor;
	float target;
	float start;
	float rampLength;
} NMFactorState;

typedef struct __CFTimeZone* CFTimeZoneRef;

typedef struct {
	int hour;
	int minute;
} SCD_Struct_Ni24;

typedef struct {
	SCD_Struct_Ni24 fromTime;
	SCD_Struct_Ni24 toTime;
} SCD_Struct_Ni25;

typedef struct {
	char active;
	char enabled;
	char sunSchedulePermitted;
	int mode;
	SCD_Struct_Ni25 schedule;
	unsigned long long disableFlags;
	char available;
} SCD_Struct_Ni26;

typedef struct __CFUserNotification* CFUserNotificationRef;

typedef struct __CFString* CFStringRef;

typedef struct {
	char field1;
	char field2;
	char field3;
	int field4;
	SCD_Struct_Ni25 field5;
	unsigned long long field6;
	char field7;
} SCD_Struct_Ni29;

typedef struct ALSStruct {
	float currentValue;
	float e1;
	float e1Sensor;
	float e2;
	float e2Sensor;
	float eThresh;
	float bl1;
	float bl2;
	BOOL autoEnabled;
} ALSStruct;

typedef struct MagSafeReduction {
	BOOL enabled;
	float linearBrightnessLimit;
	float luxThreshold;
} MagSafeReduction;

typedef struct DynamicSlider {
	BOOL supported;
	NSObject<OS_dispatch_source>* fadeTimer;
	SCD_Struct_CB5 range;
	SCD_Struct_CB5 rangeBattery;
	/*function pointer*/void* currentRange;
	float currentTargetFactor;
} DynamicSlider;

typedef struct DisplayStruct {
	CBDisplayModuleMacOS* displayModule;
	float displayIncrement;
	BOOL needsBrightnessSmoothing;
	float minimumLinearBrightness;
	float maximumLinearBrightness;
	float currentFadeTarget;
	NSObject<OS_dispatch_source>* fadeTimer;
	NSObject<OS_dispatch_source>* alsIdleTimer;
	NSObject<OS_dispatch_source>* forceUpdateTimer;
	float magsafeFactor;
	MagSafeReduction magSafeReduction;
	DynamicSlider dynamicSlider;
	BOOL freezeBrightnessUpdates;
	NSString* uniqueID;
} DisplayStruct;

typedef struct __SCDynamicStore* SCDynamicStoreRef;

typedef struct {
	long long field1;
	void field2;
	/*function pointer*/void* field3;
	/*function pointer*/void* field4;
	/*function pointer*/void* field5;
} SCD_Struct_Di35;

typedef struct {
	float minCCT;
	float maxCCT;
	float midCCT;
} SCD_Struct_CB36;

typedef struct {
	double field1;
	double field2;
} SCD_Struct_CB37;

typedef struct {
	double field1;
	double field2;
	double field3;
} SCD_Struct_CB38;

typedef struct {
	float matrix[9];
} SCD_Struct_CB39;

typedef struct __Display* DisplayRef;

typedef struct {
	int field1;
	BOOL field2;
	unsigned short field3;
	unsigned char field4;
} SCD_Struct_CB41;

typedef struct {
	unsigned field1[4];
	unsigned field2[4];
	unsigned char field3;
	unsigned char field4;
} SCD_Struct_CB42;

typedef struct {
	int field1;
	int( field2;
	/*function pointer*/void* field3;
	= field4;
	SCD_Struct_CB4 field5;
	1 field6;
	char field7[5];
	unsigned field8;
} SCD_Struct_CB43;

typedef struct {
	unsigned field1;
	SCD_Struct_CB4 field2;
	3( field3;
	/*function pointer*/void* field4;
	= field5;
	unsigned long long field6;
	long long field7;
	double)( field8;
	/*function pointer*/void* field9;
	= field10;
	unsigned long long field11;
	long long field12;
	double)( field13;
	/*function pointer*/void* field14;
	= field15;
	unsigned long long field16;
	long long field17;
	double) field18;
} SCD_Struct_CB44;

typedef struct {
	unsigned field1;
	BOOL field2;
	SMCAccumPlatformInfo field3;
	SCD_Struct_CB44 field4[4];
	SCD_Struct_CB44 field5[4];
	unsigned char field6;
	unsigned char field7;
	BOOL field8;
	BOOL field9;
	BOOL field10;
	SCD_Struct_CB4 field11;
	2 field12;
	BOOL field13;
} SCD_Struct_CB45;

typedef struct mach_timebase_info {
	unsigned numer;
	unsigned denom;
} mach_timebase_info;

typedef struct Ramp {
	float start;
	float target;
	float current;
	double startTime;
	double duration;
} Ramp;

typedef struct {
	unsigned status;
	unsigned char nChannels;
	unsigned char orientation;
	unsigned short reserved;
	unsigned integrationTime;
	unsigned reportInterval;
	int gain;
	float lux;
	float channelData[6];
	float CCT;
	short AZOffsets[6];
	float temperature;
} SCD_Struct_CB48;

typedef struct {
	double x;
	double y;
} SCD_Struct_CB49;

typedef struct {
	double X;
	double Y;
	double Z;
} SCD_Struct_CB50;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct {
	float minimumBrightness;
	float maximumBrightness;
	float bl1;
	float bl2;
	float e1;
	float e2;
	float eThresh;
} SCD_Struct_CB52;

typedef struct __IOHIDEventSystemClient* IOHIDEventSystemClientRef;

typedef struct {
	unsigned long long alsAccumulatedTimeSinceLastPost;
	float averageLux;
	BOOL isFirstReport;
	unsigned long long reportStatLastTimestamp;
	float lastLuxValue;
	float minLuxValue;
	float maxLuxValue;
	int numberOfUserBrightnessChanges;
	BOOL alsEnabled;
} SCD_Struct_Am54;

typedef struct _NSZone* NSZoneRef;

