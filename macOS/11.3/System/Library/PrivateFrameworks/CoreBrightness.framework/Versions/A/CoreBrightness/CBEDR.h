/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@interface CBEDR : NSObject {

	unsigned long long _rampPolicy;
	float _maxHeadroom;
	float _requestedHeadroom;
	float _currentMaxBrightness;
	float _currentHeadroom;
	float _referenceHeadroom;
	float _appliedCompensation;
	float _panelMax;
	float _brightnessCap;
	float _sdrBrightness;
	float _secondsPerStop;

}

@property (assign) float panelMax;                         //@synthesize panelMax=_panelMax - In the implementation block
@property (assign) float brightnessCap;                    //@synthesize brightnessCap=_brightnessCap - In the implementation block
@property (assign) float sdrBrightness;                    //@synthesize sdrBrightness=_sdrBrightness - In the implementation block
@property (assign) float appliedCompensation;              //@synthesize appliedCompensation=_appliedCompensation - In the implementation block
@property (assign) float secondsPerStop;                   //@synthesize secondsPerStop=_secondsPerStop - In the implementation block
+(float)animatedHeadroomForOrigin:(float)arg1 target:(float)arg2 andProgress:(float)arg3 ;
-(id)description;
-(void)sanityCheck;
-(float)stopsFromHeadroomRatio:(float)arg1 ;
-(float)availableHeadroom;
-(id)initWithRampPolicy:(unsigned long long)arg1 potentialHeadroom:(float)arg2 andReferenceHeadroom:(float)arg3 ;
-(float)maxHeadroom;
-(float)referenceHeadroom;
-(char)shouldUpdateEDRForRequestedHeadroom:(float)arg1 targetHeadroom:(float*)arg2 rampTime:(double*)arg3 ;
-(float)cappedHeadroomFromUncapped:(float)arg1 ;
-(id)copyStatusInfo;
-(float)panelMax;
-(void)setPanelMax:(float)arg1 ;
-(float)brightnessCap;
-(void)setBrightnessCap:(float)arg1 ;
-(float)sdrBrightness;
-(void)setSdrBrightness:(float)arg1 ;
-(float)appliedCompensation;
-(void)setAppliedCompensation:(float)arg1 ;
-(float)secondsPerStop;
-(void)setSecondsPerStop:(float)arg1 ;
@end

