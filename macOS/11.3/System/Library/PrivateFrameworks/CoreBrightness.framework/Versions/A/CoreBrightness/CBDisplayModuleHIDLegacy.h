/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:08 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreBrightness.framework/Versions/A/CoreBrightness
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreBrightness/CoreBrightness-Structs.h>
#import <CoreBrightness/CBDisplayModule.h>
#import <libobjc.A.dylib/CBContainerModuleProtocol.h>

@protocol SLSBrightnessControl, OS_os_log;
@class NSObject, HIDDevice, HIDElement, NSString;

@interface CBDisplayModuleHIDLegacy : CBDisplayModule <CBContainerModuleProtocol> {

	id<SLSBrightnessControl> _brightnessControlProxy;
	NSObject*<OS_os_log> _logHandle;
	HIDDevice* _brightnessDevice;
	float _userBrightness;
	char _ALCEnabled;
	IONotificationPortRef _brightnessServiceArrivalNotificationPort;
	unsigned _brightnessServiceArrivalIterator;
	HIDElement* _elementBrightness;
	HIDElement* _elementALCState;
	HIDElement* _elementALCReset;
	HIDElement* _elementMacMode;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)supportsBrightnessControlForDisplayWithVID:(unsigned long long)arg1 andPID:(unsigned long long)arg2 ;
-(void)dealloc;
-(BOOL)setProperty:(id)arg1 forKey:(id)arg2 ;
-(void)start;
-(void)stop;
-(char)isOnline;
-(void)sendNotificationForKey:(id)arg1 withValue:(id)arg2 ;
-(id)copyPropertyForKey:(id)arg1 ;
-(id)copyPropertyForKey:(id)arg1 withParameter:(id)arg2 ;
-(void)handleNotificationForKey:(id)arg1 withProperty:(id)arg2 ;
-(unsigned long long)getDeviceID;
-(id)newDisplayInfo;
-(id)newStatusInfo;
-(float)getUserBrightness;
-(id)initWithBrightnessControl:(id)arg1 andQueue:(id)arg2 ;
-(void)startHIDDeviceLookup;
-(void)stopHIDDeviceLookup;
-(void)brightnessArrivalHandler:(unsigned)arg1 ;
-(char)supportsBrightness;
-(char)supportsALC;
-(char)getALCState;
-(char)supportsALCReset;
-(char)handleSetALCStateProperty:(id)arg1 ;
-(char)resetALC;
-(char)handleSetBrightnessProperty:(id)arg1 ;
-(char)handleSetBrightnessSmoothProperty:(id)arg1 ;
-(char)handleSetBrightnessCommit:(id)arg1 ;
-(char)setALCState:(char)arg1 ;
-(char)setUserBrightness:(float)arg1 ;
-(char)setDeviceBrightness:(float)arg1 ;
-(void)retrieveCurrentStateFromHW;
-(float)getUserBrightnessFromElement;
-(void)sendAvailabilityNotifications;
-(void)ALCBrightnessUpdate:(float)arg1 ;
-(char)supportsMacMode;
-(void)setMacMode;
@end

