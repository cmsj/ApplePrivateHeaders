/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:10 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/IDSFoundation.framework/Versions/A/IDSFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <IDSFoundation/IDSFoundation-Structs.h>
#import <IDSFoundation/IDSLink.h>

@protocol IDSLinkDelegate;
@class IDSSockAddrWrapper, NSDictionary, NSString, NSIndexSet;

@interface IDSUDPLink : NSObject <IDSLink> {

	int _socket;
	int _cellularSocket;
	int _addressFamily;
	IDSSockAddrWrapper* _localAddress;
	IDSSockAddrWrapper* _destinationAddress;
	char _hasFixedDestination;
	NSDictionary* _destinationAddressToDeviceIDMap;
	unsigned short _port;
	unsigned short _cellularPort;
	char _wantsAWDL;
	char _wantsWiFi;
	char _wantsCellular;
	char _useDefaultInterfaceOnly;
	char _allowsLinkLocal;
	char _skipTransportThread;
	char _needToConnect;
	char _hasTemporaryError;
	char _isInvalidated;
	double _lastDestinationSent;
	double _lastDestinationReceived;
	unsigned long long _state;
	unsigned long long _totalBytesSent;
	unsigned long long _totalPacketsSent;
	unsigned long long _totalBytesReceived;
	unsigned long long _totalPacketsReceived;
	unsigned long long _previousBytesSent;
	unsigned long long _previousPacketsSent;
	unsigned long long _previousBytesReceived;
	unsigned long long _previousPacketsReceived;
	double _previousReportTime;
	NSString* _cbuuid;
	NSString* _deviceUniqueID;
	id<IDSLinkDelegate> _delegate;
	id<IDSLinkDelegate> _alternateDelegate;
	NSIndexSet* _cellularInterfaceIndices;
	char _wifiAssistEnabled;

}

@property (assign,nonatomic) unsigned short port;                                  //@synthesize port=_port - In the implementation block
@property (assign,nonatomic) unsigned short cellularPort;                          //@synthesize cellularPort=_cellularPort - In the implementation block
@property (nonatomic,readonly) int socket;                                         //@synthesize socket=_socket - In the implementation block
@property (nonatomic,readonly) int cellularSocket;                                 //@synthesize cellularSocket=_cellularSocket - In the implementation block
@property (assign,nonatomic) char useDefaultInterfaceOnly;                         //@synthesize useDefaultInterfaceOnly=_useDefaultInterfaceOnly - In the implementation block
@property (nonatomic,readonly) char isInvalidated;                                 //@synthesize isInvalidated=_isInvalidated - In the implementation block
@property (assign,nonatomic) double lastDestinationSent;                           //@synthesize lastDestinationSent=_lastDestinationSent - In the implementation block
@property (nonatomic,readonly) double lastDestinationReceived;                     //@synthesize lastDestinationReceived=_lastDestinationReceived - In the implementation block
@property (assign,nonatomic) char allowsLinkLocal;                                 //@synthesize allowsLinkLocal=_allowsLinkLocal - In the implementation block
@property (assign,nonatomic) char skipTransportThread;                             //@synthesize skipTransportThread=_skipTransportThread - In the implementation block
@property (nonatomic,retain) NSIndexSet * cellularInterfaceIndices;                //@synthesize cellularInterfaceIndices=_cellularInterfaceIndices - In the implementation block
@property (assign,nonatomic) char wifiAssistEnabled;                               //@synthesize wifiAssistEnabled=_wifiAssistEnabled - In the implementation block
@property (retain) NSString * cbuuid;                                              //@synthesize cbuuid=_cbuuid - In the implementation block
@property (retain) NSString * deviceUniqueID;                                      //@synthesize deviceUniqueID=_deviceUniqueID - In the implementation block
@property (getter=linkTypeString,readonly) NSString * linkTypeString; 
@property (readonly) unsigned long long state;                                     //@synthesize state=_state - In the implementation block
@property (readonly) unsigned long long headerOverhead; 
@property (__weak) id<IDSLinkDelegate> delegate;                                   //@synthesize delegate=_delegate - In the implementation block
@property (__weak) id<IDSLinkDelegate> alternateDelegate;                          //@synthesize alternateDelegate=_alternateDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)dealloc;
-(void)invalidate;
-(id<IDSLinkDelegate>)delegate;
-(void)setDelegate:(id<IDSLinkDelegate>)arg1 ;
-(unsigned long long)state;
-(unsigned short)port;
-(void)setPort:(unsigned short)arg1 ;
-(int)socket;
-(char)isInvalidated;
-(NSString *)cbuuid;
-(id)initWithDeviceUniqueID:(id)arg1 cbuuid:(id)arg2 ;
-(void)setCellularPort:(unsigned short)arg1 ;
-(id)newSocketWithIPVersion:(unsigned long long)arg1 wantsAWDL:(char)arg2 wantsWiFi:(char)arg3 wantsCellular:(char)arg4 clientUUID:(unsigned char)arg5 ;
-(void)removeSocket;
-(unsigned long long)headerOverhead;
-(unsigned long long)sendPacketBuffer:(SCD_Struct_ID8*)arg1 toDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 ;
-(void)setCellularInterfaceIndices:(NSIndexSet *)arg1 ;
-(id)copyCurrentNetworkInterfaces;
-(unsigned long long)sendPacketBufferArray:(/*function pointer*/void**)arg1 arraySize:(int)arg2 toDeviceUniqueID:(id)arg3 cbuuid:(id)arg4 ;
-(void)setWiFiAssistState:(char)arg1 ;
-(id)generateLinkReport:(double)arg1 isCurrentLink:(char)arg2 ;
-(id)copyLinkStatsDict;
-(void)setCbuuid:(NSString *)arg1 ;
-(NSString *)deviceUniqueID;
-(void)setDeviceUniqueID:(NSString *)arg1 ;
-(NSString *)linkTypeString;
-(id<IDSLinkDelegate>)alternateDelegate;
-(void)setAlternateDelegate:(id<IDSLinkDelegate>)arg1 ;
-(NSIndexSet *)cellularInterfaceIndices;
-(char)wifiAssistEnabled;
-(void)setWifiAssistEnabled:(char)arg1 ;
-(unsigned short)cellularPort;
-(char)_isInterfaceIndexCellular:(int)arg1 ;
-(void)_processIncomingPacketOnSocket:(int)arg1 ;
-(unsigned long long)_sendBytes:(const void*)arg1 length:(unsigned long long)arg2 destinationAddress:(const sockaddr*)arg3 ;
-(unsigned long long)_sendBytes:(const void*)arg1 length:(unsigned long long)arg2 ;
-(int)_findSocketForInterfaceIndex:(int)arg1 ;
-(char)setDestinationAddress:(id)arg1 isFixedDestination:(char)arg2 fromAddress:(id)arg3 ;
-(int)_createNewUDPSocketWithIPVersion:(unsigned long long)arg1 localPort:(unsigned short*)arg2 wantsAWDL:(char)arg3 clientUUID:(unsigned char)arg4 ;
-(void)_processIncomingPacket;
-(void)_processIncomingCellularPacket;
-(id)_createNetworkInterfaceArrayWithIPVersion:(unsigned long long)arg1 wantsAWDL:(char)arg2 wantsWiFi:(char)arg3 wantsCellular:(char)arg4 allowsLinkLocal:(char)arg5 useDefaultInterfaceOnly:(char)arg6 defaultPairedDevice:(char)arg7 ;
-(unsigned long long)_sendBytesArray:(const void*)arg1 lengthArray:(unsigned long long*)arg2 arraySize:(int)arg3 localInterfaceIndex:(int)arg4 localAddress:(const sockaddr*)arg5 destinationAddress:(const sockaddr*)arg6 trafficClass:(unsigned short)arg7 DSCP:(unsigned char)arg8 ;
-(char)_setTrafficClassOnSocket:(int)arg1 trafficClassValue:(int)arg2 ;
-(char)setDestinationAddress:(id)arg1 localIfIndex:(unsigned)arg2 isFixedDestination:(char)arg3 fromAddress:(id)arg4 ;
-(char)setDestinationAddressToDeviceIDMap:(id)arg1 ;
-(void)reconnectWithLocalAddress:(id)arg1 ;
-(id)newSocketWithIPVersion:(unsigned long long)arg1 wantsAWDL:(char)arg2 wantsWiFi:(char)arg3 wantsCellular:(char)arg4 ;
-(unsigned long long)sendPacketBuffer:(SCD_Struct_ID8*)arg1 destination:(id)arg2 toDeviceID:(id)arg3 ;
-(unsigned long long)sendPacketBuffer:(SCD_Struct_ID8*)arg1 sourceInterface:(id)arg2 destination:(id)arg3 toDeviceID:(id)arg4 ;
-(char)setTrafficClass:(int)arg1 ;
-(char)useDefaultInterfaceOnly;
-(void)setUseDefaultInterfaceOnly:(char)arg1 ;
-(double)lastDestinationSent;
-(void)setLastDestinationSent:(double)arg1 ;
-(double)lastDestinationReceived;
-(char)skipTransportThread;
-(void)setSkipTransportThread:(char)arg1 ;
-(int)cellularSocket;
-(char)allowsLinkLocal;
-(void)setAllowsLinkLocal:(char)arg1 ;
@end

