/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:39 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/PAImaging.framework/Versions/A/PAImaging
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PAImaging/PAImaging-Structs.h>
#import <PAImaging/PADevice.h>

@protocol OS_dispatch_queue;
@class NSString, NSDictionary, PAOpenGLContextPool, NSObject, _PALowPriorityOpenGLDevice;

@interface PAOpenGLDevice : PADevice {

	int _virtualScreen;
	NSString* _identifier;
	unsigned long long _rendererID;
	NSDictionary* _properties;
	PAOpenGLContextPool* _pool;
	NSObject*<OS_dispatch_queue> _initializationQueue;
	char _initialized;
	NSObject*<OS_dispatch_queue> _deallocQueue;
	_PALowPriorityOpenGLDevice* _lowPriorityDevice;

}

@property (nonatomic,readonly) PAOpenGLContextPool * contextPool; 
@property (nonatomic,readonly) NSString * name; 
@property (nonatomic,readonly) unsigned long long rendererID;                  //@synthesize rendererID=_rendererID - In the implementation block
@property (nonatomic,readonly) unsigned displayMask; 
@property (nonatomic,readonly) int virtualScreen;                              //@synthesize virtualScreen=_virtualScreen - In the implementation block
+(id)defaultDevice;
+(CGLContextObjectRef)_sharedContext;
+(id)availableDevices;
+(id)_availableDevices;
+(CGLContextObjectRef)sharedContext;
+(id)integratedDevice;
+(id)discreteDevice;
+(CGLPixelFormatObjectRef)sharedPixelFormat;
+(CGLPixelFormatObjectRef)sharedDeepPixelFormat;
+(CGLPixelFormatObjectRef)_sharedPixelFormat:(char)arg1 ;
+(id)deviceWithVirtualScreen:(int)arg1 ;
+(id)deviceWithRendererID:(unsigned long long)arg1 ;
+(id)deviceWithOpenGLDisplayMask:(unsigned)arg1 ;
+(id)deviceWithScreen:(id)arg1 ;
-(id)description;
-(NSString *)name;
-(int)type;
-(id)identifier;
-(char)isIntegrated;
-(id)_properties;
-(unsigned)displayMask;
-(char)isOffline;
-(unsigned long long)rendererID;
-(int)virtualScreen;
-(char)isAccelerated;
-(char)isExtensionSupported:(id)arg1 ;
-(id)_deviceProperties;
-(char)isDiscrete;
-(id)renderFormatWithBitDepth:(long long)arg1 alpha:(char)arg2 ;
-(id)extendedRangeRenderFormat;
-(id)renderFormatForPixelFormat:(id)arg1 alpha:(char)arg2 ;
-(id)subDeviceWithQoS:(unsigned)arg1 ;
-(void)executeBlockWithContext:(/*^block*/id)arg1 ;
-(id)_initWithVirtualScreen:(int)arg1 ;
-(void)_lazyInitOnceIfNeeded;
-(void)_lazyInitOnce;
-(id)_rendererProperties;
-(id)_openGLProperties;
-(id)_getString:(unsigned)arg1 ;
-(char)_isInternalFormatSupported:(int)arg1 ;
-(char)_isIntegerInternalFormatSupported:(int)arg1 ;
-(id)_newIdentifierWithVirtualScreen:(int)arg1 ;
-(id)deallocQueue;
-(id)lowPriorityDevice;
-(id)openGLVersion;
-(id)openGLVendor;
-(id)openGLRenderer;
-(id)shadingLanguageVersion;
-(char)isTextureFormatSupported:(int)arg1 ;
-(PAOpenGLContextPool *)contextPool;
-(char)isEmulated;
-(unsigned long long)textureMemoryInMegaBytes;
@end

