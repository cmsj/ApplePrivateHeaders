/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:14 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Versions/A/CloudPhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudPhotoLibrary/CloudPhotoLibrary-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@class CPLRecordChangeDiffTracker, NSString, CPLScopedIdentifier, NSDate, NSData;

@interface CPLRecordChange : NSObject <NSSecureCoding, NSCopying> {

	CPLRecordChangeDiffTracker* _attachedDiffTracker;
	NSString* _uploadIdentifier;
	char _shouldNotTrustCloudCache;
	char _shouldFilterDefaultValuesForNewProperties;
	char _isSparseFullChange;
	char _shouldOnlyUploadNewResources;
	char _didCacheRealResourceSizeInStorage;
	unsigned long long _cachedRealResourceSizeInStorage;
	char _inTrash;
	char _inExpunged;
	char _serverRecordIsCorrupted;
	CPLScopedIdentifier* _scopedIdentifier;
	NSDate* _recordModificationDate;
	unsigned long long _changeType;
	NSDate* _dateDeleted;
	CPLScopedIdentifier* _resourceCopyFromScopedIdentifier;
	NSString* _realIdentifier;
	NSData* _recordChangeData;

}

@property (nonatomic,copy) NSString * realIdentifier;                                           //@synthesize realIdentifier=_realIdentifier - In the implementation block
@property (nonatomic,copy) NSData * recordChangeData;                                           //@synthesize recordChangeData=_recordChangeData - In the implementation block
@property (assign,nonatomic) char serverRecordIsCorrupted;                                      //@synthesize serverRecordIsCorrupted=_serverRecordIsCorrupted - In the implementation block
@property (nonatomic,copy) CPLScopedIdentifier * scopedIdentifier;                              //@synthesize scopedIdentifier=_scopedIdentifier - In the implementation block
@property (nonatomic,copy) NSDate * recordModificationDate;                                     //@synthesize recordModificationDate=_recordModificationDate - In the implementation block
@property (assign,nonatomic) unsigned long long changeType;                                     //@synthesize changeType=_changeType - In the implementation block
@property (nonatomic,copy) NSDate * dateDeleted;                                                //@synthesize dateDeleted=_dateDeleted - In the implementation block
@property (nonatomic,copy) CPLScopedIdentifier * resourceCopyFromScopedIdentifier;              //@synthesize resourceCopyFromScopedIdentifier=_resourceCopyFromScopedIdentifier - In the implementation block
@property (assign,nonatomic) char inTrash;                                                      //@synthesize inTrash=_inTrash - In the implementation block
@property (assign,nonatomic) char inExpunged;                                                   //@synthesize inExpunged=_inExpunged - In the implementation block
@property (nonatomic,copy) NSString * identifier; 
+(char)supportsSecureCoding;
+(id)descriptionForChangeType:(unsigned long long)arg1 ;
+(id)newDeleteChangeWithScopedIdentifier:(id)arg1 ;
+(long long)maxInlineDataSize;
+(id)newChangeWithScopedIdentifier:(id)arg1 changeType:(unsigned long long)arg2 ;
+(id)newRecordWithScopedIdentifier:(id)arg1 ;
+(char)cplShouldIgnorePropertyForCoding:(id)arg1 ;
+(char)cplShouldIgnorePropertyForEquality:(id)arg1 ;
+(id)cplAdditionalSecureClassesForProperty:(id)arg1 ;
+(Class)classForStoredClassName:(id)arg1 forCPLArchiver:(id)arg2 ;
+(char)shouldReallyQuarantineRecord;
+(id)descriptionForDirection:(unsigned long long)arg1 ;
+(id)newRecord;
+(id)newRecordInScopeWithIdentifier:(id)arg1 ;
+(id)newChangeWithType:(unsigned long long)arg1 ;
+(id)_descriptionForChangeType:(unsigned long long)arg1 isSparseFullChange:(char)arg2 onlyUploadNewResources:(char)arg3 ;
+(/*^block*/id)equalityBlockForDirection:(unsigned long long)arg1 ;
+(/*^block*/id)copyPropertyBlockForDirection:(unsigned long long)arg1 ;
+(id)newChangeWithIdentifier:(id)arg1 changeType:(unsigned long long)arg2 ;
+(id)newRecordWithIdentifier:(id)arg1 ;
+(id)newDeleteChangeWithIdentifier:(id)arg1 ;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)redactedDescription;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(NSString *)identifier;
-(char)inTrash;
-(id)resourceForType:(unsigned long long)arg1 ;
-(id)resources;
-(void)setIdentifier:(NSString *)arg1 ;
-(unsigned long long)changeType;
-(void)clearIdentifiers;
-(void)setResources:(id)arg1 ;
-(id)secondaryIdentifier;
-(void)setChangeType:(unsigned long long)arg1 ;
-(id)relatedIdentifier;
-(char)supportsDeletion;
-(CPLScopedIdentifier *)scopedIdentifier;
-(void)setInTrash:(char)arg1 ;
-(char)isDelete;
-(char)supportsResources;
-(void)setScopedIdentifier:(CPLScopedIdentifier *)arg1 ;
-(char)hasChangeType:(unsigned long long)arg1 ;
-(char)inExpunged;
-(char)isFullRecord;
-(NSDate *)recordModificationDate;
-(NSDate *)dateDeleted;
-(void)setInExpunged:(char)arg1 ;
-(void)setDateDeleted:(NSDate *)arg1 ;
-(void)setRecordModificationDate:(NSDate *)arg1 ;
-(void)setResourceCopyFromScopedIdentifier:(CPLScopedIdentifier *)arg1 ;
-(unsigned long long)realResourceSize;
-(void)setSecondaryIdentifier:(id)arg1 ;
-(char)supportsDirectDeletion;
-(id)propertiesDescription;
-(/*^block*/id)checkDefaultValueBlockForPropertyWithSelector:(SEL)arg1 ;
-(long long)dequeueOrder;
-(id)propertiesForChangeType:(unsigned long long)arg1 ;
-(void)copyDerivativesFromRecordIfPossible:(id)arg1 ;
-(char)supportsResourceType:(unsigned long long)arg1 ;
-(char)isResourceTypeAGeneratedDerivative:(unsigned long long)arg1 ;
-(char)allowsToOnlyUploadNewResources;
-(char)isMasterChange;
-(id)cplFullDescription;
-(id)storedClassNameForCPLArchiver:(id)arg1 ;
-(id)relatedScopedIdentifier;
-(id)secondaryScopedIdentifier;
-(id)initWithCPLArchiver:(id)arg1 ;
-(id)proposedCloudScopedIdentifierWithError:(id*)arg1 ;
-(id)scopedIdentifiersForMapping;
-(id)translateToCloudChangeUsingIDMapping:(id)arg1 error:(id*)arg2 ;
-(id)translateToClientChangeUsingIDMapping:(id)arg1 error:(id*)arg2 ;
-(void)setScopeIndex:(long long)arg1 ;
-(id)compactedChangeWithRelatedChanges:(id)arg1 isOnlyChange:(char)arg2 fullRecord:(id)arg3 usingStorageView:(id)arg4 ;
-(void)setRelatedIdentifier:(id)arg1 ;
-(char)validateFullRecord;
-(id)_uploadIdentifier;
-(char)_shouldNotTrustCloudCache;
-(id)_unscopedIdentifier;
-(id)realScopedIdentifier;
-(char)isInScopeWithIdentifier:(id)arg1 ;
-(unsigned long long)totalResourceSize;
-(unsigned long long)effectiveResourceSizeToUploadUsingStorage:(id)arg1 ;
-(unsigned long long)originalResourceSize;
-(char)applyChange:(id)arg1 copyPropertiesToFinalChange:(id)arg2 forChangeType:(unsigned long long)arg3 direction:(unsigned long long)arg4 diffTracker:(id)arg5 ;
-(id)realRecordChangeFromRecordChange:(id)arg1 direction:(unsigned long long)arg2 newRecord:(id*)arg3 changeType:(unsigned long long)arg4 diffTracker:(id)arg5 ;
-(id)realRecordChangeFromRecordChange:(id)arg1 direction:(unsigned long long)arg2 newRecord:(id*)arg3 diffTracker:(id)arg4 ;
-(id)realRecordChangeFromRecordChange:(id)arg1 direction:(unsigned long long)arg2 newRecord:(id*)arg3 ;
-(void)attachDiffTracker:(id)arg1 ;
-(id)attachedDiffTracker;
-(char)resourceChangeWillOnlyChangeDerivatives:(id)arg1 ;
-(id)mergeRecordChangeWithNewRecordChange:(id)arg1 direction:(unsigned long long)arg2 ;
-(id)proposedLocalScopedIdentifier;
-(id)allRelatedScopedIdentifiers;
-(void)prepareForStorage;
-(void)awakeFromStorage;
-(id)resourcesDescription;
-(char)shouldApplyPropertiesWithSelector:(SEL)arg1 ;
-(void)setShouldFilterDefaultValuesForNewProperties:(char)arg1 ;
-(char)shouldFilterDefaultValuesForNewProperties;
-(char)isSparseFullChange;
-(void)markAsSparseFullChange;
-(void)markToOnlyUploadNewResources;
-(char)shouldOnlyUploadNewResources;
-(char)changeIsOnlyAddingResourcesToRecord:(id)arg1 addedResources:(id*)arg2 ;
-(id)onlyAddedResources;
-(char)validateChangeWithError:(id*)arg1 ;
-(unsigned long long)estimatedRecordSize;
-(void)_setUploadIdentifier:(id)arg1 ;
-(void)_setShouldNotTrustCloudCache:(char)arg1 ;
-(char)_canLowerQuota;
-(unsigned long long)fullChangeTypeForFullRecord;
-(char)allResourcesAreAvailable;
-(id)resourcePerType;
-(unsigned long long)baseDerivativeResourceType;
-(unsigned long long)baseVideoComplemenentResourceType;
-(void)copyDerivatives:(unsigned long long*)arg1 count:(int)arg2 avoidResourceType:(unsigned long long)arg3 fromRecord:(id)arg4 inResourcePerType:(id)arg5 ;
-(void)enumerateChangeTypesForChangeType:(unsigned long long)arg1 block:(/*^block*/id)arg2 ;
-(id)copyChangeType:(unsigned long long)arg1 ;
-(void)applyChange:(id)arg1 ;
-(void)applyChangeType:(unsigned long long)arg1 fromChange:(id)arg2 ;
-(char)isAssetChange;
-(CPLScopedIdentifier *)resourceCopyFromScopedIdentifier;
-(NSString *)realIdentifier;
-(void)setRealIdentifier:(NSString *)arg1 ;
-(NSData *)recordChangeData;
-(void)setRecordChangeData:(NSData *)arg1 ;
-(char)serverRecordIsCorrupted;
-(void)setServerRecordIsCorrupted:(char)arg1 ;
-(id)asRecordView;
-(char)validateRecordForTracker:(id)arg1 ;
@end

