/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:14 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Versions/A/CloudPhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudPhotoLibrary/CPLEngineStorage.h>
#import <libobjc.A.dylib/CPLAbstractObject.h>

@class NSMutableArray, CPLPlatformObject, NSString;

@interface CPLEngineTransientRepository : CPLEngineStorage <CPLAbstractObject> {

	unsigned long long _popState;
	NSMutableArray* _remainingClassesToBePopped;
	unsigned long long _maximumCountOfRecordsInBatches;

}

@property (assign,nonatomic) unsigned long long maximumCountOfRecordsInBatches;              //@synthesize maximumCountOfRecordsInBatches=_maximumCountOfRecordsInBatches - In the implementation block
@property (nonatomic,readonly) CPLPlatformObject * platformObject; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)orderedClassesForChangesForLargeSync;
+(id)orderedClassesForDelete;
+(id)orderedClassesForChanges;
-(char)openWithError:(id*)arg1 ;
-(unsigned long long)scopeType;
-(id)initWithEngineStore:(id)arg1 name:(id)arg2 ;
-(id)changeWithScopedIdentifier:(id)arg1 ;
-(char)deleteRecordsForScopeIndex:(long long)arg1 maxCount:(long long)arg2 deletedCount:(long long*)arg3 error:(id*)arg4 ;
-(char)popChangeBatch:(id*)arg1 error:(id*)arg2 ;
-(char)hasRecordWithScopedIdentifier:(id)arg1 ;
-(unsigned long long)countOfAssetChanges;
-(char)_appendBatchToStorage:(id)arg1 alreadyMingled:(char)arg2 error:(id*)arg3 ;
-(char)appendBatch:(id)arg1 alreadyMingled:(char)arg2 error:(id*)arg3 ;
-(char)prepareForMinglingWithScopeFilter:(id)arg1 error:(id*)arg2 ;
-(char)_popChangeBatchOfDeletedRecords:(id*)arg1 maximumCount:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)_popChangeBatchOfChangedRecords:(id*)arg1 maximumCount:(unsigned long long)arg2 stop:(char*)arg3 error:(id*)arg4 ;
-(char)hasMingledRecordsForScopeWithIdentifier:(id)arg1 ;
-(char)hasUnmingledRecordsForScopeWithIdentifier:(id)arg1 ;
-(char)resetMingledRecordsForScopeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(char)resetMingledRecordsWithScopeFilter:(id)arg1 error:(id*)arg2 ;
-(char)deleteMingledRecordsForScopeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(unsigned long long)countOfUnmingledRecords;
-(char)resetTransientRepositoryForScopeWithIdentifier:(id)arg1 error:(id*)arg2 ;
-(char)hasUnmingledRecordsWithScopeFilter:(id)arg1 ;
-(unsigned long long)maximumCountOfRecordsInBatches;
-(void)setMaximumCountOfRecordsInBatches:(unsigned long long)arg1 ;
@end

