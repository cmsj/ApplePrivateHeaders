/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:14 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Versions/A/CloudPhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CloudPhotoLibrary/CPLEngineStorage.h>
#import <libobjc.A.dylib/CPLAbstractObject.h>
#import <libobjc.A.dylib/CPLBatchExtractionStrategyStorage.h>

@protocol OS_dispatch_queue;
@class NSMutableDictionary, CPLBatchExtractionStrategy, NSString, NSObject, NSDate, CPLPlatformObject;

@interface CPLEnginePushRepository : CPLEngineStorage <CPLAbstractObject, CPLBatchExtractionStrategyStorage> {

	NSMutableDictionary* _propertiesPerClass;
	CPLBatchExtractionStrategy* _extractionStrategy;
	NSString* _lastStrategyName;
	NSObject*<OS_dispatch_queue> _uploadRateQueue;
	NSObject*<OS_dispatch_queue> _timingStatisticQueue;
	NSDate* _lastUploadRateUpdateDate;
	NSMutableDictionary* _timingStatistics;
	double _lastApproximativeUploadRate;

}

@property (nonatomic,retain) CPLBatchExtractionStrategy * extractionStrategy; 
@property (nonatomic,readonly) unsigned long long maximumResourceSizePerBatch; 
@property (nonatomic,readonly) CPLPlatformObject * platformObject; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)status;
-(unsigned long long)scopeType;
-(id)initWithEngineStore:(id)arg1 name:(id)arg2 ;
-(id)changeWithScopedIdentifier:(id)arg1 ;
-(id)allChangesWithClass:(Class)arg1 scopeIdentifier:(id)arg2 trashed:(char)arg3 ;
-(id)allChangesWithClass:(Class)arg1 scopeIdentifier:(id)arg2 changeType:(unsigned long long)arg3 ;
-(id)allNonDeletedChangesWithClass:(Class)arg1 scopeIdentifier:(id)arg2 ;
-(id)allChangesWithClass:(Class)arg1 relatedScopedIdentifier:(id)arg2 ;
-(id)allChangesWithClass:(Class)arg1 secondaryScopedIdentifier:(id)arg2 ;
-(id)allChangesWithScopeIdentifier:(id)arg1 ;
-(char)removeChange:(id)arg1 error:(id*)arg2 ;
-(char)hasChangesInScopeWithIdentifier:(id)arg1 ;
-(unsigned long long)effectiveResourceSizeToUploadForUploadIdentifier:(id)arg1 ;
-(char)deleteRecordsForScopeIndex:(long long)arg1 maxCount:(long long)arg2 deletedCount:(long long*)arg3 error:(id*)arg4 ;
-(unsigned long long)countOfChangesInScopeWithIdentifier:(id)arg1 ;
-(char)hasChangesWithScopeFilter:(id)arg1 ;
-(char)storeChange:(id)arg1 uploadIdentifier:(id)arg2 error:(id*)arg3 ;
-(id)_propertiesForChange:(id)arg1 ;
-(char)reinjectChange:(id)arg1 dequeueOrder:(long long)arg2 overwrittenRecord:(char*)arg3 error:(id*)arg4 ;
-(char)hasSomeChangeWithScopedIdentifier:(id)arg1 ;
-(char)discardChangeWithScopedIdentifier:(id)arg1 error:(id*)arg2 ;
-(char)deleteAllChangesWithError:(id*)arg1 ;
-(char)storeExtractedBatch:(id)arg1 error:(id*)arg2 ;
-(char)reinjectExtractedBatch:(id)arg1 overwrittenRecordIdentifiers:(id*)arg2 error:(id*)arg3 ;
-(id)storedExtractedBatch;
-(void)setExtractionStrategy:(CPLBatchExtractionStrategy *)arg1 ;
-(CPLBatchExtractionStrategy *)extractionStrategy;
-(char)hasChangesWithRelatedScopedIdentifier:(id)arg1 class:(Class)arg2 ;
-(void)updateApproximativeUploadRate:(double)arg1 ;
-(unsigned long long)maximumResourceSizePerBatch;
-(void)updateTimingStatisticForKey:(id)arg1 duration:(double)arg2 recordCount:(unsigned long long)arg3 error:(char)arg4 cancelled:(char)arg5 ;
-(id)_timingStatisticStatuses;
-(char)getRelatedScopedIdentifier:(id*)arg1 forRecordWithScopedIdentifier:(id)arg2 ;
@end

