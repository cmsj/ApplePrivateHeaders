/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:14 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CloudPhotoLibrary.framework/Versions/A/CloudPhotoLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CPLAbstractObject.h>
#import <libobjc.A.dylib/CPLEngineComponent.h>
#import <libobjc.A.dylib/CPLEngineSyncTaskDelegate.h>
#import <libobjc.A.dylib/CPLEngineForceSyncTaskDelegate.h>

@protocol CPLEngineStoreUserIdentifier, CPLEngineTransportSetupTask, OS_dispatch_queue;
@class CPLDerivativesFilter, CPLSyncSession, NSObject, NSError, CPLSyncStep, CPLEngineForceSyncTask, NSMutableArray, CPLPlatformObject, CPLEngineLibrary, NSString;

@interface CPLEngineSyncManager : NSObject <CPLAbstractObject, CPLEngineComponent, CPLEngineSyncTaskDelegate, CPLEngineForceSyncTaskDelegate> {

	id<CPLEngineStoreUserIdentifier> _transportUserIdentifier;
	CPLDerivativesFilter* _derivativesFilter;
	char _setupIsDone;
	char _shouldUpdateDisabledFeatures;
	char _closed;
	id<CPLEngineTransportSetupTask> _setupTask;
	/*^block*/id _closingCompletionHandler;
	CPLSyncSession* _session;
	NSObject*<OS_dispatch_queue> _lock;
	NSError* _lastError;
	CPLSyncStep* _currentStep;
	CPLEngineForceSyncTask* _currentForceSyncTask;
	CPLEngineForceSyncTask* _pendingForceSyncTask;
	unsigned long long _shouldRestartSessionFromState;
	NSMutableArray* _lastErrors;
	char _foreground;
	char _boostPriority;
	char _hasOverridenBudgets;
	char _disabledSchedulerForForceSyncTask;
	NSMutableArray* _forcedSyncHistory;
	char _shouldTryToMingleImmediately;
	CPLPlatformObject* _platformObject;
	CPLEngineLibrary* _engineLibrary;
	unsigned long long _state;

}

@property (assign,setter=_setState:,nonatomic) unsigned long long state;              //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) char shouldTryToMingleImmediately;                       //@synthesize shouldTryToMingleImmediately=_shouldTryToMingleImmediately - In the implementation block
@property (nonatomic,__weak,readonly) CPLEngineLibrary * engineLibrary;               //@synthesize engineLibrary=_engineLibrary - In the implementation block
@property (nonatomic,readonly) NSError * lastError; 
@property (nonatomic,readonly) CPLPlatformObject * platformObject;                    //@synthesize platformObject=_platformObject - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)platformImplementationProtocol;
+(id)shortDescriptionForState:(unsigned long long)arg1 ;
+(id)descriptionForState:(unsigned long long)arg1 ;
+(id)stepOrSyncTaskForState:(unsigned long long)arg1 syncManager:(id)arg2 session:(id)arg3 ;
+(unsigned)qualityOfServiceForSyncSessions;
+(unsigned)qualityOfServiceForForcedTasks;
-(unsigned long long)state;
-(void)openWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)componentName;
-(CPLPlatformObject *)platformObject;
-(NSError *)lastError;
-(void)_setState:(unsigned long long)arg1 ;
-(void)task:(id)arg1 didFinishWithError:(id)arg2 ;
-(void)getStatusWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)getStatusDictionaryWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)closeAndDeactivate:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)initWithEngineLibrary:(id)arg1 ;
-(CPLEngineLibrary *)engineLibrary;
-(void)task:(id)arg1 didProgress:(float)arg2 userInfo:(id)arg3 ;
-(void)forceSyncTaskHasBeenLaunched:(id)arg1 ;
-(void)forceSyncTaskHasBeenCancelled:(id)arg1 ;
-(void)dispatchSyncBlock:(/*^block*/id)arg1 ;
-(void)dispatchForcedTaskBlock:(/*^block*/id)arg1 ;
-(void)_dispatchAfter:(double)arg1 block:(/*^block*/id)arg2 ;
-(void)_recordForcedSyncTask:(id)arg1 discarded:(char)arg2 error:(id)arg3 ;
-(void)setErrorForSyncSessionUnlocked:(id)arg1 ;
-(void)_resetErrorForSyncSession;
-(void)_cancelAllTasksLocked;
-(void)_cancelAllTasksLockedDeferringPushTaskCancellationIfCurrentlyUploadingForeground:(char)arg1 ;
-(void)_moveAllTasksToBackgroundLocked;
-(id)_descriptionForCurrentState;
-(id)_shortDescriptionForCurrentState;
-(id)_descriptionForLaunchedTasks;
-(char)_launchNecessaryTasksForCurrentStateLocked;
-(void)_notifyEndOfSyncSession;
-(void)_advanceToNextStateLocked;
-(void)_advanceToNextStateLockedMinimalState:(unsigned long long)arg1 ;
-(void)_restartSyncSessionFromStateLocked:(unsigned long long)arg1 session:(id)arg2 cancelIfNecessary:(char)arg3 ;
-(void)startSyncSession:(id)arg1 withMinimalPhase:(unsigned long long)arg2 rewind:(char)arg3 ;
-(void)cancelCurrentSyncSession;
-(void)resetTransportUserIdentifier;
-(void)discardTransportUserIdentifier;
-(void)requestDisabledFeaturesUpdate;
-(void)setSyncSessionShouldBeForeground:(char)arg1 ;
-(void)_overrideBudgetsIfNeeded;
-(void)setBoostPriority:(char)arg1 ;
-(char)prepareAndLaunchSyncTaskUnlocked:(id)arg1 ;
-(void)_disableSchedulerForForceSyncTaskIfNecessary;
-(void)_reenableSchedulerForForceSyncTaskIfNecessary;
-(char)_checkForegroundAtLaunchForForceSyncTask;
-(void)_discardPendingForceSyncTaskWithError:(id)arg1 ;
-(void)_forceSyncTaskDidFinishWithError:(id)arg1 ;
-(void)_launchForceSyncTaskIfNecessary;
-(id)_descriptionForSetupTasks;
-(char)_launchSetupTask;
-(void)_cancelAllTasksForSetup;
-(char)_didFinishSetupTaskWithError:(id)arg1 shouldStop:(char*)arg2 ;
-(void)beginClientWork:(id)arg1 ;
-(void)endClientWork:(id)arg1 ;
-(id)lastErrorUnlocked;
-(char)shouldTryToMingleImmediately;
-(void)setShouldTryToMingleImmediately:(char)arg1 ;
@end

