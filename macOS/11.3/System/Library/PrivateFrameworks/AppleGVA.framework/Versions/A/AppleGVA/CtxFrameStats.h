/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:29 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AppleGVA.framework/Versions/A/AppleGVA
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol MTLDevice, MTLCommandQueue, MTLComputePipelineState, MTLLibrary, MTLFunction, MTLTexture, MTLBuffer, MTLCommandBuffer;
#import <AppleGVA/AppleGVA-Structs.h>
@interface CtxFrameStats : NSObject {

	int _width;
	int _height;
	int _scdBlockCountHrz;
	int _scdBlockCountVrt;
	int _missCount;
	int _hitCount;
	id<MTLDevice> _device;
	id<MTLCommandQueue> _commandQueue;
	id<MTLComputePipelineState> _pipeState;
	id<MTLLibrary> _mtlLibrary;
	id<MTLFunction> _kernel;
	id<MTLTexture> _srcCur;
	id<MTLTexture> _srcPrev;
	id<MTLBuffer> _dest;
	id<MTLBuffer> _args;
	id<MTLCommandBuffer> _commandBuffer;
	unsigned* _destHost;
	unsigned* _argsHost;
	SCD_Struct_Ct0* _texturePool;
	SCD_Struct_Ct1 _threadsPerGroup;
	SCD_Struct_Ct1 _numThreadgroups;

}

@property (retain) id<MTLDevice> device;                               //@synthesize device=_device - In the implementation block
@property (retain) id<MTLCommandQueue> commandQueue;                   //@synthesize commandQueue=_commandQueue - In the implementation block
@property (retain) id<MTLComputePipelineState> pipeState;              //@synthesize pipeState=_pipeState - In the implementation block
@property (retain) id<MTLLibrary> mtlLibrary;                          //@synthesize mtlLibrary=_mtlLibrary - In the implementation block
@property (retain) id<MTLFunction> kernel;                             //@synthesize kernel=_kernel - In the implementation block
@property (retain) id<MTLTexture> srcCur;                              //@synthesize srcCur=_srcCur - In the implementation block
@property (retain) id<MTLTexture> srcPrev;                             //@synthesize srcPrev=_srcPrev - In the implementation block
@property (retain) id<MTLBuffer> dest;                                 //@synthesize dest=_dest - In the implementation block
@property (retain) id<MTLBuffer> args;                                 //@synthesize args=_args - In the implementation block
@property (assign) SCD_Struct_Ct1 threadsPerGroup;                     //@synthesize threadsPerGroup=_threadsPerGroup - In the implementation block
@property (assign) SCD_Struct_Ct1 numThreadgroups;                     //@synthesize numThreadgroups=_numThreadgroups - In the implementation block
@property (retain) id<MTLCommandBuffer> commandBuffer;                 //@synthesize commandBuffer=_commandBuffer - In the implementation block
@property (assign) int width;                                          //@synthesize width=_width - In the implementation block
@property (assign) int height;                                         //@synthesize height=_height - In the implementation block
@property (assign) int scdBlockCountHrz;                               //@synthesize scdBlockCountHrz=_scdBlockCountHrz - In the implementation block
@property (assign) int scdBlockCountVrt;                               //@synthesize scdBlockCountVrt=_scdBlockCountVrt - In the implementation block
@property (assign) unsigned* destHost;                                 //@synthesize destHost=_destHost - In the implementation block
@property (assign) unsigned* argsHost;                                 //@synthesize argsHost=_argsHost - In the implementation block
@property (assign) SCD_Struct_Ct0* texturePool;                        //@synthesize texturePool=_texturePool - In the implementation block
@property (assign) int missCount;                                      //@synthesize missCount=_missCount - In the implementation block
@property (assign) int hitCount;                                       //@synthesize hitCount=_hitCount - In the implementation block
-(id<MTLDevice>)device;
-(id<MTLCommandBuffer>)commandBuffer;
-(id<MTLCommandQueue>)commandQueue;
-(void)setWidth:(int)arg1 ;
-(void)setHeight:(int)arg1 ;
-(int)width;
-(int)height;
-(void)setDevice:(id<MTLDevice>)arg1 ;
-(id<MTLFunction>)kernel;
-(id<MTLBuffer>)args;
-(void)setCommandBuffer:(id<MTLCommandBuffer>)arg1 ;
-(id<MTLComputePipelineState>)pipeState;
-(void)setCommandQueue:(id<MTLCommandQueue>)arg1 ;
-(int)hitCount;
-(void)setHitCount:(int)arg1 ;
-(id<MTLBuffer>)dest;
-(void)setDest:(id<MTLBuffer>)arg1 ;
-(unsigned*)destHost;
-(int)scdBlockCountHrz;
-(int)scdBlockCountVrt;
-(SCD_Struct_Ct0*)texturePool;
-(void)setSrcPrev:(id<MTLTexture>)arg1 ;
-(id<MTLTexture>)srcPrev;
-(int)missCount;
-(void)setMissCount:(int)arg1 ;
-(void)setSrcCur:(id<MTLTexture>)arg1 ;
-(id<MTLTexture>)srcCur;
-(SCD_Struct_Ct1)numThreadgroups;
-(SCD_Struct_Ct1)threadsPerGroup;
-(void)setTexturePool:(SCD_Struct_Ct0*)arg1 ;
-(void)setMtlLibrary:(id<MTLLibrary>)arg1 ;
-(id<MTLLibrary>)mtlLibrary;
-(void)setKernel:(id<MTLFunction>)arg1 ;
-(void)setScdBlockCountHrz:(int)arg1 ;
-(void)setScdBlockCountVrt:(int)arg1 ;
-(void)setArgs:(id<MTLBuffer>)arg1 ;
-(void)setDestHost:(unsigned*)arg1 ;
-(void)setArgsHost:(unsigned*)arg1 ;
-(unsigned*)argsHost;
-(void)setPipeState:(id<MTLComputePipelineState>)arg1 ;
-(void)setThreadsPerGroup:(SCD_Struct_Ct1)arg1 ;
-(void)setNumThreadgroups:(SCD_Struct_Ct1)arg1 ;
-(void*)returnDestination;
-(int)returnNumberOfBlocks;
-(void)waitForComplete;
-(void)execute:(IOSurfaceRef)arg1 prevBuffer:(IOSurfaceRef)arg2 syncMode:(BOOL)arg3 ;
-(void)deleteMetalContext;
-(id)init:(int)arg1 height:(int)arg2 metalId:(unsigned long long)arg3 metalIdIsValid:(BOOL)arg4 ;
@end

