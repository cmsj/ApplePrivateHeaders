/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:05 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SoftwareUpdateMacController.framework/Versions/A/SoftwareUpdateMacController
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/SUCoreFSMDelegate.h>
#import <libobjc.A.dylib/SUCoreUpdateDelegate.h>

@protocol OS_dispatch_queue;
@class SUCoreFSM, SUCoreLog, SUMacControllerPersistedStateManager, SUMacControllerServer, NSObject, NSString, SUMacControllerEventInfo, NSMutableArray, SUMacControllerClientRequest, SUMacControllerAccessControlContext, NSData, SUCorePolicy, SUCorePolicyMacUpdateBrain, SUMacSUCorePolicySFR, SUMacControllerDescriptor, SUCoreUpdate, SUCoreMSU, SUCoreScan, SUCoreMobileAsset, SUMacControllerBridgeOSManager, SUMacControllerRosettaManager;

@interface SUMacController : NSObject <SUCoreFSMDelegate, SUCoreUpdateDelegate> {

	char _isInternalDebug;
	int _originalQoS;
	SUCoreFSM* _stateMachine;
	SUCoreLog* _logger;
	SUMacControllerPersistedStateManager* _persistedStateManager;
	SUMacControllerServer* _sumacServer;
	NSObject*<OS_dispatch_queue> _clientResponseDispatchQueue;
	NSObject*<OS_dispatch_queue> _waitedOperationQueue;
	long long _targetPhase;
	long long _reachedPhase;
	NSString* _pendingEvent;
	SUMacControllerEventInfo* _pendingEventInfo;
	NSMutableArray* _clientCompletionsWaitingForSetupCompleted;
	NSString* _currentUUID;
	SUMacControllerClientRequest* _currentClientRequest;
	SUMacControllerAccessControlContext* _currentAccessControlContext;
	NSData* _stashedSSOToken;
	NSString* _stashedBridgeOSDownloadDirectory;
	SUCorePolicy* _chosenUpdatePolicy;
	SUCorePolicyMacUpdateBrain* _chosenUpdateBrainPolicy;
	SUMacSUCorePolicySFR* _chosenSFRPolicy;
	SUMacControllerDescriptor* _chosenDescriptor;
	SUCoreUpdate* _coreUpdate;
	SUCoreMSU* _coreMSU;
	SUCoreScan* _coreBrainScanner;
	SUCoreMobileAsset* _coreMobileAssetForUpdateBrain;
	SUCoreMobileAsset* _coreMobileAssetForSFR;
	SUMacControllerBridgeOSManager* _bridgeOSManager;
	SUMacControllerRosettaManager* _rosettaManager;

}

@property (nonatomic,retain,readonly) SUCoreLog * logger;                                                    //@synthesize logger=_logger - In the implementation block
@property (nonatomic,retain) SUCoreFSM * stateMachine;                                                       //@synthesize stateMachine=_stateMachine - In the implementation block
@property (nonatomic,retain) SUMacControllerPersistedStateManager * persistedStateManager;                   //@synthesize persistedStateManager=_persistedStateManager - In the implementation block
@property (nonatomic,__weak,readonly) SUMacControllerServer * sumacServer;                                   //@synthesize sumacServer=_sumacServer - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> clientResponseDispatchQueue;                       //@synthesize clientResponseDispatchQueue=_clientResponseDispatchQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> waitedOperationQueue;                              //@synthesize waitedOperationQueue=_waitedOperationQueue - In the implementation block
@property (assign,nonatomic) char isInternalDebug;                                                           //@synthesize isInternalDebug=_isInternalDebug - In the implementation block
@property (assign,nonatomic) long long targetPhase;                                                          //@synthesize targetPhase=_targetPhase - In the implementation block
@property (assign,nonatomic) long long reachedPhase;                                                         //@synthesize reachedPhase=_reachedPhase - In the implementation block
@property (nonatomic,retain) NSString * pendingEvent;                                                        //@synthesize pendingEvent=_pendingEvent - In the implementation block
@property (nonatomic,retain) SUMacControllerEventInfo * pendingEventInfo;                                    //@synthesize pendingEventInfo=_pendingEventInfo - In the implementation block
@property (nonatomic,retain) NSMutableArray * clientCompletionsWaitingForSetupCompleted;                     //@synthesize clientCompletionsWaitingForSetupCompleted=_clientCompletionsWaitingForSetupCompleted - In the implementation block
@property (nonatomic,retain) NSString * currentUUID;                                                         //@synthesize currentUUID=_currentUUID - In the implementation block
@property (nonatomic,retain) SUMacControllerClientRequest * currentClientRequest;                            //@synthesize currentClientRequest=_currentClientRequest - In the implementation block
@property (nonatomic,retain) SUMacControllerAccessControlContext * currentAccessControlContext;              //@synthesize currentAccessControlContext=_currentAccessControlContext - In the implementation block
@property (nonatomic,retain) NSData * stashedSSOToken;                                                       //@synthesize stashedSSOToken=_stashedSSOToken - In the implementation block
@property (nonatomic,retain) NSString * stashedBridgeOSDownloadDirectory;                                    //@synthesize stashedBridgeOSDownloadDirectory=_stashedBridgeOSDownloadDirectory - In the implementation block
@property (nonatomic,retain) SUCorePolicy * chosenUpdatePolicy;                                              //@synthesize chosenUpdatePolicy=_chosenUpdatePolicy - In the implementation block
@property (nonatomic,retain) SUCorePolicyMacUpdateBrain * chosenUpdateBrainPolicy;                           //@synthesize chosenUpdateBrainPolicy=_chosenUpdateBrainPolicy - In the implementation block
@property (nonatomic,retain) SUMacSUCorePolicySFR * chosenSFRPolicy;                                         //@synthesize chosenSFRPolicy=_chosenSFRPolicy - In the implementation block
@property (nonatomic,retain) SUMacControllerDescriptor * chosenDescriptor;                                   //@synthesize chosenDescriptor=_chosenDescriptor - In the implementation block
@property (nonatomic,retain) SUCoreUpdate * coreUpdate;                                                      //@synthesize coreUpdate=_coreUpdate - In the implementation block
@property (nonatomic,retain) SUCoreMSU * coreMSU;                                                            //@synthesize coreMSU=_coreMSU - In the implementation block
@property (nonatomic,retain) SUCoreScan * coreBrainScanner;                                                  //@synthesize coreBrainScanner=_coreBrainScanner - In the implementation block
@property (nonatomic,retain) SUCoreMobileAsset * coreMobileAssetForUpdateBrain;                              //@synthesize coreMobileAssetForUpdateBrain=_coreMobileAssetForUpdateBrain - In the implementation block
@property (nonatomic,retain) SUCoreMobileAsset * coreMobileAssetForSFR;                                      //@synthesize coreMobileAssetForSFR=_coreMobileAssetForSFR - In the implementation block
@property (nonatomic,retain) SUMacControllerBridgeOSManager * bridgeOSManager;                               //@synthesize bridgeOSManager=_bridgeOSManager - In the implementation block
@property (nonatomic,retain) SUMacControllerRosettaManager * rosettaManager;                                 //@synthesize rosettaManager=_rosettaManager - In the implementation block
@property (assign,nonatomic) int originalQoS;                                                                //@synthesize originalQoS=_originalQoS - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_getSUMacControllerStateTable;
-(id)initControllerAndStartupWithServer:(id)arg1 ;
-(void)connectionClosedForClientID:(id)arg1 ;
-(void)queryCurrentStateWithOptions:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)waitForControllerSetupCompleteWithCompletion:(/*^block*/id)arg1 ;
-(void)requestControlForClientRequest:(id)arg1 ;
-(void)releaseControlForClientRequest:(id)arg1 ;
-(void)wakeupUpdateBrainForClientRequest:(id)arg1 ;
-(void)prerequisiteCheckForClientRequest:(id)arg1 ;
-(void)downloadAndPrepareUpdateForClientRequest:(id)arg1 ;
-(void)downloadUpdateForClientRequest:(id)arg1 ;
-(void)downloadSFRUpdateForClientRequest:(id)arg1 ;
-(void)prepareUpdateForClientRequest:(id)arg1 ;
-(void)preparePackageForClientRequest:(id)arg1 ;
-(void)commitStashForClientRequest:(id)arg1 ;
-(void)applyUpdateForClientRequest:(id)arg1 ;
-(void)cancelCurrentUpdateForClientRequest:(id)arg1 ;
-(void)_registerStateMachineHandlers;
-(SUMacControllerClientRequest *)currentClientRequest;
-(void)setCurrentClientRequest:(SUMacControllerClientRequest *)arg1 ;
-(void)setRosettaManager:(SUMacControllerRosettaManager *)arg1 ;
-(SUMacControllerRosettaManager *)rosettaManager;
-(void)setBridgeOSManager:(SUMacControllerBridgeOSManager *)arg1 ;
-(SUMacControllerBridgeOSManager *)bridgeOSManager;
-(long long)reachedPhase;
-(void)setReachedPhase:(long long)arg1 ;
-(void)_adoptOptionalEventAlterations;
-(void)_setupFilesystems;
-(void)setPersistedStateManager:(SUMacControllerPersistedStateManager *)arg1 ;
-(SUMacControllerPersistedStateManager *)persistedStateManager;
-(id)_stateOverview;
-(long long)actionLoadPersisted:(id)arg1 error:(id*)arg2 ;
-(long long)actionConfigurePersistedDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionConfigurePersistedPrepare:(id)arg1 error:(id*)arg2 ;
-(long long)actionPurgeAllAssetsAtStartup:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyToBegin:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyToBeginFromStartup:(id)arg1 error:(id*)arg2 ;
-(long long)actionSetupControllerInstance:(id)arg1 error:(id*)arg2 ;
-(long long)actionReloadSUAssets:(id)arg1 error:(id*)arg2 ;
-(long long)actionUpdateReloadedSUAssets:(id)arg1 error:(id*)arg2 ;
-(long long)actionReloadSFRAssets:(id)arg1 error:(id*)arg2 ;
-(long long)actionUpdateReloadedSFRAssets:(id)arg1 error:(id*)arg2 ;
-(long long)actionReloadRosettaAsset:(id)arg1 error:(id*)arg2 ;
-(long long)actionUpdateReloadedRosettaAsset:(id)arg1 error:(id*)arg2 ;
-(long long)actionReloadBridgeOSAsset:(id)arg1 error:(id*)arg2 ;
-(long long)actionUpdateReloadedBridgeOSAsset:(id)arg1 error:(id*)arg2 ;
-(long long)actionReloadUpdateBrainAssets:(id)arg1 error:(id*)arg2 ;
-(long long)actionUpdateReloadedUpdateBrainAssets:(id)arg1 error:(id*)arg2 ;
-(long long)actionReloadAssetsFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadUpdateBrain:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadUpdateBrainProgress:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedUpdateBrain:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadUpdateBrainFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancelDownloadUpdateBrain:(id)arg1 error:(id*)arg2 ;
-(long long)actionDecideSupportingSoftware:(id)arg1 error:(id*)arg2 ;
-(long long)actionDecidePackageUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadSFRUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadSFRProgress:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedSFRUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadSFRUpdateFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancelDownloadSFR:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadRosettaUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadRosettaProgress:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRosettaUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadBridgeOSUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadBridgeOSProgress:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedBridgeOSUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadProgress:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparePackageSetup:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightWakeupSuccess:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightWakeupFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionNewPreflightPrerequisite:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightPrerequisite:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightPrerequisiteSuccess:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightPrerequisiteFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightPersonalize:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightPersonalizeFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightFDRRecovery:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightFDRRecoveryFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionSetupPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionPrepareRosettaUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRosettaUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionPrepare:(id)arg1 error:(id*)arg2 ;
-(long long)actionPrepareProgress:(id)arg1 error:(id*)arg2 ;
-(long long)actionUpdatePrepared:(id)arg1 error:(id*)arg2 ;
-(long long)actionPrepareFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionReportStashCommitted:(id)arg1 error:(id*)arg2 ;
-(long long)actionReportStashCommitFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionUpdateApplied:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyFailed:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancelCurrentState:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancelCurrentSUCoreUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionInvalidEvent:(id)arg1 error:(id*)arg2 ;
-(long long)actionControllerNotReady:(id)arg1 error:(id*)arg2 ;
-(long long)actionWaitForControllerSetup:(id)arg1 error:(id*)arg2 ;
-(long long)actionControllerSetupCompleted:(id)arg1 error:(id*)arg2 ;
-(long long)actionAdjustConfigForSFRDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionAdjustConfigForUpdateDownloaded:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionBeforeReadyRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionReadyRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreflightedRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadingRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionDownloadedRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparingRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionPreparedRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionApplyingRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionAppliedRequestCancel:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestWakeup:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestPrecheck:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestDownload:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestPrepareUpdate:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestPreparePackage:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestCommitStash:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestApply:(id)arg1 error:(id*)arg2 ;
-(long long)actionCancellingRequestCancel:(id)arg1 error:(id*)arg2 ;
-(void)_callCompletionBlockFromClientRequest:(id)arg1 withError:(id)arg2 ;
-(NSMutableArray *)clientCompletionsWaitingForSetupCompleted;
-(id)_stateSafeMakeCurrentStateDictionary;
-(NSObject*<OS_dispatch_queue>)clientResponseDispatchQueue;
-(SUMacSUCorePolicySFR *)chosenSFRPolicy;
-(SUCoreMobileAsset *)coreMobileAssetForSFR;
-(SUCorePolicy *)chosenUpdatePolicy;
-(SUCoreUpdate *)coreUpdate;
-(void)_stateSafeSetCurrentRequest:(id)arg1 ;
-(void)_stateSafeTransferControlWithEventInfo:(id)arg1 nextEvent:(id)arg2 cancellingAfter:(char)arg3 ;
-(void)_stateSafeCallCurrentRequestCompletionBlockWithError:(id)arg1 ;
-(void)_stateSafeAdjustReachedPhase:(long long)arg1 ;
-(void)_stateSafeAdjustTargetPhase:(long long)arg1 ;
-(void)_stateSafeSetPendingEvent:(id)arg1 info:(id)arg2 ;
-(id)_validateRequestEventInfo:(id)arg1 ;
-(SUMacControllerAccessControlContext *)currentAccessControlContext;
-(void)_stateSafeIssueFollowupEvent:(id)arg1 withInfo:(id)arg2 ;
-(void)_stateSafeSetNewControlFromEndStateWithEventInfo:(id)arg1 nextEvent:(id)arg2 ;
-(void)_stateSafeTransferControlWithEventInfo:(id)arg1 nextEvent:(id)arg2 ;
-(SUMacControllerDescriptor *)chosenDescriptor;
-(void)_stateSafeSwapControlWithEventInfo:(id)arg1 ;
-(void)setStashedSSOToken:(NSData *)arg1 ;
-(void)setStashedBridgeOSDownloadDirectory:(NSString *)arg1 ;
-(void)setChosenUpdatePolicy:(SUCorePolicy *)arg1 ;
-(void)setChosenUpdateBrainPolicy:(SUCorePolicyMacUpdateBrain *)arg1 ;
-(void)setChosenSFRPolicy:(SUMacSUCorePolicySFR *)arg1 ;
-(void)setChosenDescriptor:(SUMacControllerDescriptor *)arg1 ;
-(void)setCoreBrainScanner:(SUCoreScan *)arg1 ;
-(void)setCoreMobileAssetForUpdateBrain:(SUCoreMobileAsset *)arg1 ;
-(void)setCoreMobileAssetForSFR:(SUCoreMobileAsset *)arg1 ;
-(void)setCoreMSU:(SUCoreMSU *)arg1 ;
-(void)setCoreUpdate:(SUCoreUpdate *)arg1 ;
-(void)setCurrentUUID:(NSString *)arg1 ;
-(void)_stateSafeClearCurrentRequest;
-(SUMacControllerEventInfo *)pendingEventInfo;
-(void)setCurrentAccessControlContext:(SUMacControllerAccessControlContext *)arg1 ;
-(SUCoreMSU *)coreMSU;
-(NSString *)currentUUID;
-(void)_setSFRBundlePathFromDescriptor:(id)arg1 onPolicy:(id)arg2 withOverrides:(id)arg3 ;
-(void)_readyToBeginProcessPendingEventAndPost;
-(SUMacControllerServer *)sumacServer;
-(void)setClientCompletionsWaitingForSetupCompleted:(NSMutableArray *)arg1 ;
-(void)_stateSafeClearPendingEvent;
-(SUCorePolicyMacUpdateBrain *)chosenUpdateBrainPolicy;
-(SUCoreScan *)coreBrainScanner;
-(void)_startNewUpdateBrainDownloadWithEventInfo:(id)arg1 ;
-(SUCoreMobileAsset *)coreMobileAssetForUpdateBrain;
-(void)_stateSafeSetUpdateBrainPath;
-(void)_startNewDownloadWithEventInfo:(id)arg1 ;
-(void)_startNewSFRDownloadWithEventInfo:(id)arg1 ;
-(id)_getSFRBundlePathForDescriptor:(id)arg1 ;
-(id)_getBrainPathForDescriptor:(id)arg1 ;
-(void)_callCompletionBlockFromClientRequest:(id)arg1 withName:(id)arg2 withResponse:(id)arg3 withError:(id)arg4 ;
-(NSString *)stashedBridgeOSDownloadDirectory;
-(void)setOriginalQoS:(int)arg1 ;
-(int)originalQoS;
-(NSData *)stashedSSOToken;
-(char)isInternalDebug;
-(void)setPendingEventInfo:(SUMacControllerEventInfo *)arg1 ;
-(char)_stateSafeRequiresSFRUpdateUsingEventInfo:(id)arg1 ;
-(void)setClientResponseDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setWaitedOperationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setIsInternalDebug:(char)arg1 ;
-(long long)actionUnknownAction:(id)arg1 error:(id*)arg2 ;
-(long long)performAction:(id)arg1 onEvent:(id)arg2 inState:(id)arg3 withInfo:(id)arg4 nextState:(id)arg5 error:(id*)arg6 ;
-(NSObject*<OS_dispatch_queue>)waitedOperationQueue;
-(long long)targetPhase;
-(void)setTargetPhase:(long long)arg1 ;
-(long long)actionApplyUpdate:(id)arg1 error:(id*)arg2 ;
-(void)updateAssetDownloadProgress:(id)arg1 ;
-(void)updateAssetDownloadStalled:(id)arg1 ;
-(void)updateAssetDownloaded:(id)arg1 ;
-(void)updatePrepareProgress:(id)arg1 ;
-(void)updatePrepared:(id)arg1 ;
-(void)updateApplied;
-(void)applyAttemptFailed:(id)arg1 ;
-(void)updateAttemptFailed:(id)arg1 ;
-(void)updateAnomaly:(id)arg1 ;
-(void)maDownloadProgress:(id)arg1 ;
-(void)maDownloadStalled:(id)arg1 ;
-(void)maDownloaded:(id)arg1 ;
-(void)maDownloadFailed:(id)arg1 ;
-(void)maAnomaly:(id)arg1 ;
-(void)msuPersonalizePreflighted;
-(void)msuPersonalizePreflightFailed:(id)arg1 ;
-(void)msuFDRRecoveryPreflighted;
-(void)msuFDRRecoveryPreflightFailed:(id)arg1 ;
-(void)msuWakeupPreflighted;
-(void)msuWakeupPreflightFailed:(id)arg1 ;
-(void)msuPrerequisiteCheckPreflighted;
-(void)msuPrerequisiteCheckPreflightFailed:(id)arg1 ;
-(SUCoreLog *)logger;
-(SUCoreFSM *)stateMachine;
-(void)setStateMachine:(SUCoreFSM *)arg1 ;
-(void)updateCanceled;
-(void)_startupController;
-(void)setPendingEvent:(NSString *)arg1 ;
-(NSString *)pendingEvent;
@end

