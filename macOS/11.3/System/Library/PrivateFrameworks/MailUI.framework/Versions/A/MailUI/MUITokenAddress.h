/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:29 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/MailUI.framework/Versions/A/MailUI
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MailUI/MailUI-Structs.h>
#import <libobjc.A.dylib/NSMenuItemValidation.h>
#import <libobjc.A.dylib/EMBlockedSenderTokenAddress.h>
#import <libobjc.A.dylib/CNAutocompleteFetchDelegate.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol MUITokenAddressDelegate, CNCancelable;
@class CNContact, NSString, NSTokenField, NSTextView, CNGroup, ABGroup, CNAutocompleteStore, NSArray, NSMenu;

@interface MUITokenAddress : NSObject <NSMenuItemValidation, EMBlockedSenderTokenAddress, CNAutocompleteFetchDelegate, NSCopying> {

	char _shouldRefreshNameIfPossible;
	id<MUITokenAddressDelegate> _delegate;
	NSTokenField* _tokenField;
	NSTextView* _textView;
	CNContact* _contact;
	CNGroup* _group;
	ABGroup* _abGroup;
	NSString* _recentRawAddress;
	NSString* _recentName;
	NSString* _currentRawAddress;
	NSString* _currentName;
	long long _tokenStyle;
	id<CNCancelable> _autocompletionSearchRequest;
	CNAutocompleteStore* _autocompleteStore;

}

@property (assign,nonatomic) char shouldRefreshNameIfPossible;                          //@synthesize shouldRefreshNameIfPossible=_shouldRefreshNameIfPossible - In the implementation block
@property (nonatomic,retain) id<CNCancelable> autocompletionSearchRequest;              //@synthesize autocompletionSearchRequest=_autocompletionSearchRequest - In the implementation block
@property (nonatomic,readonly) CNAutocompleteStore * autocompleteStore;                 //@synthesize autocompleteStore=_autocompleteStore - In the implementation block
@property (nonatomic,retain) id<MUITokenAddressDelegate> delegate;                      //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) NSTokenField * tokenField;                          //@synthesize tokenField=_tokenField - In the implementation block
@property (assign,nonatomic,__weak) NSTextView * textView;                              //@synthesize textView=_textView - In the implementation block
@property (nonatomic,retain) CNContact * contact;                                       //@synthesize contact=_contact - In the implementation block
@property (nonatomic,retain) CNGroup * group;                                           //@synthesize group=_group - In the implementation block
@property (nonatomic,retain) ABGroup * abGroup;                                         //@synthesize abGroup=_abGroup - In the implementation block
@property (nonatomic,readonly) char hasGroup; 
@property (nonatomic,copy) NSString * recentRawAddress;                                 //@synthesize recentRawAddress=_recentRawAddress - In the implementation block
@property (nonatomic,copy) NSString * recentName;                                       //@synthesize recentName=_recentName - In the implementation block
@property (nonatomic,copy) NSString * currentRawAddress;                                //@synthesize currentRawAddress=_currentRawAddress - In the implementation block
@property (nonatomic,copy) NSString * currentName;                                      //@synthesize currentName=_currentName - In the implementation block
@property (assign,nonatomic) long long tokenStyle;                                      //@synthesize tokenStyle=_tokenStyle - In the implementation block
@property (nonatomic,readonly) char isExternal; 
@property (nonatomic,copy,readonly) NSString * formattedAddress; 
@property (nonatomic,copy,readonly) NSArray * writablePasteboardTypes; 
@property (nonatomic,readonly) NSMenu * menu; 
@property (nonatomic,copy,readonly) NSArray * expandedTokens; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_contactsCache;
+(void)writeTokens:(id)arg1 toPasteboard:(id)arg2 ;
+(id)tokenWithAddress:(id)arg1 isRecent:(char)arg2 contact:(id)arg3 ;
+(char)addressIsExternal:(id)arg1 ;
+(id)tokenWithAddress:(id)arg1 ;
+(id)keyPathsForValuesAffectingIsExternal;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)dealloc;
-(id)init;
-(id<MUITokenAddressDelegate>)delegate;
-(void)setDelegate:(id<MUITokenAddressDelegate>)arg1 ;
-(void)setGroup:(CNGroup *)arg1 ;
-(NSMenu *)menu;
-(char)isExternal;
-(CNGroup *)group;
-(char)validateMenuItem:(id)arg1 ;
-(void)setTextView:(NSTextView *)arg1 ;
-(NSTextView *)textView;
-(void)writeToPasteboard:(id)arg1 ;
-(NSArray *)writablePasteboardTypes;
-(id)_groupName;
-(long long)tokenStyle;
-(void)setTokenStyle:(long long)arg1 ;
-(CNContact *)contact;
-(void)setContact:(CNContact *)arg1 ;
-(void)_contactsChanged:(id)arg1 ;
-(void)_refreshToken;
-(NSString *)formattedAddress;
-(char)hasGroup;
-(CNAutocompleteStore *)autocompleteStore;
-(void)setAutocompletionSearchRequest:(id<CNCancelable>)arg1 ;
-(id<CNCancelable>)autocompletionSearchRequest;
-(void)autocompleteFetch:(id)arg1 didReceiveResults:(id)arg2 ;
-(void)autocompleteFetch:(id)arg1 didFailWithError:(id)arg2 ;
-(NSTokenField *)tokenField;
-(void)setTokenField:(NSTokenField *)arg1 ;
-(void)openInContacts:(id)arg1 ;
-(void)addToContacts:(id)arg1 ;
-(NSString *)currentRawAddress;
-(void)blockContact:(id)arg1 ;
-(void)unblockContact:(id)arg1 ;
-(id)initWithAddress:(id)arg1 isRecent:(char)arg2 contact:(id)arg3 ;
-(void)getRecordFromAddress;
-(NSArray *)expandedTokens;
-(id)initWithCNGroup:(id)arg1 ;
-(id)displayStringWithMode:(long long)arg1 ;
-(id)initWithABGroup:(id)arg1 ;
-(void)_getAddressAndNameFromRecord;
-(void)_muiTokenAddressCommonInit;
-(NSString *)currentName;
-(NSString *)recentName;
-(NSString *)recentRawAddress;
-(ABGroup *)abGroup;
-(id)_formattedCurrentAddress;
-(id)_contactNameFormatter;
-(id)suggestionWithGenius:(id)arg1 ;
-(id)_suggestionSerializedRepresentation;
-(char)_writeToPasteboard:(id)arg1 type:(id)arg2 forceAddressOnly:(char)arg3 ;
-(void)_writeToPasteboard:(id)arg1 forceAddressOnly:(char)arg2 ;
-(void)_getRecordFromAddress;
-(id)_contactForEmail:(id)arg1 ;
-(char)shouldRefreshNameIfPossible;
-(void)setCurrentName:(NSString *)arg1 ;
-(void)setShouldRefreshNameIfPossible:(char)arg1 ;
-(void)setRecentRawAddress:(NSString *)arg1 ;
-(void)setRecentName:(NSString *)arg1 ;
-(id)_contactsOperationQueue;
-(void)setCurrentRawAddress:(NSString *)arg1 ;
-(void)changeAddress:(id)arg1 ;
-(void)editAddress:(id)arg1 ;
-(void)removeAddress:(id)arg1 ;
-(void)copyAddressToClipboard:(id)arg1 ;
-(void)addToVIPSenders:(id)arg1 ;
-(void)removeFromVIPSenders:(id)arg1 ;
-(void)openNewMessage:(id)arg1 ;
-(void)expandGroupAddress:(id)arg1 ;
-(void)removeFromAddressHistory:(id)arg1 ;
-(void)openPersonCard:(id)arg1 ;
-(void)searchForToken:(id)arg1 ;
-(id)_tokenForTokenAddress:(id)arg1 ;
-(id)_formattedRecentAddress;
-(id)toolTipWithMode:(long long)arg1 ;
-(char)writeToPasteboard:(id)arg1 type:(id)arg2 ;
-(void)setAbGroup:(ABGroup *)arg1 ;
@end

