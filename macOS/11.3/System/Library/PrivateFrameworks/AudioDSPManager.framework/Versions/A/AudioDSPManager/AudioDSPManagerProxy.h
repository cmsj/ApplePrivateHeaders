/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:23 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioDSPManager.framework/Versions/A/AudioDSPManager
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioDSPManager/AudioDSPManager-Structs.h>
#import <AudioDSPManager/AudioHistoryObjectDelegate.h>
#import <libobjc.A.dylib/dspd_DSPDelegate.h>

@protocol AudioDSPManagerProxyDelegate;
@class AudioDSPManager, AudioHistoryObject, NSString;

@interface AudioDSPManagerProxy : NSObject <AudioHistoryObjectDelegate, dspd_DSPDelegate> {

	AudioDSPManager* _audioDSPManager;
	AudioHistoryObject* _audioHistory;
	mutex _mutex;
	id<AudioDSPManagerProxyDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<AudioDSPManagerProxyDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) vector<dspd::PortRecord<float> scalarVolumeRecords; 
@property (nonatomic,readonly) vector<dspd::PortRecord<bool> muteRecords; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)deserializeStateForAudioHistorySystem:(id)arg1 fromData:(id)arg2 ;
-(id)init;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(id<AudioDSPManagerProxyDelegate>)delegate;
-(void)setDelegate:(id<AudioDSPManagerProxyDelegate>)arg1 ;
-(expected<bool, std::__1::error_code>*)levelControlSettable:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(expected<float, std::__1::error_code>*)scalarVolume:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(error_code*)setScalarVolume:(unsigned long long)arg1 element:(unsigned)arg2 scalarVolume:(float)arg3 ;
-(expected<float, std::__1::error_code>*)decibelVolume:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(error_code*)setDecibelVolume:(unsigned long long)arg1 element:(unsigned)arg2 decibelVolume:(float)arg3 ;
-(expected<std::__1::tuple<double, double>, std::__1::error_code>*)decibelVolumeRange:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(expected<float, std::__1::error_code>*)convertScalarToDecibels:(unsigned long long)arg1 element:(unsigned)arg2 scalarVolume:(float)arg3 ;
-(expected<float, std::__1::error_code>*)convertDecibelsToScalar:(unsigned long long)arg1 element:(unsigned)arg2 decibelVolume:(float)arg3 ;
-(error_code*)setLevelControlValueChangeObserver:(unsigned long long)arg1 element:(unsigned)arg2 observer:(function<void ()>*)arg3 ;
-(expected<bool, std::__1::error_code>*)muteControlSettable:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(expected<bool, std::__1::error_code>*)isMuted:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(error_code*)setMuted:(unsigned long long)arg1 element:(unsigned)arg2 isMuted:(BOOL)arg3 ;
-(error_code*)setMuteControlValueChangeObserver:(unsigned long long)arg1 element:(unsigned)arg2 observer:(function<void ()>*)arg3 ;
-(expected<bool, std::__1::error_code>*)stereoPanControlSettable:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(expected<float, std::__1::error_code>*)stereoPan:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(error_code*)setStereoPan:(unsigned long long)arg1 element:(unsigned)arg2 stereoPan:(float)arg3 ;
-(expected<std::__1::tuple<unsigned int, unsigned int>, std::__1::error_code>*)stereoPanChannels:(unsigned long long)arg1 element:(unsigned)arg2 ;
-(error_code*)setStereoPanControlValueChangeObserver:(unsigned long long)arg1 element:(unsigned)arg2 observer:(function<void ()>*)arg3 ;
-(error_code*)setHardwareVolumeDelegate:(id)arg1 ;
-(error_code*)setGraphVolumeDelegate:(id)arg1 ;
-(id)activationChangeRequestWithSession:(unsigned)arg1 ;
-(id)deactivationChangeRequestWithSession:(unsigned)arg1 ;
-(id)supportedPublicStreamFormatRequest;
-(expected<dspd::NegotiateResponse, std::__1::error_code>*)negotiateConfigurationChange:(id)arg1 ;
-(expected<dspd::NegotiateResponse, std::__1::error_code>*)negotiateConfigurationChanges:(const vector<id<dspd_ConfigurationChangeRequest>, std::__1::allocator<id<dspd_ConfigurationChangeRequest>>>*)arg1 ;
-(expected<dspd::AdaptResponse, std::__1::error_code>*)adaptToConfigurationChange:(id)arg1 ;
-(expected<dspd::AdaptResponse, std::__1::error_code>*)adaptToConfigurationChanges:(const vector<id<dspd_ConfigurationChangeRequest>, std::__1::allocator<id<dspd_ConfigurationChangeRequest>>>*)arg1 ;
-(expected<void, std::__1::error_code>*)configurationChangeComplete:(int)arg1 dspMutation:(function<void (std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>)>*)arg2 ;
-(expected<dspd::SimulateResponse, std::__1::error_code>*)simulateConfigurationChange:(id)arg1 ;
-(expected<dspd::SimulateResponse, std::__1::error_code>*)simulateConfigurationChanges:(const vector<id<dspd_ConfigurationChangeRequest>, std::__1::allocator<id<dspd_ConfigurationChangeRequest>>>*)arg1 ;
-(expected<std::__1::vector<dspd::PublicFormatMap, std::__1::allocator<dspd::PublicFormatMap>>, std::__1::error_code>*)supportedPublicStreamFormats:(id)arg1 ;
-(error_code*)setHardwareVolumeCapabilities:(unsigned long long)arg1 portType:(unsigned)arg2 volumeCapabilities:(VolumeCapabilites*)arg3 ;
-(expected<dspd::VolumeCapabilites, std::__1::error_code>*)volumeCapabilities:(unsigned long long)arg1 ;
-(expected<float, std::__1::error_code>*)virtualMasterVolume:(unsigned long long)arg1 ;
-(error_code*)setVirtualMasterVolume:(unsigned long long)arg1 scalarVolume:(float)arg2 ;
-(expected<float, std::__1::error_code>*)virtualMasterStereoPan:(unsigned long long)arg1 ;
-(error_code*)setVirtualMasterStereoPan:(unsigned long long)arg1 stereoPan:(float)arg2 ;
-(vector<dspd::VolumeUpdateResult, std::__1::allocator<dspd::VolumeUpdateResult>>*)setScalarVolumeRecords:(vector<dspd::PortRecord<float>)arg1 ;
-(vector<dspd::VolumeUpdateResult, std::__1::allocator<dspd::VolumeUpdateResult>>*)setMuteRecords:(vector<dspd::PortRecord<bool>)arg1 ;
-(error_code*)fadeVolumeLevel:(float)arg1 ioControllerID:(unsigned long long)arg2 direction:(unsigned char)arg3 portID:(optional<unsigned long long>)arg4 duration:(duration<long long, std::__1::ratio<1, 1000>>)arg5 completionHandler:(function<void (std::__1::error_code)>*)arg6 ;
-(vector<dspd::PortRecord<float>)scalarVolumeRecords;
-(vector<dspd::PortRecord<bool>)muteRecords;
-(id)serializeStateForAudioHistorySystem:(id)arg1 ;
-(char)shouldSerializeStateForAudioHistorySystem:(id)arg1 ;
-(void)simulateAudioHistoryEventForSystem:(id)arg1 withType:(id)arg2 andPayload:(id)arg3 ;
-(id)initWithAudioDSPManager:(id)arg1 ;
@end

