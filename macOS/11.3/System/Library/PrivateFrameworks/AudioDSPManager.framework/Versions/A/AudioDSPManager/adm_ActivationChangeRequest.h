/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:23 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioDSPManager.framework/Versions/A/AudioDSPManager
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioDSPManager/AudioDSPManager-Structs.h>
#import <AudioDSPManager/adm_ConfigurationChangeRequest.h>
#import <libobjc.A.dylib/adm_JSONSerializable.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/dspd_ActivationChangeRequest.h>

@class NSString;

@interface adm_ActivationChangeRequest : adm_ConfigurationChangeRequest <adm_JSONSerializable, NSSecureCoding, dspd_ActivationChangeRequest> {

	StringRef* category;
	StringRef* mode;
	vector<dspd::PortDescription, std::__1::allocator<dspd::PortDescription>>* _portDescriptions;
	vector<dspd::StreamDescription, std::__1::allocator<dspd::StreamDescription>>* _streamDescriptions;
	vector<dspd::DeviceDescription, std::__1::allocator<dspd::DeviceDescription>>* _deviceDescriptions;
	vector<dspd::IOControllerDescription, std::__1::allocator<dspd::IOControllerDescription>>* _ioControllerDescriptions;
	optional<aura::InitiationTriggerSpecification>* initiationTrigger;

}

@property (assign,nonatomic) StringRef* category; 
@property (assign,nonatomic) StringRef* mode; 
@property (assign,nonatomic) vector<dspd::PortDescription portDescriptions;                                  //@synthesize portDescriptions=_portDescriptions - In the implementation block
@property (assign,nonatomic) vector<dspd::StreamDescription streamDescriptions;                              //@synthesize streamDescriptions=_streamDescriptions - In the implementation block
@property (assign,nonatomic) vector<dspd::DeviceDescription deviceDescriptions;                              //@synthesize deviceDescriptions=_deviceDescriptions - In the implementation block
@property (assign,nonatomic) vector<dspd::IOControllerDescription ioControllerDescriptions;                  //@synthesize ioControllerDescriptions=_ioControllerDescriptions - In the implementation block
@property (assign,nonatomic) optional<aura::InitiationTriggerSpecification>* initiationTrigger; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) unsigned session; 
+(char)supportsSecureCoding;
-(char)isEqual:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)setMode:(StringRef*)arg1 ;
-(StringRef*)category;
-(void)setCategory:(StringRef*)arg1 ;
-(StringRef*)mode;
-(id)initWithSession:(unsigned)arg1 ;
-(vector<dspd::PortDescription)portDescriptions;
-(vector<dspd::DeviceDescription)deviceDescriptions;
-(vector<dspd::StreamDescription)streamDescriptions;
-(vector<dspd::IOControllerDescription)ioControllerDescriptions;
-(void)setPortDescriptions:(vector<dspd::PortDescription)arg1 ;
-(void)setDeviceDescriptions:(vector<dspd::DeviceDescription)arg1 ;
-(void)setStreamDescriptions:(vector<dspd::StreamDescription)arg1 ;
-(void)setIoControllerDescriptions:(vector<dspd::IOControllerDescription)arg1 ;
-(optional<aura::InitiationTriggerSpecification>*)initiationTrigger;
-(void)setInitiationTrigger:(optional<aura::InitiationTriggerSpecification>*)arg1 ;
-(basic_json<std::map, std::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, bool, long long, unsigned long long, double, std::allocator, adl_serializer>*)adm_toJSON;
@end

