/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:23 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AudioDSPManager.framework/Versions/A/AudioDSPManager
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AudioDSPManager/AudioDSPManager-Structs.h>
#import <libobjc.A.dylib/RPBHostDelegate.h>
#import <libobjc.A.dylib/RPBServerListener.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/DSPModuleControlDelegate.h>

@protocol OS_dispatch_queue;
@class NSObject, GraphState, SoftwareVolumeManager, DatabaseController, ADNotificationBusStation, RPBHost, NSString;

@interface GraphManager : NSObject <RPBHostDelegate, RPBServerListener, NSSecureCoding, DSPModuleControlDelegate> {

	NSObject*<OS_dispatch_queue> _dispatchQueue;
	GraphState* _activeState;
	list<GraphState *, std::__1::allocator<GraphState *>>* _toDelete;
	unique_ptr<adm::graph::GraphBuilder, std::__1::default_delete<adm::graph::GraphBuilder>>* _graphBuilder;
	shared_ptr<adm::graph::ParameterStorageInterface>* _graphParameterStorage;
	shared_ptr<adm::graph::PropertyStorageInterface>* _graphPropertyStorage;
	ProxyFactory* _vpProxyFactory;
	SoftwareVolumeManager* _softwareVolumeManager;
	DatabaseController* _databaseController;
	KnobController* _knobController;
	unordered_map<unsigned long long, std::__1::vector<adm::DSPModuleParamID, std::__1::allocator<adm::DSPModuleParamID>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<adm::DSPModuleParamID, std::__1::allocator<adm::DSPModuleParamID>>>>>* _ioControllerToParamMap;
	unordered_map<unsigned long long, std::__1::unordered_map<adm::DSPModuleParamID, unsigned int, std::__1::hash<adm::DSPModuleParamID>, std::__1::equal_to<adm::DSPModuleParamID>, std::__1::allocator<std::__1::pair<const adm::DSPModuleParamID, unsigned int>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<adm::DSPModuleParamID, unsigned int, std::__1::hash<adm::DSPModuleParamID>, std::__1::equal_to<adm::DSPModuleParamID>, std::__1::allocator<std::__1::pair<const adm::DSPModuleParamID, unsigned int>>>>>>* _knobIDMap;
	unsigned long long _dspMutationRequestState;
	ADNotificationBusStation* _busStation;
	function<void (std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>)>* _dspMutation;

}

@property (readonly) RPBHost * remoteProcessingBlockHost; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) ADNotificationBusStation * busStation;                                //@synthesize busStation=_busStation - In the implementation block
@property (assign,nonatomic) function<void (std::__1::vector<unsigned long long dspMutation;              //@synthesize dspMutation=_dspMutation - In the implementation block
@property (assign,nonatomic) unsigned long long dspMutationRequestState;                                  //@synthesize dspMutationRequestState=_dspMutationRequestState - In the implementation block
@property (nonatomic,readonly) unsigned liveGraphCount; 
+(char)supportsSecureCoding;
+(void)registerInternalComponents;
-(void)dealloc;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)unregisterClient:(unsigned long long)arg1 ;
-(ADNotificationBusStation *)busStation;
-(void)registerClient:(unsigned long long)arg1 moduleParams:(const vector<adm::DSPModuleParamID, std::__1::allocator<adm::DSPModuleParamID>>*)arg2 ;
-(char)setParameter:(unsigned)arg1 value:(float)arg2 ioControllerID:(unsigned long long)arg3 ;
-(void)makeMutationRequest:(const vector<unsigned long long, std::__1::allocator<unsigned long long>>*)arg1 ;
-(id)initWithDatabaseController:(id)arg1 volumeManager:(id)arg2 ;
-(unsigned)liveGraphCount;
-(id)createAdaptTransactionWithRequests:(id)arg1 dspModuleSettings:(id)arg2 notificationBusStation:(id)arg3 fileCaptureOptions:(unsigned long long)arg4 error:(id*)arg5 ;
-(void)applyGraphStatesTransition:(id)arg1 withOriginalGraph:(id)arg2 ;
-(void)applyAdaptTransaction:(id)arg1 withConfigRequests:(id)arg2 ;
-(void)visitGraphWithBlock:(/*^block*/id)arg1 ;
-(void)visitGraphWithBlock:(/*^block*/id)arg1 asynchronously:(char)arg2 ;
-(void)updateModuleControlWithADMGraph:(Graph*)arg1 ;
-(void)cleanupObsoleteGraphs;
-(function<void (std::__1::vector<unsigned long long)dspMutation;
-(void)setDspMutation:(function<void (std::__1::vector<unsigned long long)arg1 ;
-(unsigned long long)dspMutationRequestState;
-(void)setDspMutationRequestState:(unsigned long long)arg1 ;
-(void)setBusStation:(ADNotificationBusStation *)arg1 ;
-(void)remoteProcessingBlockServerDidStartRunning:(id)arg1 ;
-(void)remoteProcessingBlockServerDidStopRunning:(id)arg1 ;
-(RPBHost *)remoteProcessingBlockHost;
-(void)tearDownRemoteProcessingBlockHost;
-(void)setRemoteProcessingBlockHost:(RPBHost *)arg1 ;
-(void)connectToRemoteProcessingBlock;
-(void)disconnectFromRemoteProcessingBlock;
-(void)setUpRemoteProcessingBlockHostForGraph:(const Graph*)arg1 ;
@end

