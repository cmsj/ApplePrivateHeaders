/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class CNCache, CNQueue, CNPersistentStoreCoordinatorFactory, CNPersistentStoreCoordinatorUpdater;

@interface CNPersistentStoreCoordinatorCache : NSObject {

	CNCache* _cache;
	CNQueue* _cacheQueue;
	CNPersistentStoreCoordinatorFactory* _coordinatorFactory;
	CNPersistentStoreCoordinatorUpdater* _coordinatorUpdater;

}

@property (nonatomic,readonly) CNCache * cache;                                                       //@synthesize cache=_cache - In the implementation block
@property (nonatomic,readonly) CNQueue * cacheQueue;                                                  //@synthesize cacheQueue=_cacheQueue - In the implementation block
@property (nonatomic,readonly) CNPersistentStoreCoordinatorFactory * coordinatorFactory;              //@synthesize coordinatorFactory=_coordinatorFactory - In the implementation block
@property (nonatomic,readonly) CNPersistentStoreCoordinatorUpdater * coordinatorUpdater;              //@synthesize coordinatorUpdater=_coordinatorUpdater - In the implementation block
+(id)sharedInstance;
+(id)_cacheKeyForAccountCollection:(id)arg1 ;
+(id)pscKeyForStoreDescription:(id)arg1 ;
+(id)cacheKeyForAllSources;
-(CNCache *)cache;
-(id)initReadOnly:(char)arg1 ;
-(id)_cacheEntryForKey:(id)arg1 ;
-(id)_pscResultFromCacheEntry:(id)arg1 withStoreDescriptionKey:(id)arg2 ;
-(void)_updateCacheEntry:(id)arg1 withResult:(id)arg2 accountCollection:(id)arg3 storeDescriptionKey:(id)arg4 ;
-(id)coordinatorWithCacheKey:(id)arg1 storeDescription:(id)arg2 createIfNeeded:(char)arg3 ;
-(id)_cacheEntryForKey:(id)arg1 createIfNeeded:(char)arg2 ;
-(CNQueue *)cacheQueue;
-(id)allCacheKeys;
-(id)coordinatorForSourcesWithAccountCollection:(id)arg1 ;
-(id)coordinatorWithCacheKey:(id)arg1 storeDescription:(id)arg2 ;
-(char)addAllPersistentStoresAndReturnIsMainDatabasePristine;
-(CNPersistentStoreCoordinatorFactory *)coordinatorFactory;
-(CNPersistentStoreCoordinatorUpdater *)coordinatorUpdater;
@end

