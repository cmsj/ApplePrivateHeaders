/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ContactsPersistence/ContactsPersistence-Structs.h>
#import <ContactsPersistence/CNCDContact.h>
#import <libobjc.A.dylib/ABCDContactFallbackAlternateName.h>

@class NSString;

@interface ABCDContact : CNCDContact <ABCDContactFallbackAlternateName>

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)addMappedKeysToDictionary:(id)arg1 mappedEntities:(id)arg2 mappedEntitiesMainKeys:(id)arg3 entityWithValueConverter:(CFDictionaryRef)arg4 valueWithEntityConverter:(CFDictionaryRef)arg5 converterKeys:(id)arg6 ;
+(id)predicateForLinkId:(id)arg1 ;
+(id)makeLinkIdentifier;
+(id)keyPathsForValuesAffectingContentCellObject;
+(id)keyForProperty:(id)arg1 entityName:(id*)arg2 entityKey:(id*)arg3 entityWithValueSel:(SEL*)arg4 valueWithEntitySel:(SEL*)arg5 ;
+(id)metadataType;
+(id)addressConverterKeyMappings;
+(id)messagingAddressConverterKeyMappings;
+(id)keyPathsForValuesAffectingCompleteName;
+(id)keyPathsForValuesAffectingCompletePhoneticName;
-(NSString *)description;
-(id)valueForKey:(id)arg1 withEntityName:(id)arg2 entityKey:(id)arg3 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 withEntityName:(id)arg3 entityKey:(id)arg4 ;
-(id)fallbackAlternateName;
-(char)isDataCachedForImageReference:(id)arg1 ;
-(char)nts_SetValue:(id)arg1 forProperty:(id)arg2 record:(id)arg3 ;
-(void)importContact:(id)arg1 ;
-(id)contentCellObject;
-(void)mergeContact:(id)arg1 ;
-(id)XMLRepresentation;
-(void)applyValues:(id)arg1 toAddressEntity:(id)arg2 ;
-(id)addressValueWithEntity:(id)arg1 ;
-(void)applyValues:(id)arg1 toSocialProfileEntity:(id)arg2 ;
-(id)socialProfileValueWithEntity:(id)arg1 ;
-(void)applyValues:(id)arg1 toMessagingAddressEntity:(id)arg2 ;
-(id)messagingAddressValueWithEntity:(id)arg1 ;
-(id)nonNullValueForKey:(id)arg1 inDictionary:(id)arg2 ;
-(id)addressEntityWithValue:(id)arg1 ;
-(id)socialProfileEntityWithValue:(id)arg1 ;
-(id)createFirstLastSorting:(char)arg1 part1:(char)arg2 forPerson:(id)arg3 ;
-(id)createAlternateNameForPerson:(id)arg1 ;
-(id)linkedContacts;
-(void)importContact:(id)arg1 replaceValues:(char)arg2 ;
-(void)mergeParentGroupsFromContact:(id)arg1 ;
-(void)importNoteFromContact:(id)arg1 replaceValues:(char)arg2 ;
-(void)importAttribute:(id)arg1 fromContact:(id)arg2 ;
-(void)importDisplayFlagsFromContact:(id)arg1 ;
-(void)importSingleValueRelationshipProperty:(id)arg1 fromContact:(id)arg2 replaceValues:(char)arg3 ;
-(void)importRelatedProperty:(id)arg1 fromContact:(id)arg2 replaceValues:(char)arg3 ;
-(void)importUnknownProperties:(id)arg1 ;
-(void)importPhotoFromContact:(id)arg1 ;
-(id)valueToImportForKey:(id)arg1 ;
-(void)importValue:(id)arg1 forKeyPath:(id)arg2 ;
-(void)appendNote:(id)arg1 ;
-(char)shouldUsePrimitivesToSetValueForKey:(id)arg1 ;
-(char)isPeerValue:(id)arg1 equalTo:(id)arg2 ;
-(id)valueKeyPathsForRelationshipWithName:(id)arg1 ;
-(unsigned long long)indexOfObject:(id)arg1 inArray:(id)arg2 equalityTest:(/*^block*/id)arg3 ;
-(id)findPeer:(id)arg1 withValuesForKeys:(id)arg2 ;
-(id)findPeer:(id)arg1 withLabel:(id)arg2 test:(/*^block*/id)arg3 ;
-(void)importPhotoKind:(id)arg1 fromContact:(id)arg2 ;
-(void)_setMultiValueProperty:(id)arg1 forEntityName:(id)arg2 valueKey:(id)arg3 ;
-(void)_setMultiValue:(id)arg1 forEntityName:(id)arg2 valueKey:(id)arg3 ;
-(id)orderedNameTokensWithFirstNameFirstTokens:(id)arg1 lastNameFirstTokens:(id)arg2 ;
-(id)orderedTokensForCompleteName;
-(id)completeNameWithTokens:(id)arg1 ;
-(id)orderedTokensForCompletePhoneticName;
-(id)expandedSelectionStringWithContext:(id)arg1 ;
-(void)populateUsingDictionary:(id)arg1 ;
-(id)completeName;
-(void)setCompleteName:(id)arg1 ;
-(id)completePhoneticName;
-(void)setCompletePhoneticName:(id)arg1 ;
-(id)nameWithFormatter:(id)arg1 rangeOfSortingSubstring:(NSRange*)arg2 ;
-(unsigned long long)nameOrderWithFormatter:(id)arg1 ;
-(id)companyNameWithFormatter:(id)arg1 ;
-(id)firstNameWithFormatter:(id)arg1 ;
-(id)middleNameWithFormatter:(id)arg1 ;
-(id)lastNameWithFormatter:(id)arg1 ;
-(id)nameDelimiter;
-(id)_firstAvailableValueForRelationship:(id)arg1 key:(id)arg2 ;
-(id)joinedName;
@end

