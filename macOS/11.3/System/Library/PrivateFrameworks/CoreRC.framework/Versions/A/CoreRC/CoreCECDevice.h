/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:47 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreRC.framework/Versions/A/CoreRC
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreRC/CoreRC-Structs.h>
#import <CoreRC/CoreRCDevice.h>

@class NSDictionary;

@interface CoreCECDevice : CoreRCDevice {

	unsigned char _logicalAddress;
	char _isActiveSource;
	char _systemAudioControlEnabled;
	char _audioReturnChannelControlEnabled;
	char _audioMuteStatus;
	unsigned long long _physicalAddress;
	unsigned long long _deviceType;
	unsigned long long _cecVersion;
	unsigned long long _vendorID;
	unsigned long long _allDeviceTypes;
	NSDictionary* _rcProfile;
	unsigned long long _powerStatus;
	unsigned long long _deckStatus;
	unsigned long long _audioVolumeStatus;
	NSDictionary* _audioFormats;
	unsigned long long _audioFormatsCount;
	unsigned long long _deviceFeatures;
	unsigned long long _knownDeviceFeatures;

}

@property (assign,nonatomic) unsigned char logicalAddress;                        //@synthesize logicalAddress=_logicalAddress - In the implementation block
@property (assign,nonatomic) unsigned long long physicalAddress;                  //@synthesize physicalAddress=_physicalAddress - In the implementation block
@property (assign,nonatomic) unsigned long long deviceType;                       //@synthesize deviceType=_deviceType - In the implementation block
@property (assign,nonatomic) unsigned long long cecVersion;                       //@synthesize cecVersion=_cecVersion - In the implementation block
@property (assign,nonatomic) unsigned long long vendorID;                         //@synthesize vendorID=_vendorID - In the implementation block
@property (assign,nonatomic) unsigned long long powerStatus;                      //@synthesize powerStatus=_powerStatus - In the implementation block
@property (assign,nonatomic) unsigned long long deckStatus;                       //@synthesize deckStatus=_deckStatus - In the implementation block
@property (assign,nonatomic) unsigned long long allDeviceTypes;                   //@synthesize allDeviceTypes=_allDeviceTypes - In the implementation block
@property (assign,nonatomic) unsigned long long deviceFeatures;                   //@synthesize deviceFeatures=_deviceFeatures - In the implementation block
@property (assign,nonatomic) unsigned long long knownDeviceFeatures;              //@synthesize knownDeviceFeatures=_knownDeviceFeatures - In the implementation block
@property (nonatomic,copy) NSDictionary * rcProfile;                              //@synthesize rcProfile=_rcProfile - In the implementation block
@property (assign,nonatomic) char audioReturnChannelControlEnabled;               //@synthesize audioReturnChannelControlEnabled=_audioReturnChannelControlEnabled - In the implementation block
@property (assign,nonatomic) unsigned long long audioVolumeStatus;                //@synthesize audioVolumeStatus=_audioVolumeStatus - In the implementation block
@property (assign,nonatomic) char audioMuteStatus;                                //@synthesize audioMuteStatus=_audioMuteStatus - In the implementation block
@property (nonatomic,copy) NSDictionary * audioFormats;                           //@synthesize audioFormats=_audioFormats - In the implementation block
@property (assign,nonatomic) unsigned long long audioFormatsCount;                //@synthesize audioFormatsCount=_audioFormatsCount - In the implementation block
@property (assign,nonatomic) char isActiveSource;                                 //@synthesize isActiveSource=_isActiveSource - In the implementation block
@property (nonatomic,readonly) char isUnregistered; 
@property (nonatomic,readonly) char systemAudioControlEnabled;                    //@synthesize systemAudioControlEnabled=_systemAudioControlEnabled - In the implementation block
@property (nonatomic,readonly) char isCEC2Device; 
+(char)supportsSecureCoding;
-(void)dealloc;
-(id)description;
-(void)encodeWithCoder:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(id)delegate;
-(void)setDelegate:(id)arg1 ;
-(unsigned long long)deviceType;
-(unsigned long long)vendorID;
-(id)initWithDevice:(id)arg1 ;
-(void)setVendorID:(unsigned long long)arg1 ;
-(void)setDeviceType:(unsigned long long)arg1 ;
-(NSDictionary *)audioFormats;
-(unsigned long long)powerStatus;
-(void)setPowerStatus:(unsigned long long)arg1 ;
-(unsigned long long)deviceFeatures;
-(unsigned long long)allDeviceTypes;
-(void)shouldAssertActiveSource;
-(void)setIsActiveSource:(char)arg1 ;
-(void)deckControlPlayHasBeenReceived:(unsigned long long)arg1 fromDevice:(id)arg2 ;
-(void)deckControlCommandHasBeenReceived:(unsigned long long)arg1 fromDevice:(id)arg2 ;
-(void)deckControlStatusHasBeenUpdated:(unsigned long long)arg1 fromDevice:(id)arg2 ;
-(void)featureAbort:(id)arg1 ;
-(void)standbyRequestHasBeenReceived:(id)arg1 ;
-(void)receivedRequestAudioReturnChannelStatusChangeTo:(unsigned long long)arg1 fromDevice:(id)arg2 ;
-(void)requestAudioReturnChannelStatusChangeTo:(unsigned long long)arg1 didFinishWithResult:(char)arg2 error:(id)arg3 ;
-(void)receivedRequestSystemAudioModeStatusChangeTo:(unsigned long long)arg1 fromDevice:(id)arg2 ;
-(void)requestSystemAudioModeStatusChangeTo:(unsigned long long)arg1 didFinishWithResult:(char)arg2 error:(id)arg3 ;
-(id)initWithBus:(id)arg1 local:(char)arg2 ;
-(unsigned long long)physicalAddress;
-(char)isActiveSource;
-(id)initWithBus:(id)arg1 local:(char)arg2 logicalAddress:(unsigned char)arg3 physicalAddress:(unsigned long long)arg4 attributes:(id)arg5 ;
-(unsigned char)logicalAddress;
-(char)isUnregistered;
-(id)mergeProperties;
-(void)setPhysicalAddress:(unsigned long long)arg1 ;
-(void)setLogicalAddress:(unsigned char)arg1 ;
-(unsigned long long)cecVersion;
-(NSDictionary *)rcProfile;
-(unsigned long long)deckStatus;
-(char)systemAudioControlEnabled;
-(char)audioReturnChannelControlEnabled;
-(unsigned long long)audioVolumeStatus;
-(char)audioMuteStatus;
-(unsigned long long)audioFormatsCount;
-(void)notifyDelegateActiveSourceStatusHasChanged;
-(char)refreshProperties:(id)arg1 ofDevice:(id)arg2 error:(id*)arg3 ;
-(void)willChangePowerStatus:(unsigned long long)arg1 ;
-(void)didChangePowerStatus:(unsigned long long)arg1 ;
-(void)notifyDelegateDeckControlCommandHasBeenReceived:(id)arg1 command:(unsigned long long)arg2 ;
-(void)notifyDelegateDeckControlPlayHasBeenReceived:(id)arg1 playMode:(unsigned long long)arg2 ;
-(void)notifyDelegateDeckControlStatusHasBeenUpdated:(id)arg1 deckInfo:(unsigned long long)arg2 ;
-(void)notifyDelegateFeatureAbort:(id)arg1 ;
-(void)notifyDelegateShouldAssertActiveSource;
-(void)notifyDelegateStandbyRequestHasBeenReceived:(id)arg1 ;
-(void)notifyDelegateReceivedRequestSystemAudioModeStatusChangeTo:(unsigned long long)arg1 fromDevice:(id)arg2 ;
-(void)notifyDelegateRequestSystemAudioModeStatusChangeTo:(unsigned long long)arg1 didFinishWithResult:(char)arg2 error:(id)arg3 ;
-(void)notifyDelegateReceivedRequestAudioReturnChannelStatusChangeTo:(unsigned long long)arg1 fromDevice:(id)arg2 ;
-(void)notifyDelegateRequestAudioReturnChannelStatusChangeTo:(unsigned long long)arg1 didFinishWithResult:(char)arg2 error:(id)arg3 ;
-(char)isCEC2Device;
-(id)initWithBus:(id)arg1 local:(char)arg2 logicalAddress:(unsigned char)arg3 physicalAddress:(unsigned long long)arg4 deviceType:(unsigned long long)arg5 ;
-(void)setDeckStatus:(unsigned long long)arg1 ;
-(char)deckControlSetDeckStatus:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)deckControlCommandWithMode:(unsigned long long)arg1 target:(id)arg2 error:(id*)arg3 ;
-(char)deckControlPlayWithMode:(unsigned long long)arg1 target:(id)arg2 error:(id*)arg3 ;
-(char)deckControlRefreshStatus:(id)arg1 requestType:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)makeActiveSourceWithTVMenus:(char)arg1 error:(id*)arg2 ;
-(char)performStandbyWithTargetDevice:(id)arg1 error:(id*)arg2 ;
-(char)refreshDevices:(id*)arg1 ;
-(char)refreshPropertiesOfDevice:(id)arg1 error:(id*)arg2 ;
-(char)requestActiveSource:(id*)arg1 ;
-(char)resignActiveSource:(id*)arg1 ;
-(char)setSystemAudioControlEnabled:(char)arg1 error:(id*)arg2 ;
-(char)systemAudioModeRequest:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)setPowerStatus:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)setAudioReturnChannelControlEnabled:(char)arg1 error:(id*)arg2 ;
-(char)requestAudioReturnChannelStatusChangeTo:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)setAudioVolumeStatus:(unsigned long long)arg1 error:(id*)arg2 ;
-(char)setAudioMuteStatus:(char)arg1 error:(id*)arg2 ;
-(char)setSupportedAudioFormats:(const CoreCECAudioFormat*)arg1 count:(unsigned long long)arg2 error:(id*)arg3 ;
-(char)setSupportedAudioFormats:(id)arg1 error:(id*)arg2 ;
-(char)requestSystemAudioModeStatusChangeTo:(unsigned long long)arg1 error:(id*)arg2 ;
-(unsigned long long)featureSupportStatus:(unsigned long long)arg1 ;
-(void)setFeature:(unsigned long long)arg1 supportStatus:(unsigned long long)arg2 ;
-(void)setCecVersion:(unsigned long long)arg1 ;
-(void)setAllDeviceTypes:(unsigned long long)arg1 ;
-(void)setRcProfile:(NSDictionary *)arg1 ;
-(void)setAudioReturnChannelControlEnabled:(char)arg1 ;
-(void)setAudioVolumeStatus:(unsigned long long)arg1 ;
-(void)setAudioMuteStatus:(char)arg1 ;
-(void)setAudioFormats:(NSDictionary *)arg1 ;
-(void)setAudioFormatsCount:(unsigned long long)arg1 ;
-(void)setDeviceFeatures:(unsigned long long)arg1 ;
-(unsigned long long)knownDeviceFeatures;
-(void)setKnownDeviceFeatures:(unsigned long long)arg1 ;
@end

