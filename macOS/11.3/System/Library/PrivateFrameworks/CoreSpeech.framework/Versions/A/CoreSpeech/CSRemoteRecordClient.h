/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:17 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreSpeech.framework/Versions/A/CoreSpeech
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, CSRemoteRecordClientDelegate;
@class NSObject, OS_xpc_remote_connection, OS_remote_device_browser, CSDispatchGroup, OS_remote_device;

@interface CSRemoteRecordClient : NSObject {

	NSObject*<OS_dispatch_queue> _queue;
	OS_xpc_remote_connection* _connection;
	OS_remote_device_browser* _deviceBrowser;
	CSDispatchGroup* _deviceWaitingGroup;
	char _isRemoteRecording;
	id<CSRemoteRecordClientDelegate> _delegate;
	OS_remote_device* _device;

}

@property (nonatomic,retain) OS_remote_device * device;                                     //@synthesize device=_device - In the implementation block
@property (assign,nonatomic,__weak) id<CSRemoteRecordClientDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(void)dealloc;
-(id)init;
-(id<CSRemoteRecordClientDelegate>)delegate;
-(void)setDelegate:(id<CSRemoteRecordClientDelegate>)arg1 ;
-(OS_remote_device *)device;
-(char)isConnected;
-(void)setDevice:(OS_remote_device *)arg1 ;
-(char)isRecording;
-(void)didDeviceConnect:(id)arg1 ;
-(void)didDeviceDisconnect:(id)arg1 ;
-(id)initWithDeviceId:(id)arg1 ;
-(void)_handleServerEvent:(id)arg1 ;
-(void)_handleServerError:(id)arg1 ;
-(void)_handleServerMessage:(id)arg1 ;
-(void)_handleDidStartRecordingMessage:(id)arg1 ;
-(void)_handleTwoShotDetectedMessage:(id)arg1 ;
-(char)waitingForConnection:(double)arg1 error:(id*)arg2 ;
-(char)startRecordingWithOptions:(id)arg1 error:(id*)arg2 ;
-(char)stopRecording:(id*)arg1 ;
-(char)didPlayEndpointBeep;
-(id)voiceTriggerEventInfo;
-(char)hasPendingTwoShotBeep;
@end

