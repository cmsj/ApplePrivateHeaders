/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:17 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreSpeech.framework/Versions/A/CoreSpeech
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSObject, OS_xpc_remote_connection, CSDispatchGroup, NSHashTable, OS_remote_device, NSString, CSRemoteDeviceProtocolInfo;

@interface CSRemoteControlClient : NSObject {

	NSObject*<OS_dispatch_queue> _queue;
	OS_xpc_remote_connection* _connection;
	CSDispatchGroup* _deviceWaitingGroup;
	NSHashTable* _observers;
	unsigned _deviceType;
	OS_remote_device* _device;
	NSString* _deviceId;
	CSRemoteDeviceProtocolInfo* _deviceProtocolInfo;

}

@property (nonatomic,readonly) unsigned deviceType;                                          //@synthesize deviceType=_deviceType - In the implementation block
@property (nonatomic,readonly) OS_remote_device * device;                                    //@synthesize device=_device - In the implementation block
@property (nonatomic,copy,readonly) NSString * deviceId;                                     //@synthesize deviceId=_deviceId - In the implementation block
@property (nonatomic,readonly) CSRemoteDeviceProtocolInfo * deviceProtocolInfo;              //@synthesize deviceProtocolInfo=_deviceProtocolInfo - In the implementation block
-(void)dealloc;
-(id)description;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(OS_remote_device *)device;
-(char)isConnected;
-(unsigned)deviceType;
-(NSString *)deviceId;
-(void)getTriggerCount:(/*^block*/id)arg1 ;
-(void)clearTriggerCount:(/*^block*/id)arg1 ;
-(void)getFirstPassRunningMode:(/*^block*/id)arg1 ;
-(void)didDeviceConnect:(id)arg1 ;
-(void)didDeviceDisconnect:(id)arg1 ;
-(void)_handleServerEvent:(id)arg1 ;
-(void)_handleServerError:(id)arg1 ;
-(void)_handleServerMessage:(id)arg1 ;
-(char)waitingForConnection:(double)arg1 error:(id*)arg2 ;
-(id)_getMyriadInfoFromServerMessage:(id)arg1 ;
-(void)_transferFile:(id)arg1 at:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)initWithRemoteDevice:(id)arg1 ;
-(char)isConnectedDeviceGibraltar;
-(void)readVoiceTriggeredTokenWithCompletion:(/*^block*/id)arg1 ;
-(void)readAndClearVoiceTriggeredTokenWithCompletion:(/*^block*/id)arg1 ;
-(char)transferVoiceTriggerSpeakerModel:(id)arg1 forAsset:(id)arg2 ;
-(void)transferVoiceTriggerAsset:(id)arg1 forLanguageCode:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setVoiceTriggerEnable:(char)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)voiceTriggerEnabledWithCompletion:(/*^block*/id)arg1 ;
-(void)invalidateInterstitialWithLevel:(long long)arg1 ;
-(char)transferInterstitialAudioFiles:(id)arg1 interstitialLevel:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(id)_dictionaryWithContentsOfXPCObject:(id)arg1 ;
-(void)notifyVoiceTriggerAssetChangeWithSiriLanguageCode:(id)arg1 ;
-(id)exchangeRemoteDeviceProtocolInfo:(id)arg1 ;
-(CSRemoteDeviceProtocolInfo *)deviceProtocolInfo;
@end

