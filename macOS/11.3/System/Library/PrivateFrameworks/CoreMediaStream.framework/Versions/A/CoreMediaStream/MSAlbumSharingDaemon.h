/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:22 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreMediaStream.framework/Versions/A/CoreMediaStream
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreMediaStream/MSDaemon.h>

@protocol MSAlbumSharingDaemonDelegate, OS_dispatch_queue;
@class NSMutableDictionary, MSASDaemonModel, NSObject;

@interface MSAlbumSharingDaemon : MSDaemon {

	char _isRetryingOutstandingActivities;
	int _busyCount;
	id<MSAlbumSharingDaemonDelegate> _delegate;
	NSMutableDictionary* _personIDToStateMachineMap;
	NSMutableDictionary* _personIDToDelegateMap;
	MSASDaemonModel* _daemonModel;
	NSObject*<OS_dispatch_queue> _mapQueue;
	NSObject*<OS_dispatch_queue> _workQueue;
	NSMutableDictionary* _nextUpdateDateByPersonID;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> mapQueue;                         //@synthesize mapQueue=_mapQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> workQueue;                        //@synthesize workQueue=_workQueue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * personIDToStateMachineMap;               //@synthesize personIDToStateMachineMap=_personIDToStateMachineMap - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * personIDToDelegateMap;                   //@synthesize personIDToDelegateMap=_personIDToDelegateMap - In the implementation block
@property (nonatomic,retain) MSASDaemonModel * daemonModel;                                 //@synthesize daemonModel=_daemonModel - In the implementation block
@property (assign,nonatomic) int busyCount;                                                 //@synthesize busyCount=_busyCount - In the implementation block
@property (assign,nonatomic) char isRetryingOutstandingActivities;                          //@synthesize isRetryingOutstandingActivities=_isRetryingOutstandingActivities - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * nextUpdateDateByPersonID;                //@synthesize nextUpdateDateByPersonID=_nextUpdateDateByPersonID - In the implementation block
@property (assign,nonatomic,__weak) id<MSAlbumSharingDaemonDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(id)init;
-(id<MSAlbumSharingDaemonDelegate>)delegate;
-(void)setDelegate:(id<MSAlbumSharingDaemonDelegate>)arg1 ;
-(void)start;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(void)setWorkQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(int)busyCount;
-(void)setBusyCount:(int)arg1 ;
-(char)isWaitingForAuth;
-(id)serverSideConfigurationForPersonID:(id)arg1 ;
-(void)refreshServerSideConfigurationForPersonID:(id)arg1 ;
-(void)pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:(id)arg1 ;
-(void)retryOutstandingActivities;
-(void)retryOutstandingActivitiesForPersonID:(id)arg1 ;
-(void)cancelActivitiesForPersonID:(id)arg1 ;
-(void)setFocusAlbumGUID:(id)arg1 forPersonID:(id)arg2 ;
-(void)setFocusAssetCollectionGUID:(id)arg1 forPersonID:(id)arg2 ;
-(void)refreshResetSync:(char)arg1 personID:(id)arg2 ;
-(void)refreshResetSync:(char)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)refreshContentOfAlbumWithGUID:(id)arg1 resetSync:(char)arg2 personID:(id)arg3 ;
-(void)refreshContentOfAlbumWithGUID:(id)arg1 resetSync:(char)arg2 personID:(id)arg3 info:(id)arg4 ;
-(void)refreshCommentsForAssetCollectionWithGUID:(id)arg1 resetSync:(char)arg2 personID:(id)arg3 ;
-(void)refreshCommentsForAssetCollectionWithGUID:(id)arg1 resetSync:(char)arg2 personID:(id)arg3 info:(id)arg4 ;
-(void)addAlbum:(id)arg1 personID:(id)arg2 ;
-(void)addAlbum:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)modifyAlbumMetadata:(id)arg1 personID:(id)arg2 ;
-(void)modifyAlbumMetadata:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)deleteAlbumWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)deleteAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)markAlbumGUIDAsViewed:(id)arg1 personID:(id)arg2 ;
-(void)markAlbumGUIDAsViewed:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)markAlbumGUIDAsViewed:(id)arg1 personID:(id)arg2 moveLastViewedAssetCollectionMarker:(char)arg3 info:(id)arg4 ;
-(void)setPublicAccessEnabled:(char)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)setPublicAccessEnabled:(char)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(void)setMultipleContributorsEnabled:(char)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)setMultipleContributorsEnabled:(char)arg1 forAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(void)subscribeToAlbumWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)subscribeToAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)unsubscribeFromAlbumWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)unsubscribeFromAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)acceptInvitationWithToken:(id)arg1 personID:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)acceptInvitationWithToken:(id)arg1 personID:(id)arg2 info:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)acceptInvitationWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)acceptInvitationWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)rejectInvitationWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)rejectInvitationWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)addAccessControlEntries:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3 ;
-(void)addAccessControlEntries:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4 ;
-(void)removeAccessControlEntryWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)removeAccessControlEntryWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)addAssetCollections:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3 ;
-(void)addAssetCollections:(id)arg1 toAlbumWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4 ;
-(void)deleteAssetCollectionWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)deleteAssetCollectionWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)deleteAssetCollectionsWithGUIDs:(id)arg1 personID:(id)arg2 ;
-(void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2 personID:(id)arg3 ;
-(void)markCommentsForAssetCollectionWithGUID:(id)arg1 asViewedWithLastViewedDate:(id)arg2 personID:(id)arg3 info:(id)arg4 ;
-(void)addComments:(id)arg1 toAssetCollectionWithGUID:(id)arg2 personID:(id)arg3 ;
-(void)addComments:(id)arg1 toAssetCollectionWithGUID:(id)arg2 personID:(id)arg3 info:(id)arg4 ;
-(void)deleteCommentWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)deleteCommentWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)forgetEverythingAboutPersonID:(id)arg1 ;
-(void)retrieveAssets:(id)arg1 inAlbumWithGUID:(id)arg2 personID:(id)arg3 ;
-(void)shutDown;
-(void)shutDownCompletionBlock:(/*^block*/id)arg1 ;
-(id)nextActivityDate;
-(char)isInRetryState;
-(void)didIdle;
-(void)didUnidle;
-(void)didReceiveGlobalResetSyncForPersonID:(id)arg1 ;
-(void)didReceivePushNotificationForPersonID:(id)arg1 ;
-(void)mapQueueShutDownStateMachineInMap:(id)arg1 personIDs:(id)arg2 index:(unsigned long long)arg3 forDestruction:(char)arg4 completionBlock:(/*^block*/id)arg5 ;
-(void)didCreateStateMachineForPersonID:(id)arg1 ;
-(void)willDestroyStateMachineForPersonID:(id)arg1 ;
-(void)didDestroyStateMachineForPersonID:(id)arg1 ;
-(void)didReceiveAuthFailureForPersonID:(id)arg1 ;
-(void)didReceiveAuthSuccessForPersonID:(id)arg1 ;
-(char)hasCommandsInGroupedCommandQueue;
-(void)stopAssetDownloadsForPersonID:(id)arg1 ;
-(void)addAlbum:(id)arg1 ;
-(void)deleteAlbumWithGUID:(id)arg1 inviterAddress:(id)arg2 ;
-(id)personIDListeningToPushNotification;
-(void)setNextActivityDate:(id)arg1 forPersonID:(id)arg2 ;
-(void)sendServerSideConfigurationDidChangeNotificationForPersonID:(id)arg1 ;
-(id)existingModelForPersonID:(id)arg1 ;
-(id)modelForPersonID:(id)arg1 ;
-(void)refreshAccessControlListOfAlbumWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)refreshAccessControlListOfAlbumWithGUID:(id)arg1 personID:(id)arg2 info:(id)arg3 ;
-(void)markAsSpamAlbumWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)markAsSpamInvitationWithGUID:(id)arg1 personID:(id)arg2 ;
-(void)markAsSpamInvitationWithToken:(id)arg1 personID:(id)arg2 ;
-(void)retrieveAssetsInAssetCollectionsWithGUIDs:(id)arg1 assetTypeFlags:(int)arg2 personID:(id)arg3 ;
-(void)_postModelShutdownForPersonID:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)shutDownStateMachine:(id)arg1 forDestruction:(char)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)workQueueForgetEverythingAboutPersonID:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)forgetEverythingAboutPersonID:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)workQueueForgetEverythingAboutPersonIDs:(id)arg1 index:(unsigned long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)forgetEverythingCompletionBlock:(/*^block*/id)arg1 ;
-(id)persistentObjectForKey:(id)arg1 personID:(id)arg2 ;
-(void)setPersistentObject:(id)arg1 forKey:(id)arg2 personID:(id)arg3 ;
-(id)_delegateForPersonID:(id)arg1 ;
-(id)existingStateMachineForPersonID:(id)arg1 ;
-(id)boundStateMachineForPersonID:(id)arg1 ;
-(void)didReceiveTooManyAlbumsError:(id)arg1 personID:(id)arg2 ;
-(void)didReceiveTooManyPhotosError:(id)arg1 forAlbum:(id)arg2 personID:(id)arg3 ;
-(void)didReceiveTooManySubscriptionsError:(id)arg1 personID:(id)arg2 ;
-(void)didReceiveTooManyCommentsError:(id)arg1 forAssetCollection:(id)arg2 inAlbum:(id)arg3 personID:(id)arg4 ;
-(void)didReceiveCommentTooLongError:(id)arg1 forAssetCollection:(id)arg2 inAlbum:(id)arg3 personID:(id)arg4 ;
-(void)updateOwnerReputationScoreForAlbum:(id)arg1 ;
-(NSMutableDictionary *)personIDToStateMachineMap;
-(void)setPersonIDToStateMachineMap:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)personIDToDelegateMap;
-(void)setPersonIDToDelegateMap:(NSMutableDictionary *)arg1 ;
-(MSASDaemonModel *)daemonModel;
-(void)setDaemonModel:(MSASDaemonModel *)arg1 ;
-(char)isRetryingOutstandingActivities;
-(void)setIsRetryingOutstandingActivities:(char)arg1 ;
-(NSObject*<OS_dispatch_queue>)mapQueue;
-(void)setMapQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSMutableDictionary *)nextUpdateDateByPersonID;
-(void)setNextUpdateDateByPersonID:(NSMutableDictionary *)arg1 ;
@end

