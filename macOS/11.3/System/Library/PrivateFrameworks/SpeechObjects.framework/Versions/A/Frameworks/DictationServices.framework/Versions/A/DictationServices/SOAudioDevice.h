/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SpeechObjects.framework/Versions/A/Frameworks/DictationServices.framework/Versions/A/DictationServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString;

@interface SOAudioDevice : NSObject {

	unsigned _audioDeviceID;
	NSString* _identifier;
	NSString* _manufacturer;
	NSString* _name;
	float _balance;
	float _level;
	float _hwLevelRight;
	float _hwLevelLeft;
	unsigned _prevSource;
	unsigned _channelCount;
	unsigned _streamCount;
	char _isInput;
	char _isBuiltInAudio;
	char _isBluetoothAudio;
	char _channelCountComputed;
	char _isActive;
	char _hasMaster;
	char _hasLevel;
	char _hasBalance;
	char _hasMute;
	char _allInputStreamsMixable;
	char _showFakeDigitalItem;

}
-(void)dealloc;
-(id)description;
-(id)name;
-(id)identifier;
-(char)isActive;
-(float)level;
-(void)setLevel:(float)arg1 ;
-(char)isConnected;
-(id)manufacturer;
-(char)isMuted;
-(unsigned)numberOfChannels;
-(void)setAudioSource:(unsigned)arg1 ;
-(float)balance;
-(void)setBalance:(float)arg1 ;
-(unsigned)streamCount;
-(void)setMute:(char)arg1 ;
-(char)copyProperty:(unsigned)arg1 forChannel:(unsigned)arg2 dataSize:(unsigned*)arg3 dataPtr:(void*)arg4 ;
-(char)hasProperty:(unsigned)arg1 forChannel:(unsigned)arg2 dataSize:(unsigned)arg3 writable:(char)arg4 ;
-(char)getProperty:(unsigned)arg1 forChannel:(unsigned)arg2 dataSize:(unsigned)arg3 dataPtr:(void*)arg4 ;
-(char)hasDigitalSource;
-(char)hasDigitalWithoutDetect;
-(unsigned)calcNumberOfChannelsPassingBackStreamCount:(unsigned*)arg1 ;
-(void)initDeviceInfo;
-(id)getStringProperty:(unsigned)arg1 forChannel:(unsigned)arg2 ;
-(id)audioSourceName:(unsigned)arg1 ;
-(id)audioSourceType:(unsigned)arg1 ;
-(char)setProperty:(unsigned)arg1 forChannel:(unsigned)arg2 dataSize:(unsigned)arg3 dataPtr:(void*)arg4 ;
-(void)updateChannelCount:(id)arg1 ;
-(char)canSetLevelOfChannelAtIndex:(unsigned)arg1 ;
-(char)areAllInputStreamsMixable;
-(void)setHardwareLevel:(float)arg1 ofChannelAtIndex:(unsigned)arg2 ;
-(float)hardwareLevelOfChannelAtIndex:(unsigned)arg1 ;
-(void)updateStartupLevel;
-(char)updateLevelsToMatchHardware;
-(void)updateChannels:(id)arg1 ;
-(char)supportsLevel;
-(void)updateLevels;
-(char)supportsBalance;
-(char)hasSource:(unsigned)arg1 ;
-(char)canGetLevelOfChannelAtIndex:(unsigned)arg1 ;
-(id)initForSection:(char)arg1 ofAudioDevice:(unsigned)arg2 ;
-(unsigned)audioDeviceID;
-(char)supportsInput;
-(char)supportsOutput;
-(char)supportsMute;
-(char)hasMasterChannel;
-(char)canBeDefault;
-(char)canBeAlertDevice;
-(char)isBuiltInAudio;
-(char)isBluetoothAudio;
-(id)audioSources;
-(unsigned)currentAudioSource;
-(char)hardwareLevelsMatch;
-(void)justSetBalance:(float)arg1 ;
-(char)hasJack;
-(char)isJackInUse;
-(char)hasLineMuteDisable;
-(char)isLineMuteDisabled;
-(void)setLineMuteDisabled:(char)arg1 ;
-(char)hasLineSource;
-(void)printHardwareLevelsToLog;
-(void)printLevelAndBalanceToLog;
@end

