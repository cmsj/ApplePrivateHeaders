/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SpeechObjects.framework/Versions/A/Frameworks/DictationServices.framework/Versions/A/DictationServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <DictationServices/DictationServices-Structs.h>
#import <AppKit/NSWindowController.h>
#import <libobjc.A.dylib/SOMicrophoneViewMeterLevelConsumer.h>
#import <libobjc.A.dylib/NSMenuDelegate.h>

@protocol SORecognitionWindowControllerDelegate;
@class NSTimer, SORecognitionWindowAnimatedMicBackgroundView, SORecognitionWindowAnimatedMicFillView, SOMicrophoneLevelMeterController, SOClassicDictationBackgroundView, SOClassicDictationPlainBackgroundView, NSButton, NSPopUpButton, NSBox, NSLayoutConstraint, NSWindow, NSString;

@interface SORecognitionWindowController : NSWindowController <SOMicrophoneViewMeterLevelConsumer, NSMenuDelegate> {

	id<SORecognitionWindowControllerDelegate> _delegate;
	CGRect _insertionPointRect;
	CGRect _enclosingTextAreaRect;
	CGRect _enclosingWindowRect;
	long long _clientWindowLevel;
	NSTimer* _resumeTravelingUITimer;
	NSTimer* _hideFeedbackTextTimer;
	char _useVerticalLayoutHUDPositioning;
	char _mouseIsDown;
	char _drawForExternalClient;
	char _waitingForWakeUpCommand;
	char _isInGlobalPosition;
	int _state;
	SORecognitionWindowAnimatedMicBackgroundView* _animatedContentView;
	SORecognitionWindowAnimatedMicFillView* _animatedContentFillView;
	SOMicrophoneLevelMeterController* _meterLevelController;
	SOClassicDictationBackgroundView* _backgroundView;
	SOClassicDictationPlainBackgroundView* _fillBackgroundView;
	NSButton* _doneButton;
	NSPopUpButton* _languagePopUp;
	NSBox* _languagePopUpTopDivider;
	NSLayoutConstraint* _animatedFillWindowHeightConstraint;
	NSLayoutConstraint* _doneButtonTopSpaceConstraint;
	char overrideSystemWidePreference;
	char _isWindowAnimatingIn;
	NSWindow* _animationFillWindow;
	CGPoint _initialLocation;

}

@property (retain) NSWindow * animationFillWindow;                                            //@synthesize animationFillWindow=_animationFillWindow - In the implementation block
@property (assign,nonatomic) char isWindowAnimatingIn;                                        //@synthesize isWindowAnimatingIn=_isWindowAnimatingIn - In the implementation block
@property (assign,nonatomic) int state; 
@property (assign,nonatomic) char ignoreMinimumMicrophoneMeterLevel; 
@property (assign,nonatomic) char useVerticalLayoutHUDPositioning;                            //@synthesize useVerticalLayoutHUDPositioning=_useVerticalLayoutHUDPositioning - In the implementation block
@property (nonatomic,retain) id<SORecognitionWindowControllerDelegate> delegate; 
@property (assign,nonatomic) char mouseIsDown;                                                //@synthesize mouseIsDown=_mouseIsDown - In the implementation block
@property (assign,nonatomic) char drawForExternalClient;                                      //@synthesize drawForExternalClient=_drawForExternalClient - In the implementation block
@property (assign,nonatomic) char waitingForWakeUpCommand; 
@property (assign,nonatomic) char overrideSystemWidePreference; 
@property (assign,nonatomic) char bounceMicrophoneMeter; 
@property (assign,nonatomic) CGPoint initialLocation;                                         //@synthesize initialLocation=_initialLocation - In the implementation block
@property (nonatomic,readonly) CGRect contentFrame; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedRecognitionWindowController;
-(void)dealloc;
-(id)init;
-(id<SORecognitionWindowControllerDelegate>)delegate;
-(void)close;
-(void)setDelegate:(id<SORecognitionWindowControllerDelegate>)arg1 ;
-(int)state;
-(void)setState:(int)arg1 ;
-(char)isVisible;
-(void)awakeFromNib;
-(void)stopDictation:(id)arg1 ;
-(void)windowDidMove:(id)arg1 ;
-(void)windowDidMiniaturize:(id)arg1 ;
-(void)windowDidDeminiaturize:(id)arg1 ;
-(void)menuWillOpen:(id)arg1 ;
-(void)menuDidClose:(id)arg1 ;
-(CGRect)contentFrame;
-(void)_showProgress;
-(CGPoint)initialLocation;
-(void)setInitialLocation:(CGPoint)arg1 ;
-(void)_handleCommandGroupChangeNotification:(id)arg1 ;
-(void)_windowOrderOnScreenAndFinishAnimation:(id)arg1 ;
-(void)_windowOrderOffScreenAndFinishAnimation:(id)arg1 ;
-(NSWindow *)animationFillWindow;
-(void)setAnimationFillWindow:(NSWindow *)arg1 ;
-(void)_showWindowUsingTransition:(int)arg1 ;
-(void)_hideWindowUsingTransition:(int)arg1 ;
-(void)_setUpTimerToResumeTravelingUI;
-(void)_updateLanguagePopUpMenuWithLangItems:(id)arg1 ;
-(CGRect)_positionedRectOnLowerMainScreenFromRect:(CGRect)arg1 ;
-(void)setBounceMicrophoneMeter:(char)arg1 ;
-(void)_resetCurrentState;
-(void)setIsWindowAnimatingIn:(char)arg1 ;
-(char)bounceMicrophoneMeter;
-(void)_showProgressWithReset:(char)arg1 showCancelButton:(char)arg2 ;
-(void)shakeAnimationDidEnd;
-(char)isWindowAnimatingIn;
-(void)_delayedstatecheck;
-(void)_showRecognitionErrorState;
-(void)_showMicrophone;
-(void)_showPreHeatWait;
-(CGPoint)_midPointForBalloon;
-(void)_resumeTravelingUI;
-(char)overrideSystemWidePreference;
-(void)_showWindowForSelectionRect:(CGRect)arg1 textAreaRect:(CGRect)arg2 clientWindowRect:(CGRect)arg3 clientWindowLevel:(long long)arg4 openTransition:(int)arg5 ;
-(void)updateLinearMeterLevel:(float)arg1 ;
-(void)beginShowingWindowUsingTransition:(int)arg1 ;
-(void)stopShowingWindowUsingTransition:(int)arg1 ;
-(void)brieflyHideWindowUsingTransition:(int)arg1 ;
-(void)setSelectionRect:(CGRect)arg1 enclosingWindowRect:(CGRect)arg2 clientWindowLevel:(long long)arg3 ;
-(char)windowContainsGlobalPoint:(CGPoint)arg1 ;
-(char)waitingForWakeUpCommand;
-(void)setWaitingForWakeUpCommand:(char)arg1 ;
-(char)ignoreMinimumMicrophoneMeterLevel;
-(void)setIgnoreMinimumMicrophoneMeterLevel:(char)arg1 ;
-(char)isPresentingError;
-(void)hidePointer;
-(void)flashButton;
-(void)languageChanged:(id)arg1 ;
-(CGRect)_centeredRectOnLowerMainScreenFromRect:(CGRect)arg1 ;
-(void)setRecognizedText:(id)arg1 messageType:(long long)arg2 ;
-(char)useVerticalLayoutHUDPositioning;
-(void)setUseVerticalLayoutHUDPositioning:(char)arg1 ;
-(char)mouseIsDown;
-(void)setMouseIsDown:(char)arg1 ;
-(char)drawForExternalClient;
-(void)setDrawForExternalClient:(char)arg1 ;
-(void)setOverrideSystemWidePreference:(char)arg1 ;
@end

