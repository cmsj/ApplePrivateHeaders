/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:18 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SpeechObjects.framework/Versions/A/Frameworks/DictationServices.framework/Versions/A/DictationServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SOMicrophoneViewMeterLevelProvider, SOMicrophoneViewMeterLevelConsumer;
#import <DictationServices/DictationServices-Structs.h>
@class SOAudioQueueRecorder, NSString;

@interface SOMicrophoneLevelMeterController : NSObject {

	SOAudioQueueRecorder* _microphoneRecorder;
	char _bounceMicrophoneMeter;
	char _preventDictationModeWhileListening;
	char _ignoreMinimumMeterLevel;
	float _peakMeterLevel;
	NSString* _microphoneID;
	CVDisplayLinkRef _displayLink;
	float _runningPowerLevels[4];
	unsigned char _powerPointer;
	id<SOMicrophoneViewMeterLevelProvider> _meterValueProviderTarget;
	id<SOMicrophoneViewMeterLevelConsumer> _meterValueConsumerTarget;
	char _bounceMeter;

}

@property (nonatomic,readonly) SOAudioQueueRecorder * microphoneRecorder;                                  //@synthesize microphoneRecorder=_microphoneRecorder - In the implementation block
@property (assign,nonatomic) char bounceMicrophoneMeter;                                                   //@synthesize bounceMicrophoneMeter=_bounceMicrophoneMeter - In the implementation block
@property (assign) char preventDictationModeWhileListening;                                                //@synthesize preventDictationModeWhileListening=_preventDictationModeWhileListening - In the implementation block
@property (nonatomic,retain) id<SOMicrophoneViewMeterLevelProvider> meterValueProviderTarget;              //@synthesize meterValueProviderTarget=_meterValueProviderTarget - In the implementation block
@property (nonatomic,retain) id<SOMicrophoneViewMeterLevelConsumer> meterValueConsumerTarget;              //@synthesize meterValueConsumerTarget=_meterValueConsumerTarget - In the implementation block
@property (assign,nonatomic) char bounceMeter;                                                             //@synthesize bounceMeter=_bounceMeter - In the implementation block
@property (assign,nonatomic) char ignoreMinimumMeterLevel;                                                 //@synthesize ignoreMinimumMeterLevel=_ignoreMinimumMeterLevel - In the implementation block
-(void)dealloc;
-(char)preventDictationModeWhileListening;
-(void)setPreventDictationModeWhileListening:(char)arg1 ;
-(void)setMeterValueConsumerTarget:(id<SOMicrophoneViewMeterLevelConsumer>)arg1 ;
-(void)setBounceMicrophoneMeter:(char)arg1 ;
-(char)bounceMicrophoneMeter;
-(char)ignoreMinimumMeterLevel;
-(void)setIgnoreMinimumMeterLevel:(char)arg1 ;
-(void)stopMetering;
-(void)startMeteringFromProducerOwnedMicrophone;
-(void)setMeterValueProviderTarget:(id<SOMicrophoneViewMeterLevelProvider>)arg1 ;
-(void)startMeteringMicrophoneIdentifier:(id)arg1 ;
-(SOAudioQueueRecorder *)microphoneRecorder;
-(void)startMeteringMicrophoneIdentifier:(id)arg1 toFile:(id)arg2 ;
-(void)_resetRunningPowerLevels;
-(void)_startDisplayLink;
-(void)_clearDisplayLink;
-(float)_updateMedianWithNewValue:(float)arg1 ;
-(float)_minimumMeterLevel;
-(float)_currentRawMicPowerLevel;
-(float)_powerLevelForMicPower:(float)arg1 ;
-(void)_updatePeakPowerLevel;
-(float)_currentMicPowerLevel;
-(void)_displayLinkCallbackHandler;
-(id<SOMicrophoneViewMeterLevelProvider>)meterValueProviderTarget;
-(id<SOMicrophoneViewMeterLevelConsumer>)meterValueConsumerTarget;
-(char)bounceMeter;
-(void)setBounceMeter:(char)arg1 ;
@end

