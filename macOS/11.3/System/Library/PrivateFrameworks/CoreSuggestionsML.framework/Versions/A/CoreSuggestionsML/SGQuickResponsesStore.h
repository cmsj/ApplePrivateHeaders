/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:19 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreSuggestionsML.framework/Versions/A/CoreSuggestionsML
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class _PASLock;

@interface SGQuickResponsesStore : NSObject {

	_PASLock* _readerWriter;

}
+(id)sharedInstance;
+(char)isProfane:(id)arg1 inLocales:(id)arg2 ;
+(id)keyWithLanguage:(id)arg1 andResponse:(id)arg2 ;
+(id)instanceInMemory;
-(id)init;
-(char)frailWriteTransaction:(/*^block*/id)arg1 ;
-(char)frailReadTransaction:(/*^block*/id)arg1 ;
-(void)designateFilteringBatch:(unsigned long long)arg1 ;
-(void)recordKnownCustomResponsesInBatchWithEmbedder:(/*^block*/id)arg1 compatibilityVersion:(unsigned long long)arg2 ;
-(unsigned long long)countCustomResponsesAfterPruningWithMinimumCountThreshold:(double)arg1 ;
-(void)filterBatchWithMinimumDistinctRecipients:(unsigned long long)arg1 minimumReplyOccurences:(unsigned long long)arg2 ;
-(void)recordMessagesInBatchAsCustomResponsesWithEmbedder:(/*^block*/id)arg1 compatibilityVersion:(unsigned long long)arg2 ;
-(void)decayAllCustomResponsesWithDecayFactor:(double)arg1 filteringBatchSize:(unsigned long long)arg2 ;
-(unsigned long long)countCustomResponsesAfterTruncatingTable:(unsigned long long)arg1 ;
-(void)prunePerRecipientTableWithMaxRows:(unsigned long long)arg1 ;
-(void)calculateUsageSpreads;
-(char)addingMessageExceedsBatchLimit:(unsigned long long)arg1 tableLimit:(unsigned long long)arg2 message:(id)arg3 language:(id)arg4 prompt:(id)arg5 recipientHandle:(id)arg6 sentAt:(id)arg7 ;
-(id)initInDirectory:(id)arg1 inMemory:(char)arg2 withMigration:(char)arg3 ;
-(id)initInDirectory:(id)arg1 inMemory:(char)arg2 withMigration:(char)arg3 forTools:(char)arg4 ;
-(id)recordsForResponses:(id)arg1 language:(id)arg2 ;
-(void)addDisplayedToResponses:(id)arg1 language:(id)arg2 ;
-(void)addSelectedToResponse:(id)arg1 language:(id)arg2 ;
-(void)addWrittenToResponse:(id)arg1 language:(id)arg2 isMatch:(char)arg3 ;
-(void)_addCustomResponseToDb:(id)arg1 reply:(id)arg2 language:(id)arg3 embedding:(id)arg4 sentAt:(double)arg5 recipient:(id)arg6 messagesRowId:(long long)arg7 onError:(/*^block*/id)arg8 ;
-(void)_incrementCustomResponseInDb:(id)arg1 reply:(id)arg2 language:(id)arg3 embedding:(id)arg4 sentAt:(double)arg5 recipient:(id)arg6 messagesRowId:(long long)arg7 onError:(/*^block*/id)arg8 ;
-(id)embeddingForPrompt:(id)arg1 language:(id)arg2 embedder:(/*^block*/id)arg3 ;
-(id)getProfanityLocale;
-(id)getModelVersion;
-(void)setProfanityLocale:(id)arg1 andModelVersion:(long long)arg2 ;
-(char)resetDbIfNeededCompareWithCompatibilityVersion:(unsigned long long)arg1 ;
-(id)nearestCustomResponsesToPromptEmbedding:(id)arg1 recipient:(id)arg2 limit:(unsigned long long)arg3 withinRadius:(float)arg4 responseCountExponent:(float)arg5 minimumDecayedCount:(float)arg6 compatibilityVersion:(unsigned long long)arg7 language:(id)arg8 locale:(id)arg9 allowProfanity:(char)arg10 minimumTimeInterval:(double)arg11 usageSpreadExponent:(float)arg12 ;
-(char)deltaForResponsesOnRow:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)destroyInstanceInMemory;
-(double)getPerRecipientCountForReply:(id)arg1 language:(id)arg2 recipient:(id)arg3 ;
-(double)getUsageSpreadForReply:(id)arg1 language:(id)arg2 ;
@end

