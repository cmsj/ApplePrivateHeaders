/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:20 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/Versions/A/CloudKitDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class ACAccountStore, ACAccount, NSString, NSPersonNameComponents, NSURL;

@interface CKDBackingAccount : NSObject {

	char _iCloudDriveAllowsCellularAccess;
	ACAccountStore* _accountStore;
	ACAccount* _appleAccount;

}

@property (nonatomic,readonly) ACAccountStore * accountStore;                          //@synthesize accountStore=_accountStore - In the implementation block
@property (nonatomic,readonly) ACAccount * ckAccount; 
@property (nonatomic,retain) ACAccount * appleAccount;                                 //@synthesize appleAccount=_appleAccount - In the implementation block
@property (nonatomic,readonly) NSString * dsid; 
@property (nonatomic,readonly) NSString * identifier; 
@property (nonatomic,readonly) NSString * primaryEmail; 
@property (nonatomic,readonly) NSString * username; 
@property (nonatomic,readonly) NSString * serverPreferredPushEnvironment; 
@property (nonatomic,readonly) NSPersonNameComponents * fullName; 
@property (nonatomic,readonly) NSString * displayedHostname; 
@property (nonatomic,readonly) NSString * sharingURLHostname; 
@property (nonatomic,readonly) NSString * personaIdentifier; 
@property (nonatomic,readonly) char isFakeAccount; 
@property (nonatomic,readonly) char iCloudDriveAllowsCellularAccess;                   //@synthesize iCloudDriveAllowsCellularAccess=_iCloudDriveAllowsCellularAccess - In the implementation block
@property (nonatomic,readonly) char isPrimaryEmailVerified; 
@property (nonatomic,readonly) NSURL * privateCloudDBURL; 
@property (nonatomic,readonly) NSURL * privateShareServiceURL; 
@property (nonatomic,readonly) NSURL * privateDeviceServiceURL; 
@property (nonatomic,readonly) NSURL * privateCodeServiceURL; 
@property (nonatomic,readonly) NSURL * privateMetricsServiceURL; 
+(id)primaryAccountInStore:(id)arg1 ;
+(id)accountWithIdentifier:(id)arg1 inStore:(id)arg2 ;
+(id)fakeAccountWithEmail:(id)arg1 password:(id)arg2 inStore:(id)arg3 propertyOverrides:(id)arg4 overridesByDataclass:(id)arg5 ;
+(void)deviceCountForAccount:(id)arg1 ignoreCache:(char)arg2 completionHandler:(/*^block*/id)arg3 ;
+(id)accountQueue;
+(char)_lockedEnsureCloudKitChildAccountOnParentAccount:(id)arg1 inStore:(id)arg2 ;
+(void)ensureCloudKitChildAccountOnParentAccount:(id)arg1 inStore:(id)arg2 ;
-(id)init;
-(NSString *)identifier;
-(NSString *)dsid;
-(NSPersonNameComponents *)fullName;
-(NSString *)username;
-(NSString *)personaIdentifier;
-(void)deviceCountWithCompletionHandler:(/*^block*/id)arg1 ;
-(NSString *)displayedHostname;
-(ACAccountStore *)accountStore;
-(NSString *)primaryEmail;
-(ACAccount *)appleAccount;
-(void)setAppleAccount:(ACAccount *)arg1 ;
-(NSString *)serverPreferredPushEnvironment;
-(char)isDataclassEnabled:(id)arg1 ;
-(char)isPrimaryEmailVerified;
-(char)isDataclassEnabledForCellular:(id)arg1 ;
-(NSURL *)privateCloudDBURL;
-(NSURL *)privateShareServiceURL;
-(NSURL *)privateDeviceServiceURL;
-(NSURL *)privateCodeServiceURL;
-(NSURL *)privateMetricsServiceURL;
-(char)isFakeAccount;
-(id)accountPropertiesForDataclass:(id)arg1 ;
-(void)updateAccountPropertiesAndSaveAccountInStore:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(char)canRenew;
-(void)renewAuthTokenInStore:(id)arg1 withOptions:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)cloudKitAuthTokenWithError:(id*)arg1 ;
-(id)iCloudAuthTokenWithError:(id*)arg1 ;
-(void)validateVettingToken:(id)arg1 vettingEmail:(id)arg2 vettingPhone:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(NSString *)sharingURLHostname;
-(id)_initWithAccountStore:(id)arg1 ;
-(ACAccount *)ckAccount;
-(void)_setOverridesOnVettingContext:(id)arg1 ;
-(id)_accountCredentialForAccount:(id)arg1 withError:(id*)arg2 ;
-(id)urlForDataclass:(id)arg1 preferringGateway:(char)arg2 ;
-(id)urlForDataclass:(id)arg1 ;
-(id)privateCodeServiceURLPreferringGateway:(char)arg1 ;
-(char)iCloudDriveAllowsCellularAccess;
@end

