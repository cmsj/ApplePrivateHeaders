/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:54 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/UniversalAccess.framework/Versions/A/Frameworks/Zoom.framework/Versions/A/Zoom
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Zoom/Zoom-Structs.h>
#import <libobjc.A.dylib/AXEEventTapListener.h>

@class NSDictionary, NSString;

@interface ZMWEventManager : NSObject <AXEEventTapListener> {

	char _arePoroKeysDown;
	unsigned _cgsConnection;
	char _eventHandlerInstalled;
	char _registeredHotKeys;
	char _registeredUAHotKeys;
	CFMachPortRef _eventTap;
	CGEventTapProxyRef _eventTapProxy;
	unsigned long long _eventTapReconnectCount;
	double _eventTapLastReconnect;
	CFMachPortRef _eventTapListenOnly;
	CGEventTapProxyRef _eventTapListenOnlyProxy;
	unsigned long long _eventTapListenOnlyReconnectCount;
	double _eventTapListenOnlyLastReconnect;
	char _shouldHideCursor;
	char _canHideCursor;
	double _lastUAFocusTime;
	NSDictionary* _lastUAFocusInformation;
	double _lastPotentialFocusTrigger;
	double _onlyControlIsDownTime;
	unsigned long long _lastSeenFlags;
	CGEventSourceRef _eventSource;
	char _isMouseDetached;
	char __temporaryDetachKeysDown;
	char __mouseEventTapRegistered;
	CGPoint _currentMouseLocation;
	CGPoint __mouseDetachStartMouseLocation;
	CGPoint __mouseDetachStartZoomOriginLocation;

}

@property (assign,nonatomic) CGPoint currentMouseLocation;                                                   //@synthesize currentMouseLocation=_currentMouseLocation - In the implementation block
@property (assign,nonatomic) char isMouseDetached;                                                           //@synthesize isMouseDetached=_isMouseDetached - In the implementation block
@property (assign,setter=_setTemporaryDetachKeysDown:,nonatomic) char _temporaryDetachKeysDown;              //@synthesize _temporaryDetachKeysDown=__temporaryDetachKeysDown - In the implementation block
@property (assign,nonatomic) CGPoint _mouseDetachStartMouseLocation;                                         //@synthesize _mouseDetachStartMouseLocation=__mouseDetachStartMouseLocation - In the implementation block
@property (assign,nonatomic) CGPoint _mouseDetachStartZoomOriginLocation;                                    //@synthesize _mouseDetachStartZoomOriginLocation=__mouseDetachStartZoomOriginLocation - In the implementation block
@property (assign,nonatomic) char _mouseEventTapRegistered;                                                  //@synthesize _mouseEventTapRegistered=__mouseEventTapRegistered - In the implementation block
@property (assign,nonatomic) char shouldHideCursor; 
@property (assign,nonatomic) char canHideCursor; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedManager;
-(void)dealloc;
-(id)init;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(CGPoint)currentMouseLocation;
-(CGEventRef)eventTapManager:(id)arg1 activelyTappedMouseEvent:(id)arg2 cgEvent:(CGEventRef)arg3 withProxy:(CGEventTapProxyRef)arg4 ;
-(void)set_mouseDetachStartMouseLocation:(CGPoint)arg1 ;
-(void)set_mouseDetachStartZoomOriginLocation:(CGPoint)arg1 ;
-(CGPoint)_mouseDetachStartZoomOriginLocation;
-(CGPoint)_mouseDetachStartMouseLocation;
-(void)handlePossibleFocusTrigger;
-(char)_cgRegisterForEvents;
-(void)removeEventTapListenOnly;
-(void)removeEventTap;
-(char)_mouseEventTapRegistered;
-(void)set_mouseEventTapRegistered:(char)arg1 ;
-(void)_setTemporaryDetachKeysDown:(char)arg1 ;
-(void)_updateEventTapRegistrationPrefsZoomFactor:(double)arg1 nonSystemZoomFactor:(double)arg2 ;
-(void)setCurrentMouseLocation:(CGPoint)arg1 ;
-(void)_setPoroKeysDown:(char)arg1 ;
-(void)listenForKeyboardEvents:(char)arg1 ;
-(void)enableEventTap:(char)arg1 ;
-(void)unregisterUAHotKeys;
-(void)registerUAHotKeys;
-(void)_cgListenForEventMask:(unsigned)arg1 enable:(char)arg2 ;
-(void)updateCursorVisibility;
-(void)_moveZoomToFocusRect;
-(void)handleUAFocusChange:(id)arg1 ;
-(void)_handlePossibleFocusTrigger;
-(void)_respondToFocusChangeOrFocusTrigger;
-(char)_handleZoomLevelToggleHotKey;
-(char)_isZoomedIn;
-(void)setIsMouseDetached:(char)arg1 ;
-(void)_setDesiredZoomFactor:(double)arg1 ;
-(void)_adjustZoomLevelByDelta:(double)arg1 ;
-(void)_repeatZoomInHotKey:(id)arg1 ;
-(char)_handleZoomInHotKey:(char)arg1 ;
-(void)_setOnlyControlIsDownTime:(double)arg1 ;
-(void)_stopAllSpeakingJobs;
-(char)_handleCGFlagsChanged:(CGEventRef)arg1 ;
-(char)_handleMouseMoved:(CGEventRef)arg1 ;
-(void)_initializeModifierState;
-(char)isMouseDetached;
-(void)_adjustPoroZoomLevelByDelta:(double)arg1 ;
-(CGEventRef)_handleCGTap:(CFMachPortRef)arg1 reconnectCount:(unsigned long long*)arg2 lastReconnect:(double*)arg3 event:(CGEventRef)arg4 type:(unsigned)arg5 ;
-(char)_handleCGZoomEvent:(CGEventRef)arg1 ;
-(char)_handleCGTapEventWithZoomKeys:(CGEventRef)arg1 ;
-(void)_removeHotKey:(unsigned long long)arg1 ;
-(void)_addHotKey:(unsigned long long)arg1 symbolicKey:(unsigned)arg2 ;
-(void)updateUserSettings;
-(void)listenForMouseMovementEvents:(char)arg1 ;
-(void)setShouldHideCursor:(char)arg1 ;
-(char)shouldHideCursor;
-(void)setCanHideCursor:(char)arg1 ;
-(char)canHideCursor;
-(void)focusOnRect:(CGRect)arg1 ;
-(char)_handleCGEvent:(CGEventRef)arg1 ;
-(void)installEventTapListenOnly;
-(void)installEventTap;
-(void)_handleCGTapListenOnlyEvent:(CGEventRef)arg1 type:(unsigned)arg2 withProxy:(CGEventTapProxyRef)arg3 ;
-(CGEventRef)_handleCGTapEvent:(CGEventRef)arg1 type:(unsigned)arg2 withProxy:(CGEventTapProxyRef)arg3 ;
-(void)_enableHotKey:(unsigned)arg1 enable:(char)arg2 ;
-(void)unregisterHotKeys;
-(void)registerHotKeys;
-(char)_temporaryDetachKeysDown;
@end

