/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:51:47 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/CoreRecognition.framework/Versions/A/CoreRecognition
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

@class NSString, CALayer;


@protocol CRCaptureSessionManager <NSObject>
@property (assign,nonatomic) long long cameraPosition; 
@property (nonatomic,copy) NSString * cameraMode; 
@property (assign,nonatomic) long long whiteBalanceMode; 
@property (assign,nonatomic) long long focusMode; 
@property (assign,nonatomic) long long exposureMode; 
@property (assign,nonatomic) long long torchMode; 
@property (__weak) id<AVCaptureVideoDataOutputSampleBufferDelegate> captureSessionDelegate; 
@property (nonatomic,readonly) CALayer * previewLayer; 
@property (retain) NSString * currentDeviceID; 
@property (assign) char enableMetadataOutput; 
@property (assign) CGSize cameraResolution; 
@required
-(char)isRunning;
-(void)setExposureMode:(long long)arg1;
-(long long)exposureMode;
-(void)stopRunning;
-(void)startRunning;
-(void)setTorchMode:(long long)arg1;
-(char)isAdjustingFocus;
-(char)isFocusPointOfInterestSupported;
-(long long)focusMode;
-(void)setFocusMode:(long long)arg1;
-(long long)whiteBalanceMode;
-(void)setWhiteBalanceMode:(long long)arg1;
-(long long)torchMode;
-(CGPoint*)focusPointOfInterest;
-(CALayer *)previewLayer;
-(CGSize)cameraResolution;
-(void)setCameraResolution:(CGSize)arg1;
-(void)setCameraMode:(id)arg1;
-(void)setCaptureSessionDelegate:(id)arg1;
-(long long)cameraPosition;
-(void)setCameraPosition:(long long)arg1;
-(void)setEnableMetadataOutput:(char)arg1;
-(NSString *)cameraMode;
-(void)setupCameraSession;
-(int)targetVideoFormat;
-(void)teardownCameraSession;
-(char)toggleCamera;
-(char)switchToCameraWithDeviceID:(id)arg1;
-(NSString *)currentDeviceID;
-(char)switchToCamera:(long long)arg1;
-(CGRect*)previewVisibleRect;
-(void)highISOAdjustExposure;
-(CGPoint*)convertCameraPoint:(CGPoint)arg1 toLayer:(id)arg2;
-(char)isPreviewVideoMirrored;
-(CGRect*)convertCameraRect:(CGRect)arg1 fromLayer:(id)arg2;
-(CGPoint*)convertCameraPoint:(CGPoint)arg1 toLayer:(id)arg2 flipped:(char)arg3;
-(CGPoint*)convertCameraPointOCR:(CGPoint)arg1 toLayer:(id)arg2 flipped:(char)arg3;
-(id<AVCaptureVideoDataOutputSampleBufferDelegate>)captureSessionDelegate;
-(void)setCurrentDeviceID:(id)arg1;
-(CGPoint*)convertCameraPoint:(CGPoint)arg1 fromLayer:(id)arg2;
-(char)enableMetadataOutput;

@end

