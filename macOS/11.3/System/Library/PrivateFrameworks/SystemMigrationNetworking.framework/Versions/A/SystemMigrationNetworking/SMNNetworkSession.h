/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:41 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SystemMigrationNetworking.framework/Versions/A/SystemMigrationNetworking
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SystemMigrationNetworking/SystemMigrationNetworking-Structs.h>
#import <libobjc.A.dylib/NSNetServiceDelegate.h>
#import <libobjc.A.dylib/NSNetServiceBrowserDelegate.h>

@protocol SMNNetworkSessionDelegateProtocol, OS_dispatch_queue;
@class NSString, NSDictionary, NSNumber, SMNConnection, NSObject, NSNetServiceBrowser, NSMutableArray, NSNetService, NSMutableOrderedSet, NSMutableDictionary, NSDate, NSTimer, NSSet;

@interface SMNNetworkSession : NSObject <NSNetServiceDelegate, NSNetServiceBrowserDelegate> {

	char _automaticallySeeksFastestConnection;
	char _secureTransport106Compatibility;
	char _disallowsIPV6;
	char _checkingForNewConnectionMethods;
	char _clientIsReconnecting;
	char _clientIsReResolving;
	char _server;
	char _hasEverBeenConnected;
	int _ipv6AcceptSocket;
	int _socketFd;
	int _preferredInterface;
	int _ipv6Port;
	unsigned long long _protocolVersion;
	NSString* _name;
	NSString* _connectedServiceName;
	NSDictionary* _txtRecord;
	NSString* _type;
	unsigned long long _remoteSystemType;
	Class _securityProviderClass;
	id _securityProviderDelegate;
	id<SMNNetworkSessionDelegateProtocol> _delegate;
	NSNumber* _connectionTimeout;
	SMNConnection* _activeConnection;
	unsigned long long _numberOfNetworkConfigurationChanges;
	unsigned long long _numberOfNetworkChanges;
	unsigned long long _numberOfDisconnects;
	NSObject*<OS_dispatch_queue> _connectionQueue;
	NSObject*<OS_dispatch_queue> _scObservationQueue;
	NSObject*<OS_dispatch_queue> _sampleQueue;
	SCDynamicStoreRef _dynamicStoreConnection;
	NSNetServiceBrowser* _netServiceBrowser;
	NSObject*<OS_dispatch_queue> _currentlyConnectingConnectionQueue;
	SMNConnection* _currentConnectingConnection;
	NSMutableArray* _availablePeers;
	NSNetService* _netService;
	NSMutableOrderedSet* _otherConnections;
	NSMutableDictionary* _activeConnectionsHistory;
	NSDictionary* _remoteAddressesByIFMap;
	/*^block*/id _connectionComparator;
	double _infrastructureWirelessRate;
	NSDate* _latestConnectionEnumerationDate;
	NSTimer* _forceEnumerationTimer;

}

@property (retain) NSObject*<OS_dispatch_queue> connectionQueue;                                        //@synthesize connectionQueue=_connectionQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> scObservationQueue;                                     //@synthesize scObservationQueue=_scObservationQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> sampleQueue;                                            //@synthesize sampleQueue=_sampleQueue - In the implementation block
@property (assign) SCDynamicStoreRef dynamicStoreConnection;                                            //@synthesize dynamicStoreConnection=_dynamicStoreConnection - In the implementation block
@property (retain) NSNetServiceBrowser * netServiceBrowser;                                             //@synthesize netServiceBrowser=_netServiceBrowser - In the implementation block
@property (assign) int ipv6AcceptSocket;                                                                //@synthesize ipv6AcceptSocket=_ipv6AcceptSocket - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> currentlyConnectingConnectionQueue;                     //@synthesize currentlyConnectingConnectionQueue=_currentlyConnectingConnectionQueue - In the implementation block
@property (retain) SMNConnection * currentConnectingConnection;                                         //@synthesize currentConnectingConnection=_currentConnectingConnection - In the implementation block
@property (retain) NSString * connectedServiceName;                                                     //@synthesize connectedServiceName=_connectedServiceName - In the implementation block
@property (retain) NSMutableArray * availablePeers;                                                     //@synthesize availablePeers=_availablePeers - In the implementation block
@property (assign) char clientIsReconnecting;                                                           //@synthesize clientIsReconnecting=_clientIsReconnecting - In the implementation block
@property (assign) char clientIsReResolving;                                                            //@synthesize clientIsReResolving=_clientIsReResolving - In the implementation block
@property (getter=isCheckingForNewConnectionMethods) char checkingForNewConnectionMethods;              //@synthesize checkingForNewConnectionMethods=_checkingForNewConnectionMethods - In the implementation block
@property (retain) NSNetService * netService;                                                           //@synthesize netService=_netService - In the implementation block
@property (retain) SMNConnection * activeConnection;                                                    //@synthesize activeConnection=_activeConnection - In the implementation block
@property (retain) NSMutableOrderedSet * otherConnections;                                              //@synthesize otherConnections=_otherConnections - In the implementation block
@property (retain) NSMutableDictionary * activeConnectionsHistory;                                      //@synthesize activeConnectionsHistory=_activeConnectionsHistory - In the implementation block
@property (retain) NSDictionary * remoteAddressesByIFMap;                                               //@synthesize remoteAddressesByIFMap=_remoteAddressesByIFMap - In the implementation block
@property (getter=isServer) char server;                                                                //@synthesize server=_server - In the implementation block
@property (assign) int socketFd;                                                                        //@synthesize socketFd=_socketFd - In the implementation block
@property (assign) char hasEverBeenConnected;                                                           //@synthesize hasEverBeenConnected=_hasEverBeenConnected - In the implementation block
@property (copy) id connectionComparator;                                                               //@synthesize connectionComparator=_connectionComparator - In the implementation block
@property (assign) int preferredInterface;                                                              //@synthesize preferredInterface=_preferredInterface - In the implementation block
@property (assign) int ipv6Port;                                                                        //@synthesize ipv6Port=_ipv6Port - In the implementation block
@property (assign) double infrastructureWirelessRate;                                                   //@synthesize infrastructureWirelessRate=_infrastructureWirelessRate - In the implementation block
@property (assign) unsigned long long numberOfNetworkConfigurationChanges;                              //@synthesize numberOfNetworkConfigurationChanges=_numberOfNetworkConfigurationChanges - In the implementation block
@property (assign) unsigned long long numberOfNetworkChanges;                                           //@synthesize numberOfNetworkChanges=_numberOfNetworkChanges - In the implementation block
@property (assign) unsigned long long numberOfDisconnects;                                              //@synthesize numberOfDisconnects=_numberOfDisconnects - In the implementation block
@property (retain) NSDate * latestConnectionEnumerationDate;                                            //@synthesize latestConnectionEnumerationDate=_latestConnectionEnumerationDate - In the implementation block
@property (retain) NSTimer * forceEnumerationTimer;                                                     //@synthesize forceEnumerationTimer=_forceEnumerationTimer - In the implementation block
@property (assign) unsigned long long protocolVersion;                                                  //@synthesize protocolVersion=_protocolVersion - In the implementation block
@property (retain) NSString * name;                                                                     //@synthesize name=_name - In the implementation block
@property (retain) NSDictionary * txtRecord;                                                            //@synthesize txtRecord=_txtRecord - In the implementation block
@property (retain) NSString * type;                                                                     //@synthesize type=_type - In the implementation block
@property (assign) unsigned long long remoteSystemType;                                                 //@synthesize remoteSystemType=_remoteSystemType - In the implementation block
@property (assign) Class securityProviderClass;                                                         //@synthesize securityProviderClass=_securityProviderClass - In the implementation block
@property (__weak) id securityProviderDelegate;                                                         //@synthesize securityProviderDelegate=_securityProviderDelegate - In the implementation block
@property (__weak) id<SMNNetworkSessionDelegateProtocol> delegate;                                      //@synthesize delegate=_delegate - In the implementation block
@property (retain) NSNumber * connectionTimeout;                                                        //@synthesize connectionTimeout=_connectionTimeout - In the implementation block
@property (assign) char automaticallySeeksFastestConnection;                                            //@synthesize automaticallySeeksFastestConnection=_automaticallySeeksFastestConnection - In the implementation block
@property (assign) char secureTransport106Compatibility;                                                //@synthesize secureTransport106Compatibility=_secureTransport106Compatibility - In the implementation block
@property (assign) char disallowsIPV6;                                                                  //@synthesize disallowsIPV6=_disallowsIPV6 - In the implementation block
@property (readonly) int localInterfaceType; 
@property (readonly) int remoteInterfaceType; 
@property (readonly) double activeInterfaceBenchmark; 
@property (readonly) char otherConnectionsAvailable; 
@property (readonly) NSSet * availableConnectionTypes; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)keyPathsForValuesAffectingLocalInterfaceType;
+(id)keyPathsForValuesAffectingRemoteInterfaceType;
+(id)keyPathsForValuesAffectingActiveInterfaceBenchmark;
-(void)dealloc;
-(NSString *)name;
-(void)setType:(NSString *)arg1 ;
-(id<SMNNetworkSessionDelegateProtocol>)delegate;
-(void)setDelegate:(id<SMNNetworkSessionDelegateProtocol>)arg1 ;
-(NSString *)type;
-(void)setName:(NSString *)arg1 ;
-(void)setServer:(char)arg1 ;
-(char)isServer;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)stop;
-(void)netServiceWillPublish:(id)arg1 ;
-(void)netService:(id)arg1 didNotPublish:(id)arg2 ;
-(void)netService:(id)arg1 didNotResolve:(id)arg2 ;
-(void)netServiceDidStop:(id)arg1 ;
-(id)initWithType:(id)arg1 ;
-(NSDictionary *)txtRecord;
-(void)setTxtRecord:(NSDictionary *)arg1 ;
-(NSObject*<OS_dispatch_queue>)connectionQueue;
-(void)closeStream:(id)arg1 ;
-(unsigned long long)protocolVersion;
-(void)setProtocolVersion:(unsigned long long)arg1 ;
-(void)connectionInterrupted:(id)arg1 ;
-(void)setConnectionQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setNetService:(NSNetService *)arg1 ;
-(NSNetService *)netService;
-(void)netServiceBrowserDidStopSearch:(id)arg1 ;
-(void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(char)arg3 ;
-(void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(char)arg3 ;
-(void)netServiceDidPublish:(id)arg1 ;
-(void)netServiceDidResolveAddress:(id)arg1 ;
-(void)netService:(id)arg1 didUpdateTXTRecordData:(id)arg2 ;
-(NSNumber *)connectionTimeout;
-(void)setConnectionTimeout:(NSNumber *)arg1 ;
-(void)closeAllConnections;
-(void)startClient;
-(int)localInterfaceType;
-(int)remoteInterfaceType;
-(char)startServer;
-(SMNConnection *)activeConnection;
-(NSNetServiceBrowser *)netServiceBrowser;
-(void)closeActiveConnection;
-(unsigned long long)numberOfNetworkConfigurationChanges;
-(void)setNumberOfNetworkConfigurationChanges:(unsigned long long)arg1 ;
-(unsigned long long)numberOfNetworkChanges;
-(void)setNumberOfNetworkChanges:(unsigned long long)arg1 ;
-(unsigned long long)numberOfDisconnects;
-(void)setNumberOfDisconnects:(unsigned long long)arg1 ;
-(char)disallowsIPV6;
-(void)setRemoteSystemType:(unsigned long long)arg1 ;
-(void)setDisallowsIPV6:(char)arg1 ;
-(void)setSecureTransport106Compatibility:(char)arg1 ;
-(void)setSecurityProviderClass:(Class)arg1 ;
-(void)setSecurityProviderDelegate:(id)arg1 ;
-(void)connectToPeerNamed:(id)arg1 ;
-(char)isCheckingForNewConnectionMethods;
-(NSSet *)availableConnectionTypes;
-(void)assumeFastestConnection;
-(char)otherConnectionsAvailable;
-(id)initWithType:(id)arg1 baseQueueName:(id)arg2 ;
-(void)setPreferredInterface:(int)arg1 ;
-(int)preferredInterface;
-(void)setAvailablePeers:(NSMutableArray *)arg1 ;
-(void)setOtherConnections:(NSMutableOrderedSet *)arg1 ;
-(void)setInfrastructureWirelessRate:(double)arg1 ;
-(void)setActiveConnectionsHistory:(NSMutableDictionary *)arg1 ;
-(void)setScObservationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setSampleQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setCurrentlyConnectingConnectionQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setDynamicStoreConnection:(SCDynamicStoreRef)arg1 ;
-(SCDynamicStoreRef)dynamicStoreConnection;
-(NSObject*<OS_dispatch_queue>)scObservationQueue;
-(void)setConnectionComparator:(id)arg1 ;
-(NSDate *)latestConnectionEnumerationDate;
-(NSString *)connectedServiceName;
-(void)enumerateAndConnectToNewAddressesOfPeerNamed:(id)arg1 clientIsWaiting:(char)arg2 ;
-(void)setForceEnumerationTimer:(NSTimer *)arg1 ;
-(void)setNetServiceBrowser:(NSNetServiceBrowser *)arg1 ;
-(NSTimer *)forceEnumerationTimer;
-(Class)securityProviderClass;
-(id)securityProviderDelegate;
-(char)secureTransport106Compatibility;
-(NSMutableOrderedSet *)otherConnections;
-(void)setActiveConnection:(SMNConnection *)arg1 ;
-(NSMutableDictionary *)activeConnectionsHistory;
-(id)activeConnectionsHistoryDescription;
-(void)setIpv6Port:(int)arg1 ;
-(int)ipv6Port;
-(id)instantiateSecurityProviderForQueueName:(id)arg1 ;
-(char)hasEverBeenConnected;
-(void)setHasEverBeenConnected:(char)arg1 ;
-(void)reResolveAddresses;
-(void)setClientIsReResolving:(char)arg1 ;
-(void)setCheckingForNewConnectionMethods:(char)arg1 ;
-(void)waitForConnectionsToSampleUpToRoughly:(double)arg1 ;
-(void)recordInfrastructureRate;
-(NSObject*<OS_dispatch_queue>)sampleQueue;
-(id)connectionComparator;
-(char)promoteConnectionToActive:(id)arg1 ;
-(NSMutableArray *)availablePeers;
-(void)refreshActiveConnectionsHistory;
-(id)justAddressData:(sockaddr*)arg1 isIPV6:(char)arg2 ;
-(void)setLatestConnectionEnumerationDate:(NSDate *)arg1 ;
-(void)setConnectedServiceName:(NSString *)arg1 ;
-(id)findNewAddressesFromService;
-(void)updateHistoryForActiveConnection:(id)arg1 ;
-(id)connect:(id)arg1 ;
-(char)automaticallySeeksFastestConnection;
-(void)checkForFasterConnections:(char)arg1 ;
-(void)setClientIsReconnecting:(char)arg1 ;
-(char)clientIsReconnecting;
-(double)infrastructureWirelessRate;
-(NSObject*<OS_dispatch_queue>)currentlyConnectingConnectionQueue;
-(void)setCurrentConnectingConnection:(SMNConnection *)arg1 ;
-(unsigned long long)remoteSystemType;
-(SMNConnection *)currentConnectingConnection;
-(void)closeCurrentlyConnectingConnection;
-(void)closeOtherConnections;
-(int)ipv6AcceptSocket;
-(void)setIpv6AcceptSocket:(int)arg1 ;
-(id)newStreamWithName:(id)arg1 ;
-(double)activeInterfaceBenchmark;
-(void)networkConfigurationChanged;
-(char)resolvePeerNamed:(id)arg1 ;
-(void)connectionFinishedSampling:(id)arg1 ;
-(void)setAutomaticallySeeksFastestConnection:(char)arg1 ;
-(char)clientIsReResolving;
-(NSDictionary *)remoteAddressesByIFMap;
-(void)setRemoteAddressesByIFMap:(NSDictionary *)arg1 ;
-(int)socketFd;
-(void)setSocketFd:(int)arg1 ;
-(void)connectionDeterminedTopology:(id)arg1 withCurrentRemoteAddressMap:(id)arg2 ;
-(void)connection:(id)arg1 newIncomingStream:(id)arg2 ;
-(void)connection:(id)arg1 streamClosing:(id)arg2 ;
@end

