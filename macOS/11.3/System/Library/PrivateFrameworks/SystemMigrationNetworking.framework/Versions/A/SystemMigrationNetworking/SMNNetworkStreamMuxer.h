/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:41 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/SystemMigrationNetworking.framework/Versions/A/SystemMigrationNetworking
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SMNStreamMuxerDelegate, SMNNetworkSecurityProvider, OS_dispatch_queue, OS_dispatch_source;
@class NSFileHandle, NSObject, NSMutableDictionary;

@interface SMNNetworkStreamMuxer : NSObject {

	char* upBuffer;
	char* downBuffer;
	char _interrupted;
	unsigned _streamIDMin;
	unsigned _streamIDMax;
	unsigned _streamIDNext;
	unsigned long long _protocolVersion;
	id<SMNStreamMuxerDelegate> _delegate;
	id<SMNNetworkSecurityProvider> _securityProvider;
	NSFileHandle* _socketFileHandle;
	NSObject*<OS_dispatch_queue> _listAccessQueue;
	NSMutableDictionary* _downStreamsByID;
	NSMutableDictionary* _upStreamsByID;
	NSObject*<OS_dispatch_queue> _incomingDataQueue;
	NSObject*<OS_dispatch_source> _upSource;
	NSObject*<OS_dispatch_queue> _outgoingDataQueue;
	long long _upBufferSize;
	long long _downBufferSize;

}

@property (retain) NSFileHandle * socketFileHandle;                              //@synthesize socketFileHandle=_socketFileHandle - In the implementation block
@property (assign) unsigned long long protocolVersion;                           //@synthesize protocolVersion=_protocolVersion - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> listAccessQueue;                 //@synthesize listAccessQueue=_listAccessQueue - In the implementation block
@property (retain) NSMutableDictionary * downStreamsByID;                        //@synthesize downStreamsByID=_downStreamsByID - In the implementation block
@property (retain) NSMutableDictionary * upStreamsByID;                          //@synthesize upStreamsByID=_upStreamsByID - In the implementation block
@property (assign) unsigned streamIDMin;                                         //@synthesize streamIDMin=_streamIDMin - In the implementation block
@property (assign) unsigned streamIDMax;                                         //@synthesize streamIDMax=_streamIDMax - In the implementation block
@property (assign) unsigned streamIDNext;                                        //@synthesize streamIDNext=_streamIDNext - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> incomingDataQueue;               //@synthesize incomingDataQueue=_incomingDataQueue - In the implementation block
@property (retain) NSObject*<OS_dispatch_source> upSource;                       //@synthesize upSource=_upSource - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> outgoingDataQueue;               //@synthesize outgoingDataQueue=_outgoingDataQueue - In the implementation block
@property (assign) long long upBufferSize;                                       //@synthesize upBufferSize=_upBufferSize - In the implementation block
@property (assign) long long downBufferSize;                                     //@synthesize downBufferSize=_downBufferSize - In the implementation block
@property (assign) char interrupted;                                             //@synthesize interrupted=_interrupted - In the implementation block
@property (__weak) id<SMNStreamMuxerDelegate> delegate;                          //@synthesize delegate=_delegate - In the implementation block
@property (retain) id<SMNNetworkSecurityProvider> securityProvider;              //@synthesize securityProvider=_securityProvider - In the implementation block
-(void)dealloc;
-(id)init;
-(id<SMNStreamMuxerDelegate>)delegate;
-(void)setDelegate:(id<SMNStreamMuxerDelegate>)arg1 ;
-(id)_init;
-(char)interrupted;
-(void)closeStream:(id)arg1 ;
-(unsigned long long)protocolVersion;
-(void)setProtocolVersion:(unsigned long long)arg1 ;
-(void)setInterrupted:(char)arg1 ;
-(id)newStreamWithName:(id)arg1 ;
-(id)newStreamPairedWithStream:(id)arg1 ;
-(void)setSocketFileHandle:(NSFileHandle *)arg1 ;
-(void)setIncomingDataQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setOutgoingDataQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setListAccessQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setDownStreamsByID:(NSMutableDictionary *)arg1 ;
-(void)setUpStreamsByID:(NSMutableDictionary *)arg1 ;
-(void)_selfDestruct;
-(char)_doMuxerInitializationAsMaster:(char)arg1 ;
-(void)setUpBufferSize:(long long)arg1 ;
-(long long)upBufferSize;
-(void)setDownBufferSize:(long long)arg1 ;
-(long long)downBufferSize;
-(NSFileHandle *)socketFileHandle;
-(NSObject*<OS_dispatch_queue>)incomingDataQueue;
-(void)setUpSource:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)upSource;
-(void)readIncomingData;
-(NSObject*<OS_dispatch_queue>)outgoingDataQueue;
-(char)sendCommand:(char)arg1 onStream:(unsigned)arg2 withSize:(unsigned)arg3 ;
-(NSObject*<OS_dispatch_queue>)listAccessQueue;
-(unsigned)streamIDNext;
-(unsigned)streamIDMax;
-(NSMutableDictionary *)downStreamsByID;
-(unsigned)streamIDMin;
-(void)setStreamIDNext:(unsigned)arg1 ;
-(void)sendOutgoingData:(id)arg1 fileHandle:(id)arg2 ;
-(NSMutableDictionary *)upStreamsByID;
-(char)_readFromMuxerFd:(void*)arg1 bufferSize:(unsigned long long)arg2 usingFailureHandler:(/*^block*/id)arg3 ;
-(void)closeStream:(id)arg1 initiatedLocally:(char)arg2 ;
-(id)createNewStreamFromIncomingID:(unsigned)arg1 withName:(id)arg2 ;
-(char)nextChunkHeaderForStream:(unsigned*)arg1 ofSize:(unsigned*)arg2 ;
-(id)getStreamWithID:(id)arg1 isDownward:(char*)arg2 ;
-(id)createNewStreamFromIncomingID:(unsigned)arg1 ;
-(char)_writeToPipe:(int)arg1 buffer:(void*)arg2 bufferSize:(unsigned long long)arg3 usingFailureHandler:(/*^block*/id)arg4 ;
-(char)_writeToMuxerFd:(void*)arg1 bufferSize:(unsigned long long)arg2 usingFailureHandler:(/*^block*/id)arg3 ;
-(void)setStreamIDMin:(unsigned)arg1 ;
-(void)setStreamIDMax:(unsigned)arg1 ;
-(char)_write:(int)arg1 buffer:(void*)arg2 bufferSize:(unsigned long long)arg3 useSecurityProvider:(char)arg4 usingFailureHandler:(/*^block*/id)arg5 ;
-(char)_read:(int)arg1 buffer:(void*)arg2 bufferSize:(unsigned long long)arg3 useSecurityProvider:(char)arg4 usingFailureHandler:(/*^block*/id)arg5 ;
-(id)initWithSocketFileHandle:(id)arg1 baseQueueName:(id)arg2 andProtocolVersion:(unsigned long long)arg3 ;
-(char)startAsMaster:(char)arg1 ;
-(void)removeStream:(id)arg1 ;
-(char)_readFromPipe:(int)arg1 buffer:(void*)arg2 bufferSize:(unsigned long long)arg3 usingFailureHandler:(/*^block*/id)arg4 ;
-(id<SMNNetworkSecurityProvider>)securityProvider;
-(void)setSecurityProvider:(id<SMNNetworkSecurityProvider>)arg1 ;
@end

