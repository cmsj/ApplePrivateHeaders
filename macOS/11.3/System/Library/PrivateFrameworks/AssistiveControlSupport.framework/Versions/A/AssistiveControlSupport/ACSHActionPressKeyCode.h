/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:46 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AssistiveControlSupport.framework/Versions/A/AssistiveControlSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AssistiveControlSupport/ACSHAction.h>

@interface ACSHActionPressKeyCode : ACSHAction {

	char _usesMacKeyCode;
	char _shouldExecuteSystemFunction;
	char _shouldNotLockModifierKey;
	unsigned long long _macKeyCode;
	unsigned long long _usbKeyCode;
	long long _keyboardHWType;
	unsigned long long _modifiers;

}

@property (assign,nonatomic) char usesMacKeyCode;                           //@synthesize usesMacKeyCode=_usesMacKeyCode - In the implementation block
@property (assign,nonatomic) unsigned long long usbKeyCode;                 //@synthesize usbKeyCode=_usbKeyCode - In the implementation block
@property (assign,nonatomic) unsigned long long macKeyCode;                 //@synthesize macKeyCode=_macKeyCode - In the implementation block
@property (assign,nonatomic) long long keyboardHWType;                      //@synthesize keyboardHWType=_keyboardHWType - In the implementation block
@property (assign,nonatomic) unsigned long long modifiers;                  //@synthesize modifiers=_modifiers - In the implementation block
@property (assign,nonatomic) char shouldExecuteSystemFunction;              //@synthesize shouldExecuteSystemFunction=_shouldExecuteSystemFunction - In the implementation block
@property (assign,nonatomic) char shouldNotLockModifierKey;                 //@synthesize shouldNotLockModifierKey=_shouldNotLockModifierKey - In the implementation block
+(id)actionWithMacKeyCode:(unsigned long long)arg1 keyboardHWType:(long long)arg2 modifiers:(unsigned long long)arg3 ;
+(id)actionWithUSBKeyCode:(unsigned long long)arg1 keyboardHWType:(long long)arg2 modifiers:(unsigned long long)arg3 ;
-(char)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)init;
-(id)displayString;
-(unsigned long long)modifiers;
-(void)setModifiers:(unsigned long long)arg1 ;
-(void)performWithEventSourceData:(id)arg1 ;
-(void)_configureWithPlistDictionary:(id)arg1 ;
-(id)paramDictionaryForSaving;
-(id)paramDescription;
-(char)hasAssociatedSound;
-(char)hasAssociatedSoundForDoubleAction;
-(char)shouldPerformDoubleActionIfPossible;
-(void)performDoubleActionWithEventSourceData:(id)arg1 ;
-(void)performDeactivateWithEventSourceData:(id)arg1 ;
-(void)repeatEndedWithEventSourceData:(id)arg1 ;
-(void)setUsesMacKeyCode:(char)arg1 ;
-(void)setMacKeyCode:(unsigned long long)arg1 ;
-(void)setKeyboardHWType:(long long)arg1 ;
-(void)setUsbKeyCode:(unsigned long long)arg1 ;
-(void)setShouldExecuteSystemFunction:(char)arg1 ;
-(void)setShouldNotLockModifierKey:(char)arg1 ;
-(char)shouldNotLockModifierKey;
-(unsigned long long)usbKeyCode;
-(unsigned long long)macKeyCode;
-(char)usesMacKeyCode;
-(long long)keyboardHWType;
-(char)shouldExecuteSystemFunction;
-(void)_performDoubleAction:(char)arg1 eventSourceData:(id)arg2 keyDown:(char)arg3 ;
-(char)_hasAssociatedSoundForDoubleAction:(char)arg1 ;
@end

