/*
* This header is generated by classdump-dyld 1.0
* on Wednesday, April 28, 2021 at 2:52:46 PM British Summer Time
* Operating System: Version 11.3 (Build 20E232)
* Image Source: /System/Library/PrivateFrameworks/AssistiveControlSupport.framework/Versions/A/AssistiveControlSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AssistiveControlSupport/AssistiveControlSupport-Structs.h>
#import <AssistiveControlSupport/ACSHView.h>

@class NSMutableDictionary, NSMutableArray;

@interface ACSHCursorView : ACSHView {

	CGColorRef _highlightColor1;
	CGColorRef _highlightColor2;
	CGColorRef _cursorColor1;
	CGColorRef _cursorColor2;
	CGRect _originalCursorScreenFrameInCarbonCoords;
	CGRect _cursorScreenFrameInCarbonCoords;
	CGRect _cursorDrawFrameInCarbonCoords;
	NSMutableDictionary* _allTabInfo;
	NSMutableArray* _orderedTabInfoKeys;
	int _positionForCurrentTabs;
	char _isContainerCursorView;
	char _allowOffscreen;
	int _cursorType;
	int _preferredTabPosition;
	double _cursorRadius;
	double _borderWidth;

}

@property (assign,nonatomic) int cursorType;                          //@synthesize cursorType=_cursorType - In the implementation block
@property (assign,nonatomic) char isContainerCursorView;              //@synthesize isContainerCursorView=_isContainerCursorView - In the implementation block
@property (assign,nonatomic) double cursorRadius;                     //@synthesize cursorRadius=_cursorRadius - In the implementation block
@property (assign,nonatomic) double borderWidth;                      //@synthesize borderWidth=_borderWidth - In the implementation block
@property (assign,nonatomic) int preferredTabPosition;                //@synthesize preferredTabPosition=_preferredTabPosition - In the implementation block
@property (assign,nonatomic) char allowOffscreen;                     //@synthesize allowOffscreen=_allowOffscreen - In the implementation block
-(void)dealloc;
-(char)wantsUpdateLayer;
-(void)drawRect:(CGRect)arg1 ;
-(void)setBorderWidth:(double)arg1 ;
-(double)borderWidth;
-(void)setHighlightColor:(CGColorRef)arg1 ;
-(void)setCursorColor:(CGColorRef)arg1 ;
-(void)setCursorType:(int)arg1 ;
-(void)setSelectedTabIdentifier:(unsigned long long)arg1 ;
-(void)initView;
-(void)updateCursorStyle;
-(void)setIsContainerCursorView:(char)arg1 ;
-(void)setHighlightGradientWithColor:(CGColorRef)arg1 color:(CGColorRef)arg2 ;
-(void)setCursorGradientWithColor:(CGColorRef)arg1 color:(CGColorRef)arg2 ;
-(void)setCursorRadius:(double)arg1 ;
-(void)recalculateFrame;
-(void)setCursorFrameInCarbonCoords:(CGRect)arg1 ;
-(CGSize)_sizeToDrawAllTabsForPosition:(int)arg1 ;
-(void)_updatePositionForCurrentTabs;
-(unsigned long long)_visibleTabCount;
-(CGRect)_viewFrameForCursorTabPosition:(int)arg1 ;
-(double)cursorRadius;
-(void)_drawCursor;
-(void)_drawTabs;
-(int)_tabLayoutForPosition:(int)arg1 ;
-(id)_tabPositionPreferenceOrder;
-(CGRect)_rectForTabBarAtCursorPosition:(int)arg1 ;
-(CGRect)_rectForTabAtIndex:(unsigned long long)arg1 cursorPosition:(int)arg2 ;
-(void)_drawTab:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(void)setPreferredTabPosition:(int)arg1 ;
-(void)setIsAvailable:(char)arg1 forTabIdentifier:(unsigned long long)arg2 ;
-(double)tabIconSize;
-(void)addTabWithNormalImage:(id)arg1 selectedImage:(id)arg2 identifier:(unsigned long long)arg3 ;
-(int)cursorType;
-(char)isContainerCursorView;
-(int)preferredTabPosition;
-(char)allowOffscreen;
-(void)setAllowOffscreen:(char)arg1 ;
@end

